FILE_NAME,CONTENTS,PART_ONE,SEP_ONE,PART_TWO,SEP_TWO,PART_THREE,SEP_THREE,PART_FOUR,SEP_FOUR,PART_FIVE
R.000214,"/*
R.000214

----------

Name: GHW - Items with important fields that are blank or have problematic values
Created by: -

----------

Group: -
     -

Created on: 2009-01-26 12:07:07
Modified on: 2022-09-29 15:20:30
Date last run: 2022-09-29 15:20:35

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo class=noprint>
<p>Shows item records with important fields that are blank or may be problematic</p>
<ul>
  <li>Shows items currently in the catalog with the following fields left blank (or in some cases ""Unclassified""):</li>
    <ul>
      <li>barcode</li>
      <li>permanent shelving location (blank or cataloging, processing, or recently returned)</li>
      <li>item type (blank or unclassified)</li>
      <li>collection code (blank or unclassified)</li>
      <li>call number</li>
      <li>replacement price</li>
    </ul>
  <li>at the library you specify; and with the blank field you specify</li>
  <li>grouped by biblio number and item number</li>
  <li>sorted by item home branch, location, item type, collection code, call number, author, and title</li>
  <li>contains links to the bibliographic record</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Replaces reports:</p>
<ul>
  <li>214 - Null Report - Missing Item Type report for all libraries (previous version)</li>
  <li>1285 - Null Report - Missing Collection Codes all</li>
  <li>1398 - Collection Codes to Fix</li>
  <li>1401 - Item Types to Fix</li>
  <li>1402 - Missing Replacement Prices</li>
  <li>1404 - Shelving Locations to fix</li>
  <li>1405 - Missing Call Number</li>
  <li>1782 - Home or Current Branch is Null</li>
  <li>1912 - Null report -- Missing Shelving Location all</li>
  <li>3057 - GHW - Empty LOCATION/ITYPE/CCODES</li>
  <li>3362 - GHW - Items at a library without a replacement cost</li>
</ul>
<p></p>
<p class= ""notetags"" style=""display: none;"">tag goes here</p>
</div>



----------
*/

","SELECT
  Concat(
    ""<a class='btn btn-success noprint' style='color: white;' href='/cgi-bin/koha/catalogue/detail.pl?biblionumber="", 
    biblio.biblionumber, 
    ""' target='_blank'>Bibliographic record</a>""
  ) AS LINK,
  biblio.biblionumber,
  items.itemnumber,
  items.barcode,
  items.homebranch,
  items.holdingbranch,
  plocs.lib AS ""PERMANENT LOCATION"",
  locs.lib AS LOCATION,
  itypes.description AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber AS ""Call number"",
  items.copynumber,
  biblio.author,
  Concat_Ws("" "", biblio.title, biblio.subtitle, biblioitems.number,
  biblio.part_name) AS ""Full title"",
  items.replacementprice AS ""Replacement price"",
  items.dateaccessioned AS ""Date added"",
  Concat_Ws("""", 
    If(items.barcode IS NULL, ""Empty barcode / "", """"), 
    If(plocs.lib IS NULL, ""Empty permanent location / "", 
      If(plocs.lib LIKE ""%Cataloging%"", ""Cataloging location / "", 
        If(plocs.lib LIKE ""%Processing%"", ""Processing location / "", 
          If(plocs.lib LIKE ""%Recently%"", ""Recently returned location / "", """")
        )
      )
    ), 
    If(ccodes.lib IS NULL, ""Empty collection code / "", 
      If(ccodes.lib LIKE ""%(UN%"", ""(Unclassified) collection code / "", """")
    ), 
    If(itypes.description IS NULL, ""Empty item type "", 
      If(itypes.description LIKE ""%(UN%"", ""(Unclassified) item type / "", """")
    ), 
    If(items.itemcallnumber IS NULL, ""Empty call number / "", """"), 
    If(items.replacementprice IS NULL, ""Empty replacement price / "", 
      If(items.replacementprice = 0, ""$0.00 replacement price / "", """")
    )
  ) AS ""Problem field""
FROM
  items JOIN
  biblio ON items.biblionumber = biblio.biblionumber JOIN
  biblioitems ON biblioitems.biblionumber = biblio.biblionumber AND
      items.biblioitemnumber = biblioitems.biblioitemnumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') plocs ON plocs.authorised_value =
      items.permanent_location LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') locs ON locs.authorised_value =
      items.location LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      items.ccode LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itypes ON itypes.itemtype = items.itype
WHERE
  items.homebranch LIKE <<Item home library|ZBRAN>> AND
  ((items.barcode IS NULL) OR
    (plocs.lib IS NULL) OR
    (plocs.lib LIKE ""%Cataloging%"") OR
    (plocs.lib LIKE ""%Processing%"") OR
    (plocs.lib LIKE ""%Recently%"") OR
    (ccodes.lib IS NULL) OR
    (ccodes.lib LIKE ""%(UN%"") OR
    (itypes.description IS NULL) OR
    (itypes.description LIKE ""%(UN%"") OR
    (items.itemcallnumber IS NULL) OR
    (items.replacementprice IS NULL)) AND
  Concat(
    If(items.barcode IS NULL, ""BE"", """"), 
    If(plocs.lib IS NULL, ""LE3"", 
      If(plocs.lib LIKE ""%Cataloging%"", ""LG3"", 
        If(plocs.lib LIKE ""%Processing%"", ""LG3"", 
          If(plocs.lib LIKE ""%Recently%"", ""LG3"", """")
        )
      )
    ), 
    If(ccodes.lib IS NULL, ""CE3"", 
      If(ccodes.lib LIKE ""%(UN%"", ""CG3"", """")
    ), 
    If(itypes.description IS NULL, ""IE3"", 
      If(itypes.description LIKE ""%(UN%"", ""IG3"", """")
    ), 
    If(items.itemcallnumber IS NULL, ""NE"", """"), 
    If(items.replacementprice IS NULL, ""PE"", 
      If(items.replacementprice = 0, ""PE"", """")
    )
  ) LIKE Concat(""%"", <<Empty or problematic field in item record|XS_NULLS>>, ""%"")
GROUP BY
  biblio.biblionumber,
  items.itemnumber
ORDER BY
  items.homebranch,
  PERMANENT_LOCATION,
  ITYPE,
  CCODE,
  items.itemcallnumber,
  items.copynumber,
  biblio.author,
  ""Full title""",,,,,,,,
R.000350,"/*
R.000350

----------

Name: Overdue List - XX days past due
Created by: -

----------

Group: Circulation
     Overdues

Created on: 2009-03-16 15:46:05
Modified on: 2019-08-18 23:55:17
Date last run: 2022-10-03 13:59:51

----------

Public: 0
Expiry: 0

----------

Do not Edit. Just Run.
See Report 1078 for Overdue List by Date Range.

----------
*/

","SELECT
  borrowers.surname,
  borrowers.firstname,
  borrowers.branchcode AS ""home library"",
  borrowers.phone,
  borrowers.cardnumber,
  borrowers.email,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.zipcode,
  issues.date_due,
  (To_Days(CurDate()) - To_Days(issues.date_due)) AS 'days overdue',
  items.itype,
  items.itemcallnumber,
  items.barcode AS barcode,
  items.replacementprice,
  items.homebranch,
  biblio.title,
  biblio.author
FROM
  borrowers
  JOIN issues
    ON issues.borrowernumber = borrowers.borrowernumber
  JOIN items
    ON items.itemnumber = issues.itemnumber
  JOIN biblio
    ON biblio.biblionumber = items.biblionumber
  JOIN biblioitems
    ON biblioitems.biblionumber = biblio.biblionumber
WHERE
  (To_Days(CurDate()) - To_Days(issues.date_due)) > <<number of days>> AND
  issues.branchcode = <<Pick your branch|branches>>
ORDER BY
  borrowers.surname,
  ""borrowers.surname"",
  issues.date_due",,,,,,,,
R.000425,"/*
R.000425

----------

Name: ALL LOCALHOLD & WALKIN types in catalog
Created by: -

----------

Group: Administrative Reports
     Local Holds - Walkin-admin

Created on: 2009-04-14 16:21:25
Modified on: 2015-06-30 14:30:38
Date last run: 2022-05-31 12:28:23

----------

Public: 0
Expiry: 0

----------

All Libraries

----------
*/

","SELECT items.homebranch, items.itype,items.ccode,items.itemcallnumber,items.barcode,items.dateaccessioned,biblio.title,biblioitems.publicationyear FROM items LEFT JOIN biblio USING(biblionumber) LEFT JOIN biblioitems USING(biblionumber) WHERE items.itype LIKE 'LOCALHOLD%' OR items.itype LIKE 'WALKIN%' ORDER BY items.homebranch asc, items.itype, items.ccode, items.dateaccessioned",,,,,,,,
R.000429,"/*
R.000429

----------

Name: Local Holds/Walkin Report (with acquisition date)
Created by: -

----------

Group: Catalog Records and Items
     Local Hold - Walkins

Created on: 2009-04-19 10:05:48
Modified on: 2017-09-19 12:43:47
Date last run: 2022-10-03 10:58:57

----------

Public: 0
Expiry: 0

----------

Enhanced - Run, select branch  to get a list of items with restricted item types.

----------
*/

","SELECT i.homebranch, b.biblionumber, b.title, i.itype, i.ccode, i.dateaccessioned, i.itemcallnumber, i.barcode, t.publicationyear, CONCAT('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=',b.biblionumber,'&itemnumber=',i.itemnumber,'#edititem\"" target=""_blank"">'""edit item""'</a>') as ""edit item"" FROM items i LEFT JOIN biblio b USING (biblionumber) LEFT JOIN biblioitems t USING(biblionumber) WHERE i.homebranch LIKE <<Choose your branch|LBRANCH>> AND i.itype IN ('LOCALHOLD','LOCALHOLD1','LOCALHOLD2','WALKIN','WALKIN1','WALKIN2') ORDER by i.dateaccessioned ASC",,,,,,,,
R.000434,"/*
R.000434

----------

Name: Patrons with no email address
Created by: -

----------

Group: Borrowers
     Fix Patrons

Created on: 2009-04-23 13:39:30
Modified on: 2013-06-17 02:04:17
Date last run: 2022-04-06 09:35:17

----------

Public: 0
Expiry: 0

----------

List of your library's patrons without an email address.

----------
*/

","SELECT email, cardnumber, surname, firstname, branchcode, debarred, dateexpiry FROM borrowers WHERE branchcode=<<branch|branches>> AND email = """" ORDER BY branchcode, cardnumber ASC",,,,,,,,
R.000536,"/*
R.000536

----------

Name: New acquisitions for a specific month
Created by: -

----------

Group: Catalog Records and Items
     New Materials

Created on: 2009-05-04 15:06:32
Modified on: 2020-12-08 22:30:13
Date last run: 2022-10-03 13:52:38

----------

Public: 0
Expiry: 0

----------

Enter numeric month and year for the month you want to look at. 

----------
*/

","SELECT
  Concat(
    '<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',
    biblio.biblionumber,
    '\"" target=""_blank"">',
    biblio.biblionumber,
    '</a>'
  ) AS ""Link to Record"",
  items.barcode,
  items.homebranch,
  items.permanent_location,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title,
  items.dateaccessioned,
  items.price,
  items.replacementprice,
  items.timestamp
FROM
  items JOIN
  biblio ON biblio.biblionumber = items.biblionumber
WHERE
  items.homebranch = <<Pick your branch|branches>> AND
  Month(items.dateaccessioned) = <<Choose month|Month>> AND
  Year(items.dateaccessioned) = <<Choose year|Year>>
GROUP BY
  biblio.biblionumber
ORDER BY
  items.homebranch,
  items.permanent_location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title",,,,,,,,
R.000555,"/*
R.000555

----------

Name: NEW PATRONS listed for finding errors
Created by: -

----------

Group: Borrowers
     Fix Patrons

Created on: 2009-05-11 14:05:16
Modified on: 2022-02-02 18:06:39
Date last run: 2022-10-03 12:42:10

----------

Public: 0
Expiry: 0

----------

Review added patrons in a month at your library to find mistakes. Use the edit patron link to fix the accounts if you find errors. 

----------
*/

","SELECT CONCAT('<a class=""btn btn-default"" href=\""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=',borrowers.borrowernumber,'\"" target=""_blank"">'""edit patron""'</a>') as ""Edit this borrower"", dateenrolled,surname,firstname,branchcode,categorycode,cardnumber,address,city,phone,email FROM borrowers WHERE branchcode=<<Choose Library|branches>> AND year(dateenrolled) = <<Choose Year Patrons Added|Year>> AND month(dateenrolled) = <<Choose month Patrons Added|Month>> ORDER BY borrowers.categorycode ASC, borrowers.branchcode ASC",,,,,,,,
R.000570,"/*
R.000570

----------

Name: Monthly 005 New materials added by permanent loction, item type, and collection code
Created by:  Tongie Book Club

----------

Group: -
     -

Created on: 2009-06-01 16:56:47
Modified on: 2022-02-02 18:05:22
Date last run: 2022-10-03 12:51:17

----------

Public: 0
Expiry: 0

----------

Shows count of new items added to a collection in last month by item type and shelving location.

Major update on February 2, 2022 - adds link to Report 2731 among other things - The link to 2731 will show you everything added to the specified collection between the first of the month you run the report for and the present -- i.e. it won't be limited to the same month that you run this report for.

----------
*/

","SELECT
  descriptions.branchname,
  descriptions.permanent_location AS PERM_LOCATION,
  descriptions.description AS ITEM_TYPE,
  descriptions.ccode AS COLLECTION_CODE,
  new.Count_itemnumber,
  Concat(
    '<a class=""btn btn-default"" href=\""/cgi-bin/koha/reports/guided_reports.pl?reports=2731&phase=Run+this+report&param_name=Item+home+library%7CZBRAN&sql_params=', 
    <<Choose your library|branches>>, 
    '&param_name=Item+permanent+shelving+location%7CLLOC&sql_params=%25',
    '&param_name=Item+type%7CLITYPES&sql_params=',
    descriptions.itemtype,
    '&param_name=Item+collection+code%7CLCCODE&sql_params=',
    descriptions.ccode_code,
    '&param_name=Enter+first+part+of+call+number+or+a+%25+symbol&sql_params=%25', 
    '&param_name=Not+for+loan+status%7CLNOT_LOAN&sql_params=%25&param_name=Item+added+between+date1%7Cdate&sql_params=',
    <<Choose month|MONTH>>,
    '%2F01%2F',
    <<Choose year|YEAR>>,
    '&param_name=and+date2%7Cdate&sql_params=12%2F31%2F2050',
    '&param_name=Item+last+borrowed+between+date1%7Cdate&sql_params=01%2F01%2F2000&param_name=and++date2%7Cdate&sql_params=12%2F31%2F2050',
    '&param_name=Item+last+seen+between+date1%7Cdate&sql_params=01%2F01%2F2000&param_name=and+++date2%7Cdate&sql_params=12%2F31%2F2050',
    '&param_name=With+X+or+fewer+checkouts%7CZNUMBERS&sql_params=999999999999',
    '&param_name=Display+checked+out+items%7CZYES_NO&sql_params=%25',
    '&param_name=Display+lost%2C+missing%2C+and+withdrawn+items%7CZYES_NO&sql_params=%25',
    '&param_name=With+X+or+more+copies+at+this+library%7CYNUMBER&sql_params=0',
    '&param_name=With+X+or+more+copies+at+throughout+the+catalog%7CYNUMBER&sql_params=0"" ',
    'target=""_blank"">Go to title</a>'
  ) AS LINK_TO_2731
FROM
  (SELECT
      branches.branchname,
      branches.branchcode,
      permanent_location.authorised_value AS permanent_location_code,
      permanent_location.lib AS permanent_location,
      itemtypes.itemtype,
      itemtypes.description,
      ccodes.authorised_value AS ccode_code,
      ccodes.lib AS ccode
    FROM
      branches,
      (SELECT
          authorised_values.category,
          authorised_values.authorised_value,
          authorised_values.lib,
          authorised_values.lib_opac
        FROM
          authorised_values
        WHERE
          authorised_values.category = 'loc') permanent_location,
      itemtypes,
      (SELECT
          authorised_values.category,
          authorised_values.authorised_value,
          authorised_values.lib,
          authorised_values.lib_opac
        FROM
          authorised_values
        WHERE
          authorised_values.category = 'ccode') ccodes) descriptions INNER JOIN
  (SELECT
      items.homebranch,
      items.permanent_location,
      items.itype,
      items.ccode,
      Count(DISTINCT items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      Year(items.dateaccessioned) = <<Choose year|YEAR>> AND
      Month(items.dateaccessioned) = <<Choose month|MONTH>>
    GROUP BY
      items.homebranch,
      items.permanent_location,
      items.itype,
      items.ccode) new ON new.homebranch = descriptions.branchcode AND
      new.itype = descriptions.itemtype AND
      new.permanent_location = descriptions.permanent_location_code AND
      new.ccode = descriptions.ccode_code
WHERE
  descriptions.branchcode LIKE <<Choose your library|branches>>
ORDER BY
  descriptions.branchname,
  PERM_LOCATION,
  ITEM_TYPE,
  COLLECTION_CODE",,,,,,,,
R.000571,"/*
R.000571

----------

Name: Monthly 006 New Materials Added by Collection Code and Location
Created by:  Tongie Book Club

----------

Group: -
     -

Created on: 2009-06-01 16:58:23
Modified on: 2020-12-08 22:47:06
Date last run: 2022-08-14 19:09:01

----------

Public: 0
Expiry: 0

----------

Shows count of new items added to a collection in last month by ccode and shelving location 

----------
*/

","SELECT
  items.homebranch AS ""Library"",
  items.ccode AS ""Collection Code"",
  items.permanent_location AS ""Location"",
  Count(items.biblionumber) AS ""Total Added""
FROM
  items
WHERE
  Year(items.dateaccessioned) = << Choose year|YEAR>> AND
  Month(items.dateaccessioned) = << Choose month|MONTH >>
GROUP BY
  items.homebranch,
  items.ccode,
  items.permanent_location",,,,,,,,
R.000575,"/*
R.000575

----------

Name: OVERDUE LIST - For Shelf Check
Created by:  Tongie Book Club

----------

Group: Circulation
     Overdues

Created on: 2009-06-12 14:19:42
Modified on: 2020-12-08 22:58:11
Date last run: 2022-08-15 14:03:46

----------

Public: 0
Expiry: 0

----------

Simplified report of overdue items for shelf check

----------
*/

","SELECT
  borrowers.cardnumber,
  items.barcode,
  items.permanent_location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title
FROM
  borrowers LEFT JOIN
  issues ON issues.borrowernumber = borrowers.borrowernumber LEFT JOIN
  items ON items.itemnumber = issues.itemnumber LEFT JOIN
  biblio ON biblio.biblionumber = items.biblionumber
WHERE
  (To_Days(CurDate()) - To_Days(issues.date_due)) >= '2' AND
  issues.branchcode = <<Choose your library|branches>>
GROUP BY
  borrowers.cardnumber,
  issues.issue_id
ORDER BY
  borrowers.cardnumber,
  items.permanent_location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title",,,,,,,,
R.000579,"/*
R.000579

----------

Name: Debarred patrons
Created by:  Tongie Book Club

----------

Group: Borrowers
     -

Created on: 2009-06-12 15:39:47
Modified on: 2013-11-17 12:49:30
Date last run: 2022-08-10 11:56:31

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT  borrowers.cardnumber,borrowers.surname,borrowers.firstname,borrowers.branchcode,borrowers.categorycode,borrowers.debarred,borrowers.flags FROM borrowers   WHERE borrowers.branchcode=<<branch|branches>> AND borrowers.debarred IS NOT NULL",,,,,,,,
R.000582,"/*
R.000582

----------

Name: OUTSTANDING Fines by patron home library
Created by:  Tongie Book Club

----------

Group: Circulation
     Charges

Created on: 2009-06-12 16:22:06
Modified on: 2021-08-17 12:55:08
Date last run: 2022-09-23 14:52:56

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Generates a list of all patrons with fees on their account</p>
<ul><li>Lists patrons that currently have an account balance due greater than $0.01</li>
<li>lists patrons whose home library is the branchcode you specify - regardless of where the fees were generated.</li>
<li>grouped by the borrower's card number</li>
<li>sorted by the borrowers last name</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Explanatory notes added by GHW on 2017.04.20.</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=582&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  borrowers.cardnumber,
  borrowers.surname,
  borrowers.firstname,
  Format(Sum(accountlines.amountoutstanding), 2) AS AMT_DUE
FROM
  borrowers
  LEFT JOIN accountlines ON borrowers.borrowernumber = accountlines.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Borrowers home branch|ZBRAN>>
GROUP BY
  borrowers.cardnumber
HAVING
  AMT_DUE > 0
ORDER BY
  borrowers.surname",,,,,,,,
R.000595,"/*
R.000595

----------

Name: Weekly Juv (JF, E or Childrens) Circ, Tongie example
Created by:  Tongie Book Club

----------

Group: Circulation
     Circ Stats

Created on: 2009-06-16 12:09:51
Modified on: 2013-11-17 13:00:26
Date last run: 2022-03-08 10:41:40

----------

Public: 0
Expiry: 0

----------

From John

----------
*/

","select date_format(`datetime`,""%X-%V"") as 'Week', count(*) as 'Checkouts' from statistics LEFT JOIN items USING (itemnumber) where homebranch=<<Pick your branch|branches>> AND datetime LIKE <<enter date with % (ex. 2012-01-05%>> AND type in ('issue','renew') AND (items.itemcallnumber like <<enter first call number with % ex. JF%>> and type in ('issue','renew') OR <<enter second call number with % ex. E%>> OR items.location in ('CHILDRENS')) group by date_format(`datetime`,""%X-%V"") order by date_format(`datetime`,""%X-%V"")",,,,,,,,
R.000610,"/*
R.000610

----------

Name: Branchcodes and Branchnames
Created by:  Tongie Book Club

----------

Group: Administrative Reports
     System-admin

Created on: 2009-06-24 16:26:50
Modified on: 2017-12-18 21:33:47
Date last run: 2017-12-18 21:34:17

----------

Public: 0
Expiry: 0

----------

Simple table showing branch names and branchcode

----------
*/

","SELECT branches.branchname,
  branches.branchcode 
FROM branches 
ORDER BY branchname ASC",,,,,,,,
R.000620,"/*
R.000620

----------

Name: Identify patron by email address
Created by:  Tongie Book Club

----------

Group: Borrowers
     -

Created on: 2009-06-30 09:42:05
Modified on: 2013-06-17 02:07:04
Date last run: 2018-08-27 13:27:30

----------

Public: 0
Expiry: 0

----------

Run the report and then type in the ""enter email address"" box the email address you want to look up. 

----------
*/

","select cardnumber, surname, firstname, branchcode, email, emailpro, b_email from borrowers where <<enter email address>> in (B_email, email, emailpro)",,,,,,,,
R.000640,"/*
R.000640

----------

Name: Overdue Materials that Checked Out at Your Library
Created by:  Tongie Book Club

----------

Group: Circulation
     Overdues

Created on: 2009-07-10 16:16:24
Modified on: 2014-01-08 14:59:44
Date last run: 2022-06-10 12:20:35

----------

Public: 0
Expiry: 0

----------

All materials that are overdue that checked out at your library. 

----------
*/

","SELECT borrowers.surname, borrowers.firstname, borrowers.phone, borrowers.cardnumber, borrowers.address, borrowers.city, borrowers.zipcode, issues.date_due, (TO_DAYS(curdate())-TO_DAYS( date_due)) as 'days overdue', items.itype, items.itemcallnumber, items.barcode, items.homebranch, biblio.title, biblio.author FROM borrowers left join issues  USING (borrowernumber) LEFT JOIN items USING (itemnumber) LEFT JOIN biblio USING (biblionumber)  WHERE (TO_DAYS(curdate())-TO_DAYS(date_due)) > <<Number of Days Overdue>> and issues.branchcode = <<Pick your branch|branches>> order by borrowers.surname asc, issues.date_due asc",,,,,,,,
R.000684,"/*
R.000684

----------

Name: Current Items on Hold that aren't at your library
Created by:  Tongie Book Club

----------

Group: Acquisitions
     Collection Development

Created on: 2009-09-28 13:12:52
Modified on: 2018-07-02 09:44:38
Date last run: 2022-09-22 11:54:27

----------

Public: 0
Expiry: 0

----------

See holds by your patrons that are being filled OUTSIDE of your owned collection. A Collection Development Report tool. Enhanced.

<p><span style=""background-color: darkred; color: white"">virtually line by line identical to report 799 - merge two to make one report</p>

----------
*/

","SELECT
  biblio.title,
  items.itemcallnumber,
  items.ccode,
  items.holdingbranch,
  items.homebranch,
  items.barcode,
  issues.issuedate
FROM
  issues
  LEFT JOIN items ON issues.itemnumber = items.itemnumber
  LEFT JOIN biblio ON items.biblionumber = biblio.biblionumber
WHERE
  issues.branchcode = <<Pick your branch|branches>> AND
  items.holdingbranch != items.homebranch
ORDER BY
  items.itemcallnumber,
  issues.issuedate,
  biblio.title",,,,,,,,
R.000685,"/*
R.000685

----------

Name: Item types
Created by: -

----------

Group: Administrative Reports
     System-admin

Created on: 2009-09-30 13:17:06
Modified on: 2013-06-16 14:48:51
Date last run: 2022-01-26 08:57:01

----------

Public: 0
Expiry: 0

----------

Admin - lists item types

----------
*/

",select * from itemtypes,,,,,,,,
R.000696,"/*
R.000696

----------

Name: Items from home library overdue at other libraries
Created by:  Tongie Book Club

----------

Group: Circulation
     Overdues

Created on: 2009-10-15 15:19:28
Modified on: 2017-01-03 14:53:42
Date last run: 2022-09-23 14:49:37

----------

Public: 0
Expiry: 0

----------

Enter your library in both dropdowns. Use for calling another library about your overdue items. Do not contact patron's directly.  

Enhanced.

----------
*/

","SELECT borrowers.surname, borrowers.firstname, borrowers.cardnumber, borrowers.categorycode, borrowers.branchcode as ""patron home library"", issues.branchcode as ""location checked out"", borrowers.city, issues.date_due, (TO_DAYS(curdate())-TO_DAYS( date_due)) as 'days overdue', items.itype, items.replacementprice, items.itemcallnumber, items.barcode, items.homebranch, biblio.title, biblio.author, items.itemlost FROM borrowers left join issues USING (borrowernumber) LEFT JOIN items USING (itemnumber) LEFT JOIN biblio USING (biblionumber) WHERE (TO_DAYS(curdate())-TO_DAYS(date_due)) > <<Number of Days Overdue>> and issues.branchcode <> <<your branch|branches>> and items.homebranch = <<your branch|branches>> order by borrowers.surname asc, issues.date_due asc",,,,,,,,
R.000697,"/*
R.000697

----------

Name: Items from other libraries overdue at your library 
Created by:  Tongie Book Club

----------

Group: Circulation
     Overdues

Created on: 2009-10-15 16:24:36
Modified on: 2013-06-18 09:35:05
Date last run: 2022-08-23 15:12:17

----------

Public: 0
Expiry: 0

----------

Enhanced. Do not edit.

----------
*/

","SELECT borrowers.surname, borrowers.firstname, borrowers.cardnumber, borrowers.branchcode, borrowers.city, issues.date_due, (TO_DAYS(curdate())-TO_DAYS( date_due)) as 'days overdue', items.itype, items.replacementprice, items.itemcallnumber, items.barcode, items.homebranch, biblio.title, biblio.author FROM borrowers LEFT JOIN issues USING (borrowernumber) LEFT JOIN items USING (itemnumber) LEFT JOIN biblio USING (biblionumber) WHERE (TO_DAYS(curdate())-TO_DAYS(date_due)) > <<Number of Days Overdue>> and issues.branchcode =<<Your Library|branches>> and items.homebranch <> <<Your Library|branches>> order by borrowers.surname asc, issues.date_due asc",,,,,,,,
R.000707,"/*
R.000707

----------

Name: Shelf List of Specific Call Number Prefix
Created by:  Tongie Book Club

----------

Group: Catalog Records and Items
     Shelf Lists

Created on: 2009-10-29 15:00:05
Modified on: 2015-07-01 18:21:04
Date last run: 2022-07-21 11:15:59

----------

Public: 0
Expiry: 0

----------

Enhanced. Choose branch and enter call number prefix + % to search on.

----------
*/

","SELECT items.dateaccessioned,items.datelastseen,items.itype,items.ccode,items.location,items.itemcallnumber,items.barcode,biblio.title,biblio.author,t.publicationyear, CONCAT('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=',biblio.biblionumber,'&itemnumber=',items.itemnumber,'#edititem\"" target=""_blank"">'""edit item""'</a>') as ""edit item"" 
  FROM items LEFT JOIN biblio USING(biblionumber)  LEFT JOIN biblioitems t USING(biblionumber)  WHERE items.homebranch=<<Home branch|branches>> AND items.itemcallnumber LIKE <<Call number LIKE (USE % FOR wildcard)>> ORDER BY items.itemcallnumber ASC",,,,,,,,
R.000744,"/*
R.000744

----------

Name: Osawatomie Overdues
Created by:  Tongie Book Club

----------

Group:  OSAWATOMIE
     -

Created on: 2009-12-21 15:06:18
Modified on: 2021-08-16 13:45:41
Date last run: 2018-09-28 13:06:03

----------

Public: 0
Expiry: 0

----------

Set for 7 days overdue.  Lists all items checked out at your Library.

----------
*/

","SELECT borrowers.surname, borrowers.firstname, borrowers.phone, borrowers.cardnumber, borrowers.address, borrowers.city, borrowers.zipcode, issues.date_due, (TO_DAYS(curdate())-TO_DAYS( date_due)) as 'days overdue', items.itype, items.itemcallnumber, items.barcode, items.homebranch, biblio.title, biblio.author FROM borrowers left join issues on (borrowers.borrowernumber=issues.borrowernumber) left join items on (issues.itemnumber=items.itemnumber) LEFT JOIN biblio on (items.biblionumber=biblio.biblionumber) WHERE (TO_DAYS(curdate())-TO_DAYS(date_due)) > '7' and issues.branchcode = 'osawatomie' order by borrowers.surname asc, issues.date_due asc",,,,,,,,
R.000747,"/*
R.000747

----------

Name: Bern Overdues
Created by:  Tongie Book Club

----------

Group:  BERN
     -

Created on: 2009-12-21 16:33:48
Modified on: 2021-08-16 20:42:53
Date last run: 2018-01-05 16:08:06

----------

Public: 0
Expiry: 0

----------

Set for 7 days or more overdue. Shows items circulated at your location.

----------
*/

","SELECT borrowers.surname, borrowers.firstname, borrowers.phone, borrowers.cardnumber, borrowers.address, borrowers.city, borrowers.zipcode, issues.date_due, (TO_DAYS(curdate())-TO_DAYS(date_due)) as 'days overdue', items.itype, items.itemcallnumber, items.barcode, items.homebranch, biblio.title, biblio.author FROM borrowers left join issues on (borrowers.borrowernumber=issues.borrowernumber) left join items on (issues.itemnumber=items.itemnumber) LEFT JOIN biblio on (items.biblionumber=biblio.biblionumber) WHERE (TO_DAYS(curdate())-TO_DAYS(date_due)) > '7' and issues.branchcode = 'bern' order by borrowers.surname asc, issues.date_due asc",,,,,,,,
R.000760,"/*
R.000760

----------

Name: Count of Yearly New items added by Itype
Created by:  Tongie Book Club

----------

Group: Administrative Reports
     Daily, Monthly, Yearly Stats-admin

Created on: 2009-12-31 11:10:23
Modified on: 2015-03-17 15:14:38
Date last run: 2022-02-28 13:42:51

----------

Public: 0
Expiry: 0

----------

Enter a Year to determine the number of new items added by collection code in that year

----------
*/

","SELECT i.homebranch, i.itype, i.location, count(i.itemnumber) as added FROM items i WHERE YEAR(i.dateaccessioned) = <<Year>> GROUP BY i.homebranch,i.itype,i.location",,,,,,,,
R.000762,"/*
R.000762

----------

Name: Yearly New patrons added
Created by:  Tongie Book Club

----------

Group: Administrative Reports
     Daily, Monthly, Yearly Stats-admin

Created on: 2009-12-31 11:19:28
Modified on: 2014-01-05 22:58:12
Date last run: 2022-09-06 15:26:01

----------

Public: 0
Expiry: 0

----------

Enter Year for Count of patrons added in a certain year. Year End Report

----------
*/

","SELECT branchcode,COUNT(*) FROM borrowers WHERE YEAR(dateenrolled)= <<Year>> GROUP BY branchcode ORDER BY branchcode",,,,,,,,
R.000765,"/*
R.000765

----------

Name: Deleted items from a Year, Listed
Created by:  Tongie Book Club

----------

Group: Catalog Records and Items
     Weeded Already

Created on: 2010-01-06 10:21:41
Modified on: 2015-05-19 11:42:51
Date last run: 2022-09-30 15:23:32

----------

Public: 0
Expiry: 0

----------

Lists the items your library deleted in XXXX year. Pick your branch and insert the year.

----------
*/

","SELECT deleteditems.homebranch, deleteditems.barcode,deleteditems.datelastseen, deleteditems.itype, deleteditems.ccode, deleteditems.timestamp, deletedbiblio.title AS ""Title of Deleted Record"", biblio.title AS ""Title Still in Catalog"", biblio.author FROM deleteditems LEFT JOIN deletedbiblio USING(biblionumber) LEFT JOIN biblio USING(biblionumber) WHERE deleteditems.homebranch = <<Pick your Branch|branches>> AND YEAR(deleteditems.timestamp) = << numericyear >> ORDER BY deleteditems.timestamp DESC",,,,,,,,
R.000793,"/*
R.000793

----------

Name: Monthly ILL (loans and borrows)
Created by:  Tongie Book Club

----------

Group: Administrative Reports
     Daily, Monthly, Yearly Stats-admin

Created on: 2010-01-25 09:54:12
Modified on: 2022-03-29 13:25:21
Date last run: 2022-09-21 09:46:05

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo class=noprint>
<p>Counts the number of items that were put in transit to fill requests at other libraries</p>
<ul><li>during the month you specify</li>
<li>Based on the item's home library</li>
<li>grouped by library and shipping or receiving date</li>
<li>sorted by library name</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>NX_ILL_LOANED_LM = the number of items owned by your library that were shipped ""in transit"" to another library during the month.</p>
<p>NX_ILL_BORROWED_LM = the number of items not owned by your library that arrived ""in transit"" to your library during the month.</p>
<p>This report does not take into account whether the item was actually checked out by a borrower - it only considers that the item was shipped from or to your library.</p>
<p>Replaces report 794.</p>
<p></p>
<p>Updated on 2022.03.29</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#ILL #statistics #count</p>
<!-- html notes rendered on guided_reports.pl by jquery at https://wiki.koha-community.org/wiki/JQuery_Library#Render_patron_messages_as_HTML_and_in_Report_notes -->
</div>

----------
*/

","SELECT 
  branches.branchname, 
  Coalesce(ILL_LOANED.count, 0) AS NX_ILL_LOANED_LM, 
  Coalesce(ILL_BORROWED.count, 0) AS NX_ILL_BORROWED_LM 
FROM 
  branches LEFT JOIN 
    (SELECT 
      items.homebranch, 
      COUNT(*) AS count 
    FROM 
      branchtransfers LEFT JOIN 
      items ON branchtransfers.itemnumber = items.itemnumber 
    WHERE 
      items.homebranch <> branchtransfers.tobranch AND 
      Year(branchtransfers.datesent) = <<Enter the year|R_YEAR>> AND 
      Month(branchtransfers.datesent) = <<Enter the month|LMONTH>> AND 
      branchtransfers.tobranch <> branchtransfers.frombranch AND 
      branchtransfers.comments IS NULL AND
      branchtransfers.reason = 'reserve'
    GROUP BY 
      items.homebranch 
    ) ILL_LOANED 
  ON branches.branchcode = ILL_LOANED.homebranch LEFT JOIN 
    (SELECT 
      branchtransfers.tobranch, 
      COUNT(*) AS count 
    FROM 
      branchtransfers LEFT JOIN 
      items ON branchtransfers.itemnumber = items.itemnumber 
    WHERE 
      branchtransfers.tobranch <> items.homebranch AND 
      Year(branchtransfers.datearrived) = <<Enter the year|R_YEAR>> AND 
      Month(branchtransfers.datearrived) = <<Enter the month|LMONTH>> AND 
      branchtransfers.frombranch <> branchtransfers.tobranch AND 
      branchtransfers.comments IS NULL  AND
      branchtransfers.reason = 'reserve'
    GROUP BY 
      branchtransfers.tobranch 
    ) ILL_BORROWED 
  ON branches.branchcode = ILL_BORROWED.tobranch 
GROUP BY 
  branches.branchname 
ORDER BY 
  branches.branchname 
LIMIT 
  100 ",,,,,,,,
R.000794,"/*
R.000794

----------

Name: Monthly ILL (Borrows) - OBSELETE
Created by:  Tongie Book Club

----------

Group: Administrative Reports
     Daily, Monthly, Yearly Stats-admin

Created on: 2010-01-25 09:59:59
Modified on: 2022-03-29 11:57:24
Date last run: 2022-04-07 16:00:44

----------

Public: 0
Expiry: 0

----------

Use report 793 instead.

----------
*/

","SELECT 
  Concat('Report is obselete - use report 793 instead')",,,,,,,,
R.000799,"/*
R.000799

----------

Name: Titles of intra consortial ILLs for the Prior Month
Created by:  Tongie Book Club

----------

Group: Acquisitions
     Collection Development

Created on: 2010-01-26 14:52:22
Modified on: 2018-07-02 09:44:36
Date last run: 2022-03-25 16:29:21

----------

Public: 0
Expiry: 0

----------

Enhanced - Pick your Branch, run and get a list of items checked out at your branch that belonged to another library.  Useful for Collection DEVELOPMENT.   

<p><span style=""background-color: green; color: white"">Has potential</p>

<p><span style=""background-color: darkred; color: white"">virtually line by line identical to report 684 - merge two to make one report</p>

<p>group/sort/organize by classification order / link to deleteditsms/biblios</p>

----------
*/

","SELECT
  statistics.branch AS Library,
  biblio.title,
  biblio.author,
  items.itemcallnumber,
  items.itype,
  items.ccode,
  items.location,
  items.homebranch AS ItemBranch,
  statistics.itemtype
FROM
  statistics
  LEFT JOIN items ON statistics.itemnumber = items.itemnumber
  LEFT JOIN biblio ON items.biblionumber = biblio.biblionumber
WHERE
  statistics.branch != items.homebranch AND
  statistics.type IN ('issue', 'renew') AND
  Month(statistics.datetime) = <<Month>> AND
  Year(statistics.datetime) = <<Year>> AND
  statistics.branch = <<Pick your branch|branches>>
ORDER BY
  Library,
  biblio.title",,,,,,,,
R.000801,"/*
R.000801

----------

Name: Wellsville Overdue
Created by: WELLSVILLE TECH

----------

Group:  WELLSVILLE
     -

Created on: 2010-01-27 14:12:16
Modified on: 2021-08-16 13:39:32
Date last run: 2022-09-29 10:39:59

----------

Public: 0
Expiry: 0

----------

Set for 1 day or more overdue - you can edit this as needed

----------
*/

","SELECT borrowers.surname, borrowers.firstname, borrowers.phone, borrowers.cardnumber, borrowers.address, borrowers.city, borrowers.zipcode, issues.date_due, (TO_DAYS(curdate())-TO_DAYS( date_due)) as 'days overdue', items.itype, items.itemcallnumber, items.barcode, items.homebranch, biblio.title, biblio.author FROM borrowers left join issues on (borrowers.borrowernumber=issues.borrowernumber) left join items on (issues.itemnumber=items.itemnumber) LEFT JOIN biblio on (items.biblionumber=biblio.biblionumber) WHERE (TO_DAYS(curdate())-TO_DAYS(date_due)) > '1' and issues.branchcode = 'wellsville' order by borrowers.surname asc, issues.date_due asc",,,,,,,,
R.000803,"/*
R.000803

----------

Name: Requested titles sorted from greatest number of requests to lowest number of requests
Created by:  Tongie Book Club

----------

Group: Popular Reports
     -

Created on: 2010-02-03 11:08:36
Modified on: 2021-04-02 16:08:09
Date last run: 2022-02-18 14:24:31

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo class=noprint>
<p>Generates a list of all bibliographic records with requests sorted by the number of requests on each record</p>
<ul><li>Shows records with unfilled reqeusts on them</li>
<li>at all Next Search Catalog libraries</li>
<li>grouped by biblionumber</li>
<li>sorted by number of reqeusts</li>
<li>links to the bibliographic records</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Formerly titled ""Most Reserved Titles""</p>
<p></p>
<p>Updated by GHW on 2021.04.02</p>
<p></p>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=803"">Click here to download as a csv file</a></p>
<p class= ""notetags"" style=""display: none;"">requests</p>
</div>

----------
*/

","SELECT 
  reservess.Count_reserve_id AS UNFILLED_REQUESTS, 
  item_counts.Count_itemnumber AS ITEMS_IN_SYSTEM, 
  biblio.author, 
  Concat_Ws("" "", 
    biblio.title, 
    biblio.subtitle, 
    biblioitems.number, 
    biblio.part_name 
  ) AS FULL_TITLE, 
  locs.lib AS BIB_LOCATION, 
  itypess.description AS BIB_ITYPE, 
  ccodes.lib AS CCODE, 
  Date_Format(biblio.datecreated, ""%Y.%m.%d"") AS DATE_ADDED, 
  item_counts.Group_Concat_replacementprice AS ITEM_COUNT, 
  old_reservess.Count_reserve_id AS PREVIOUSLY_FILLED_REQUESTS, 
  biblio.biblionumber AS BIBLIO_NUMBER, 
  Concat( 
    '<a class= ""clicked"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', 
    biblio.biblionumber, 
    '\"" target=""_blank"">Go to title</a>' 
  ) AS LINK_TO_TITLE 
FROM 
  biblio JOIN 
  biblioitems ON biblioitems.biblionumber = biblio.biblionumber LEFT JOIN 
  (SELECT 
      authorised_values.category, 
      authorised_values.authorised_value, 
      authorised_values.lib, 
      authorised_values.lib_opac 
    FROM 
      authorised_values 
    WHERE 
      authorised_values.category = 'LOC') locs ON locs.authorised_value = 
      biblioitems.agerestriction LEFT JOIN 
  (SELECT 
      itemtypes.itemtype, 
      itemtypes.description 
    FROM 
      itemtypes) itypess ON itypess.itemtype = biblioitems.itemtype LEFT JOIN 
  (SELECT 
      authorised_values.category, 
      authorised_values.authorised_value, 
      authorised_values.lib, 
      authorised_values.lib_opac 
    FROM 
      authorised_values 
    WHERE 
      authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value = 
      biblioitems.cn_class  JOIN 
  (SELECT 
      items.biblionumber, 
      Count(items.itemnumber) AS Count_itemnumber, 
      GROUP_CONCAT( 
        DISTINCT items.replacementprice 
        ORDER BY items.replacementprice 
        DESC SEPARATOR ' / ' 
      ) AS Group_Concat_replacementprice 
    FROM 
      items 
    GROUP BY 
      items.biblionumber) item_counts ON item_counts.biblionumber = 
      biblio.biblionumber  JOIN 
  (SELECT 
      reserves.biblionumber, 
      Count(reserves.reserve_id) AS Count_reserve_id 
    FROM 
      reserves 
    GROUP BY 
      reserves.biblionumber) reservess ON reservess.biblionumber = 
      biblio.biblionumber LEFT JOIN 
  (SELECT 
      old_reserves.biblionumber, 
      Count(old_reserves.reserve_id) AS Count_reserve_id 
    FROM 
      old_reserves 
    WHERE 
      old_reserves.cancellationdate IS NULL 
    GROUP BY 
      old_reserves.biblionumber) old_reservess ON old_reservess.biblionumber = 
      biblio.biblionumber 
GROUP BY 
  reservess.Count_reserve_id,
  biblio.biblionumber
ORDER BY 
  UNFILLED_REQUESTS DESC",,,,,,,,
R.000820,"/*
R.000820

----------

Name: Patron Category cleanup
Created by:  Tongie Book Club

----------

Group: Borrowers
     Fix Patrons

Created on: 2010-02-18 13:34:22
Modified on: 2014-04-21 14:50:32
Date last run: 2022-09-28 16:08:46

----------

Public: 0
Expiry: 0

----------

Edit branchcode and categorycode scheme. Find potential patron category errors. 

----------
*/

","SELECT borrowers.cardnumber, borrowers.surname, borrowers.firstname, borrowers.categorycode FROM borrowers LEFT JOIN categories USING(categorycode) WHERE borrowers.branchcode=<<Enter patrons library|branches>> AND categories.categorycode=<<Patron Category|categorycode>>  AND borrowers.categorycode != 'STAFF'",,,,,,,,
R.000855,"/*
R.000855

----------

Name: Find irregular call numbers
Created by:  Tongie Book Club

----------

Group: Catalog Records and Items
     Fix Items

Created on: 2010-04-23 14:09:57
Modified on: 2021-09-07 22:26:30
Date last run: 2022-07-22 13:06:15

----------

Public: 0
Expiry: 0

----------

Select branch, enter call number prefix, and run

----------
*/

","SELECT
  items.itype,
  items.itemcallnumber,
  items.barcode,
  biblio.title,
  biblioitems.publicationyear,
  items.dateaccessioned
FROM
  items
  LEFT JOIN biblio ON items.biblionumber = biblio.biblionumber
  LEFT JOIN biblioitems ON biblio.biblionumber = biblioitems.biblionumber
WHERE
  items.homebranch LIKE <<branch|branches:all>> AND
  items.itemcallnumber LIKE Concat(<<Enter Call Number prefix>>, ""%"")
ORDER BY
  items.dateaccessioned DESC",,,,,,,,
R.000857,"/*
R.000857

----------

Name: BASEHOR Monthly Circ by Call Number
Created by:  Tongie Book Club

----------

Group:  BASEHOR
     -

Created on: 2010-04-23 15:32:16
Modified on: 2021-08-16 20:43:37
Date last run: 2022-06-01 12:07:23

----------

Public: 0
Expiry: 0

----------

USE THIS ONE FOR MONTHLY CIRCS

----------
*/

","SELECT count(*) FROM statistics LEFT JOIN items USING(itemnumber) WHERE statistics.type IN ('issue', 'renew') AND datetime >='2014-01-01' AND datetime <'2014-02-01' AND statistics.branch = 'BASEHOR'  AND (items.itemcallnumber LIKE 'YBIO%' OR items.itemcallnumber LIKE 'YB%' OR items.itemcallnumber LIKE 'Y BIO%')    ",,,,,,,,
R.000878,"/*
R.000878

----------

Name: Items in a specific Shelving Location
Created by:  Tongie Book Club

----------

Group: Catalog Records and Items
     Shelf Lists

Created on: 2010-06-07 15:09:44
Modified on: 2015-08-16 17:00:38
Date last run: 2022-08-23 10:21:10

----------

Public: 0
Expiry: 0

----------

Enhanced - Run, Pick Your Branch and Shelving Location to get a list of materials in your collection

----------
*/

","SELECT b.biblionumber, i.dateaccessioned, b.title, b.author, i.ccode, i.location, i.itemcallnumber, i.itype, t.publicationyear, i.barcode, CONCAT('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=',b.biblionumber,'&itemnumber=',i.itemnumber,'#edititem\"" target=""_blank"">'""edit item""'</a>') as ""edit item"" FROM items i LEFT JOIN biblio b USING (biblionumber) LEFT JOIN biblioitems t USING(biblionumber) WHERE i.homebranch=<<branch|branches>> AND i.location = <<location|LOC>> ORDER BY i.itemcallnumber asc",,,,,,,,
R.000890,"/*
R.000890

----------

Name: LOST Report ALL
Created by:  Tongie Book Club

----------

Group: Administrative Reports
     Patrons-admin

Created on: 2010-07-12 11:31:06
Modified on: 2013-06-16 14:54:02
Date last run: 2022-07-21 14:15:44

----------

Public: 0
Expiry: 0

----------

This report lists ALL libraries and ALL patrons with LOST items outstanding. mc 7/12/10

----------
*/

","SELECT  borrowers.branchcode, borrowers.cardnumber, borrowers.surname, borrowers.firstname, accountlines.description, accountlines.timestamp, FORMAT(SUM(accountlines.amountoutstanding),2) as due FROM borrowers LEFT JOIN accountlines USING(borrowernumber) WHERE accountlines.description LIKE 'lost item%' AND accountlines.amountoutstanding > 0  GROUP BY accountlines.description  ORDER BY borrowers.branchcode ASC
",,,,,,,,
R.000891,"/*
R.000891

----------

Name: LOST Report ONLY showing null value for replacement cost
Created by:  Tongie Book Club

----------

Group: Circulation
     Charges

Created on: 2010-07-12 12:22:10
Modified on: 2013-06-18 10:47:25
Date last run: 2022-05-10 08:09:45

----------

Public: 0
Expiry: 0

----------

ENHANCED - Select Run and use drop-down menu to select branch.  Report only displays Lost items with zero dollar value

----------
*/

","SELECT  borrowers.cardnumber, borrowers.surname, borrowers.firstname, borrowers.phone, borrowers.email, borrowers.address, borrowers.city, borrowers.zipcode, accountlines.description, accountlines.timestamp, FORMAT(SUM(accountlines.amountoutstanding),2) as due FROM borrowers LEFT JOIN accountlines USING (borrowernumber) WHERE borrowers.branchcode= <<Pick your branch|branches>> AND accountlines.amountoutstanding=' ' AND accountlines.description LIKE 'lost item%' GROUP BY accountlines.description ORDER BY borrowers.surname ASC",,,,,,,,
R.000897,"/*
R.000897

----------

Name: Patrons list with expiry date
Created by:  Tongie Book Club

----------

Group: School Libraries
     Students

Created on: 2010-08-02 13:04:35
Modified on: 2015-04-29 17:31:09
Date last run: 2022-06-27 17:23:45

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT cardnumber, surname, firstname,debarred, dateexpiry FROM borrowers WHERE branchcode=<<branch|branches>> ORDER BY surname",,,,,,,,
R.000904,"/*
R.000904

----------

Name: Patrons with total fines credit
Created by:  Tongie Book Club

----------

Group: Circulation
     Charges

Created on: 2010-08-16 13:51:51
Modified on: 2013-06-18 10:48:24
Date last run: 2022-09-29 15:29:26

----------

Public: 0
Expiry: 0

----------

Enhanced - Run, pick your branch and see who has a credit. What is difference between this and 831?

----------
*/

","SELECT  borrowers.cardnumber, borrowers.surname, borrowers.firstname, FORMAT(SUM(accountlines.amountoutstanding),2) as due FROM borrowers LEFT JOIN accountlines USING (borrowernumber) WHERE borrowers.branchcode=<<Pick your branch|branches>> AND accountlines.amountoutstanding != 0 GROUP BY borrowers.cardnumber having SUM(accountlines.amountoutstanding) < 0 ORDER BY borrowers.surname ASC",,,,,,,,
R.000905,"/*
R.000905

----------

Name: Titles with 20+ holds. 
Created by:  Tongie Book Club

----------

Group: Popular Reports
     -

Created on: 2010-08-16 15:45:59
Modified on: 2015-08-16 17:01:23
Date last run: 2022-09-22 11:32:13

----------

Public: 0
Expiry: 0

----------

Run to get a list of bib numbers, titles, etc. for Titles with 20+ holds. #holds

----------
*/

","select reserves.biblionumber, biblio.title, biblio.author, biblioitems.publicationyear, biblio.notes, count(*) AS ""Number of Holds"" from reserves left join biblio USING (biblionumber) left join biblioitems USING(biblionumber) group by reserves.biblionumber having count(*) > 19 ORDER BY count(*) DESC",,,,,,,,
R.000906,"/*
R.000906

----------

Name: Item with both waiting and in transit status
Created by: -

----------

Group: Administrative Reports
     Holds-admin

Created on: 2010-08-20 14:15:54
Modified on: 2022-03-29 12:00:52
Date last run: 2022-03-29 12:00:33

----------

Public: 0
Expiry: 0

----------

Report is obselete

----------
*/

","SELECT
  Concat('Report is now obselete - it is no longer possible for an item to be ""In transit"" and ""Waiting.""') AS INFO",,,,,,,,
R.000984,"/*
R.000984

----------

Name: Problem Holds
Created by: -

----------

Group: Administrative Reports
     Holds-admin

Created on: 2010-11-19 15:14:42
Modified on: 2013-06-18 18:29:30
Date last run: 2021-03-02 17:06:45

----------

Public: 0
Expiry: 0

----------



----------
*/

","select surname, firstname, cardnumber, reserves.borrowernumber, reserves.branchcode, reservenotes, priority, found, reserves.timestamp, reserves.itemnumber, waitingdate, biblio.title from reserves LEFT JOIN borrowers USING(borrowernumber) LEFT JOIN biblio USING(biblionumber) WHERE priority = 0 and waitingdate is null and found is not null order by reservedate desc",,,,,,,,
R.001005,"/*
R.001005

----------

Name: Trapped Holds at wrong pick up branch
Created by: -

----------

Group: Administrative Reports
     Holds-admin

Created on: 2010-12-13 11:13:03
Modified on: 2013-06-19 12:44:21
Date last run: 2021-12-16 15:38:54

----------

Public: 0
Expiry: 0

----------

Admin report - used for finding possible mis-routed holds.

----------
*/

","select biblio.title, reserves.branchcode as 'pickup branch', borrowers.branchcode as 'borrower branch', borrowers.surname, borrowers.firstname from reserves LEFT JOIN biblio USING (biblionumber) LEFT JOIN borrowers USING (borrowernumber) WHERE reserves.priority = 0 and found = 't' and reserves.branchcode != borrowers.branchcode order by reserves.branchcode, borrowers.branchcode",,,,,,,,
R.001007,"/*
R.001007

----------

Name: Unreturned (Likely Lost) items report with Patron Info
Created by: Collection Development Tonganoxie

----------

Group: Circulation
     Charges

Created on: 2010-12-15 13:51:34
Modified on: 2013-06-19 12:44:39
Date last run: 2022-07-21 10:16:08

----------

Public: 0
Expiry: 0

----------

Lost items with patron information. Enhanced

----------
*/

","SELECT borrowers.surname, borrowers.firstname, borrowers.phone, borrowers.cardnumber, borrowers.address, borrowers.city, borrowers.zipcode, issues.date_due, (TO_DAYS(curdate())-TO_DAYS( date_due)) as 'days overdue', items.itype, items.itemcallnumber, items.barcode, items.homebranch, biblio.title, biblio.author FROM borrowers left join issues USING (borrowernumber) LEFT JOIN items USING (itemnumber) LEFT JOIN biblio USING (biblionumber) WHERE (TO_DAYS(curdate())-TO_DAYS(date_due)) >= '180' and issues.branchcode = <<branch|branches>> order by borrowers.surname asc, issues.date_due asc",,,,,,,,
R.001025,"/*
R.001025

----------

Name: Show Pending Email Notices
Created by: -

----------

Group: Notices
     -

Created on: 2011-01-12 09:49:18
Modified on: 2013-06-21 13:49:26
Date last run: 2021-07-27 10:02:12

----------

Public: 0
Expiry: 0

----------

Shows Borrowernumber, subject, and time queued for email notices where the status = pending

----------
*/

","select borrowernumber, borrowers.surname, borrowers.firstname, subject, time_queued from message_queue JOIN borrowers USING (borrowernumber) where borrowers.branchcode=<<branch|branches>> AND status = 'pending' and message_transport_type = 'email'
",,,,,,,,
R.001033,"/*
R.001033

----------

Name: Fines over $10 by branch
Created by: -

----------

Group: Circulation
     Charges

Created on: 2011-01-24 21:34:31
Modified on: 2013-06-21 13:49:49
Date last run: 2022-09-23 14:13:38

----------

Public: 0
Expiry: 0

----------

Enhanced - Pick your branch to find patrons with fines over $10 #fines

----------
*/

","SELECT  borrowers.cardnumber, borrowers.surname, borrowers.firstname, Phone, borrowers.altcontactphone, borrowers.email, borrowers.address, borrowers.city, borrowers.zipcode, FORMAT(SUM(accountlines.amountoutstanding),2) as due FROM borrowers LEFT JOIN accountlines USING (borrowernumber) WHERE borrowers.branchcode= <<Pick your branch|branches>> AND accountlines.amountoutstanding != 0 GROUP BY borrowers.cardnumber having SUM(accountlines.amountoutstanding) >10 ORDER BY borrowers.surname ASC",,,,,,,,
R.001047,"/*
R.001047

----------

Name: Most-Circulated Report at Your Library, limited by Item Type and Shelving Location
Created by: -

----------

Group: Popular Reports
     -

Created on: 2011-02-22 10:13:01
Modified on: 2015-08-16 17:02:11
Date last run: 2022-09-22 11:39:14

----------

Public: 0
Expiry: 0

----------

Shows items with more than XX total circs for various Item Types and shelving locations.  Enhanced. Run and choose itemtype; home branch; location; and enter minimum number of circs. #circ

----------
*/

","SELECT items.barcode, items.itemcallnumber, CONCAT( '<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',biblio.biblionumber,'\"" target=""_blank"">',biblio.biblionumber,'</a>' ) as 'Link to Record', biblio.title, biblioitems.publicationyear as 'Copyright', items.dateaccessioned as 'Accessioned', items.itype, items.ccode, items.issues, items.renewals,(IFNULL(items.issues,0)+IFNULL(items.renewals,0)) as
Total_Circ,items.datelastborrowed,items.itemlost,items.onloan,items.damaged,items.itemnotes FROM items LEFT JOIN biblio USING(biblionumber) LEFT JOIN biblioitems USING(biblionumber) WHERE items.homebranch=<<Pick Transacting Branch|branches>> AND items.itype=<<Pick your Item Type|itemtypes>> AND items.location = <<location|LOC>> AND items.issues > <<Minimum Number of Circs>>
ORDER BY Total_Circ DESC",,,,,,,,
R.001076,"/*
R.001076

----------

Name: Number of Distinct Patrons served by Date range
Created by: -

----------

Group: Borrowers
     Patron Statistics

Created on: 2011-03-24 21:18:00
Modified on: 2018-10-24 12:59:41
Date last run: 2022-01-02 13:24:37

----------

Public: 0
Expiry: 0

----------

Enhanced - Select Run, then enter Date Range and Patron's Libary #patrons

----------
*/

","SELECT YEAR(issuedate), MONTH(issuedate), categorycode, COUNT(DISTINCT
borrowernumber)
FROM old_issues
 LEFT JOIN borrowers USING (borrowernumber)
where issuedate between <<Between (yyyy-mm-dd>> and <<and (yyyy-mm-dd>> and
old_issues.branchcode=<<Enter patrons library|branches>>
GROUP BY YEAR(issuedate), MONTH(issuedate), categorycode",,,,,,,,
R.001078,"/*
R.001078

----------

Name: Overdue Report by Date Range
Created by: -

----------

Group: Circulation
     Overdues

Created on: 2011-03-31 13:02:52
Modified on: 2013-06-23 12:27:01
Date last run: 2022-09-29 09:10:43

----------

Public: 0
Expiry: 0

----------

Select RUN, then pick your Library and fill in the date range #overdues

----------
*/

","SELECT concat(borrowers.surname,', ',borrowers.firstname) as fullnamekey, borrowers.surname, borrowers.firstname, borrowers.email, borrowers.cardnumber, borrowers.phone, borrowers.address, borrowers.city, borrowers.zipcode, issues.date_due, (TO_DAYS(curdate())-TO_DAYS( date_due)) as 'days overdue', items.itype, items.itemcallnumber, items.barcode, items.replacementprice, items.homebranch, biblio.title, biblio.author FROM borrowers LEFT JOIN issues USING (borrowernumber) LEFT JOIN items USING (itemnumber) LEFT JOIN biblio USING (biblionumber) WHERE issues.date_due BETWEEN <<Start Date (example: 2010-01-01) >> AND <<End Date (example: 2011-01-01 >> AND issues.branchcode= <<Pick your branch|branches>> ORDER BY borrowers.surname asc, issues.date_due asc",,,,,,,,
R.001099,"/*
R.001099

----------

Name: My items overdue elsewhere
Created by: -

----------

Group: Circulation
     Overdues

Created on: 2011-05-13 15:26:24
Modified on: 2014-01-08 14:11:06
Date last run: 2022-06-16 10:20:10

----------

Public: 0
Expiry: 0

----------

Enter the number of days overdue you want to track (0 or more) and choose your branch twice from the dropdowns. The first dropdown looks at only your library's items and the second dropdown looks at where the checkout did not happen (your library). 

----------
*/

","SELECT issues.branchcode as 'Transacting Library', borrowers.surname, borrowers.firstname, borrowers.phone, borrowers.cardnumber, borrowers.email, borrowers.address, borrowers.city, borrowers.zipcode, issues.date_due, (TO_DAYS(curdate())-TO_DAYS( date_due)) as 'days overdue', items.itype, items.itemcallnumber, items.barcode, items.homebranch as 'Owning library', biblio.title, biblio.author FROM borrowers join issues USING (borrowernumber) join items USING (itemnumber) JOIN biblio USING (biblionumber) WHERE (TO_DAYS(curdate())-TO_DAYS(date_due)) > <<number of days>> and items.homebranch = <<Pick your branch|branches>> AND issues.branchcode <> <<Pick your branch|branches>> order by borrowers.surname asc, issues.date_due asc",,,,,,,,
R.001128,"/*
R.001128

----------

Name: List that totals the circulation of each Dewey section, F, and periodicals, by month
Created by: -

----------

Group: Catalog Records and Items
     Collection Statistics

Created on: 2011-06-08 13:03:00
Modified on: 2013-11-17 16:13:42
Date last run: 2022-09-22 11:43:58

----------

Public: 0
Expiry: 0

----------

From koha-comm reports library

----------
*/

","SELECT location, substring(itemcallnumber,1,1) AS 'Call Number range', count(*) AS count FROM statistics LEFT JOIN items USING (itemnumber) WHERE statistics.type IN ('issue', 'renew') AND YEAR(datetime) = <<Enter Year>> AND MONTH(datetime) = <<Enter Month>> AND statistics.branch = <<branch|branches>> AND items.itype = <<Item Type|itemtypes>> AND items.ccode = <<ccode|CCODE>> GROUP BY location, substring(itemcallnumber,1,1)",,,,,,,,
R.001129,"/*
R.001129

----------

Name: Bib record count - entire catalog
Created by: -

----------

Group: Administrative Reports
     Collection Stats-admin

Created on: 2011-06-10 11:07:17
Modified on: 2016-06-01 10:33:43
Date last run: 2020-10-05 11:14:59

----------

Public: 0
Expiry: 0

----------



----------
*/

","select count(*) from biblio WHERE datecreated < <<Choose date (usually first of month, to count total records in system through end of previous month|date>>",,,,,,,,
R.001152,"/*
R.001152

----------

Name: Top 50 Bibs with Holds
Created by: -

----------

Group: Popular Reports
     -

Created on: 2011-07-29 16:18:30
Modified on: 2021-04-01 15:05:07
Date last run: 2021-12-06 09:17:37

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Generates a list of the 50 bibliographic records with the greatest numbers of requests</p>
<ul><li>Shows current data</li>
<li>Shows bibliographic records from all Next Search Cataloglibraries</li>
<li>grouped by biblionumber</li>
<li>sorted by request count (biggest first)</li>
<li>contains links to the bibliographic record</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p>This report is being replaced by <a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2735&phase=Run%20this%20report"" target=""_blank"">report 2735</a> which shows all items with more than 20 requests.</p>
<p>Report created by HB.</p>
</div>

----------
*/

","SELECT
  count(*) AS NUMBER_OF_REQUESTS,
  Concat(
    biblio.title, 
    "" "", 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code>=""b""]')
  ) AS TITLE,
  Concat(
    '<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', 
    biblio.biblionumber, 
    '\"" target=""_blank"">LINK</a>'
  ) AS LINK_TO_BIBLIO,
  Concat(
    '<a href=\""/cgi-bin/koha/catalogue/search.pl?idx=kw&q=', 
    biblio.title, 
    '&op=and&idx=kw&op=and&idx=kw&limit=mc-itype%2Cphr%3ALOCALHOLD1&limit=mc-itype%2Cphr%3AMEDIA&limit=mc-itype%2Cphr%3ANEWMEDIA&limit=mc-itype%2Cphr%3AWALKIN1&sort_by=relevance"" target=""_blank"">video</a>'
  ) AS VIDEO_SEARCH,
  Concat(
    ""<a href='https://www.youtube.com/results?search_query=official+trailer+"", 
    REPLACE(SUBSTRING_INDEX(biblio.title, 
    ""("", 1), 
    "" "", ""+""), 
    ""' target='_blank'>Youtube</a>""
  ) AS YOUTUBE
FROM
  reserves
  JOIN biblio ON reserves.biblionumber = biblio.biblionumber
  JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
GROUP BY
  biblio.biblionumber
ORDER BY
  count(*) DESC
LIMIT 50",,,,,,,,
R.001160,"/*
R.001160

----------

Name: ILL patron accounts: Loaned to other libraries OVERDUE
Created by: -

----------

Group: Interlibrary Loan
     -

Created on: 2011-08-11 14:08:00
Modified on: 2018-04-06 20:46:40
Date last run: 2022-09-13 18:13:44

----------

Public: 0
Expiry: 0

----------

Overdue >30 days report for materials loaned to other libraries through non-NExpress ILL services. MC/8/11 #overdues

<p><span style=""background-color: darkred; color: white"">Report upgrade needed.</p>

----------
*/

","SELECT items.homebranch, borrowers.surname, borrowers.firstname, borrowers.cardnumber, issues.date_due, (TO_DAYS(curdate())-TO_DAYS( date_due)) as 'days overdue', items.itype, items.itemcallnumber, items.replacementprice, items.barcode FROM borrowers LEFT JOIN issues USING(borrowernumber) LEFT JOIN items USING(itemnumber) LEFT JOIN biblio USING(biblionumber) WHERE (TO_DAYS(curdate())-TO_DAYS(date_due)) > '30' and borrowers.categorycode= 'ILL' order by items.homebranch asc, issues.date_due asc",,,,,,,,
R.001162,"/*
R.001162

----------

Name: Collection Value
Created by: BASEHOR TECH

----------

Group: Catalog Records and Items
     Collection Statistics

Created on: 2011-08-11 16:22:06
Modified on: 2021-03-03 15:54:27
Date last run: 2022-08-23 12:36:07

----------

Public: 0
Expiry: 0

----------

Replaced by reports 3471 and 3472

<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3471&phase=Run%20this%20report""  target=""_blank"">Click here to run report 3471 in a new window</a></p>

<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3472&phase=Run%20this%20report""  target=""_blank"">Click here to run report 3472 in a new window</a></p>

----------
*/

","SELECT 
  CONCAT('Replaced by report 3471 (replacement cost by collection code) and report 3472 (replacement cost by item type)') AS INFORMATION",,,,,,,,
R.001163,"/*
R.001163

----------

Name: single collection code value
Created by: BASEHOR TECH

----------

Group: Catalog Records and Items
     Collection Statistics

Created on: 2011-08-11 17:03:50
Modified on: 2013-11-17 16:16:09
Date last run: 2022-02-28 14:16:15

----------

Public: 0
Expiry: 0

----------

#special

----------
*/

","SELECT biblio.title, items.replacementprice, count(items.biblionumber) as items, sum(items.replacementprice) as value FROM items JOIN biblio USING (biblionumber) WHERE items.homebranch = <<Pick your branch|branches>> AND items.ccode = <<Choose your Collection code|CCODE>> GROUP BY items.biblionumber ORDER BY items.biblionumber asc",,,,,,,,
R.001165,"/*
R.001165

----------

Name: Basehor Lost 
Created by: BASEHOR TECH

----------

Group:  BASEHOR
     -

Created on: 2011-08-15 15:42:56
Modified on: 2021-08-16 20:43:45
Date last run: 2022-05-10 08:10:21

----------

Public: 0
Expiry: 0

----------

Lost items by Collection code

----------
*/

","SELECT items.datelastseen, title, items.barcode, itemcallnumber
FROM items RIGHT JOIN biblio on (items.biblionumber=biblio.biblionumber) 
WHERE itemlost in (1,3) AND items.homebranch=""BASEHOR"" AND items.ccode= ""DVD"" 
ORDER BY itemcallnumber, title",,,,,,,,
R.001186,"/*
R.001186

----------

Name: Old Holds
Created by: Heather Braum

----------

Group: Holds-Reserves
     -

Created on: 2011-09-06 16:58:22
Modified on: 2013-09-25 17:18:34
Date last run: 2022-09-28 16:23:08

----------

Public: 0
Expiry: 0

----------

Report that shows holds placed prior to a certain date and are still active. Enhanced. Click Run and then choose your library from the dropdown list. #holds

----------
*/

","SELECT borrowers.firstname, borrowers.surname, borrowers.phone, borrowers.branchcode, biblio.title, biblio.author, items.ccode, items.itype, items.barcode, reserves.reservedate FROM reserves JOIN items USING (biblionumber) JOIN biblio using (biblionumber) JOIN borrowers using (borrowernumber) WHERE reserves.reservedate < <<Starting Date (yyyy-mm-dd format)>> AND reserves.found IS NULL AND borrowers.branchcode = <<Select your library|branches>> GROUP BY borrowers.branchcode, borrowers.surname, items.ccode asc",,,,,,,,
R.001187,"/*
R.001187

----------

Name: Collection size by Shelving Location
Created by: -

----------

Group: Catalog Records and Items
     Collection Statistics

Created on: 2011-09-06 17:01:39
Modified on: 2013-09-21 16:19:41
Date last run: 2022-08-01 16:38:54

----------

Public: 0
Expiry: 0

----------

Enhanced - Run, pick and go... #count

----------
*/

","SELECT location, homebranch,count(itemnumber) as items FROM items WHERE items.homebranch = <<Pick your branch|branches>> GROUP BY location ORDER BY location asc ",,,,,,,,
R.001205,"/*
R.001205

----------

Name: Document Current ID/SSN
Created by: -

----------

Group: Administrative Reports
     Patrons-admin

Created on: 2011-10-18 14:01:54
Modified on: 2014-03-23 20:08:38
Date last run: 2020-05-08 10:52:14

----------

Public: 0
Expiry: 0

----------



----------
*/

","select CONCAT('<a href=\""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=',borrowers.borrowernumber,'\"" target=""_blank"">'""edit patron""'</a>') as ""edit patron"", borrowers.firstname, borrowers.surname, borrowers.branchcode, borrowers.cardnumber, borrower_attributes.attribute from borrower_attributes join borrowers USING(borrowernumber) where borrower_attributes.code IN ('LICENSE','ALTID') and borrower_attributes.attribute NOT REGEXP 'verified|YES|on file|proof|bill|needs|need|same|dad|mom|ID|see|^/' and borrower_attributes.attribute REGEXP 'K0|ID#|-' order by borrowers.branchcode asc",,,,,,,,
R.001211,"/*
R.001211

----------

Name: Holds Left Behind When Record Deleted
Created by: -

----------

Group: Administrative Reports
     Holds-admin

Created on: 2011-10-25 09:40:52
Modified on: 2013-09-21 16:05:33
Date last run: 2021-06-10 14:32:00

----------

Public: 0
Expiry: 0

----------

Patrons with a hold that was left behind when bib records were deleted. #holds

----------
*/

",select * from reserves where biblionumber IS NULL,,,,,,,,
R.001227,"/*
R.001227

----------

Name: Your New Patrons
Created by: -

----------

Group: Borrowers
     -

Created on: 2011-11-01 16:10:52
Modified on: 2020-05-08 11:16:19
Date last run: 2022-10-03 10:55:10

----------

Public: 0
Expiry: 0

----------

Enhanced - Run, add numeric month, numeric year and pick your branch. #patrons

----------
*/

","SELECT 
  borrowers.dateenrolled, 
  borrowers.surname, 
  borrowers.firstname, 
  borrowers.branchcode, 
  borrowers.categorycode, 
  borrowers.cardnumber, 
  borrowers.address, 
  borrowers.city, 
  borrowers.phone 
FROM borrowers 
WHERE month(dateenrolled) = << numericmonth >> AND 
  year(dateenrolled) = << numericyear >> AND 
  borrowers.branchcode = <<Pick your branch|branches>> 
ORDER BY borrowers.categorycode ASC",,,,,,,,
R.001244,"/*
R.001244

----------

Name: Circ Stats for Specific day
Created by: Heather Braum

----------

Group: Daily, Monthly, Yearly Stats
     Daily

Created on: 2011-11-23 13:12:03
Modified on: 2014-01-08 16:33:25
Date last run: 2022-10-03 09:01:46

----------

Public: 0
Expiry: 0

----------

Enhanced. Choose Run --> 1) Enter the date you want to count + % (ex. 2011-11-16%). 2) Choose your branch.  #circ

----------
*/

","SELECT COUNT(*) FROM statistics WHERE statistics.type IN ('issue','renew') AND statistics.datetime LIKE <<Date you want to count and % (example: 2011-11-16%) >> AND statistics.branch = <<Pick your branch|branches>> ",,,,,,,,
R.001275,"/*
R.001275

----------

Name: List of Titles with Holds
Created by: Heather Braum

----------

Group: Holds-Reserves
     -

Created on: 2011-12-18 19:08:58
Modified on: 2013-11-17 13:44:27
Date last run: 2021-10-15 12:18:06

----------

Public: 0
Expiry: 0

----------

Enhanced. Choose library. #holds

----------
*/

","SELECT biblio.biblionumber, items.ccode, CONCAT('<a href=\""/cgi-bin/koha/catalogue/search.pl?idx=ti&q=',biblio.title,'&sort_by=title_az\"" target=""_blank"">',biblio.title,'</a>')
AS Title, items.dateaccessioned, CONCAT('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',biblio.biblionumber,'\"" target=""_blank"">',biblio.biblionumber,'</a>') AS bibnumber
FROM biblio LEFT JOIN items USING (biblionumber) LEFT JOIN reserves USING (biblionumber) WHERE reserves.borrowernumber IS NOT NULL and items.homebranch =<<Pick branch|branches>> GROUP BY biblio.biblionumber ORDER BY biblio.biblionumber DESC LIMIT 1000",,,,,,,,
R.001310,"/*
R.001310

----------

Name: Top Circing Items in the Last Six Months in Entire Catalog
Created by: Heather Braum

----------

Group: Circulation
     Circ Stats

Created on: 2012-01-31 18:43:08
Modified on: 2014-11-17 15:35:37
Date last run: 2022-05-26 11:22:51

----------

Public: 0
Expiry: 0

----------

#circ

----------
*/

","SELECT count(statistics.datetime) AS circs, biblio.title, biblio.author, items.ccode FROM statistics JOIN items USING (itemnumber) 
LEFT JOIN biblio USING(biblionumber) WHERE DATE(statistics.datetime) > DATE_SUB(CURRENT_DATE(),INTERVAL 6 MONTH) AND DATE(statistics.datetime)<=CURRENT_DATE() AND statistics.itemnumber IS NOT NULL AND items.ccode=<<ccode|CCODE>> AND items.location =<<location|LOC>> GROUP BY biblio.biblionumber ORDER BY circs DESC LIMIT 20",,,,,,,,
R.001317,"/*
R.001317

----------

Name: Patrons, added prior to 2013
Created by: -

----------

Group: Borrowers
     Patron Statistics

Created on: 2012-02-10 13:36:59
Modified on: 2013-06-16 16:39:21
Date last run: 2018-10-09 18:31:51

----------

Public: 0
Expiry: 0

----------

Select your library from dropdown

----------
*/

","SELECT branchcode, count(*) FROM borrowers WHERE borrowers.branchcode=<<Select your branch|branches>> AND branchcode IS NOT NULL AND categorycode is not null AND dateenrolled <'2013-01-01' group by branchcode

",,,,,,,,
R.001324,"/*
R.001324

----------

Name: Circ stats for titles in a specific collection code, for all time
Created by: -

----------

Group: -
     -

Created on: 2012-02-17 13:14:33
Modified on: 2019-01-10 15:48:52
Date last run: 2022-02-28 14:18:46

----------

Public: 0
Expiry: 0

----------

Enhanced - just hit Run #circ

----------
*/

","SELECT biblio.title,t.publicationyear,items.replacementprice,items.dateaccessioned,items.issues,items.itype,items.ccode,items.homebranch FROM items LEFT JOIN biblio USING (biblionumber) LEFT JOIN biblioitems t USING(biblionumber) WHERE items.homebranch=<<Pick your branch|branches>> AND items.ccode=<<Pick your Collection Code|CCODE>> GROUP BY biblio.biblionumber, items.itemnumber ORDER BY biblio.title asc

",,,,,,,,
R.001327,"/*
R.001327

----------

Name: Titles of Circs at a given branch
Created by: -

----------

Group: Circulation
     -

Created on: 2012-02-17 13:44:33
Modified on: 2013-09-25 17:26:21
Date last run: 2022-05-26 11:26:57

----------

Public: 0
Expiry: 0

----------

Enhanced - enter MM, YYYY and branch #circ

----------
*/

","SELECT statistics.branch as Library, biblio.title, biblio.author, items.itemcallnumber, items.itype, items.ccode, items.location, items.homebranch as ItemBranch, statistics.itemtype FROM statistics LEFT JOIN items USING (itemnumber) LEFT JOIN biblio USING (biblionumber) WHERE statistics.type IN ('issue', 'renew') AND MONTH(statistics.datetime)= <<Month>> and YEAR(statistics.datetime)=<<Year>> and statistics.branch = <<Pick your branch|branches>> ORDER BY statistics.branch, biblio.title",,,,,,,,
R.001329,"/*
R.001329

----------

Name: List of patrons added in a year
Created by: -

----------

Group: Borrowers
     -

Created on: 2012-03-02 14:27:15
Modified on: 2020-04-30 14:33:16
Date last run: 2022-08-08 17:27:15

----------

Public: 0
Expiry: 0

----------

Choose branch and enter year added to list. #patrons

----------
*/

","SELECT borrowers.dateenrolled, borrowers.surname,borrowers.firstname,borrowers.branchcode,borrowers.categorycode, borrowers.cardnumber,borrowers.address,borrowers.city,borrowers.phone FROM borrowers WHERE year(dateenrolled) = << numericyear >> AND borrowers.branchcode = <<Pick your branch|branches>> ORDER BY borrowers.categorycode ASC",,,,,,,,
R.001338,"/*
R.001338

----------

Name: List of all patrons
Created by: -

----------

Group: Borrowers
     -

Created on: 2012-03-08 10:22:28
Modified on: 2014-01-15 00:42:08
Date last run: 2022-09-27 16:02:02

----------

Public: 0
Expiry: 0

----------

Run - Pick Branch. May take time, depending on the number of patrons you have. Also includes an Edit Patron link. #patrons

----------
*/

","SELECT borrowers.dateenrolled, borrowers.surname,borrowers.firstname,borrowers.branchcode,borrowers.categorycode,borrowers.phone,borrowers.cardnumber,borrowers.address,borrowers.city,borrowers.zipcode, CONCAT('<a href=\""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=',borrowers.borrowernumber,'\"" target=""_blank"">'""edit patron""'</a>') as ""edit patron"" FROM borrowers WHERE borrowers.branchcode = <<Pick your branch|branches>> ORDER BY borrowers.categorycode ASC",,,,,,,,
R.001339,"/*
R.001339

----------

Name: Circ by Call Number Range (Circ at Any Library)
Created by: Heather Braum

----------

Group: Circulation
     Circ Stats

Created on: 2012-03-13 11:46:56
Modified on: 2015-09-10 13:47:54
Date last run: 2022-04-12 14:11:36

----------

Public: 0
Expiry: 0

----------

#circ

----------
*/

","SELECT items.location, items.ccode, substring(items.itemcallnumber,1,4) AS 'Call Number range', count(*) AS count FROM statistics LEFT JOIN items USING (itemnumber) WHERE statistics.type IN ('issue', 'renew') AND YEAR(datetime) = <<enter year>> AND statistics.branch = <<branch|branches>> GROUP BY items.location, substring(items.itemcallnumber,1,4), items.ccode ORDER BY items.ccode, substring(items.itemcallnumber,1,4)",,,,,,,,
R.001356,"/*
R.001356

----------

Name: Barcode Cleanup Report
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Fix Items

Created on: 2012-04-20 14:27:57
Modified on: 2018-09-20 13:54:54
Date last run: 2022-09-28 16:07:01

----------

Public: 0
Expiry: 0

----------

Shows you your short barcodes (less than 13 digits) or blank barcodes. Can edit barcodes directly from the report. Choose your branch to run.

HB_Monthly

----------
*/

","select i.itemnumber, i.dateaccessioned, b.title, i.ccode, i.itype, i.itemcallnumber, i.barcode, CONCAT('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=',b.biblionumber,'&itemnumber=',i.itemnumber,'#edititem\"" target=""_blank"">'""edit item""'</a>') as ""edit barcode"" from biblio b left join items i using (biblionumber) where i.notforloan <>'-1' AND i.homebranch=<<branch|branches>> AND (i.barcode IS NULL OR LENGTH(i.barcode) < 13 OR i.barcode LIKE 'eudora%') ORDER BY i.ccode, i.itemcallnumber",,,,,,,,
R.001357,"/*
R.001357

----------

Name: Materials added between dates
Created by: Heather Braum

----------

Group: Catalog Records and Items
     New Materials

Created on: 2012-04-23 14:44:49
Modified on: 2016-08-22 16:31:23
Date last run: 2022-03-18 10:12:22

----------

Public: 0
Expiry: 0

----------

Limited by branch. Only by dates. #added

----------
*/

","select i.dateaccessioned, CONCAT('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',b.biblionumber,'\"" target=""_blank"">',b.biblionumber,'</a>') as ""Linked Record"", CONCAT('<a href=\""/cgi-bin/koha/catalogue/search.pl?idx=ti&q=',b.title,'&sort_by=title_az\"" target=""_blank"">',b.title,'</a>') AS ""Title Search"", i.ccode, i.homebranch, t.pages, t.size, t.isbn from biblio b join items i using (biblionumber) join biblioitems t using (biblionumber) where i.homebranch=<<branch|branches>>  AND i.dateaccessioned >= <<Date you want to count (example: 2011-11-16)|date>> AND i.dateaccessioned <= <<Day after the Date you want to count (example: 2011-11-17)|date>> GROUP BY b.biblionumber order by b.title ASC",,,,,,,,
R.001368,"/*
R.001368

----------

Name: Bib Search By Author sorted by title
Created by: Heather Braum

----------

Group: -
     -

Created on: 2012-05-02 00:38:22
Modified on: 2018-07-02 12:13:26
Date last run: 2019-03-11 22:49:38

----------

Public: 0
Expiry: 0

----------

Enhanced -- enter author name. For catalog cleanup

----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">LINK</a>') AS LINK,
  biblio.biblionumber,
  biblio.title,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code>=""h""]') AS MEDIUM,
  biblio.author,
  Count(items.itemnumber),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""020""]/subfield[@code>=""a""]') AS ISBNA,
  biblioitems.pages,
  biblioitems.size,
  biblioitems.publishercode,
  biblioitems.publicationyear
FROM
  biblio
  JOIN items ON biblio.biblionumber = items.biblionumber
  LEFT JOIN biblioitems ON items.biblionumber = biblioitems.biblionumber
  JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
WHERE
  biblio.author LIKE Concat(""%"", <<author>>,""%"") AND
  (items.itype <> 'AUDIOBOOK' AND
   items.itype <> 'MEDIA')
GROUP BY
  biblio.biblionumber
HAVING
  Count(items.itemnumber) > 0
ORDER BY
  biblio.title,
  biblioitems.pages,
  biblioitems.publishercode",,,,,,,,
R.001385,"/*
R.001385

----------

Name: Entire collection size by location
Created by: Heather Braum

----------

Group: Administrative Reports
     Collection Stats-admin

Created on: 2012-05-11 18:11:35
Modified on: 2013-09-25 16:38:10
Date last run: 2021-12-09 10:25:32

----------

Public: 0
Expiry: 0

----------

#count

----------
*/

","SELECT location, count(itemnumber) as items FROM items GROUP BY location ORDER BY location asc ",,,,,,,,
R.001395,"/*
R.001395

----------

Name: Circ by Patron Category
Created by: -

----------

Group: Circulation
     Circ Stats

Created on: 2012-05-14 14:25:25
Modified on: 2013-09-21 16:27:44
Date last run: 2022-03-01 11:36:48

----------

Public: 0
Expiry: 0

----------

#circ

----------
*/

","SELECT borrowers.categorycode, COUNT(*) FROM statistics JOIN borrowers USING (borrowernumber) WHERE statistics.type IN ('issue', 'renew') AND datetime >= <<Start Date (example: 2009-01-01) >> AND datetime < <<End Date (example: 2010-01-01 >> AND statistics.branch = <<Pick your branch|branches>>  GROUP BY borrowers.categorycode",,,,,,,,
R.001406,"/*
R.001406

----------

Name: Location Code Nonstandard? 
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Fix Items

Created on: 2012-05-14 22:21:07
Modified on: 2015-08-16 20:06:11
Date last run: 2022-03-23 16:25:56

----------

Public: 0
Expiry: 0

----------

Possible nonstandard locations NOT CHILDRENS, ADULT, or YOUNGADULT -- Enhanced -- Choose branch. Can edit items directly linked from this report

----------
*/

","SELECT i.dateaccessioned,b.title, b.author,t.publicationyear, i.location, i.ccode,i.itype,i.itemcallnumber,i.barcode, CONCAT('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=',b.biblionumber,'&itemnumber=',i.itemnumber,'#edititem\"" target=""_blank"">'""edit item""'</a>') as ""edit barcode"" FROM items i LEFT JOIN biblio b USING (biblionumber) LEFT JOIN biblioitems t USING(biblionumber)
WHERE i.homebranch=<<Pick your branch|branches>> AND i.location NOT IN ('ADULT','CHILDRENS','YOUNGADULT')
ORDER BY i.location desc",,,,,,,,
R.001410,"/*
R.001410

----------

Name: Shelf List of Specific Item Type and Location
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Shelf Lists

Created on: 2012-05-14 22:52:34
Modified on: 2015-08-16 20:08:27
Date last run: 2022-04-11 14:19:40

----------

Public: 0
Expiry: 0

----------

Enhanced. - Choose Branch, Item Type, and Location -- (On Reports Webpages, 5/14/12). #shelflist

----------
*/

","SELECT b.biblionumber, i.dateaccessioned, b.title, b.author, i.ccode, i.location, i.itemcallnumber, i.itype, t.publicationyear, i.barcode, CONCAT('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=',b.biblionumber,'&itemnumber=',i.itemnumber,'#edititem\"" target=""_blank"">'""edit item""'</a>') as ""edit item"" FROM items i LEFT JOIN biblio b USING (biblionumber) LEFT JOIN biblioitems t USING(biblionumber) WHERE i.homebranch=<<Pick your branch|branches>> AND i.itype=<<Pick your item type|itemtypes>> AND i.location=<<location|LOC>> ORDER BY i.itemcallnumber",,,,,,,,
R.001415,"/*
R.001415

----------

Name: Items with Damaged Status
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Status reports-lost, damaged

Created on: 2012-05-14 23:22:27
Modified on: 2015-08-16 19:37:14
Date last run: 2022-07-13 11:29:52

----------

Public: 0
Expiry: 0

----------

Enhanced -- Choose Library. (On Reports Webpages, 5/14/12) #special #count

----------
*/

","SELECT i.datelastseen,b.title, b.author,t.publicationyear, i.location, i.ccode,i.itype,i.itemcallnumber, i.barcode, CONCAT('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=',b.biblionumber,'&itemnumber=',i.itemnumber,'#edititem\"" target=""_blank"">'""edit item""'</a>') as ""edit item"" FROM items i LEFT JOIN biblio b USING (biblionumber) LEFT JOIN biblioitems t USING(biblionumber)
WHERE i.homebranch=<<Pick your branch|branches>> AND (i.damaged='1' OR i.itemlost='4') ORDER BY  i.itemcallnumber",,,,,,,,
R.001418,"/*
R.001418

----------

Name: Items with Withdrawn Status
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Status reports-lost, damaged

Created on: 2012-05-14 23:35:28
Modified on: 2015-08-16 19:38:04
Date last run: 2022-02-14 12:45:24

----------

Public: 0
Expiry: 0

----------

Enhanced -- Choose Library. (On Reports Webpages, 5/14/12)  #special

----------
*/

","SELECT items.datelastseen, authorised_values.lib, biblio.title, biblio.author, biblioitems.publicationyear, items.location, items.ccode,items.itype, items.itemcallnumber, items.barcode, CONCAT('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=',biblio.biblionumber,'&itemnumber=',items.itemnumber,'#edititem\"" target=""_blank"">'""edit item""'</a>') as ""edit item"" FROM items LEFT JOIN biblioitems USING(biblionumber) LEFT JOIN biblio USING (biblionumber) LEFT JOIN authorised_values ON (items.withdrawn=authorised_values.authorised_value) WHERE items.homebranch=<<Pick your branch|branches>> AND items.withdrawn != 0 AND authorised_values.category='WITHDRAWN' ORDER BY authorised_values.lib, items.itemcallnumber",,,,,,,,
R.001419,"/*
R.001419

----------

Name: Items with Missing Status
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Status reports-lost, damaged

Created on: 2012-05-14 23:40:18
Modified on: 2015-08-16 18:11:42
Date last run: 2022-08-31 13:33:21

----------

Public: 0
Expiry: 0

----------

Enhanced -- Choose Library.(On Reports Web Page, 5/14/12). #lost

----------
*/

","SELECT i.datelastseen, b.title, b.author,t.publicationyear, i.location, i.ccode,i.itype,i.itemcallnumber, i.barcode, i.holdingbranch, CONCAT('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=',b.biblionumber,'&itemnumber=',i.itemnumber,'#edititem\"" target=""_blank"">'""edit item""'</a>') as ""edit item"" FROM items i LEFT JOIN biblio b USING (biblionumber) LEFT JOIN biblioitems t USING(biblionumber)
WHERE i.homebranch=<<Pick your branch|branches>> AND i.itemlost = '3'
ORDER BY  i.itemcallnumber",,,,,,,,
R.001423,"/*
R.001423

----------

Name: Lost Items Count per Branch
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Status reports-lost, damaged

Created on: 2012-05-14 23:48:28
Modified on: 2013-09-25 17:15:40
Date last run: 2022-05-17 13:09:39

----------

Public: 0
Expiry: 0

----------

Count of Lost Items per Branch. (On Reports Webpages, 5/14/12); #count

----------
*/

","SELECT items.homebranch, authorised_values.lib, count(items.itemnumber) as items FROM items LEFT JOIN authorised_values ON (items.itemlost=authorised_values.authorised_value) WHERE items.itemlost != 0 AND authorised_values.category='LOST' GROUP BY items.homebranch, authorised_values.lib ORDER BY homebranch, authorised_values.lib asc ",,,,,,,,
R.001482,"/*
R.001482

----------

Name: Patron Cardnumbers and usernames
Created by: -

----------

Group: Borrowers
     -

Created on: 2012-07-31 08:45:41
Modified on: 2013-09-25 17:17:49
Date last run: 2021-06-21 12:42:17

----------

Public: 0
Expiry: 0

----------

enhanced #patrons

----------
*/

","SELECT borrowers.firstname, borrowers.surname, borrowers.cardnumber, borrowers.userid from borrowers where branchcode = <<Select your branch|branches>>",,,,,,,,
R.001530,"/*
R.001530

----------

Name: Overdue List - XX days past due (linked)
Created by: Heather Braum

----------

Group: Circulation
     Overdues

Created on: 2012-08-29 12:24:30
Modified on: 2014-01-15 14:07:31
Date last run: 2022-06-17 10:37:01

----------

Public: 0
Expiry: 0

----------

This is a duplication of report #350 with two differences: the surname & the barcode are linked to the borrower & item view screens. #overdues

----------
*/

","SELECT CONCAT ('<a href=\""/cgi-bin/koha/members/moremember.pl?borrowernumber=',borrowers.borrowernumber,'\"" target=""_blank"">',borrowers.surname,'</a>') AS ""borrowers.surname"", borrowers.firstname, borrowers.phone, borrowers.cardnumber, borrowers.email, borrowers.address, borrowers.address2, borrowers.city, borrowers.zipcode, issues.date_due, (TO_DAYS(curdate())-TO_DAYS( date_due)) as 'days overdue', items.itype, items.itemcallnumber, CONCAT ('<a href=\""/cgi-bin/koha/catalogue/moredetail.pl?itemnumber=',items.itemnumber,'&biblionumber=',biblio.biblionumber,'&bi=',biblioitems.biblioitemnumber,'#item',items.itemnumber,'\"" target=""_blank"">',items.barcode,'</a>') AS barcode, items.homebranch, biblio.title, biblio.author FROM borrowers join issues USING (borrowernumber) join items USING (itemnumber) JOIN biblio USING (biblionumber) join biblioitems USING (biblionumber) WHERE issues.branchcode = <<Pick your branch|branches>> AND (TO_DAYS(curdate())-TO_DAYS(date_due)) > <<number of days>> order by borrowers.surname asc, issues.date_due asc",,,,,,,,
R.001534,"/*
R.001534

----------

Name: Borrowers in a given zipcode for a given branch
Created by: Heather Braum

----------

Group: Borrowers
     -

Created on: 2012-09-05 10:56:12
Modified on: 2013-06-17 01:08:56
Date last run: 2022-01-06 14:56:13

----------

Public: 0
Expiry: 0

----------

Enhanced: RUN AS IS. This report will report all patrons/addresses in a given zipcode for a given library.

----------
*/

","select firstname,surname, address from borrowers where zipcode = <<enter zip code>> and branchcode =<<Select your Library|branches>>",,,,,,,,
R.001538,"/*
R.001538

----------

Name: Count of Deleted Bib Records by Year
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Weeded Already

Created on: 2012-09-10 17:13:41
Modified on: 2015-05-19 11:42:44
Date last run: 2022-06-02 13:50:48

----------

Public: 0
Expiry: 0

----------

#special

----------
*/

","SELECT YEAR(timestamp), COUNT(biblionumber) FROM deletedbiblio GROUP BY YEAR(timestamp)",,,,,,,,
R.001553,"/*
R.001553

----------

Name: Deleted Items By Month
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Weeded Already

Created on: 2012-09-19 14:26:14
Modified on: 2015-05-19 11:42:48
Date last run: 2022-08-15 15:20:26

----------

Public: 0
Expiry: 0

----------

#special #weeding

----------
*/

","SELECT MONTH(timestamp), YEAR(timestamp), count(*) as count FROM deleteditems WHERE deleteditems.homebranch = <<Pick your Branch|branches>> GROUP BY MONTH(timestamp), YEAR(timestamp) ORDER BY YEAR(timestamp) DESC, MONTH(timestamp) DESC",,,,,,,,
R.001561,"/*
R.001561

----------

Name: Pending Purchase Suggestions (by Branch)
Created by: Heather Braum

----------

Group: Acquisitions
     Purchase Requests

Created on: 2012-09-27 11:50:07
Modified on: 2018-07-02 09:32:01
Date last run: 2022-02-17 13:42:47

----------

Public: 0
Expiry: 0

----------

Limited by Branch. Edit requests directly from this report by clicking on the Answer Request link. #special

----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/suggestion/suggestion.pl#ASKED\"" target=""_blank"">All Pending Suggestions</a>') AS ""All Pending Suggestions"",
  Concat('<a href=\""/cgi-bin/koha/suggestion/suggestion.pl?suggestionid=', suggestions.suggestionid, '&op=edit\"" target=""_blank"">Answer Request</a>') AS Request,
  Concat('<a href=\""/cgi-bin/koha/members/moremember.pl?borrowernumber=', borrowers.borrowernumber, '\"" target=""_blank"">', borrowers.surname, ', ', borrowers.firstname, '</a>') AS patron,
  suggestions.suggesteddate,
  suggestions.STATUS,
  suggestions.title,
  suggestions.author,
  suggestions.itemtype,
  suggestions.copyrightdate,
  suggestions.isbn,
  suggestions.note
FROM
  borrowers,
  suggestions
WHERE
  borrowers.borrowernumber = suggestions.suggestedby AND
  suggestions.branchcode LIKE <<branch|LBRANCH>> AND
  suggestions.STATUS = 'ASKED'
ORDER BY
  suggestions.suggesteddate DESC",,,,,,,,
R.001573,"/*
R.001573

----------

Name: Identify Multiple Items of a Title
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Weeding Criteria

Created on: 2012-10-02 11:42:10
Modified on: 2016-06-09 10:33:43
Date last run: 2022-07-22 13:07:33

----------

Public: 0
Expiry: 0

----------

Identifies the records where your library has multiple copies of a title; includes barcodes, call numbers, shelving locations, and collection codes. 

----------
*/

","SELECT CONCAT ('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',biblio.biblionumber,'\"" target=""_blank"">'""link to record""'</a>') as ""link to record"", biblio.title, biblio.author, count(itemnumber) as ""total items"", GROUP_CONCAT(items.barcode SEPARATOR '; ') as barcodes, GROUP_CONCAT(items.ccode SEPARATOR '; ') as ccodes, GROUP_CONCAT(items.location SEPARATOR '; ') as locations, GROUP_CONCAT(items.itemcallnumber SEPARATOR '; ') as callnumbers FROM biblio LEFT JOIN items USING(biblionumber) WHERE items.homebranch=<<choose library|branches>> AND (itype NOT IN ('MAGAZINE','NEWMAGAZINE','WALKIN') OR ccode <> 'MAGAZINE') GROUP BY items.biblionumber HAVING count(items.itemnumber) > 1 ORDER BY biblio.author
",,,,,,,,
R.001577,"/*
R.001577

----------

Name: TV Series Project #3
Created by: Heather Braum

----------

Group: Administrative Reports
     Fix Bib Records-admin

Created on: 2012-10-08 11:35:31
Modified on: 2015-08-16 20:13:20
Date last run: 2021-10-05 14:24:42

----------

Public: 0
Expiry: 0

----------

limited by id'd bib number; shelf list of potential items for change to tv series ccode

----------
*/

","SELECT CONCAT ('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',b.biblionumber,'\"" target=""_blank"">',b.biblionumber,'</a>') AS ""Access Record"", b.title, t.publicationyear, i.ccode, i.itemcallnumber, i.barcode, i.homebranch FROM biblio b LEFT JOIN items i USING(biblionumber) LEFT JOIN biblioitems t USING(biblionumber)  WHERE b.biblionumber IN ('71296','71317','71318','71320','74678','464237','490669','433460','431061','497831','63263','63264','63265','47123','15653','198343','57985','515792','301970','193359','476048','7812','448652','312493','528438','529899','301970','476048','46903','484279','200127','197886','69648','3689','302451','46904','46908','46900','46905','46906','189078','47054','302777','491368','46901','430937','357734','507205','113537','520217','75202','516891','412923','56739','237378','47019','47243','513282','352843','47245','148779','62133','489295','236508','448458','491554','275463','275463','229572','430600','455586','455586','455586','455586','430492','458512','431344','73578','461532','411461','145435','46995','187090','300715','300715','198830','528299','476154','116887','47104','376115','481785','243249','484904','304153','3151','113287','273731','200120','118229','235329','63263','63264','77559','470284','235844','235852','490671','237296','237298','413201','349361','320993','368501','490669','371408','411461','198343','122483','57985','515792','198279','198279','198279','193359','193359','83032','7812','3149','114872','114872','114872','16300','3689','118151','75652','75652','75652','78407','506437','116897','115482','423660','113285','193882','66401','68465','68468','80277','191646','46966','46966','46966','357043','63915','356769','9662','448461','71296','71317','71318','71320','117857','9663','80584','116021','237095','3887','491555','82769','80611','490660','293788','64906','74122','1574','1574','82549','192591','82548','113024','113024','61797','192029','27320','114135','114135','146105','68421','69966','47963','233642','509398','514487','514810','433413','312493','312493','354672','121053','192053','47766','120981','357734','9666','298727','63337','68768','75551','114879','454535','424424','116018','504918','448757','446576','74678','9668','116505','116505','116505','123450','113283','115057','60016','82698','9669','146371','146371','192331','426723','74318','82743','468233','468233','80287','80288','80288','122944','354703','82693','121054','464237','47242','69610','146293','64908','74213','47045','82714','82714','2102','80614','10011','62340','304964','433460','490669','47019','189491','192200','236503','113286','58876','57995','114931','193767','62122','47243','352846','60014','352844','352843','80620','80620','82090','117232','117232','114622','115060','115060','115060','47765','112172','497674','491545','491545','47081','255267','356074','430219','81348','81349','81351','81353','113277','424436','67168','61495','62117','431061','376336','76691','77189','189849','111010','114930','114930','1509','80573','22602','47241','73576','116899','2805','515453','82678','427912','448458','113591','81906','81906','516775','82092','82092','2097','80278','189560','9568','189560','373034','235457','5173','116506','116506','82777','3615','1572','192910','197955','71242','57740','69587','74120','67165','365844','46984','238181','237039','60871','60872','60874','356767','112168','112168','121509','114140','114140','431344','497831','354210','63996','113276','73578','10058','116504','116504','122046','122046','114176','255551','233363','300715','300715','115548','273449','190069','5718','118147','60723','302483','113282','269159','113272','62917','376115','115549','2052','490557','521381','123175','121513','10073','2145','2105','3220','191651','3151','498893','5097','235911','67166','63338','68466','68470','75457','75380','451577','118148','359654','473116','528296','61801','69822','69822','118107','4561','424425','47244','60012','121515','192033','77559','2917','62119','66341','71838','80301','114881','114881','235855','235494','2103','67414','59474','2103','376363','62123','15540','95647','95647','429493','303101','432867','430939','80279','80279','112056','117857','82769','490660','237608','348867','223986','430204','66342','66342','114293','114293','357252','448788','523533','82743','468233','468233','8602','65943','73335','47765','67168','518819','230463','10068','373034','117911','63317','294359','375947','356767','29725','73649','273449','492360','62917','235911','521748','521751','521754','521756','522656','522658','522660','522662') AND i.ccode <> 'TVSERIES' ORDER BY i.homebranch",,,,,,,,
R.001596,"/*
R.001596

----------

Name: Holds Waiting Pickup (by branch)
Created by: Heather Braum

----------

Group: Holds-Reserves
     -

Created on: 2012-10-15 11:33:12
Modified on: 2013-06-17 02:03:08
Date last run: 2021-10-15 12:18:10

----------

Public: 0
Expiry: 0

----------

Limited by Branch. Lists all items WAITING for more than 7 days

----------
*/

","SELECT reserves.waitingdate, reserves.reservedate, reserves.branchcode, CONCAT ('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',biblio.biblionumber,'\"" target=""_blank"">',biblio.title,'</a>') AS ""Items Display"", CONCAT ('<a href=\""/cgi-bin/koha/reserve/request.pl?biblionumber=',biblio.biblionumber,'\"" target=""_blank"">'""Holds Table""'</a>') AS ""Holds Table"",  items.barcode, items.itemcallnumber, borrowers.firstname, borrowers.surname FROM borrowers LEFT JOIN reserves USING(borrowernumber) JOIN biblio USING(biblionumber) JOIN items USING(itemnumber) WHERE (TO_DAYS(curdate())-TO_DAYS(reserves.waitingdate)) > '7' AND reserves.branchcode=<<branch|branches>> ORDER BY reserves.waitingdate ASC",,,,,,,,
R.001608,"/*
R.001608

----------

Name: For duplicate record analysis
Created by: Heather Braum

----------

Group: Administrative Reports
     Duplicate Records-admin

Created on: 2012-10-28 18:21:08
Modified on: 2017-12-18 14:56:33
Date last run: 2019-10-17 13:51:03

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT ExtractValue(metadata, '//datafield[@tag=""020""]/subfield[@code=""a""]') as isbna, ExtractValue(metadata, '//datafield[@tag=""024""]/subfield[@code=""a""]') as upc FROM biblio_metadata WHERE (itemtype NOT IN ('MAGAZINE','DIGITAL','KITS','EQUIPMENT','ILL') OR itemtype IS NULL)",,,,,,,,
R.001617,"/*
R.001617

----------

Name: ILL Patrons LIst
Created by: Heather Braum

----------

Group: Interlibrary Loan
     -

Created on: 2012-10-31 11:14:59
Modified on: 2018-04-06 20:45:17
Date last run: 2021-01-11 13:00:42

----------

Public: 0
Expiry: 0

----------

<p><span style=""background-color: darkred; color: white"">Report upgrade needed.</p>

----------
*/

","SELECT  dateexpiry,dateenrolled,surname,firstname,branchcode,cardnumber,address,city,phone,email FROM borrowers  WHERE categorycode= 'ILL' ORDER BY surname asc",,,,,,,,
R.001626,"/*
R.001626

----------

Name: List that totals the circulation of each Dewey section, F, and periodicals, by year
Created by: Heather Braum

----------

Group: Circulation
     Circ Stats

Created on: 2012-11-09 12:18:19
Modified on: 2013-09-25 17:14:56
Date last run: 2022-04-12 14:06:19

----------

Public: 0
Expiry: 0

----------

A revised version of 1128 #circ

----------
*/

","SELECT items.ccode, items.location, substring(items.itemcallnumber,1,1) AS 'Call Number range', count(*) AS count FROM statistics LEFT JOIN items USING (itemnumber) WHERE statistics.type IN ('issue', 'renew') AND YEAR(datetime) = <<Enter Year>> AND statistics.branch = <<branch|branches>> GROUP BY items.ccode, items.location, substring(items.itemcallnumber,1,1)",,,,,,,,
R.001647,"/*
R.001647

----------

Name: Patrons with messages
Created by: ROSSVILLE TECH

----------

Group: Borrowers
     -

Created on: 2012-11-20 12:42:12
Modified on: 2013-09-25 17:23:48
Date last run: 2022-06-22 12:42:58

----------

Public: 0
Expiry: 0

----------

#patrons

----------
*/

","SELECT b.cardnumber, b.surname, b.firstname,
b.opacnote, b.borrowernotes, group_concat(DISTINCT m.message separator ', ') AS circmesages
FROM borrowers b
LEFT JOIN messages m USING (borrowernumber)
WHERE b.branchcode=<<Branch|branches>> AND ((b.opacnote IS NOT
NULL AND b.opacnote != '') OR (b.borrowernotes IS NOT NULL AND
b.borrowernotes != '') OR (m.message IS NOT NULL AND
m.message != '')) GROUP BY b.borrowernumber ORDER BY b.surname ASC,
b.firstname ASC",,,,,,,,
R.001653,"/*
R.001653

----------

Name: Monthly New Materials by Ccode (branch-specific)
Created by: Heather Braum

----------

Group: Daily, Monthly, Yearly Stats
     Monthly

Created on: 2012-11-29 01:46:31
Modified on: 2014-01-08 16:46:15
Date last run: 2022-08-05 16:31:49

----------

Public: 0
Expiry: 0

----------

Shows count of new items added to a collection in last month by ccode and shelving location. Choose Branch.

----------
*/

","SELECT count(itemnumber) as added, ccode, location from items WHERE homebranch=<<branch|branches>> AND month(dateaccessioned) =<<enter two digit month, ex. 02>> AND year (dateaccessioned) = <<enter four digit year>> GROUP BY ccode,location ORDER BY ccode,location asc",,,,,,,,
R.001654,"/*
R.001654

----------

Name: Monthly New Materials by Itype (branch-specific)
Created by: Heather Braum

----------

Group: Daily, Monthly, Yearly Stats
     Monthly

Created on: 2012-11-29 01:48:34
Modified on: 2014-01-08 16:45:58
Date last run: 2022-05-06 11:35:04

----------

Public: 0
Expiry: 0

----------

Shows count of new items added to a collection in last month by item type and shelving location. Choose Branch

----------
*/

","SELECT count(itemnumber) as added, itype, location FROM items WHERE homebranch=<<branch|branches>> AND month(dateaccessioned) = <<enter two-digit month, ex. 02>> AND year(dateaccessioned) = <<enter four-digit year>> GROUP BY itype,location ORDER BY itype,location ASC",,,,,,,,
R.001664,"/*
R.001664

----------

Name: Date last borrowed, Call number and Title limited by Ccode
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Weeding Criteria

Created on: 2012-12-03 19:36:57
Modified on: 2014-10-08 14:30:43
Date last run: 2022-08-17 16:15:51

----------

Public: 0
Expiry: 0

----------

Enhanced - Pick your branch and CCode to get a list of items with 

----------
*/

","SELECT  items.holdingbranch, items.datelastborrowed,items.datelastseen, items.itemcallnumber,biblio.title, biblio.author FROM items JOIN biblio USING (biblionumber) WHERE items.homebranch = <<Pick your branch|branches>> AND items.ccode=<<Pick your Ccode|CCODE>> ORDER BY biblio.title asc",,,,,,,,
R.001671,"/*
R.001671

----------

Name: Fines Over $10 by Patron Category
Created by: -

----------

Group: Circulation
     Charges

Created on: 2012-12-06 13:24:49
Modified on: 2013-06-23 12:35:53
Date last run: 2021-11-07 12:12:02

----------

Public: 0
Expiry: 0

----------

MC 12/6/12 #fines #patrons

----------
*/

","SELECT borrowers.cardnumber, borrowers.surname,borrowers.firstname, borrowers.address, borrowers.city, borrowers.zipcode, borrowers.email, borrowers.phone, borrowers.dateofbirth, borrowers.debarred, FORMAT(SUM(accountlines.amountoutstanding),2) AS Due FROM borrowers LEFT JOIN accountlines USING(borrowernumber) WHERE borrowers.categorycode = <<borrowers.categorycode|categorycode>> GROUP BY borrowers.borrowernumber HAVING SUM(accountlines.amountoutstanding) >= 10.00 ORDER BY borrowers.surname ASC",,,,,,,,
R.001681,"/*
R.001681

----------

Name: Count of Holds Filled each month
Created by: Heather Braum

----------

Group: Holds-Reserves
     Holds Statistics

Created on: 2012-12-18 21:23:39
Modified on: 2013-06-23 12:32:43
Date last run: 2020-08-13 20:40:38

----------

Public: 0
Expiry: 0

----------

#holds Choose branch. 

----------
*/

","SELECT MONTH(timestamp), YEAR(timestamp), count(*) FROM old_reserves WHERE old_reserves.branchcode = <<Pick your Branch|branches>> GROUP BY MONTH(timestamp), YEAR(timestamp) ORDER BY YEAR(timestamp) DESC, MONTH(timestamp) DESC",,,,,,,,
R.001692,"/*
R.001692

----------

Name: Count of Items Added to Collection in a Year
Created by: Heather Braum

----------

Group: Administrative Reports
     Daily, Monthly, Yearly Stats-admin

Created on: 2013-01-03 23:10:15
Modified on: 2013-06-16 14:46:14
Date last run: 2022-08-17 17:28:44

----------

Public: 0
Expiry: 0

----------

Enter a Year to determine the number of new items added in that year.  Year End Report.

----------
*/

","SELECT i.homebranch, count(i.itemnumber) from items i WHERE YEAR(i.dateaccessioned) = <<Year>> GROUP BY i.homebranch ORDER BY i.homebranch LIMIT 50",,,,,,,,
R.001716,"/*
R.001716

----------

Name: Check on status of a deleted bib record
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Weeded Already

Created on: 2013-01-13 21:35:41
Modified on: 2015-05-19 11:42:41
Date last run: 2022-05-19 14:33:14

----------

Public: 0
Expiry: 0

----------



----------
*/

",SELECT * FROM deletedbiblio WHERE biblionumber=<<bibnumber>>,,,,,,,,
R.001737,"/*
R.001737

----------

Name: Doniphan Restricted Item Types
Created by: DONITROY TECH

----------

Group:  Doniphan County
     -

Created on: 2013-02-01 11:16:07
Modified on: 2021-08-16 20:40:25
Date last run: 2022-09-23 15:09:10

----------

Public: 0
Expiry: 0

----------

Special report for Doniphan County that includes all their branches and items with Local Hold or Walkin Item Types. 

----------
*/

","SELECT i.homebranch, b.biblionumber, b.title, i.itype, i.ccode, i.dateaccessioned, i.itemcallnumber, i.barcode, t.publicationyear, CONCAT('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=',b.biblionumber,'&itemnumber=',i.itemnumber,'#edititem\"" target=""_blank"">'""edit item""'</a>') as ""edit item"" FROM items i LEFT JOIN biblio b USING (biblionumber)  LEFT JOIN biblioitems t USING(biblionumber) WHERE i.homebranch IN ('DONIELWD','DONIHIGH','DONITROY','DONIWATH') AND i.itype IN ('LOCALHOLD','LOCALHOLD1','LOCALHOLD2','WALKIN','WALKIN1','WALKIN2') ORDER by i.ccode ASC, i.dateaccessioned ASC limit 2000",,,,,,,,
R.001755,"/*
R.001755

----------

Name: Searching for a deleted barcode
Created by: BONNERSPGS TECH

----------

Group: Catalog Records and Items
     Weeding Criteria

Created on: 2013-02-12 15:49:46
Modified on: 2013-09-25 17:19:40
Date last run: 2022-07-06 11:03:57

----------

Public: 0
Expiry: 0

----------

#special

----------
*/

","SELECT d.biblionumber,b.biblionumber, d.title, b.title, d.author, b.author, e.homebranch,e.barcode FROM deletedbiblio d LEFT JOIN deleteditems e USING(biblionumber) LEFT JOIN biblio b USING(biblionumber) WHERE e.barcode=<<enter/scan in barcode>>",,,,,,,,
R.001762,"/*
R.001762

----------

Name: Top 100 Titles with Holds Report for non-Media (NOT DVDs, Blu-Ray, TV Series, Videogames)
Created by: Heather Braum

----------

Group: Popular Reports
     -

Created on: 2013-02-25 11:42:02
Modified on: 2017-12-18 15:37:46
Date last run: 2020-10-14 11:24:15

----------

Public: 0
Expiry: 0

----------



----------
*/

","select count(DISTINCT reserves.borrowernumber) as reservecount, count(DISTINCT items.itemnumber) as itemcount, ROUND(count(DISTINCT reserves.borrowernumber)/count(DISTINCT items.itemnumber)) AS holdsratio, biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code>=""b""]') as 'Remainder of Title', items.ccode, items.itype, biblio.biblionumber f from borrowers LEFT JOIN reserves USING(borrowernumber) join biblio USING(biblionumber) join biblio_metadata USING(biblionumber) JOIN items USING(biblionumber) WHERE items.ccode NOT IN ('DVD','TVSERIES','BLU-RAY','VIDEOGAME','DISPLAY') AND items.itype NOT IN ('NEWMEDIA','MEDIA','GAME') AND biblio.biblionumber NOT IN ('538887','546605','538630','547805','549282','547390','539751','548383','545000','547992','548987','550575','550477','549927','549613','551569','550183','550186') group by biblionumber order by holdsratio desc, reservecount desc limit 100",,,,,,,,
R.001763,"/*
R.001763

----------

Name: Top 100 Titles with Holds Report for Media (DVDs, Blu-Ray, TV Series, Videogames)
Created by: Heather Braum

----------

Group: Popular Reports
     -

Created on: 2013-02-25 12:18:01
Modified on: 2020-01-28 15:07:07
Date last run: 2022-08-23 14:13:59

----------

Public: 0
Expiry: 0

----------



----------
*/

","Select
  Count(Distinct reserves.borrowernumber) As reservecount,
  Count(Distinct items.itemnumber) As itemcount,
  ROUND(Count(Distinct reserves.borrowernumber) / Count(Distinct items.itemnumber)) As holdsratio,
  biblio.title,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code>=""b""]') As 'Remainder of Title',
  items.ccode,
  items.itype,
  biblio.biblionumber
From
  borrowers Left Join
  reserves On reserves.borrowernumber = borrowers.borrowernumber Join
  biblio On biblio.biblionumber = reserves.biblionumber Join
  biblio_metadata On biblio_metadata.biblionumber = biblio.biblionumber Join
  items On items.biblionumber = biblio_metadata.biblionumber
Where
  items.ccode In ('DVD', 'TVSERIES', 'BLURAY', 'VIDEOGAME')
Group By
  items.biblionumber
Order By
  holdsratio Desc,
  reservecount Desc
Limit 100",,,,,,,,
R.001780,"/*
R.001780

----------

Name: GHW - 300 sub Fields
Created by: Heather Braum

----------

Group: Administrative Reports
     Fix Bib Records-admin

Created on: 2013-03-30 13:12:17
Modified on: 2019-05-06 11:35:46
Date last run: 2019-05-06 11:35:51

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">Link</a>') AS LINK_TO_TITLE,
  biblio.title,
  biblio.author,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""300""]/subfield[@code=""a""]') AS EXTENT,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""300""]/subfield[@code=""b""]') AS OTHER_DETAILS,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""300""]/subfield[@code=""c""]') AS DIMENSIONS,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""300""]/subfield[@code=""e""]') AS ACCOMPANYING,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""300""]/subfield[@code=""f""]') AS TYPE,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""300""]/subfield[@code=""g""]') AS SIZE,
  Concat('<a href=\""/cgi-bin/koha/catalogue/search.pl?idx=ti&q=', Replace(Replace(Replace(Replace(biblio.title, "" "", ""+""), "":"", """"), "";"", """"), ""/"", """"), '&sort_by=title_az\"" target=""_blank"">', biblio.title, '</a>') AS SEARCH_THIS_TITLE,
  biblio.datecreated
FROM
  biblio
  JOIN biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber
WHERE
  biblio.datecreated BETWEEN <<Created between start date|date>> AND <<end date|date>>
GROUP BY
  biblio.biblionumber,
  biblio.datecreated
ORDER BY
  biblio.biblionumber DESC",,,,,,,,
R.001783,"/*
R.001783

----------

Name: Count of authors in a series
Created by: Heather Braum

----------

Group: Administrative Reports
     Fix Bib Records-admin

Created on: 2013-04-02 17:35:07
Modified on: 2014-01-15 14:31:14
Date last run: 2019-05-29 23:03:58

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT CONCAT('<a href=\""/cgi-bin/koha/catalogue/search.pl?idx=au&q=',author,'&sort_by=title_az\"" target=""_blank"">',author,'</a>') AS ""Author Search"" , count(biblionumber) FROM biblio WHERE seriestitle LIKE <<enter series title>> GROUP BY author",,,,,,,,
R.001798,"/*
R.001798

----------

Name: Patron Report for Schools
Created by: Heather Braum

----------

Group: School Libraries
     Students

Created on: 2013-04-19 13:58:48
Modified on: 2014-08-19 22:28:47
Date last run: 2019-05-02 11:56:58

----------

Public: 0
Expiry: 0

----------

Lists name, cardnumber, and grade. Limits on branch and grade. 

----------
*/

","SELECT CONCAT (borrowers.firstname,' ',borrowers.surname) AS name, borrowers.cardnumber, borrower_attributes.attribute as 'grade' FROM borrowers LEFT JOIN borrower_attributes USING (borrowernumber) WHERE borrowers.branchcode=<<branch|branches>> AND borrower_attributes.attribute=<<grade|GRADE>> ORDER BY borrowers.surname LIMIT 300",,,,,,,,
R.001804,"/*
R.001804

----------

Name: SES Borrowers list limited by classroom teacher
Created by: Heather Braum

----------

Group: School Libraries
     Students

Created on: 2013-04-21 17:34:35
Modified on: 2014-08-19 22:35:14
Date last run: 2020-01-28 14:32:18

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT borrowers.cardnumber, borrower_attributes.attribute as 'grade', borrowers.categorycode, CONCAT (borrowers.surname,' ',borrowers.firstname) AS name, borrowers.sort1, CONCAT('<a href=\""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=',borrowers.borrowernumber,'\"" target=""_blank"">'""edit patron""'</a>') as ""edit patron"" FROM borrowers LEFT JOIN borrower_attributes USING (borrowernumber) WHERE borrowers.branchcode = 'PHSES' GROUP BY borrowers.cardnumber order by grade, borrowers.sort1 LIMIT 500",,,,,,,,
R.001805,"/*
R.001805

----------

Name: Current Checked out List, Limited by School & Grade
Created by: Heather Braum

----------

Group: School Libraries
     -

Created on: 2013-04-22 09:29:08
Modified on: 2015-03-12 14:01:28
Date last run: 2021-08-15 21:08:35

----------

Public: 0
Expiry: 0

----------

(for school libraries)

----------
*/

","select borrower_attributes.attribute as 'grade', borrowers.cardnumber, borrowers.firstname as ""first name"", borrowers.surname as ""last name"", borrowers.categorycode AS ""patron type"", borrowers.sort1 as ""teacher"", biblio.title as ""book title"", biblio.author as ""author"", items.ccode as ""collection code"", items.itype, items.replacementprice as ""replacement price"", items.itemcallnumber as ""call number"", items.barcode as ""barcode"", issues.issuedate as ""date checked out"", issues.date_due as ""date due"", CONCAT('<a href=\""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',borrowers.borrowernumber,'\"" target=""_blank"">'""patron check out""'</a>') as ""patron checkout screen"" from borrowers LEFT JOIN borrower_attributes USING (borrowernumber) left join issues USING (borrowernumber) left join items USING (itemnumber) left JOIN biblio USING (biblionumber) where borrowers.branchcode =<<Select your Library|branches>>  AND borrower_attributes.attribute=<<grade|GRADE>> GROUP BY items.barcode ORDER BY grade, teacher, ""last name"", ""first name"", ""book title"" LIMIT 1000",,,,,,,,
R.001825,"/*
R.001825

----------

Name: When was an item deleted, based on barcode?
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Weeding Criteria

Created on: 2013-05-03 13:05:44
Modified on: 2013-06-19 12:54:14
Date last run: 2022-07-06 11:04:22

----------

Public: 0
Expiry: 0

----------

Gives a timestamp and itemnumber and biblionumber from the deleteditems table for a barcode that was suspected to have been deleted. 

----------
*/

","SELECT timestamp, itemnumber, bibilonumber FROM deleteditems WHERE barcode=<<enter barcode>>",,,,,,,,
R.001830,"/*
R.001830

----------

Name: HB - Circulation by Month, for All Time 
Created by: Heather Braum

----------

Group: Daily, Monthly, Yearly Stats
     All Time

Created on: 2013-05-07 13:22:24
Modified on: 2018-04-16 10:48:15
Date last run: 2022-09-28 16:23:44

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Counts all circulation data in a month at a specified library</p>
<ul><li>Counts checkouts by month and year</li>
<li>at the library you specify</li>
<li>grouped and sorted by year and month</li>
</ul><br />
<p></p>
<p>Statistical data is only saved for the last 25 months, so this report cannot count checkouts that happened more than 25 months ago.</p>
<p>Report created by Heather Braum.  Explanatory notes added and query updated by on 2018.01.08.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1830&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  branches.branchcode,
  stats.YEAR,
  stats.MONTH,
  stats.count
FROM
  branches
  LEFT JOIN (SELECT
        Year(statistics.datetime) AS YEAR,
        Date_Format(statistics.datetime, ""%m"") AS MONTH,
        count(*) AS count,
        statistics.branch
      FROM
        statistics
      WHERE
        (statistics.type = 'issue' OR
          statistics.type = 'renew')
      GROUP BY
        Year(statistics.datetime),
        Date_Format(statistics.datetime, ""%m""),
        statistics.branch) stats ON branches.branchcode = stats.branch
WHERE
  branches.branchcode LIKE <<Choose your library|ZBRAN>>
GROUP BY
  branches.branchcode,
  stats.YEAR,
  stats.MONTH,
  stats.count
ORDER BY
  stats.YEAR DESC,
  stats.MONTH DESC",,,,,,,,
R.001835,"/*
R.001835

----------

Name: Local Holds at libraries
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Local Hold - Walkins

Created on: 2013-05-13 20:37:56
Modified on: 2014-04-25 15:47:56
Date last run: 2022-03-29 12:01:56

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT homebranch, count(itemnumber) FROM items WHERE itype IN ('LOCALHOLD','LOCALHOLD1','LOCALHOLD2') GROUP BY homebranch ORDER BY homebranch LIMIT 10000",,,,,,,,
R.001868,"/*
R.001868

----------

Name: Checking on holds Older than July 1, 2013
Created by: Heather Braum

----------

Group: Administrative Reports
     Holds-admin

Created on: 2013-05-23 14:21:34
Modified on: 2019-05-03 19:30:47
Date last run: 2019-05-03 19:31:00

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT CONCAT ('<a href=\""/cgi-bin/koha/reserve/request.pl?biblionumber=',reserves.biblionumber,'\"" target=""_blank"">',reserves.reserve_id,'</a>') AS ""Link to Reserve"", CONCAT ('<a href=\""/cgi-bin/koha/members/moremember.pl?borrowernumber=',reserves.borrowernumber,'\"" target=""_blank"">',reserves.borrowernumber,'</a>') AS ""Link to Borrower"", reserves.reservedate, CONCAT ('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',reserves.biblionumber,'\"" target=""_blank"">',reserves.biblionumber,'</a>') AS ""Link to Bib Record"", borrowers.branchcode as ""Patron Home"", reserves.branchcode as ""PICKUP location"", reserves.priority, reserves.found AS ""holds status"", reserves.timestamp AS ""hold last updated"", CONCAT ('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',reserves.biblionumber,'\"" target=""_blank"">',reserves.biblionumber,'</a>') AS ""Link to Bib Record to look at item status"", reserves.waitingdate AS ""hold waiting at library since"", count(items.itemnumber) AS ""total number of items on bib"" 
FROM borrowers JOIN reserves USING(borrowernumber) LEFT JOIN biblio USING(biblionumber) LEFT JOIN items USING(biblionumber) 
WHERE reserves.reservedate < '2015-01-01' AND reserves.timestamp < '2015-01-01'
GROUP BY reserves.reserve_id ORDER by reservedate ASC LIMIT 9000",,,,,,,,
R.001897,"/*
R.001897

----------

Name: List of Patron Category Names
Created by: Heather Braum

----------

Group: Administrative Reports
     System-admin

Created on: 2013-06-07 11:43:46
Modified on: 2019-07-20 19:38:45
Date last run: 2021-08-23 12:41:18

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  categorycode,
  description
FROM categories
GROUP BY
  categorycode
LIMIT 300",,,,,,,,
R.001900,"/*
R.001900

----------

Name: Missing Items, Limited by CCode
Created by: Heather Braum

----------

Group: Catalog Records and Items
     -

Created on: 2013-06-10 15:21:25
Modified on: 2015-08-16 20:35:49
Date last run: 2022-05-10 08:10:42

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT i.datelastseen, b.title, b.author,t.publicationyear, i.location, i.ccode,i.itype,i.itemcallnumber, i.barcode, i.holdingbranch, CONCAT('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=',b.biblionumber,'&itemnumber=',i.itemnumber,'#edititem\"" target=""_blank"">'""edit item""'</a>') as ""edit item"" FROM items i LEFT JOIN biblio b USING (biblionumber) LEFT JOIN biblioitems t USING(biblionumber)  
WHERE i.homebranch=<<Pick your branch|branches>> AND i.ccode=<<Pick your collection code|CCODE>> AND i.itemlost = '3'
ORDER BY  i.itemcallnumber LIMIT 10000",,,,,,,,
R.001907,"/*
R.001907

----------

Name: Notices Sent to a Specific Patron
Created by: Heather Braum

----------

Group: Notices
     -

Created on: 2013-06-11 15:32:54
Modified on: 2013-06-17 00:55:59
Date last run: 2020-11-02 10:27:53

----------

Public: 0
Expiry: 0

----------

Enter patron's borrowernumber (database number) to see all the messages sent to them by email or holds slips printed at the library.

----------
*/

","SELECT borrowernumber, message_id, content FROM message_queue WHERE borrowernumber=<<patron borrowernumber>> GROUP BY message_id, borrowernumber",,,,,,,,
R.001909,"/*
R.001909

----------

Name: Message Queue table (all notices)
Created by: Heather Braum

----------

Group: Borrowers
     -

Created on: 2013-06-11 16:20:56
Modified on: 2022-07-27 09:42:48
Date last run: 2022-08-18 11:38:39

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Generates a list of notices sent to borrowers with a particular home library.</p>
<ul><li>Shows messages sent in the last 180 days</li>
<li>To borrowers with the home library you specify</li>
<li>grouped and sorted by message ID</li>
<li>links to the borrower's account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Older report updated by GHW on 2022-07-26.</p>
<p></p>
<!-- html notes rendered on guided_reports.pl by jquery at https://wiki.koha-community.org/wiki/JQuery_Library#Render_patron_messages_as_HTML_and_in_Report_notes -->
</div> 

----------
*/

","SELECT
  message_queue.message_id,
  Concat(
    '<a href=\""/cgi-bin/koha/members/notices.pl?borrowernumber=',
    borrowers.borrowernumber, 
    '\"" target=""_blank"">', 
    borrowers.borrowernumber,
    '</a>'
  ) AS LINK_TO_BORROWER,
  borrowers.borrowernumber,
  borrowers.branchcode,
  message_queue.subject,
  Replace(message_queue.content, '<', '&lt;')  AS CONTENT, 
  message_queue.metadata,
  message_queue.letter_code,
  message_queue.message_transport_type,
  message_queue.status,
  message_queue.time_queued,
  message_queue.to_address,
  message_queue.from_address,
  message_queue.content_type
FROM
  message_queue LEFT JOIN
  borrowers ON borrowers.borrowernumber = message_queue.borrowernumber
WHERE
  borrowers.branchcode LIKE <<choose branch|ZBRAN>>
GROUP BY
  message_queue.message_id
ORDER BY
  message_queue.time_queued DESC",,,,,,,,
R.001911,"/*
R.001911

----------

Name: List of Child and Adult Patron Categories
Created by: Heather Braum

----------

Group: Administrative Reports
     System-admin

Created on: 2013-06-12 10:08:58
Modified on: 2013-06-17 00:54:59
Date last run: 2021-09-16 16:14:10

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT categorycode from categories where category_type IN ('c','a') order by categorycode desc, category_type desc limit 300",,,,,,,,
R.001915,"/*
R.001915

----------

Name: Invalid EMAIL format
Created by: Heather Braum

----------

Group: Borrowers
     Fix Patrons

Created on: 2013-06-24 09:51:23
Modified on: 2013-06-24 14:48:08
Date last run: 2020-08-05 14:52:45

----------

Public: 0
Expiry: 0

----------

From Koha listserv/wiki

----------
*/

","SELECT surname AS Surname, firstname AS ""First Name"", cardnumber AS
""Card Number"", email AS Email
FROM borrowers
WHERE branchcode=<<choose branch|branches>> AND borrowernumber NOT IN (SELECT borrowernumber FROM borrowers WHERE ' ' IN (email)) AND email NOT LIKE '%_@__%.__%' 
ORDER BY email DESC LIMIT 10000",,,,,,,,
R.001918,"/*
R.001918

----------

Name: Circ History for a Patron (Complete)
Created by: Heather Braum

----------

Group: Borrowers
     -

Created on: 2013-06-24 16:03:51
Modified on: 2022-02-07 23:40:17
Date last run: 2022-02-07 23:42:00

----------

Public: 0
Expiry: 0

----------

Full Report

----------
*/

","SELECT
  borrowers.cardnumber,
  Concat(
    '<a class=""btn btn-default"" href=""/cgi-bin/koha/members/readingrec.pl?borrowernumber=', 
    borrowers.borrowernumber, 
    '"" target=""_blank"">Go to borrower\'s history</a>'
  ) AS GO_TO_HISTORY
FROM
  borrowers
WHERE
  borrowers.cardnumber = <<Enter library card number>>",,,,,,,,
R.001929,"/*
R.001929

----------

Name: Monthly Circ by Ccode, Location, Limited by Library
Created by: Heather Braum

----------

Group: -
     -

Created on: 2013-07-07 19:50:37
Modified on: 2017-09-22 09:05:55
Date last run: 2022-04-01 12:18:20

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT IF(items.ccode IS NULL AND deleteditems.ccode IS NULL, NULL, CONCAT(COALESCE(items.ccode,''), COALESCE(deleteditems.ccode,''))) AS ccode, IF(items.location IS NULL AND deleteditems.location IS NULL, NULL, CONCAT(COALESCE(items.location,''), COALESCE(deleteditems.location,''))) AS location, Count(*) AS count  FROM statistics LEFT JOIN items USING(itemnumber) LEFT JOIN deleteditems USING(itemnumber) WHERE statistics.branch=<<branch|branches>> AND statistics.type IN ('issue','renew','localuse') AND month(statistics.datetime) = <<Choose month|Month>> AND year(statistics.datetime) = <<Choose year|Year>> GROUP BY ccode, location",,,,,,,,
R.001930,"/*
R.001930

----------

Name: Monthly Circ by Itype, Location, Limited by Library
Created by: Heather Braum

----------

Group: Daily, Monthly, Yearly Stats
     Monthly

Created on: 2013-07-07 19:52:11
Modified on: 2022-03-09 15:27:10
Date last run: 2022-07-29 16:39:23

----------

Public: 0
Expiry: 0

----------

No longer works - run report 3646 instead

----------
*/

","SELECT
  ""No longer works - see report notes"" AS description",,,,,,,,
R.001933,"/*
R.001933

----------

Name: Edit Item Records from a Collection Code Shelf List
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Fix Items

Created on: 2013-07-11 13:39:56
Modified on: 2013-11-17 15:06:41
Date last run: 2022-04-28 15:31:15

----------

Public: 0
Expiry: 0

----------

Choose your branch and a collection code. Displays item title, callnumber, location, barcode, and an edit link that takes you to the edit item screen in a new window/tab.

----------
*/

","SELECT biblio.title, items.itemcallnumber, items.location, items.barcode, CONCAT('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=',biblio.biblionumber,'&itemnumber=',items.itemnumber,'#edititem\"" target=""_blank"">'""edit item""'</a>') as ""edit barcode""  FROM biblio JOIN items USING(biblionumber) WHERE items.homebranch=<<branch|branches>> AND items.ccode=<<ccode|CCODE>> ORDER BY biblio.title",,,,,,,,
R.001953,"/*
R.001953

----------

Name: Patrons by Category, Date of Birth, Branch
Created by: -

----------

Group: Borrowers
     -

Created on: 2013-07-21 22:08:53
Modified on: 2013-11-17 12:09:42
Date last run: 2022-09-28 16:10:13

----------

Public: 0
Expiry: 0

----------

mc

----------
*/

","SELECT surname,firstname,categorycode,dateofbirth,cardnumber,address,city,phone,email FROM borrowers WHERE dateofbirth LIKE '1996%' AND categorycode NOT LIKE '%J' ORDER BY surname",,,,,,,,
R.001966,"/*
R.001966

----------

Name: Never Checked Out Or Hasn't Checked Out Since a specific date
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Weeding Criteria

Created on: 2013-07-31 13:02:01
Modified on: 2022-08-09 10:43:46
Date last run: 2022-09-30 14:29:07

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo class=noprint>
<p>Lists items that (A) have never checked out or that (B) have not been borrowed since before the date you specify</p>
<ul><li>Shows items currently in the collection</li>
<li>owned by the library you specify</li>
<li>grouped by item number</li>
<li>sorted by the standard Next Search Catalog classification scheme</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#weeding #datelastborrowed #dateaccessioned</p>
<!-- html notes rendered on guided_reports.pl by jquery at https://wiki.koha-community.org/wiki/JQuery_Library#Render_patron_messages_as_HTML_and_in_Report_notes -->
</div> 

----------
*/

","SELECT
  items.itemnumber,
  items.barcode AS ITEM_BARCODE,
  home_branches.branchname AS HOME_BRANCH,
  holding_branches.branchname AS HOLDING_BRANCH,
  If(
    perm_loc.lib = loc.lib, 
    perm_loc.lib, 
    Concat(perm_loc.lib, ' (', loc.lib, ')')
  ) AS LOCATION,
  itypes.description AS ITEM_TYPE,
  ccode.lib AS CCODE,
  If(
    items.copynumber IS NULL, 
    items.itemcallnumber, 
    Concat(items.itemcallnumber, ' // Copy number: ', items.copynumber)
  ) AS CALL_NUMBER,
  biblio.author,
  biblio.title,
  biblioitems.publicationyear AS COPYRIGHT_DATE,
  items.dateaccessioned AS DATE_ADDED,
  items.datelastborrowed AS DATE_LAST_BORROWED,
  items.datelastseen AS DATE_LAST_SEEN,
  (Coalesce(items.issues, 0) + Coalesce(items.renewals, 0)) AS TOTAL_CKO_RENEW
FROM
  items LEFT JOIN
  biblio ON biblio.biblionumber = items.biblionumber LEFT JOIN
  biblioitems ON biblioitems.biblioitemnumber = items.biblionumber LEFT JOIN
  (
    SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches
    ) home_branches 
  ON home_branches.branchcode = items.homebranch
  LEFT JOIN
  (
    SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches
    ) holding_branches 
  ON holding_branches.branchcode = items.holdingbranch 
  LEFT JOIN
  (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC'
    ) perm_loc 
    ON perm_loc.authorised_value = items.permanent_location 
    LEFT JOIN
  (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC'
    ) loc 
    ON loc.authorised_value = items.location 
    LEFT JOIN
  (
    SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes
    ) itypes 
    ON itypes.itemtype = items.itype 
    LEFT JOIN
  (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
    ) ccode 
    ON ccode.authorised_value = items.ccode
WHERE
  items.homebranch LIKE <<Choose your library|ZBRAN>> AND
  (
    (
      items.dateaccessioned < <<List items with 0 check-outs and renewals added before|date>> AND
      (Coalesce(items.issues, 0) + Coalesce(items.renewals, 0) = 0)
    ) OR
    (items.datelastborrowed < <<Or items last borrowed before|date>>)
  )
GROUP BY
  items.itemnumber
ORDER BY
  HOME_BRANCH,
  LOCATION,
  ITEM_TYPE,
  CCODE,
  CALL_NUMBER,
  biblio.author,
  biblio.title,
  items.itemnumber",,,,,,,,
R.002026,"/*
R.002026

----------

Name: Items Marked Lost
Created by: Heather Braum

----------

Group: Monthly cleanup
     -

Created on: 2013-09-03 10:38:20
Modified on: 2018-06-01 14:26:28
Date last run: 2022-10-03 10:12:23

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo style=""font-size:14px; font-weight:normal; background-color:#FFFF66"">
<p>Items marked lost. Enhanced -- choose branch, run.</p>
<ul><li>Shows items that are currently marked as ""(Lost)""</li>
<li>at the library you select</li>
<li>sorted by item call number</li>
<li>contains links to the edit item page of each item</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Monthly cleanup</p>
<p></p>
<p>There are 6 ""Lost"" statuses in NExpress - (Lost) [status = 1]; Lost (more than 45 days overdue) [status = 2]; Missing (unable to location on shelf) [status = 3]; Lost (Damaged/Replace) [status = 4]; Lost (Patron Claims Returned) [status = 5]; Lost (more than 45 days overdue) [status = 7].  This report only shows items that have a status of ""(Lost)"" so nothing that was automatically marked as ""Lost (more than 45 days overdue)"" appears on this report.<br /></p>
<p>The only items that will appear are items that have manually been marked with the ""(Lost)"" status [status = 1].</p>
<p></p>
<p>Report created by HB.  Explanatory notes added by GHW on 2018.06.01.</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2026&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  items.datelastseen,
  biblio.title,
  biblio.author,
  biblioitems.publicationyear,
  items.location,
  items.ccode,
  items.itype,
  items.itemcallnumber,
  items.barcode,
  items.holdingbranch,
  Concat('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=', biblio.biblionumber, '&itemnumber=', items.itemnumber, '#edititem\"" target=""_blank"">edit item</a>') AS ""edit item""
FROM
  items
  LEFT JOIN biblio ON items.biblionumber = biblio.biblionumber
  LEFT JOIN biblioitems ON biblio.biblionumber = biblioitems.biblionumber
WHERE
  items.homebranch = <<Pick your branch|branches>> AND
  items.itemlost = '1'
ORDER BY
  items.itemcallnumber",,,,,,,,
R.002027,"/*
R.002027

----------

Name: Long Overdue/Assumed Lost Items
Created by: Heather Braum

----------

Group: Catalog Records and Items
     -

Created on: 2013-09-03 10:39:16
Modified on: 2015-08-16 20:24:53
Date last run: 2022-10-01 09:42:19

----------

Public: 0
Expiry: 0

----------

Items marked long overdue/assumed lost. Enhanced. Choose branch, run. 

----------
*/

","SELECT i.datelastseen, b.title, b.author,t.publicationyear, i.location, i.ccode,i.itype,i.itemcallnumber, i.barcode, i.holdingbranch, CONCAT('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=',b.biblionumber,'&itemnumber=',i.itemnumber,'#edititem\"" target=""_blank"">'""edit item""'</a>') as ""edit item"" FROM items i LEFT JOIN biblio b USING (biblionumber)  LEFT JOIN biblioitems t USING(biblionumber) 
WHERE i.homebranch=<<Pick your branch|branches>> AND i.itemlost = '2'
ORDER BY  i.itemcallnumber",,,,,,,,
R.002031,"/*
R.002031

----------

Name: List of short (under 13 characters) patron cardnumbers
Created by: Heather Braum

----------

Group: Borrowers
     Fix Patrons

Created on: 2013-09-06 10:25:45
Modified on: 2013-11-17 12:00:01
Date last run: 2021-12-07 10:18:44

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT firstname, surname, cardnumber, length(cardnumber), branchcode, categorycode, dateenrolled, dateexpiry FROM borrowers WHERE length(cardnumber) < '13' AND branchcode NOT LIKE 'PH%' ORDER BY length(cardnumber) ASC LIMIT 5000",,,,,,,,
R.002048,"/*
R.002048

----------

Name: Overdues for School Patrons
Created by: Heather Braum

----------

Group: School Libraries
     Overdues (schools)

Created on: 2013-10-08 17:52:04
Modified on: 2014-08-19 22:32:52
Date last run: 2022-05-12 14:42:56

----------

Public: 0
Expiry: 0

----------

Put in the minimum number of days overdue, choose your branch and Run the report. 

----------
*/

","SELECT p.categorycode, ba_GRADE.attribute AS grade, p.sort1, CONCAT(p.firstname, ' ', p.surname) AS name, b.title, b.author, i.homebranch as ""owning library"", i.ccode, i.itemcallnumber, i.barcode, s.date_due, (TO_DAYS(curdate())-TO_DAYS( date_due)) as 'days overdue', CONCAT('$', i.replacementprice, ' replacement fee if lost') FROM borrowers p left join issues s USING (borrowernumber) left join items i USING (itemnumber) left JOIN biblio b USING (biblionumber) LEFT JOIN borrower_attributes ba_GRADE ON (p.borrowernumber = ba_GRADE.borrowernumber AND ba_GRADE.code = 'GRADE') WHERE (TO_DAYS(curdate())-TO_DAYS(date_due)) > <<number of days>> and s.branchcode = <<Pick your branch|branches>> order by p.categorycode asc, ba_GRADE.attribute asc, p.sort1 asc, p.surname asc LIMIT 1000",,,,,,,,
R.002051,"/*
R.002051

----------

Name: Count of holds per library on holds list at any given time
Created by: Heather Braum

----------

Group: Holds-Reserves
     -

Created on: 2013-10-18 11:15:55
Modified on: 2013-10-31 14:30:53
Date last run: 2022-07-13 11:31:23

----------

Public: 0
Expiry: 0

----------

Shows counts of all holds at libraries on the holds queue. 

----------
*/

","SELECT i.holdingbranch, (SELECT count(t.itemnumber) FROM tmp_holdsqueue t WHERE t.holdingbranch=i.holdingbranch GROUP BY t.holdingbranch) as count FROM items i GROUP BY i.holdingbranch ORDER BY i.holdingbranch LIMIT 100",,,,,,,,
R.002055,"/*
R.002055

----------

Name: COLL-newdelinq-linked-HIAW
Created by: Robin Hastings

----------

Group:  HIAWATHA
     -

Created on: 2013-10-22 12:15:26
Modified on: 2021-08-16 20:39:24
Date last run: 2019-02-26 15:56:21

----------

Public: 0
Expiry: 0

----------

Linked version of the Unique Report for Hiawatha

----------
*/

","SELECT CONCAT ('<a href=\""/cgi-bin/koha/members/maninvoice.pl?borrowernumber=',borrowers.borrowernumber,'\"" target=""_blank"">',borrowers.cardnumber,'</a>') AS ""Link to Fines"",   borrowers.borrowernumber, borrowers.surname, borrowers.firstname, borrowers.address, borrowers.address2, borrowers.city, borrowers.zipcode, borrowers.phone, borrowers.mobile, borrowers.phonepro AS ""Alt Ph 1"", borrowers.B_phone AS ""Alt Ph 2"", borrowers.branchcode, categories.category_type AS ""Adult or Child"", borrowers.dateofbirth, MAX(accountlines.date) AS ""Most recent charge"", FORMAT(SUM(accountlines.amountoutstanding),2) AS Due 
FROM accountlines 
LEFT JOIN borrowers USING(borrowernumber) 
LEFT JOIN categories USING(categorycode) 
WHERE borrowers.branchcode IN ('HIAWATHA') 
AND borrowers.sort1 != 'yes'
AND accountlines.date > DATE_SUB(CURDATE(), INTERVAL 3 year) 
AND accountlines.date < DATE_SUB(CURDATE(), INTERVAL 60 day) 
GROUP BY borrowers.borrowernumber 
HAVING Due >=25.00 
ORDER BY borrowers.surname ASC",,,,,,,,
R.002066,"/*
R.002066

----------

Name: coll-updatedel-HIAW-linked
Created by: Robin Hastings

----------

Group:  HIAWATHA
     -

Created on: 2013-10-25 14:14:12
Modified on: 2021-08-16 20:39:27
Date last run: 2019-02-26 15:55:55

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT CONCAT ('<a href=\""/cgi-bin/koha/members/moremember.pl?borrowernumber=',borrowers.borrowernumber,'\"" target=""_blank"">',borrowers.cardnumber,'</a>') AS ""Link to Patron"", borrowers.borrowernumber, borrowers.surname, borrowers.firstname, FORMAT(SUM(accountlines.amountoutstanding),2) AS Due 
FROM accountlines 
LEFT JOIN borrowers USING(borrowernumber) 
LEFT JOIN categories USING(categorycode) 
WHERE borrowers.branchcode IN ('HIAWATHA') 
AND borrowers.sort1 = 'yes'
GROUP BY borrowers.borrowernumber 
HAVING Due >=25.00 
ORDER BY borrowers.surname ASC ",,,,,,,,
R.002082,"/*
R.002082

----------

Name: Holds Queue Analysis (Available Items)
Created by: Heather Braum

----------

Group: Administrative Reports
     Holds-admin

Created on: 2013-10-31 13:37:49
Modified on: 2016-07-22 09:07:53
Date last run: 2022-10-03 14:00:05

----------

Public: 0
Expiry: 0

----------

Analyzes number of items on a record, number of unrestricted & restricted items, notforloan, damaged, lost, withdrawn

----------
*/

","SELECT 
    current_timestamp() as ""report time"", 
    CONCAT ('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',t.biblionumber,'\"" target=""_blank"">'""link to record""'</a>') AS ""Link to Record"", 
    b.title, b.author, t.holdingbranch, i.ccode, count(i.itemnumber) as ""total items on record"", 
    (SELECT count(r.reserve_id) FROM reserves r WHERE r.biblionumber=t.biblionumber GROUP BY t.biblionumber) AS totalholds,
    (SELECT count(i.itemnumber)
        FROM items i 
        WHERE i.biblionumber=t.biblionumber AND i.itype NOT IN ('WALKIN','WALKIN1','WALKIN2','LOCALHOLD','LOCALHOLD1','LOCALHOLD2')
        GROUP BY t.biblionumber) as ""unrestricted count"", 
    (SELECT count(i.itemnumber)
        FROM items i 
        WHERE i.biblionumber=t.biblionumber AND i.itype IN ('WALKIN','WALKIN1','WALKIN2','LOCALHOLD','LOCALHOLD1','LOCALHOLD2')
        GROUP BY t.biblionumber) as ""restricted count"", 
    (SELECT count(i.itemnumber) 
        FROM items i 
        WHERE i.biblionumber=t.biblionumber AND i.notforloan <> '0'
        GROUP BY t.biblionumber) as ""notforloan count"", 
    (SELECT count(i.itemnumber) 
        FROM items i 
        WHERE i.biblionumber=t.biblionumber AND i.damaged <> '0'
        GROUP BY t.biblionumber) as ""damaged count"", 
    (SELECT count(i.itemnumber)
        FROM items i 
        WHERE i.biblionumber=t.biblionumber AND i.itemlost <> '0'
        GROUP BY t.biblionumber) as ""lost count"",
    (SELECT count(i.itemnumber)
        FROM items i 
        WHERE i.biblionumber=t.biblionumber AND i.withdrawn <> '0'
        GROUP BY t.biblionumber) as ""withdrawn count"" ,
    t.barcode
FROM tmp_holdsqueue t LEFT JOIN biblio b USING(biblionumber) LEFT JOIN items i USING(biblionumber) 
GROUP BY t.itemnumber 
ORDER BY t.holdingbranch ASC, totalholds DESC",,,,,,,,
R.002107,"/*
R.002107

----------

Name: Circ stats for titles in a specific collection code, for a specific year
Created by: Heather Braum

----------

Group: Circulation
     Circ Stats

Created on: 2013-11-19 21:56:16
Modified on: 2013-11-19 22:00:00
Date last run: 2022-07-13 12:38:48

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT biblio.title,count(statistics.datetime), items.itype,items.ccode,items.homebranch FROM biblio LEFT JOIN items USING (biblionumber) LEFT JOIN statistics USING(itemnumber) WHERE items.homebranch=<<Pick your branch|branches>> AND items.ccode=<<Pick your Collection Code|CCODE>> AND statistics.type IN ('issue','renew') AND YEAR(statistics.datetime)=<<enter yyyy year>> GROUP BY biblio.biblionumber ORDER BY biblio.title asc

",,,,,,,,
R.002131,"/*
R.002131

----------

Name: Circ History for a Patron (Simple)
Created by: Heather Braum

----------

Group: Borrowers
     -

Created on: 2013-12-18 16:43:48
Modified on: 2022-02-07 23:40:26
Date last run: 2022-02-17 13:01:00

----------

Public: 0
Expiry: 0

----------

Lists item callnumber, title, author, checked out date

----------
*/

","SELECT
  borrowers.cardnumber,
  Concat(
    '<a class=""btn btn-default"" href=""/cgi-bin/koha/members/readingrec.pl?borrowernumber=', 
    borrowers.borrowernumber, 
    '"" target=""_blank"">Go to borrower\'s history</a>'
  ) AS GO_TO_HISTORY
FROM
  borrowers
WHERE
  borrowers.cardnumber = <<Enter library card number>>",,,,,,,,
R.002143,"/*
R.002143

----------

Name: Yearly Circulation by Branch by CCode and Location
Created by: Heather Braum

----------

Group: Daily, Monthly, Yearly Stats
     Yearly

Created on: 2014-01-06 13:37:54
Modified on: 2014-01-08 16:33:34
Date last run: 2022-01-02 13:10:40

----------

Public: 0
Expiry: 0

----------

DO NOT RUN DURING NORMAL HOURS!! Enter year and choose branch. Run.

----------
*/

","SELECT IF(items.ccode IS NULL AND deleteditems.ccode IS NULL, NULL, CONCAT(COALESCE(items.ccode,''), COALESCE(deleteditems.ccode,''))) AS ccode, IF(items.location IS NULL AND deleteditems.location IS NULL, NULL, CONCAT(COALESCE(items.location,''), COALESCE(deleteditems.location,''))) AS location, Count(*) AS count  FROM statistics LEFT JOIN items USING(itemnumber) LEFT JOIN deleteditems USING(itemnumber) WHERE statistics.branch=<<branch|branches>> AND statistics.type IN ('issue','renew','localuse') AND year(statistics.datetime) = <<enter year>> 
GROUP BY ccode, location 
ORDER BY ccode, location",,,,,,,,
R.002144,"/*
R.002144

----------

Name: Yearly Circulation by Branch by Itype and Location
Created by: Heather Braum

----------

Group: Daily, Monthly, Yearly Stats
     Yearly

Created on: 2014-01-06 13:39:35
Modified on: 2014-01-08 16:33:40
Date last run: 2022-01-02 13:12:03

----------

Public: 0
Expiry: 0

----------

DO NOT RUN DURING NORMAL HOURS!! Enter year and choose branch. Run.

----------
*/

","SELECT IF(items.itype IS NULL AND deleteditems.itype IS NULL, NULL, CONCAT(COALESCE(items.itype,''), COALESCE(deleteditems.itype,''))) AS itype, IF(items.location IS NULL AND deleteditems.location IS NULL, NULL, CONCAT(COALESCE(items.location,''), COALESCE(deleteditems.location,''))) AS location, Count(*) AS count  FROM statistics LEFT JOIN items USING(itemnumber) LEFT JOIN deleteditems USING(itemnumber) WHERE statistics.branch=<<branch|branches>> AND statistics.type IN ('issue','renew','localuse') AND year(statistics.datetime) = <<enter year>> 
GROUP BY statistics.branch, itype, location 
ORDER BY statistics.branch, itype, location",,,,,,,,
R.002145,"/*
R.002145

----------

Name: Yearly New Materials Added by Ccode (branch-specific)
Created by: Heather Braum

----------

Group: Daily, Monthly, Yearly Stats
     Yearly

Created on: 2014-01-08 16:03:15
Modified on: 2016-02-23 15:01:06
Date last run: 2022-01-02 13:13:14

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT count(i.itemnumber) as added, i.ccode, i.location from items i WHERE i.homebranch=<<branch|branches>> AND year(i.dateaccessioned) = <<year|Year>> GROUP BY i.ccode,i.location ORDER BY i.ccode,i.location asc",,,,,,,,
R.002146,"/*
R.002146

----------

Name: Yearly New Materials Added by Itype (branch-specific)
Created by: Heather Braum

----------

Group: Daily, Monthly, Yearly Stats
     Yearly

Created on: 2014-01-08 16:22:50
Modified on: 2016-02-23 15:02:01
Date last run: 2022-01-02 13:14:04

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT count(itemnumber) as added, itype, location from items WHERE homebranch=<<branch|branches>> AND year(dateaccessioned) = <<year|Year>> GROUP BY itype,location ORDER BY  itype,location ",,,,,,,,
R.002148,"/*
R.002148

----------

Name: Yearly Deleted Materials by CCode (branch-specific)
Created by: Heather Braum

----------

Group: Daily, Monthly, Yearly Stats
     Yearly

Created on: 2014-01-08 16:25:53
Modified on: 2014-01-08 16:25:53
Date last run: 2022-10-03 09:21:51

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT count(itemnumber) as deleted, ccode, location from deleteditems WHERE homebranch=<<branch|branches>> AND year(timestamp) = <<enter four-digit year>> GROUP BY ccode,location ORDER BY  ccode,location ",,,,,,,,
R.002153,"/*
R.002153

----------

Name: Total Circulation for a Year (limited by branch)
Created by: Heather Braum

----------

Group: Daily, Monthly, Yearly Stats
     Yearly

Created on: 2014-01-13 17:24:22
Modified on: 2014-01-17 16:57:44
Date last run: 2022-09-27 16:03:09

----------

Public: 0
Expiry: 0

----------

Choose branch, enter four-digit-year

----------
*/

","SELECT Count(*) AS count  FROM statistics WHERE statistics.branch=<<branch|branches>> AND statistics.type IN ('issue','renew','localuse') AND year(statistics.datetime) = <<enter year>> ",,,,,,,,
R.002154,"/*
R.002154

----------

Name: Yearly Circulation at your library by Patron Category
Created by: Heather Braum

----------

Group: Daily, Monthly, Yearly Stats
     Yearly

Created on: 2014-01-13 17:42:50
Modified on: 2014-01-13 18:02:02
Date last run: 2022-01-02 13:15:22

----------

Public: 0
Expiry: 0

----------

Does not account for deleted patron accounts' circulation [which isn't possible to track at this time]

----------
*/

","SELECT borrowers.categorycode, 
case
  when categories.category_type= 'A' then 'Adult'
  when categories.category_type= 'C' then 'Child'
  when categories.category_type= 'I' then 'ILL'
  when categories.category_type= 'P' then 'Professional'
  when categories.category_type= 'S' then 'Staff'
  when categories.category_type= 'X' then 'Statistical'
  else categories.category_type end as categorytype, COUNT(*) FROM statistics JOIN borrowers USING (borrowernumber) LEFT JOIN categories USING(categorycode) WHERE statistics.branch=<<branch|branches>> AND statistics.type IN ('issue', 'renew','localuse') AND YEAR(datetime)=<<enter year>> GROUP BY borrowers.categorycode",,,,,,,,
R.002155,"/*
R.002155

----------

Name: Circulation for a Year by Patron Category Type
Created by: Heather Braum

----------

Group: Daily, Monthly, Yearly Stats
     Yearly

Created on: 2014-01-13 18:00:42
Modified on: 2014-01-13 18:00:42
Date last run: 2021-06-19 10:13:07

----------

Public: 0
Expiry: 300

----------

Select branch, enter year. Does not account for deleted patron account statistics (and can't figure out how to add that successfully yet). 

----------
*/

","SELECT case
  when categories.category_type= 'A' then 'Adult'
  when categories.category_type= 'C' then 'Child'
  when categories.category_type= 'I' then 'ILL'
  when categories.category_type= 'P' then 'Professional'
  when categories.category_type= 'S' then 'Staff'
  when categories.category_type= 'X' then 'Statistical'
  else categories.category_type end as categorytype,
   COUNT(*) FROM statistics JOIN borrowers USING (borrowernumber) LEFT JOIN categories USING(categorycode) WHERE statistics.branch=<<branch|branches>> AND statistics.type IN ('issue', 'renew','localuse') AND YEAR(datetime)=<<enter year>> GROUP BY categories.category_type",,,,,,,,
R.002170,"/*
R.002170

----------

Name: Clear Sort1 Field
Created by: Robin Hastings

----------

Group:  HIAWATHA
     -

Created on: 2014-01-21 10:00:57
Modified on: 2021-08-16 20:39:30
Date last run: 2019-02-26 15:55:20

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT borrowers.borrowernumber, borrowers.surname, borrowers.firstname, FORMAT(SUM(accountlines.amountoutstanding),2) AS Due 
FROM accountlines 
LEFT JOIN borrowers USING(borrowernumber) 
LEFT JOIN categories USING(categorycode) 
WHERE borrowers.categorycode IN ('HIAW-BWN','HIAW-BWNJ','HIAW-CITY','HIAW-CITYJ','HIAW-OTHER','HIAW-OTHERJ') 
AND borrowers.sort1 = 'yes'
GROUP BY borrowers.borrowernumber 
HAVING DUE = 0.00
ORDER BY borrowers.surname ASC",,,,,,,,
R.002190,"/*
R.002190

----------

Name: Itemnotes Field Has Data
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Shelf Lists

Created on: 2014-02-12 15:06:45
Modified on: 2018-05-08 21:27:41
Date last run: 2020-06-11 10:06:55

----------

Public: 0
Expiry: 0

----------

Written for libraries to edit records with itemnotes data (public note for an item). Ordered by dateaccessioned, desc. Includes direct edit item link.

----------
*/

","SELECT
  Concat(
    '<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',
    biblio.biblionumber,
    '\"" target=""_blank"">link to record</a>'
  ) AS LINK_TO_RECORD,
  items.dateaccessioned,
  biblio.title,
  biblio.author,
  items.itemnotes,
  items.barcode,
  Concat(
   '<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber='
   , biblio.biblionumber,
   '&itemnumber=',
    items.itemnumber, '#edititem\"" target=""_blank"">Link to item</a>'
  ) AS EDIT_ITEM
FROM
  items
  JOIN biblio ON items.biblionumber = biblio.biblionumber
WHERE
  items.homebranch LIKE <<Choose branch|LBRANCH>> AND
  items.itemnotes IS NOT NULL
ORDER BY
  items.dateaccessioned DESC",,,,,,,,
R.002195,"/*
R.002195

----------

Name: Report of All Unique Titles at Your Library in NExpress
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Shelf Lists

Created on: 2014-02-24 11:14:47
Modified on: 2014-02-24 11:26:43
Date last run: 2022-01-18 11:30:16

----------

Public: 0
Expiry: 0

----------

List of all records that only your library has copies attached to in the NExpress Shared Catalog

----------
*/

","SELECT CONCAT('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',biblio.biblionumber,'\"" target=""_blank"">'""link to record""'</a>') as ""link to record"", biblio.title, biblio.author, items.ccode, items.itemcallnumber, count(items.itemnumber) FROM items JOIN biblio USING(biblionumber) WHERE items.homebranch=<<your branch|branches>> AND biblio.biblionumber NOT IN (SELECT biblionumber FROM items WHERE homebranch <> <<your branch|branches>>) GROUP BY biblio.biblionumber ORDER BY items.ccode, items.itemcallnumber",,,,,,,,
R.002196,"/*
R.002196

----------

Name: Report of Items Exclusive to Your Library in NExpress (limited by ccode)
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Shelf Lists

Created on: 2014-02-24 11:21:02
Modified on: 2014-03-11 14:33:07
Date last run: 2022-02-07 13:40:28

----------

Public: 0
Expiry: 0

----------

List of all items that only your library has copies attached to records in the NExpress Shared Catalog (limited by ccode)

----------
*/

","SELECT CONCAT('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',biblio.biblionumber,'\"" target=""_blank"">'""link to record""'</a>') as ""link to record"", items.barcode, items.itemcallnumber, biblio.title, items.ccode, items.datelastborrowed, (IFNULL(items.issues,0)+IFNULL(items.renewals,0)) as
""Total Circ"" FROM items JOIN biblio USING(biblionumber) WHERE items.homebranch=<<your branch|branches>> AND items.ccode=<<ccode|CCODE>> AND biblio.biblionumber NOT IN (SELECT biblionumber FROM items WHERE homebranch <> <<your branch|branches>>) GROUP BY items.itemnumber ORDER BY items.ccode, items.itemcallnumber",,,,,,,,
R.002198,"/*
R.002198

----------

Name: New Patrons Added in a Month
Created by: Heather Braum

----------

Group: Daily, Monthly, Yearly Stats
     Monthly

Created on: 2014-02-28 15:23:13
Modified on: 2014-02-28 15:23:13
Date last run: 2022-07-13 19:35:02

----------

Public: 0
Expiry: 300

----------



----------
*/

",SELECT count(*) FROM borrowers WHERE branchcode=<<branch|branches>> AND year(dateenrolled)=<<enter four-digit year>> AND month(dateenrolled)=<<enter two-digit month>>,,,,,,,,
R.002204,"/*
R.002204

----------

Name: Never Checked Out Or Hasn't Checked Out Since a specific date (Limited to a collection code and shelving location)
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Weeding Criteria

Created on: 2014-03-11 14:41:38
Modified on: 2019-11-19 11:27:11
Date last run: 2022-06-04 19:29:12

----------

Public: 0
Expiry: 0

----------

Limited by branch, collection code, shelving location.

----------
*/

","SELECT items.barcode AS 'Barcode',
       items.holdingbranch,
       items.datelastseen,
       items.datelastborrowed,
       items.itemcallnumber,
       biblio.title,
       t.publicationyear AS 'Copyright',
       items.dateaccessioned AS 'Accessioned',
       items.itype,
       items.ccode,
       items.location
FROM items
LEFT JOIN biblio USING (biblionumber)
LEFT JOIN biblioitems t USING(biblionumber)
WHERE items.homebranch= <<Pick Your Branch|branches>>
  AND items.ccode=<<collection code|CCODE>>
  AND items.location=<<LOCATION|LOC>>
  AND ((items.issues IS NULL AND items.dateaccessioned < <<enter date item added TO CATALOG TO CHECK PRIOR TO yyyy-mm-dd>>)
       OR items.datelastborrowed < <<LAST date borrowed enter date yyyy-mm-dd>>)
ORDER BY items.itemcallnumber",,,,,,,,
R.002205,"/*
R.002205

----------

Name: Never Checked Out Or Hasn't Checked Out Since a specific date (Limited to a collection code)
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Weeding Criteria

Created on: 2014-03-11 14:42:05
Modified on: 2016-06-09 09:36:23
Date last run: 2022-05-25 15:20:23

----------

Public: 0
Expiry: 0

----------

Limited by branch and collection code. 

----------
*/

","SELECT items.barcode as 'Barcode', items.holdingbranch, items.datelastseen, items.datelastborrowed, items.itemcallnumber, biblio.title, t.publicationyear as 'Copyright', items.dateaccessioned as 'Accessioned', items.itype, items.ccode, items.location FROM items LEFT JOIN biblio USING (biblionumber) LEFT JOIN biblioitems t USING(biblionumber)  WHERE items.homebranch= <<Pick Your Branch|branches>> AND items.ccode=<<collection code|CCODE>> AND ((items.issues IS NULL AND items.dateaccessioned < <<Choose date|date>>) OR items.datelastborrowed < <<Choose date again|date>>) ORDER BY items.itemcallnumber",,,,,,,,
R.002208,"/*
R.002208

----------

Name: Top 20 Holds (as of 3-12-14) with priorities
Created by: Heather Braum

----------

Group: Administrative Reports
     -

Created on: 2014-03-13 13:25:08
Modified on: 2014-03-13 13:25:23
Date last run: 2022-05-19 15:53:14

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT b.biblionumber, b.title, r.borrowernumber, r.reservedate, r.branchcode, r.priority, r.found, r.timestamp FROM reserves r LEFT JOIN biblio b USING(biblionumber) WHERE b.biblionumber IN ('598448','621613','598444','598453','598426','598493','621614','598445','621935','597373','621801','454326','621615','598449','598451','621616','598461','590004','620569','597012') ORDER BY b.biblionumber, r.priority LIMIT 3000",,,,,,,,
R.002213,"/*
R.002213

----------

Name: Accounts with Staff-Level Permissions
Created by: Heather Braum

----------

Group: Administrative Reports
     System-admin

Created on: 2014-03-14 11:41:08
Modified on: 2018-06-21 14:19:30
Date last run: 2022-02-04 09:53:08

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT CONCAT('<a href=\""/cgi-bin/koha/members/member-flags.pl?member=',borrowernumber,'\"" target=""_blank"">',borrowernumber,'</a>') AS ""Edit Permissions"",
  firstname, surname,
  userid, flags,
  categorycode,
  branchcode
FROM borrowers
WHERE flags NOT IN  ('0')
ORDER BY flags",,,,,,,,
R.002237,"/*
R.002237

----------

Name: Circulation of your library's materials at your library in a month, by collection code and location
Created by: Heather Braum

----------

Group: Daily, Monthly, Yearly Stats
     Monthly

Created on: 2014-04-02 17:51:21
Modified on: 2014-04-02 17:54:56
Date last run: 2022-08-30 12:42:51

----------

Public: 0
Expiry: 0

----------

Choose your branch three times. Gives the circulation of your materials at your library in a given month by collection code and location

----------
*/

","SELECT IF(items.ccode IS NULL AND deleteditems.ccode IS NULL, NULL, CONCAT(COALESCE(items.ccode,''), COALESCE(deleteditems.ccode,''))) AS ccode, IF(items.location IS NULL AND deleteditems.location IS NULL, NULL, CONCAT(COALESCE(items.location,''), COALESCE(deleteditems.location,''))) AS location, Count(*) AS count  FROM statistics LEFT JOIN items USING(itemnumber) LEFT JOIN deleteditems USING(itemnumber) WHERE statistics.branch=<<choose branch|branches>> AND statistics.type IN ('issue','renew','localuse') AND month(statistics.datetime) = <<enter two-digit month (ex, 03 for March)>> AND year(statistics.datetime) = <<enter four-digit year (ex, 2014)>> AND (items.homebranch=<<choose branch|branches>> OR deleteditems.homebranch=<<choose branch|branches>>) GROUP BY ccode, location",,,,,,,,
R.002240,"/*
R.002240

----------

Name: Active patrons in set timeperiod
Created by: Heather Braum

----------

Group: Borrowers
     Patron Statistics

Created on: 2014-04-07 22:36:00
Modified on: 2022-05-18 12:13:45
Date last run: 2022-10-03 10:36:43

----------

Public: 0
Expiry: 0

----------

Provides count of active patrons during a set time period, who interacted with the system in some manner (have entries in the statistics table). Must choose branch twice & enter starting and ending date. 

This report cannot consider any patron activity more than 25 months old.

----------
*/

","SELECT count(distinct borrowers.borrowernumber) FROM statistics, borrowers WHERE statistics.borrowernumber=borrowers.borrowernumber AND 
borrowers.branchcode=<<branch|branches>> AND statistics.branch=<<branch|branches>> AND statistics.datetime BETWEEN <<starting date, ex. 2013-01-01>> AND <<ending date, ex. 2013-12-31>>",,,,,,,,
R.002244,"/*
R.002244

----------

Name: List of Items Checked out in a Collection Code
Created by: Heather Braum

----------

Group: Circulation
     Checked Out

Created on: 2014-04-23 13:48:23
Modified on: 2014-04-23 14:10:57
Date last run: 2022-09-27 14:27:26

----------

Public: 0
Expiry: 0

----------

This report limits on items' home library and collection code, and displays the cardnumber, patron's home library, patron name, item title, location, collection code, item type, item barcode, date checked out, days checked out, date due, days overdue, last date renewed, renewals count, of all materials currently checked out from your library's collection. 

----------
*/

","select borrowers.cardnumber, borrowers.branchcode as homelibrary, borrowers.firstname, borrowers.surname, biblio.title, items.itemcallnumber as callnumber, items.location, items.ccode, items.itype, items.barcode, DATE(issues.issuedate) as ""date out"", (TO_DAYS(curdate())-TO_DAYS(issuedate)) as daysout, DATE(issues.date_due) AS ""date due"", (TO_DAYS(curdate())-TO_DAYS(date_due)) as ""days overdue"", date(issues.lastreneweddate) as ""last renewed"", issues.renewals  from issues join borrowers USING(borrowernumber) join items using(itemnumber) join biblio using(biblionumber)  where items.homebranch=<<branch|branches>> AND items.ccode=<<ccode|CCODE>> ORDER BY daysout DESC",,,,,,,,
R.002248,"/*
R.002248

----------

Name: Count of Total items currently checked out by collection and location
Created by: Heather Braum

----------

Group: Circulation
     Checked Out

Created on: 2014-04-23 14:08:50
Modified on: 2014-04-23 14:11:54
Date last run: 2022-03-17 15:12:16

----------

Public: 0
Expiry: 0

----------

Limited by items' homebranch. Gives total counts of items currently checked out in collection codes and shelving locations. 

----------
*/

","select items.ccode, items.location, count(issues.itemnumber) from issues join items using(itemnumber) where items.homebranch=<<branch|branches>> GROUP BY items.ccode, items.location",,,,,,,,
R.002253,"/*
R.002253

----------

Name: Checked Out Items at School Libraries
Created by: Heather Braum

----------

Group: School Libraries
     Overdues (schools)

Created on: 2014-05-05 22:52:24
Modified on: 2014-08-19 22:32:48
Date last run: 2022-05-12 12:43:43

----------

Public: 0
Expiry: 0

----------

Includes grade, classroom teacher where applicable, due dates of materials, replacement fees, and more. 

----------
*/

","SELECT p.categorycode, ba_GRADE.attribute AS grade, p.sort1, CONCAT(p.firstname, ' ', p.surname) AS name, b.title, b.author, i.homebranch as ""owning library"", i.ccode, i.itemcallnumber, i.barcode, s.date_due, CONCAT('$', i.replacementprice, ' replacement fee if lost') FROM borrowers p left join issues s USING (borrowernumber) left join items i USING (itemnumber) left JOIN biblio b USING (biblionumber) LEFT JOIN borrower_attributes ba_GRADE ON (p.borrowernumber = ba_GRADE.borrowernumber AND ba_GRADE.code = 'GRADE') WHERE s.branchcode = <<Pick your branch|branches>> order by p.categorycode asc, ba_GRADE.attribute asc, p.sort1 asc, p.surname asc LIMIT 1000",,,,,,,,
R.002257,"/*
R.002257

----------

Name: Patrons Total Current Holds (limited by library)
Created by: Heather Braum

----------

Group: Holds-Reserves
     -

Created on: 2014-05-12 13:27:07
Modified on: 2014-12-01 13:58:11
Date last run: 2020-11-05 09:55:01

----------

Public: 0
Expiry: 0

----------

Shows patrons at your library with their total CURRENT holds. Only displays card number and holds count. Patrons with the most holds are at the top of the list.

----------
*/

","SELECT b.cardnumber, count(r.reserve_id) as count FROM reserves r JOIN borrowers b USING(borrowernumber) WHERE b.branchcode = <<choose your branch|branches>> GROUP BY b.borrowernumber ORDER BY count DESC",,,,,,,,
R.002258,"/*
R.002258

----------

Name: Overdue Items XXX days Overdue, to Mark Items Lost
Created by: Heather Braum

----------

Group: Circulation
     Overdues

Created on: 2014-05-14 09:33:20
Modified on: 2014-05-14 09:34:38
Date last run: 2021-08-16 15:00:59

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT CONCAT ('<a href=\""/cgi-bin/koha/members/moremember.pl?borrowernumber=',borrowers.borrowernumber,'\"" target=""_blank"">',borrowers.surname,'</a>') AS ""borrowers.surname"", borrowers.firstname, issues.date_due, (TO_DAYS(curdate())-TO_DAYS( date_due)) as 'days overdue', CONCAT ('<a href=\""/cgi-bin/koha/catalogue/moredetail.pl?itemnumber=',items.itemnumber,'&biblionumber=',biblio.biblionumber,'&bi=',biblioitems.biblioitemnumber,'#item',items.itemnumber,'\"" target=""_blank"">',items.barcode,'</a>') AS barcode, items.homebranch FROM borrowers join issues USING (borrowernumber) join items USING (itemnumber) join biblio USING(biblionumber) join biblioitems USING (biblionumber) WHERE items.homebranch = <<Pick your branch|branches>> AND (TO_DAYS(curdate())-TO_DAYS(issues.date_due)) > <<number of days>> order by issues.date_due desc",,,,,,,,
R.002265,"/*
R.002265

----------

Name: Overdues for Borrowers without Emails (not linked) XX days past due
Created by: Heather Braum

----------

Group: Circulation
     Overdues

Created on: 2014-05-20 14:29:25
Modified on: 2014-05-20 14:29:25
Date last run: 2022-06-17 10:37:37

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT borrowers.surname AS ""borrowers.surname"", borrowers.firstname, borrowers.phone, borrowers.cardnumber, borrowers.email, borrowers.address, borrowers.address2, borrowers.city, borrowers.zipcode, issues.date_due, (TO_DAYS(curdate())-TO_DAYS( date_due)) as 'days overdue', items.itype, items.itemcallnumber, items.barcode AS barcode, items.replacementprice, items.homebranch, biblio.title, biblio.author FROM borrowers join issues USING (borrowernumber) join items USING (itemnumber) JOIN biblio USING (biblionumber) join biblioitems USING (biblionumber) WHERE issues.branchcode = <<Pick your branch|branches>> AND borrowers.email = '' AND (TO_DAYS(curdate())-TO_DAYS(date_due)) > <<number of days>> order by borrowers.surname asc, issues.date_due asc",,,,,,,,
R.002274,"/*
R.002274

----------

Name: Data in the borrowers table that needs to be deleted
Created by: Heather Braum

----------

Group: Administrative Reports
     Patrons-admin

Created on: 2014-06-05 15:14:42
Modified on: 2019-02-10 21:11:55
Date last run: 2019-06-19 15:41:48

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=', borrowers.borrowernumber,
  '\"" target=""_blank"">edit patron</a>') AS EDIT_PATRON,
  borrowers.branchcode,
  borrowers.contactnote,
  borrowers.borrowernotes
FROM
  borrowers
WHERE
  (borrowers.contactnote REGEXP '[0-9]{3}\-?[0-9]{2}\-?[0-9]{4}' OR
    borrowers.borrowernotes REGEXP '[0-9]{3} ?\-? ?[0-9]{2} ?\-? ?[0-9]{4}')
ORDER BY
  borrowers.branchcode",,,,,,,,
R.002279,"/*
R.002279

----------

Name: Which titles have the most holds by your patrons?
Created by: Heather Braum

----------

Group: Holds-Reserves
     -

Created on: 2014-06-10 15:16:34
Modified on: 2015-08-16 20:51:25
Date last run: 2021-10-20 11:23:36

----------

Public: 0
Expiry: 0

----------

Returns titles with holds by your patrons, sorted by the records with the biggest number of your patrons with holds on them (based on their hold pickup location). 

----------
*/

","select CONCAT ('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',r.biblionumber,'\"" target=""_blank"">',r.biblionumber,'</a>') AS ""Link to Record"", b.title, b.author, t.publicationyear, count(*) AS ""Number of Holds by Your Patrons"" from reserves r left join biblio b USING (biblionumber) left join biblioitems t USING(biblionumber) where r.branchcode = <<branch|branches>> group by r.biblionumber ORDER BY count(*) DESC, r.reservedate DESC",,,,,,,,
R.002290,"/*
R.002290

----------

Name: Possible items not checked in
Created by: Heather Braum

----------

Group: Circulation
     Checked Out

Created on: 2014-06-26 11:31:52
Modified on: 2014-06-26 11:34:03
Date last run: 2021-02-24 17:39:06

----------

Public: 0
Expiry: 0

----------

This is a slow report. Please be patient. You'll need to choose your library branch twice. 

This report can be used for shelf checking on materials that patrons say they returned with other materials. It reports on patrons who have returned materials in the past 3 days, who have still have materials due in the past three days or next three days, who still have items checked out. 

----------
*/

","SELECT borrowernumber, CONCAT (borrowers.firstname, ' ', borrowers.surname) as ""patron name"", count(items.itemnumber) as ""items still out"", GROUP_CONCAT(items.itemcallnumber, "" ( "",
biblio.title, "") "") AS ""booklist still out""
FROM (SELECT borrowernumber
FROM statistics
WHERE date(statistics.datetime) >= ( CURDATE() - INTERVAL 3 DAY ) 
      AND statistics.type='return' AND statistics.branch=<<branch|branches>>
GROUP BY borrowernumber) whoreturned
LEFT JOIN borrowers USING(borrowernumber)
LEFT JOIN issues USING (borrowernumber)
LEFT JOIN items USING (itemnumber)
LEFT JOIN biblio USING (biblionumber)
WHERE (date(issues.date_due) >= ( CURDATE() - INTERVAL 3 DAY ) OR date(issues.date_due) <=  ( CURDATE() + INTERVAL 3 DAY )) AND issues.branchcode=<<branch|branches>>
GROUP BY borrowernumber
ORDER BY issues.branchcode",,,,,,,,
R.002302,"/*
R.002302

----------

Name: Your library's lost items not at your library
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Status reports-lost, damaged

Created on: 2014-07-25 15:25:01
Modified on: 2015-08-16 20:55:02
Date last run: 2022-07-22 12:53:21

----------

Public: 0
Expiry: 0

----------

Shows your library's items marked lost that have a current location that is not your library. 

----------
*/

","SELECT items.timestamp AS ""Last System Change"", items.datelastseen AS ""Last Scanner Gun Date"", biblio.title, biblio.author,biblioitems.publicationyear, items.holdingbranch, items.location, items.ccode,items.itype,items.itemcallnumber, items.itemnotes, items.barcode, items.replacementprice, CONCAT ('<a href=\""/cgi-bin/koha/catalogue/moredetail.pl?itemnumber=',items.itemnumber,'&biblionumber=',biblio.biblionumber,'&bi=',biblioitems.biblioitemnumber,'#item',items.itemnumber,'\"" target=""_blank"">'""item info""'</a>') AS ""Item Info"" FROM items LEFT JOIN biblio USING(biblionumber) LEFT JOIN biblioitems USING (biblionumber) LEFT JOIN authorised_values ON (items.itemlost=authorised_values.authorised_value) WHERE items.homebranch=<<Pick your branch|branches>> AND items.holdingbranch != <<pick your branch|branches>> AND items.itemlost != 0 AND authorised_values.category='LOST' ORDER BY items.timestamp ASC",,,,,,,,
R.002309,"/*
R.002309

----------

Name: Title, Series, and Circulation Info for a Collection Code
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Collection Statistics

Created on: 2014-08-05 10:12:05
Modified on: 2017-12-18 15:40:22
Date last run: 2022-03-20 12:04:22

----------

Public: 0
Expiry: 0

----------



----------
*/

","select DISTINCT CONCAT('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',b.biblionumber,'\"" target=""_blank"">',b.biblionumber,'</a>'), b.title, b.author, i.itemcallnumber, ExtractValue(t.metadata, '//datafield[@tag=""440""]/subfield[@code>=""a""]') as ""440 series info"", ExtractValue(t.metadata, '//datafield[@tag=""490""]/subfield[@code>=""z""]') as ""490 series info"", (IFNULL(i.issues,0)+IFNULL(i.renewals,0)) as Total_Circ from biblio b left join biblio_metadata t using (biblionumber) join items i using (biblionumber) WHERE i.homebranch=<<choose library|branches>> AND i.ccode=<<collection code|CCODE>> GROUP BY i.biblionumber",,,,,,,,
R.002331,"/*
R.002331

----------

Name: Titles With 3+ Holds By Patrons at a Library
Created by: Heather Braum

----------

Group: Popular Reports
     -

Created on: 2014-08-16 13:15:23
Modified on: 2017-02-01 08:15:32
Date last run: 2022-09-22 11:40:24

----------

Public: 0
Expiry: 0

----------

This report shows records with 3+ holds by a single library's patrons, and shows how many copies that library has in the system. It does not count items marked lost, damaged or withdrawn. 

----------
*/

","SELECT r.branchcode, CONCAT ('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',r.biblionumber,'\"" target=""_blank"">'""link to record""'</a>') AS ""link to record"", b.title, count(r.reserve_id) as your_patron_holds, (SELECT count(i.itemnumber) FROM items i WHERE i.biblionumber=r.biblionumber AND i.homebranch=r.branchcode AND i.damaged='0' AND i.withdrawn='0' AND itemlost='0') as your_lib_holdings FROM biblio b LEFT JOIN reserves r USING (biblionumber) JOIN borrowers p USING(borrowernumber)  WHERE r.branchcode=<<choose your library|branches>> GROUP BY r.biblionumber, r.branchcode HAVING count(r.reserve_id) > 2 ORDER BY your_lib_holdings asc",,,,,,,,
R.002342,"/*
R.002342

----------

Name: Shows Titles with 3+ holds by your patrons + library copies owned + ccode
Created by: Heather Braum

----------

Group: Popular Reports
     -

Created on: 2014-08-26 13:41:23
Modified on: 2015-01-22 14:24:15
Date last run: 2022-09-30 12:33:31

----------

Public: 0
Expiry: 0

----------

Related to Report #2331

----------
*/

","SELECT r.branchcode, CONCAT ('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',b.biblionumber,'\"" target=""_blank"">'""link to record""'</a>') AS ""link to record"", b.title, (SELECT count(r.reserve_id) FROM reserves r WHERE r.biblionumber=b.biblionumber AND r.branchcode=<<choose branch|branches>>) as your_patron_holds, (SELECT i.ccode FROM items i WHERE i.biblionumber=r.biblionumber LIMIT 1) as collection, (SELECT count(i.itemnumber) FROM items i WHERE i.biblionumber=r.biblionumber AND i.homebranch=r.branchcode AND i.damaged='0' AND i.withdrawn='0' AND itemlost='0') as your_lib_holdings FROM biblio b LEFT JOIN reserves r USING (biblionumber) LEFT JOIN items i USING(biblionumber) WHERE r.biblionumber=b.biblionumber AND r.branchcode=<<choose your library|branches>> AND r.biblionumber IN (SELECT r.biblionumber FROM reserves r WHERE r.biblionumber=b.biblionumber AND r.branchcode=<<choose branch|branches>> GROUP BY r.biblionumber HAVING count(r.reserve_id) > '2') GROUP BY b.biblionumber, r.branchcode HAVING count(r.reserve_id) > '2' ORDER BY your_lib_holdings asc",,,,,,,,
R.002349,"/*
R.002349

----------

Name: Possible Duplicate patrons
Created by: Heather Braum

----------

Group: Borrowers
     Fix Patrons

Created on: 2014-09-02 20:38:05
Modified on: 2017-02-20 16:34:56
Date last run: 2022-07-08 13:54:32

----------

Public: 0
Expiry: 0

----------



----------
*/

","select surname, firstname, GROUP_CONCAT(cardnumber SEPARATOR ', ') as barcodes, GROUP_CONCAT(borrowernumber SEPARATOR ', ') as borrowers, GROUP_CONCAT(branchcode SEPARATOR ', ') as ""home libraries"" from borrowers WHERE branchcode IN ('PAOLA','OSAWATOMIE') group by CONCAT(surname,'-',firstname,'/') HAVING COUNT(CONCAT(surname,'-',firstname,'/'))>1",,,,,,,,
R.002351,"/*
R.002351

----------

Name: Total Charges paid at your branch per month
Created by: Heather Braum

----------

Group: Circulation
     Charges

Created on: 2014-09-03 16:58:46
Modified on: 2019-12-26 11:46:10
Date last run: 2022-06-06 09:18:43

----------

Public: 0
Expiry: 0

----------

Gives total of payments in Koha each month (listed as negative amount in the accountlines table); branch is based on staff accounts listed in manager_id recorded when fines are paid. 
<p><span style=""color: yellow; background-color: red; font-size: 200%;"">References accountlines.accounttype.  Needs to be updated after January 4, 2020</span></p>

----------
*/

","SELECT month(a.date) as month, year(a.date) as year, ROUND(ABS(SUM(a.amount)),2) as total FROM accountlines a WHERE manager_id IN (SELECT borrowernumber FROM borrowers WHERE categorycode='STAFF' AND branchcode=<<choose branch|branches>>) AND a.accounttype=""Pay"" AND a.amount < 0 GROUP BY month(a.date), year(a.date) ORDER BY year, month",,,,,,,,
R.002376,"/*
R.002376

----------

Name: Most-Circulated Report at Your Library, limited by CCode and Shelving Location
Created by: Heather Braum

----------

Group: Popular Reports
     -

Created on: 2014-09-26 14:56:27
Modified on: 2015-08-16 20:42:26
Date last run: 2022-09-22 11:42:44

----------

Public: 0
Expiry: 0

----------

Shows items with more than XX total circs for various Collections.  Enhanced. Run and choose ccode; home branch; location; and enter minimum number of circs. #circ

----------
*/

","SELECT items.barcode, items.itemcallnumber, CONCAT( '<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',biblio.biblionumber,'\"" target=""_blank"">',biblio.biblionumber,'</a>' ) as 'Link to Record', biblio.title, t.publicationyear as 'Copyright', items.dateaccessioned as 'Accessioned', items.itype, items.ccode, items.issues, items.renewals,(IFNULL(items.issues,0)+IFNULL(items.renewals,0)) as
Total_Circ,items.datelastborrowed,items.itemlost,items.onloan,items.damaged,items.itemnotes FROM items LEFT JOIN biblio USING(biblionumber)  LEFT JOIN biblioitems t USING(biblionumber) WHERE items.homebranch=<<Pick Library|branches>> AND items.ccode=<<Pick your collection code|CCODE>> AND items.location = <<location|LOC>> AND items.issues > <<Minimum Number of Circs>> 
ORDER BY Total_Circ DESC",,,,,,,,
R.002379,"/*
R.002379

----------

Name: Most-Circulated Report at Your Library, limited by Shelving Location
Created by: Heather Braum

----------

Group: Popular Reports
     -

Created on: 2014-09-26 14:59:34
Modified on: 2015-08-16 20:39:00
Date last run: 2022-05-24 15:16:03

----------

Public: 0
Expiry: 0

----------

Shows items with more than XX total circs for various shelving locations.  Enhanced. Run and choose home branch; location; and enter minimum number of circs. #circ

----------
*/

","SELECT items.barcode, items.itemcallnumber, CONCAT( '<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',biblio.biblionumber,'\"" target=""_blank"">',biblio.biblionumber,'</a>' ) as 'Link to Record', biblio.title, t.publicationyear as 'Copyright', items.dateaccessioned as 'Accessioned', items.itype, items.ccode, items.issues, items.renewals,(IFNULL(items.issues,0)+IFNULL(items.renewals,0)) as
Total_Circ,items.datelastborrowed,items.itemlost,items.onloan,items.damaged,items.itemnotes FROM items LEFT JOIN biblio USING(biblionumber)  LEFT JOIN biblioitems t USING(biblionumber) WHERE items.homebranch=<<Pick Transacting Branch|branches>> AND items.issues > <<Minimum Number of Circs>> and items.location = <<location|LOC>> 
ORDER BY Total_Circ DESC",,,,,,,,
R.002381,"/*
R.002381

----------

Name: Circ stats for titles in a specific shelving location, for a specific year
Created by: Heather Braum

----------

Group: Circulation
     Circ Stats

Created on: 2014-09-26 15:08:37
Modified on: 2021-06-17 16:00:42
Date last run: 2022-08-12 15:15:35

----------

Public: 0
Expiry: 300

----------

This report is old and probably isn't giving you the results you really want.  It will be evaluated in the second half of 2021.

----------
*/

","SELECT biblio.title,count(statistics.datetime), items.itype,items.ccode,items.homebranch FROM biblio LEFT JOIN items USING (biblionumber) LEFT JOIN statistics USING(itemnumber) WHERE items.homebranch=<<Pick your branch|branches>> AND items.location=<<Pick your Shelving Location|LOC>> AND statistics.type IN ('issue','renew') AND YEAR(statistics.datetime)=<<enter yyyy year>> GROUP BY biblio.biblionumber ORDER BY biblio.title asc

",,,,,,,,
R.002382,"/*
R.002382

----------

Name: Top 100 Circing Titles in a Collection Code in a Specific Year
Created by: Heather Braum

----------

Group: Popular Reports
     -

Created on: 2014-09-26 15:09:31
Modified on: 2014-09-26 15:13:16
Date last run: 2020-07-02 20:08:31

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT biblio.title,count(statistics.datetime), items.itype,items.ccode FROM biblio LEFT JOIN items USING (biblionumber) LEFT JOIN statistics USING(itemnumber) WHERE statistics.branch=<<Pick your branch|branches>> AND items.ccode=<<Pick your Collection Code|CCODE>> AND statistics.type IN ('issue','renew') AND YEAR(statistics.datetime)=<<enter yyyy year>> GROUP BY biblio.biblionumber ORDER BY count(statistics.datetime) DESC LIMIT 100

",,,,,,,,
R.002388,"/*
R.002388

----------

Name: unknown
Created by: Heather Braum

----------

Group: -
     -

Created on: 2014-10-05 23:25:44
Modified on: 2019-06-30 21:48:51
Date last run: 2019-09-16 09:30:15

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
 CONCAT(
   '<a href=\""/cgi-bin/koha/catalogue/search.pl?idx=ti&q=',
   TRIM(Replace(Replace(Replace(Replace(Replace(Replace(b.title, ""/"", """"), "":"", """" ), "";"", """"), "","", """"), '""', ''), '#', '') ),
   '&sort_by=title_az\"" target=""_blank"">',
   TRIM(Replace(Replace(Replace(Replace(Replace(Replace(b.title, ""/"", """"), "":"", """" ), "";"", """"), "","", """"), '""', ''), '#', '') ),'</a>'
 ) AS ""Title Search"",
 TRIM(Replace(Replace(Replace(Replace(Replace(Replace(b.title, ""/"", """"), "":"", """" ), "";"", """"), "","", """"), '""', ''), '#', '') ) AS TITLE, 
 GROUP_CONCAT(DISTINCT b.biblionumber SEPARATOR ', ') AS BIBLIONUMBER,
 GROUP_CONCAT(DISTINCT b.author SEPARATOR ', ') AS AUTHOR,
 GROUP_CONCAT(DIStINCT i.ccode SEPARATOR ', ') AS ITEM_CCODE
FROM biblio b
JOIN items i USING(biblionumber)
WHERE i.ccode NOT IN ('ERESOURCE')
GROUP BY TRIM(Replace(Replace(Replace(Replace(Replace(Replace(b.title, ""/"", """"), "":"", """" ), "";"", """"), "","", """"), '""', ''), '#', '') )
HAVING count(DISTINCT b.biblionumber) > 1",,,,,,,,
R.002390,"/*
R.002390

----------

Name: Patrons addresses
Created by: SABETHA TECH

----------

Group: Borrowers
     -

Created on: 2014-10-09 10:26:55
Modified on: 2019-05-13 12:45:41
Date last run: 2022-04-06 09:39:14

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT (borrowers.address), borrowers.surname,borrowers.firstname,borrowers.address FROM borrowers   WHERE borrowers.branchcode='TONGANOXIE' AND borrowers.categorycode='ADULT' GROUP BY borrowers.address",,,,,,,,
R.002391,"/*
R.002391

----------

Name: unknown
Created by: Heather Braum

----------

Group: -
     -

Created on: 2014-10-14 21:37:12
Modified on: 2019-06-30 21:19:11
Date last run: 2021-09-09 20:38:34

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT concat(b.surname,', ',b.firstname) AS name, count(s.borrowernumber) AS checkouts
FROM statistics s
LEFT JOIN borrowers b
USING (borrowernumber)
WHERE b.branchcode=<<chopse branch|branches>> AND s.datetime BETWEEN <<Top checkouts BETWEEN (yyyy-mm-dd)|date>> AND <<and (yyyy-mm-dd)|date>>
GROUP BY s.borrowernumber
ORDER BY count(s.borrowernumber) DESC
LIMIT 2000",,,,,,,,
R.002416,"/*
R.002416

----------

Name: Checkouts, Checkins, Renewals on a specific date
Created by: Heather Braum

----------

Group: Daily, Monthly, Yearly Stats
     Daily

Created on: 2014-11-17 15:29:59
Modified on: 2014-11-17 15:42:44
Date last run: 2022-08-09 13:19:08

----------

Public: 0
Expiry: 0

----------

This report returns circulation statistics (checkins, checkouts, renewals) for a single date that you enter for your library. It breaks down the number of checkins, checkouts, and renewals per hour of a day. 

----------
*/

","SELECT month(datetime), day(datetime), hour(datetime), type, count(*) FROM statistics WHERE branch=<<choose library|branches>> AND datetime LIKE <<enter date you want to look at circ, yyyy-mm-dd% format, ex. 2014-11-14%'>> GROUP BY day(datetime), hour(datetime), type",,,,,,,,
R.002417,"/*
R.002417

----------

Name: Top Circing Items in Last Six Months at Your Library in a Collection Code & Shelving Location
Created by: Heather Braum

----------

Group: Circulation
     Circ Stats

Created on: 2014-11-17 15:36:58
Modified on: 2014-11-17 15:36:58
Date last run: 2022-08-15 15:23:00

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT count(statistics.datetime) AS circs, biblio.title, biblio.author, items.ccode FROM statistics JOIN items USING (itemnumber) 
LEFT JOIN biblio USING(biblionumber) WHERE DATE(statistics.datetime) > DATE_SUB(CURRENT_DATE(),INTERVAL 6 MONTH) AND DATE(statistics.datetime)<=CURRENT_DATE() AND statistics.itemnumber IS NOT NULL AND statistics.branch=<<choose library|branches>> AND items.ccode=<<ccode|CCODE>> AND items.location =<<location|LOC>> GROUP BY biblio.biblionumber ORDER BY circs DESC",,,,,,,,
R.002420,"/*
R.002420

----------

Name: Total Items added in a Year
Created by: Heather Braum

----------

Group: Daily, Monthly, Yearly Stats
     Yearly

Created on: 2014-12-03 20:25:09
Modified on: 2014-12-03 20:25:09
Date last run: 2022-09-22 16:33:29

----------

Public: 0
Expiry: 300

----------



----------
*/

",SELECT count(i.itemnumber) as added from items i WHERE i.homebranch=<<branch|branches>> AND year(i.dateaccessioned) = <<enter four-digit year>>,,,,,,,,
R.002431,"/*
R.002431

----------

Name: 9.1a books owned as of beginning of prev  year (part 1)
Created by: Heather Braum

----------

Group: Administrative Reports
     -

Created on: 2015-01-08 16:37:35
Modified on: 2020-01-01 14:17:04
Date last run: 2022-01-04 16:29:17

----------

Public: 0
Expiry: 0

----------

This report gives total number of books owned as of January 1, [previous year]. Need to run part 2 report to get items deleted in [previous year] that were added before [previous year]. ready for 2016. 

----------
*/

","SELECT homebranch, count(*) FROM items WHERE dateaccessioned < '2019-01-01' AND ((itype IN ('book','localhold2','newbook','walkin2')) OR (itype='localhold' and ccode IN ('easy','fiction','nonfiction','profcoll')) OR (itype='reference' and ccode NOT IN ('bookoncd','bookonmp','computer','GADGET','GAMECUBE','magazine','MAP','SOFTWARE','vhs','dvd','misc','blu-ray')) OR (itype='walkin' and ccode IN ('biography','easy','holiday','kansas','genealogy','nonfiction','profcoll','walkin'))) GROUP BY homebranch LIMIT 100",,,,,,,,
R.002447,"/*
R.002447

----------

Name: Ottawa Withdrawn, including patron name charged for lost material
Created by: Heather Braum

----------

Group:  OTTAWA
     -

Created on: 2015-01-22 09:58:34
Modified on: 2021-08-16 13:43:55
Date last run: 2020-09-24 11:15:23

----------

Public: 0
Expiry: 0

----------

<p><span style=""color: yellow; background-color: red; font-size: 200%;"">References accountlines.accounttype.  Needs to be updated after January 4, 2020</span></p>

----------
*/

","SELECT CONCAT('<a href=\""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',borrowers.borrowernumber,'"" target=""_blank"">',borrowers.cardnumber,'</a>') as ""link to borrower"", accountlines.date, biblio.title, items.barcode, borrowers.firstname, borrowers.surname, borrowers.cardnumber, accountlines.amountoutstanding FROM biblio, items, accountlines, borrowers WHERE items.biblionumber=biblio.biblionumber AND items.itemnumber=accountlines.itemnumber AND accountlines.borrowernumber=borrowers.borrowernumber AND accountlines.accounttype='L' AND items.itemnumber IN (SELECT itemnumber FROM items WHERE homebranch='OTTAWA' AND withdrawn <> '0')",,,,,,,,
R.002448,"/*
R.002448

----------

Name: Titles with 3+ holds by your patrons (Doniphan-specific version)
Created by: Heather Braum

----------

Group:  Doniphan County
     -

Created on: 2015-01-22 14:29:18
Modified on: 2021-08-16 20:40:28
Date last run: 2022-09-23 15:09:34

----------

Public: 0
Expiry: 0

----------

Combined for all four Doniphan branches. 

----------
*/

","SELECT CONCAT ('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',b.biblionumber,'\"" target=""_blank"">'""link to record""'</a>') AS ""link to record"", b.title, (SELECT count(r.reserve_id) FROM reserves r WHERE r.biblionumber=b.biblionumber AND r.branchcode LIKE 'DONI%') as your_patron_holds, (SELECT i.ccode FROM items i WHERE i.biblionumber=r.biblionumber LIMIT 1) as collection, (SELECT count(i.itemnumber) FROM items i WHERE i.biblionumber=r.biblionumber AND i.damaged='0' AND i.withdrawn='0' AND itemlost='0' AND i.homebranch LIKE 'DONI%') as your_lib_holdings FROM biblio b LEFT JOIN reserves r USING (biblionumber) LEFT JOIN items i USING(biblionumber) WHERE r.biblionumber=b.biblionumber AND r.branchcode LIKE 'DONI%' AND r.biblionumber IN (SELECT r.biblionumber FROM reserves r WHERE r.biblionumber=b.biblionumber AND r.branchcode LIKE 'DONI%' GROUP BY r.biblionumber HAVING count(r.reserve_id) > '2') GROUP BY b.biblionumber HAVING count(r.reserve_id) > '2' ORDER BY your_lib_holdings asc",,,,,,,,
R.002451,"/*
R.002451

----------

Name: Shelf list of callnumbers with extra spaces
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Shelf Lists

Created on: 2015-01-27 10:55:11
Modified on: 2022-08-09 09:49:58
Date last run: 2022-08-09 10:05:18

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  CONCAT_WS('',
    '<a ',
    'class=""btn btn-default noprint"" ', 
    'href=""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&frameworkcode=&biblionumber=',
    items.biblionumber,
    '&itemnumber=',
    items.itemnumber,
    '"" target=""_blank"">',
    'Link to edit item</a>'
  ) AS LINK_TO_ITEM,
  items.itemnumber,
  Replace(items.itemcallnumber, ' ', '|') AS CALL_NUMBER_W_BREAKS,
  items.barcode AS ITEM_BARCODE,
  home_branches.branchname AS HOME_BRANCH,
  holding_branches.branchname AS HOLDING_BRANCH,
  If(
    perm_loc.lib = loc.lib, 
    perm_loc.lib, 
    Concat(perm_loc.lib, ' (', loc.lib, ')')
  ) AS LOCATION,
  itypes.description AS ITEM_TYPE,
  ccode.lib AS CCODE,
  If(
    items.copynumber IS NULL, 
    items.itemcallnumber,
    Concat(items.itemcallnumber, ' // Copy number: ', items.copynumber)
  ) AS CALL_NUMBER,
  biblio.author,
  biblio.title,
  cnlines.length AS SPINE_LABEL_LINES,
  CONCAT_WS('',
    'https://staff.nextkansas.org',
    '/cgi-bin/koha/cataloguing/additem.pl?op=edititem&frameworkcode=&biblionumber=',
    items.biblionumber,
    '&itemnumber=',
    items.itemnumber
  ) AS RAW_URL
FROM
  items LEFT JOIN
  biblio ON biblio.biblionumber = items.biblionumber LEFT JOIN
  biblioitems ON biblioitems.biblioitemnumber = items.biblionumber LEFT JOIN
  (
    SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches
    ) home_branches 
    ON home_branches.branchcode = items.homebranch
    LEFT JOIN
  (
    SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches) holding_branches 
      ON holding_branches.branchcode = items.holdingbranch 
      LEFT JOIN
  (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC'
    ) perm_loc 
    ON perm_loc.authorised_value = items.permanent_location 
    LEFT JOIN
  (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC'
    ) loc ON loc.authorised_value = items.location 
    LEFT JOIN
  (
    SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes
    ) itypes ON itypes.itemtype = items.itype 
    LEFT JOIN
  (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
    ) ccode 
    ON ccode.authorised_value = items.ccode JOIN
  (
    SELECT
      items.itemnumber,
      items.barcode,
      (Length(items.itemcallnumber) - Length(Replace(items.itemcallnumber, ' ', '')) + 1) AS length,
      items.homebranch
    FROM
      items
    WHERE
      items.homebranch Like <<Choose your library|branches:all>> AND
      (Length(Replace(items.itemcallnumber, ' ', '-')) - Length(Replace(items.itemcallnumber, ' ', '')) + 1) > <<Greater than X lines on the spine label|YNUMBER>>) cnlines 
    ON cnlines.itemnumber = items.itemnumber AND
      cnlines.homebranch = items.homebranch
WHERE
  items.homebranch Like <<Choose your library|branches:all>> AND
  (Replace(items.itemcallnumber, ' ', '|') LIKE ""\|%"" OR
    Replace(items.itemcallnumber, ' ', '|') LIKE ""%\|\|%"" OR
    Replace(items.itemcallnumber, ' ', '|') LIKE ""%\|"")
  
GROUP BY
  items.itemnumber,
  cnlines.length,
  items.itemcallnumber
ORDER BY
  HOME_BRANCH,
  LOCATION,
  ITEM_TYPE,
  CCODE,
  CALL_NUMBER,
  biblio.author,
  biblio.title,
  items.itemnumber",,,,,,,,
R.002456,"/*
R.002456

----------

Name: Items lost report
Created by: Heather Braum

----------

Group: -
     -

Created on: 2015-02-05 14:43:34
Modified on: 2015-12-09 15:27:22
Date last run: 2020-07-09 12:10:06

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT items.itemnumber FROM items WHERE (((items.itemlost IN ('1','2','3','4')) OR items.withdrawn <> '0') AND items.timestamp < adddate(m,-13,getdate())) OR ((items.itemlost IN ('1','2','3','4')) AND items.itemlost_on < adddate(m,-13,getdate())) OR (items.withdrawn <> '0' AND items.itemwithdrawn_on < adddate(m,-13,getdate()))",,,,,,,,
R.002459,"/*
R.002459

----------

Name: Which accounts have which staff permissions?
Created by: Heather Braum

----------

Group: Administrative Reports
     System-admin

Created on: 2015-02-10 14:41:41
Modified on: 2021-05-06 12:19:21
Date last run: 2022-08-29 13:08:09

----------

Public: 0
Expiry: 0

----------

From VOKAL/CIN.

----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/members/member-flags.pl?member=', borrowers.borrowernumber, '\"" target=""_blank"">edit permissions</a>') AS EDIT_PERMISSIONS,
  Concat('http://staff.nextkansas.org/cgi-bin/koha/members/member-flags.pl?member=', borrowers.borrowernumber) AS RAW_LINK,
  borrowers.surname,
  borrowers.firstname,
  borrowers.email,
  borrowers.cardnumber,
  borrowers.categorycode,
  borrowers.branchcode,
  borrowers.lastseen,
  If(borrowers.flags MOD 2, 'Set', '') AS SuperLib,
  If(MOD(borrowers.flags DIV 2, 2), 'All parameters', GROUP_CONCAT(If(user_permissions.module_bit = 1, permissions.code, '') SEPARATOR ' ')) AS ""CircPermissions"",
  If(MOD(borrowers.flags DIV 4, 2), 'Set', '') AS 'View staff interface',
  If(MOD(borrowers.flags DIV 8, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 3, permissions.code, '') SEPARATOR ' ')) AS ManParams,
  If(MOD(borrowers.flags DIV 16, 2), 'Set', '') AS 'Add/modify patrons',
  If(MOD(borrowers.flags DIV 32, 2), 'Set', '') AS 'Modify permissions',
  If(MOD(borrowers.flags DIV 64, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 6, permissions.code, '') SEPARATOR ' ')) AS ReservePermissions,
  If(MOD(borrowers.flags DIV 128, 2), 'Set', '') AS BorrowBooks,
  If(MOD(borrowers.flags DIV 512, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 9, permissions.code, '') SEPARATOR ' ')) AS EditCatalogue,
  If(MOD(borrowers.flags DIV 1024, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 10, permissions.code, '') SEPARATOR ' ')) AS UpdateCharges,
  If(MOD(borrowers.flags DIV 2048, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 11, permissions.code, '') SEPARATOR ' ')) AS Acquisition,
  If(MOD(borrowers.flags DIV 4096, 2), 'Set', '') AS Management,
  If(MOD(borrowers.flags DIV 8192, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 13, permissions.code, '') SEPARATOR ' ')) AS Tools,
  If(MOD(borrowers.flags DIV 16384, 2), 'Set', '') AS EditAuthories,
  If(MOD(borrowers.flags DIV 32768, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 15, permissions.code, '') SEPARATOR ' ')) AS Series,
  If(MOD(borrowers.flags DIV 65536, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 16, permissions.code, '') SEPARATOR ' ')) AS Reports,
  If(MOD(borrowers.flags DIV 131072, 2), 'Set', '') AS StaffAccess,
  If(MOD(borrowers.flags DIV 262144, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 18, permissions.code, '') SEPARATOR ' ')) AS CourseReserves,
  If(MOD(borrowers.flags DIV 524288, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 19, permissions.code, '') SEPARATOR ' ')) AS Plugins
FROM
  borrowers
  LEFT JOIN user_permissions
    ON borrowers.borrowernumber = user_permissions.borrowernumber
  LEFT JOIN permissions
    ON user_permissions.code = permissions.code
WHERE
  ((borrowers.flags > 0) OR
    (user_permissions.module_bit > 0)) AND
  borrowers.branchcode LIKE <<Choose a library|LBRANCH>>
GROUP BY
  borrowers.borrowernumber
ORDER BY
  SuperLib DESC,
  borrowers.surname,
  borrowers.firstname,
  borrowers.categorycode,
  borrowers.branchcode,
  borrowers.firstname",,,,,,,,
R.002461,"/*
R.002461

----------

Name: Circ stats by source of acquisition
Created by: Heather Braum

----------

Group: Circulation
     Circ Stats

Created on: 2015-02-12 10:09:53
Modified on: 2015-02-12 10:17:20
Date last run: 2019-09-18 15:49:26

----------

Public: 0
Expiry: 0

----------

Note -- if you haven't been consistent with the names of sources of acquisition, this may be a long report. 

----------
*/

","SELECT booksellerid, count(itemnumber) as ""total items"", SUM(issues+renewals) as ""total circ"" FROM items WHERE homebranch=<<choose branch|branches>> GROUP BY booksellerid",,,,,,,,
R.002462,"/*
R.002462

----------

Name: Holds Queue numbers
Created by: Heather Braum

----------

Group: -
     -

Created on: 2015-02-12 21:15:52
Modified on: 2021-07-16 10:42:19
Date last run: 2022-10-03 13:00:04

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  CURRENT_TIMESTAMP() AS ""report time"",
  Coalesce(tmp_holdsqueue.holdingbranch, ""Total"") AS BRANCH,
  count(*)
FROM
  tmp_holdsqueue
GROUP BY
  tmp_holdsqueue.holdingbranch WITH ROLLUP
LIMIT 100",,,,,,,,
R.002466,"/*
R.002466

----------

Name: PATRON LIST WITH EMAIL, PHONE, CITY & ZIP
Created by: -

----------

Group: Borrowers
     -

Created on: 2015-02-19 14:40:15
Modified on: 2015-02-23 09:29:39
Date last run: 2022-08-10 17:11:16

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT email, phone, B_phone, cardnumber, surname, firstname, zipcode, city, debarred, dateexpiry FROM borrowers WHERE branchcode=<<branch|branches>> ORDER BY branchcode, surname ASC",,,,,,,,
R.002475,"/*
R.002475

----------

Name: Reserves Lost in Transit
Created by: Heather Braum

----------

Group: -
     -

Created on: 2015-03-25 15:37:42
Modified on: 2022-03-29 12:05:45
Date last run: 2022-03-29 12:04:33

----------

Public: 0
Expiry: 0

----------

Obselete

----------
*/

","SELECT
  Concat('Obselete - it is no longer possible for an item to be ""In transit"" and ""Lost"" at the same time.')",,,,,,,,
R.002478,"/*
R.002478

----------

Name: Active borrowers count in last 6 months and 1 year
Created by: Heather Braum

----------

Group: Borrowers
     Patron Statistics

Created on: 2015-03-31 12:01:48
Modified on: 2015-08-20 10:15:20
Date last run: 2022-08-31 12:06:04

----------

Public: 0
Expiry: 0

----------

Gives a count of active borrowers interacting at your library (interaction=they have checked out, renewed, or checked in items), during a certain time period.

----------
*/

","SELECT @1:=""Last 6 months: Active Unique Borrowers"" AS ""Active Borrowers"", count(DISTINCT s.borrowernumber) AS ""Count"" FROM statistics s WHERE s.branch = <<Choose library|branches>>AND s.datetime >= date_sub(now(), interval 6 month)

UNION


SELECT @1:=""Last 1 year: Active Unique Borrowers"", count(DISTINCT s.borrowernumber)  FROM statistics s WHERE s.branch=<<Choose library|branches>> AND s.datetime >= date_sub(now(), interval 1 year)

UNION

SELECT @1:=""Last 6 months: Active Unique Registered Borrowers"", count(DISTINCT s.borrowernumber) FROM statistics s LEFT JOIN borrowers b USING(borrowernumber) WHERE s.branch=<<Choose library|branches>> AND b.branchcode=<<Choose library|branches>> AND s.datetime >= date_sub(now(), interval 6 month)

UNION

SELECT @1:=""Last 1 year: Active Unique Registered Borrowers"", count(DISTINCT s.borrowernumber) FROM statistics s LEFT JOIN borrowers b USING(borrowernumber) WHERE s.branch=<<Choose library|branches>> AND b.branchcode=<<Choose library|branches>> AND s.datetime >= date_sub(now(), interval 1 year)",,,,,,,,
R.002491,"/*
R.002491

----------

Name: Multiple copies of a title at Doniphan libraries
Created by: Heather Braum

----------

Group:  Doniphan County
     -

Created on: 2015-04-14 17:54:17
Modified on: 2021-08-16 20:40:35
Date last run: 2022-09-23 15:05:57

----------

Public: 0
Expiry: 0

----------

This is a duplicate of report #1573 but it's written specifically for Doniphan libraries. 

----------
*/

","SELECT CONCAT('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',biblio.biblionumber,'\"" target=""_blank"">',biblio.biblionumber,'</a>') as ""link to record"", biblio.title, biblio.author, count(itemnumber) as ""total items"", GROUP_CONCAT(items.homebranch SEPARATOR '; ') as ""home libraries"", GROUP_CONCAT(items.barcode SEPARATOR '; ') as barcodes, GROUP_CONCAT(items.ccode SEPARATOR '; ') as ccodes, GROUP_CONCAT(items.location SEPARATOR '; ') as locations, GROUP_CONCAT(items.itemcallnumber SEPARATOR '; ') as callnumbers FROM biblio LEFT JOIN items USING(biblionumber) WHERE items.homebranch LIKE 'DONI%' GROUP BY items.biblionumber HAVING count(items.itemnumber) > 1 ORDER BY biblio.author
",,,,,,,,
R.002492,"/*
R.002492

----------

Name: Patron search
Created by: SABETHA TECH

----------

Group: Borrowers
     -

Created on: 2015-04-29 17:27:55
Modified on: 2015-04-29 17:29:49
Date last run: 2019-05-02 12:01:33

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT  borrowers.surname,borrowers.firstname,borrowers.branchcode FROM borrowers   WHERE borrowers.branchcode='PHSHS' AND borrowers.categorycode='STUDENT'  AND borrowers.zipcode='66002' ORDER BY borrowers.surname asc,borrowers.firstname asc,borrowers.branchcode asc",,,,,,,,
R.002497,"/*
R.002497

----------

Name: Movies with Restricted Item Type more than 30 days past added
Created by: Heather Braum

----------

Group: Administrative Reports
     Local Holds - Walkin-admin

Created on: 2015-05-14 16:48:51
Modified on: 2021-05-05 15:32:06
Date last run: 2022-10-03 09:04:29

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Lists item barcode numbers that need their item type updated to ""MOVIE"" after the appropriate amount of time has passed from their date of accession</p>
<ul><li>Shows barcodes of items that are in need of updating</li>
<li>at all NExpress libraries</li>
<li>grouped by item barcode number</li>
<li>sorted by homebranch, collection code, and date accessioned</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Need for report depreciated by addition of automatic item modification by age tool added in Koha 16.11.  Run monthly to make sure automatic tool is working correctly.</p>
<p></p>
<p>Original report created by Heather Braum.  Explanatory notes added and query updated by GHW on 2017.12.28.</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2497&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  items.itemnumber,
  items.barcode
FROM
  items
  JOIN biblio ON items.biblioitemnumber = biblio.biblionumber
WHERE
  ((items.itype = 'NVIDLH' OR
    items.itype = 'NVIDWALK') AND
  items.dateaccessioned < Date_Sub(CurDate(), INTERVAL 30 DAY) AND
  items.ccode <> 'ILL' AND
  items.ccode <> 'GADGET' AND
  items.ccode <> 'MAGAZINE' AND
  items.ccode <> 'COMPUTER' AND
  biblio.title NOT LIKE 'BASEHOR ILL%') OR
  (items.itype = ""NVIDNEW"" AND
  items.dateaccessioned < Date_Sub(CurDate(), INTERVAL 60 DAY) AND
  items.homebranch = ""MCLOUTH"")
GROUP BY
  items.barcode
ORDER BY
  items.homebranch,
  items.ccode,
  items.dateaccessioned
LIMIT 1000",,,,,,,,
R.002498,"/*
R.002498

----------

Name: Books with Restricted Item Type more than 60 days past added
Created by: Heather Braum

----------

Group: Administrative Reports
     Local Holds - Walkin-admin

Created on: 2015-05-14 16:53:56
Modified on: 2021-05-05 15:29:34
Date last run: 2022-10-03 09:04:29

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Lists item barcode numbers that need their item type updated to ""BOOK"" after the appropriate amount of time has passed from their date of accession</p>
<ul><li>Shows barcodes of items that are in need of updating</li>
<li>at all NExpress libraries</li>
<li>grouped by item barcode number</li>
<li>sorted by homebranch, collection code, and date accessioned</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Need for report depreciated by addition of automatic item modification by age tool added in Koha 16.11.  Run monthly to make sure automatic tool is working correctly.</p>
<p></p>
<p>Original report created by Heather Braum.  Explanatory notes added and query updated by GHW on 2017.12.28.</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2498&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  items.itemnumber,
  items.barcode
FROM
  items
  JOIN biblio ON items.biblionumber = biblio.biblionumber
WHERE
  (items.itype = 'LOCALHOLD2' or items.itype = 'WALKIN2') AND
  items.dateaccessioned < curdate() - Interval 60 Day AND
  (items.ccode <> 'ILL' AND items.ccode <> 'GADGET' AND items.ccode <> 'MAGAZINE' AND items.ccode <> 'COMPUTER') AND
  biblio.title NOT LIKE 'BASEHOR ILL%'
ORDER BY
  items.homebranch,
  items.ccode,
  items.dateaccessioned DESC
LIMIT 1000",,,,,,,,
R.002514,"/*
R.002514

----------

Name: Burlingame Computers Status
Created by: Heather Braum

----------

Group:  BURLINGAME
     -

Created on: 2015-05-26 13:41:59
Modified on: 2021-08-16 13:38:33
Date last run: 2019-12-03 16:39:13

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT 
	CASE 
		WHEN i.itemnumber = '1513837' THEN 'COMPUTER #1'
		WHEN i.itemnumber = '1513838' THEN 'COMPUTER #2'
		WHEN i.itemnumber = '1513839' THEN 'COMPUTER #3'
		WHEN i.itemnumber = '1513841' THEN 'COMPUTER #4'
		WHEN i.itemnumber = '1513842' THEN 'COMPUTER #5'
		WHEN i.itemnumber = '1513844' THEN 'COMPUTER #6'
		END ""computers"",
i.itemnumber, b.firstname, b.surname, s.issuedate, 30 - TIMESTAMPDIFF(MINUTE,s.issuedate,CURRENT_TIMESTAMP()) 'Minutes remaining',
    IF(TIMESTAMPDIFF(MINUTE,s.issuedate,CURRENT_TIMESTAMP())> 30  ,'YES','') 'Kick off?' FROM borrowers b LEFT JOIN issues s USING(borrowernumber) LEFT JOIN items i USING(itemnumber) WHERE i.itemnumber IN ('1513837','1513838','1513839','1513841','1513842','1513844') GROUP BY computers ORDER BY s.issuedate DESC",,,,,,,,
R.002516,"/*
R.002516

----------

Name: Monthly Fines Report 2
Created by: Robin Hastings

----------

Group: -
     -

Created on: 2015-05-28 10:30:15
Modified on: 2019-12-26 11:46:17
Date last run: 2022-06-08 17:56:20

----------

Public: 0
Expiry: 0

----------

<p><span style=""color: yellow; background-color: red; font-size: 200%;"">References accountlines.accounttype.  Needs to be updated after January 4, 2020</span></p>

----------
*/

","SELECT accounttype, COUNT(*) from accountlines LEFT JOIN borrowers USING (borrowernumber) WHERE borrowers.branchcode=""EUDORA"" AND year(date)=""2015"" AND month(date)=""04"" GROUP BY accounttype",,,,,,,,
R.002519,"/*
R.002519

----------

Name: Overdue items on Transfers to receive report
Created by: Heather Braum

----------

Group: -
     -

Created on: 2015-06-03 16:10:57
Modified on: 2022-03-29 12:07:40
Date last run: 2022-09-27 14:07:22

----------

Public: 0
Expiry: 0

----------

Obselete.  Use Report 3658 - GHW - Missing in transit items - instead.

----------
*/

","SELECT 
  CONCAT('Obselete.  Use Report 3658 - GHW - Missing in transit items - instead.')",,,,,,,,
R.002520,"/*
R.002520

----------

Name: Fixing Booksellerid, source of acquisition
Created by: Heather Braum

----------

Group:  HOLTON
     -

Created on: 2015-06-04 12:45:47
Modified on: 2021-08-16 20:37:33
Date last run: 2019-02-26 14:43:51

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT i.dateaccessioned,b.title, b.author,t.publicationyear, i.location,i.itype,i.itemcallnumber,i.barcode, i.booksellerid, CONCAT('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=',b.biblionumber,'&itemnumber=',i.itemnumber,'#edititem\"" target=""_blank"">'""edit item""'</a>') as ""edit barcode"" FROM items i LEFT JOIN biblio b USING (biblionumber) LEFT JOIN biblioitems t USING(biblionumber) WHERE homebranch='HOLTON' and (booksellerid NOT IN ('Abe Books','ABI-CLIO','Alibris','Amazon','Amer. Kids','American Library','Artist','Author','B&N.com','Basehor ','Best Buy','Better World','BMI','Book Farm','Books are Fun','Books on Tape','Books R Fun','Bookworm','Borders','Cathy Boyd','Cengage','Centerpoint','Chandler','Childrens Plus','Child%s World','Christian Book & Gift','Costco','Curley Books','Dillons','Doubleday','ebay','Free State Press','Gale','Garage Sale','Gift','Grey House Publishing','Grolier','GS','Guideposts','Gum%rop','Guys Read Grant - State Library of Kansas','Hastings','Hesston Lib.','Holton Country Mart','HyVee','I love a mystery','Indie Ink','Jo-Ann','Johns Hopkins','Kansas Heritage Center','Kansas Heritage Center','King Souper','Kmart','Knowbuddy Resources','Kohls','Large Print Overstocks','Library Choice','Lifeway','Linwood PL','LPO','Lulu','McNaughton','MicroMarketing','MidAmerica','National Geographic','NEKLS','Ollis Books','Paper Source','PCUniverse','Penworthy','Quill.com','Randy Sauer','Recorded Books','Reminise','Rosie Cutrer','Sagebrush','Salem','Sams','Scholastic','SEBCO','Sentimental Productions','S%ow Me Books','Southeastern','State Library','Sunflower Supply','Tandem Books','Taped Editions','Target','Taste of Home','The Raven','Thrift Book','Today S%ow','Walmart','Wamego Library','Watermark','World Book'))
ORDER BY i.dateaccessioned desc",,,,,,,,
R.002527,"/*
R.002527

----------

Name: 25 month circulaiton history for a borrower
Created by: Heather Braum

----------

Group: Borrowers
     -

Created on: 2015-06-24 17:10:01
Modified on: 2022-02-07 21:31:27
Date last run: 2022-02-07 22:24:01

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo class=noprint>
<p>Shows borrower history from the statistics table (goes back 25 months)</p>
<ul><li>Shows history for the previous 25 months</li>
<li>for the borrower you specify</li>
<li>grouped by itemnumber</li>
<li>sorted by statistics date</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Updated in February of 2022</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#borrowers #circulation_history</p>
</div>

----------
*/

","SELECT 
  borrowers.cardnumber, 
  If(borrowers.privacy = 2, 'History', cko_branch.branchname) AS branchname, 
  If(borrowers.privacy = 2, 'set to', statistics.datetime) AS CKO_RENEW_DATE, 
  If( 
    borrowers.privacy = 2, 
    'anonymous', 
    Concat_Ws('<br />', 
      branches.branchname, 
      locs.lib, 
      itemtypes.description, 
      ccodes.lib, 
      biblio.author, 
      biblio.title, 
      biblio.subtitle, 
      items.itemcallnumber, 
      items.copynumber, 
      items.barcode 
    ) 
  ) AS INFO 
FROM 
  statistics JOIN 
  borrowers ON borrowers.borrowernumber = statistics.borrowernumber JOIN 
  items ON items.itemnumber = statistics.itemnumber JOIN 
  branches cko_branch ON cko_branch.branchcode = statistics.branch JOIN 
  branches ON branches.branchcode = items.homebranch LEFT JOIN 
  (SELECT 
     authorised_values.category, 
     authorised_values.authorised_value, 
     authorised_values.lib, 
     authorised_values.lib_opac 
   FROM 
     authorised_values 
   WHERE 
     authorised_values.category = 'loc') locs ON locs.authorised_value = 
      items.permanent_location LEFT JOIN 
  itemtypes ON itemtypes.itemtype = items.itype LEFT JOIN 
  (SELECT 
     authorised_values.category, 
     authorised_values.authorised_value, 
     authorised_values.lib, 
     authorised_values.lib_opac 
   FROM 
     authorised_values 
   WHERE 
     authorised_values.category = 'ccode') ccodes ON 
       ccodes.authorised_value = items.ccode JOIN 
  biblio ON items.biblionumber = biblio.biblionumber 
WHERE 
  (statistics.type = 'issue' OR 
      statistics.type = 'renew') AND 
  borrowers.cardnumber = <<Enter card number>> 
GROUP BY 
  borrowers.cardnumber, 
  If(borrowers.privacy = 2, 'History', cko_branch.branchname), 
  If(borrowers.privacy = 2, 'set to', statistics.datetime), 
  If( 
    borrowers.privacy = 2, 
    'anonymous', 
    Concat_Ws('<br />', 
      branches.branchname, 
      locs.lib, 
      itemtypes.description, 
      ccodes.lib, 
      biblio.author, 
      biblio.title, 
      biblio.subtitle, 
      items.itemcallnumber, 
      items.copynumber, 
      items.barcode 
    ) 
  ) 
ORDER BY 
  CKO_RENEW_DATE DESC",,,,,,,,
R.002572,"/*
R.002572

----------

Name: Dewey number circulation at your library in a given month
Created by: Heather Braum

----------

Group: Circulation
     Circ Stats

Created on: 2015-07-28 17:39:50
Modified on: 2015-09-10 15:10:13
Date last run: 2022-05-31 13:39:19

----------

Public: 0
Expiry: 0

----------

Circulation of Dewey numbers (grouped by Dewey numbers and location) during a set month at your library (items from any collection). From the dropdown menus, choose month, year, and your library. 

----------
*/

","SELECT 
	CASE
WHEN i.itemcallnumber REGEXP '^.*00[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*01[0-9] .*$' THEN '000 Generalities'
WHEN i.itemcallnumber REGEXP '^.*01[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*01[0-9] .*$' THEN '010 Bibliographies'
WHEN i.itemcallnumber REGEXP '^.*02[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*02[0-9] .*$' THEN '020 Library and Information Science'
WHEN i.itemcallnumber REGEXP '^.*03[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*03[0-9] .*$' THEN '030 General Encyclopedias'
WHEN i.itemcallnumber REGEXP '^.*04[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*04[0-9] .*$' THEN '040 Not used'
WHEN i.itemcallnumber REGEXP '^.*05[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*05[0-9] .*$' THEN '050 General Periodicals'
WHEN i.itemcallnumber REGEXP '^.*06[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*06[0-9] .*$' THEN '060 General Organizations and Museums'
WHEN i.itemcallnumber REGEXP '^.*07[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*07[0-9] .*$' THEN '070 Journalism and Publishing'
WHEN i.itemcallnumber REGEXP '^.*08[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*08[0-9] .*$' THEN '080 Collections'
WHEN i.itemcallnumber REGEXP '^.*09[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*09[0-9] .*$' THEN '090 Manuscripts and Rare Books'
WHEN i.itemcallnumber REGEXP '^.*10[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*10[0-9] .*$' THEN '100 Philosophy'
WHEN i.itemcallnumber REGEXP '^.*11[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*11[0-9] .*$' THEN '110 Metaphysics'
WHEN i.itemcallnumber REGEXP '^.*12[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*12[0-9] .*$' THEN '120 Epistemology'
WHEN i.itemcallnumber REGEXP '^.*13[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*13[0-9] .*$' THEN '130 Paranormal Phenomena and Occult'
WHEN i.itemcallnumber REGEXP '^.*14[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*14[0-9] .*$' THEN '140 Specific Philosophies'
WHEN i.itemcallnumber REGEXP '^.*15[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*15[0-9] .*$' THEN '150 Psychology'
WHEN i.itemcallnumber REGEXP '^.*16[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*16[0-9] .*$' THEN '160 Logic'
WHEN i.itemcallnumber REGEXP '^.*17[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*17[0-9] .*$' THEN '170 Ethics'
WHEN i.itemcallnumber REGEXP '^.*18[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*18[0-9] .*$' THEN '180 Ancient Medieval and Oriental Philosophy'
WHEN i.itemcallnumber REGEXP '^.*19[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*19[0-9] .*$' THEN '190 Modern Western Philosophy'
WHEN i.itemcallnumber REGEXP '^.*20[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*20[0-9] .*$' THEN '200 Religion'
WHEN i.itemcallnumber REGEXP '^.*21[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*21[0-9] .*$' THEN '210 Natural Religion'
WHEN i.itemcallnumber REGEXP '^.*22[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*22[0-9] .*$' THEN '220 Bible'
WHEN i.itemcallnumber REGEXP '^.*23[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*23[0-9] .*$' THEN '230 Christian Theology'
WHEN i.itemcallnumber REGEXP '^.*24[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*24[0-9] .*$' THEN '240 Christian Moral Theology'
WHEN i.itemcallnumber REGEXP '^.*25[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*25[0-9] .*$' THEN '250 Local Church and Religious Orders'
WHEN i.itemcallnumber REGEXP '^.*26[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*26[0-9] .*$' THEN '260 Social and Ecclesiastical Theology'
WHEN i.itemcallnumber REGEXP '^.*27[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*27[0-9] .*$' THEN '270 History and Geography of Church'
WHEN i.itemcallnumber REGEXP '^.*28[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*28[0-9] .*$' THEN '280 Christian Denominations and Sects'
WHEN i.itemcallnumber REGEXP '^.*29[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*29[0-9] .*$' THEN '290 Nonchristian and Comparative Religion'
WHEN i.itemcallnumber REGEXP '^.*30[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*30[0-9] .*$' THEN '300 Social Sciences'
WHEN i.itemcallnumber REGEXP '^.*31[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*31[0-9] .*$' THEN '310 Statistics'
WHEN i.itemcallnumber REGEXP '^.*32[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*32[0-9] .*$' THEN '320 Political Science'
WHEN i.itemcallnumber REGEXP '^.*33[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*33[0-9] .*$' THEN '330 Economics'
WHEN i.itemcallnumber REGEXP '^.*34[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*34[0-9] .*$' THEN '340 Law'
WHEN i.itemcallnumber REGEXP '^.*35[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*35[0-9] .*$' THEN '350 Public Administration'
WHEN i.itemcallnumber REGEXP '^.*36[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*36[0-9] .*$' THEN '360 Social Concerns and Services'
WHEN i.itemcallnumber REGEXP '^.*37[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*37[0-9] .*$' THEN '370 Education'
WHEN i.itemcallnumber REGEXP '^.*38[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*38[0-9] .*$' THEN '380 Trade and Commerce'
WHEN i.itemcallnumber REGEXP '^.*39[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*39[0-9] .*$' THEN '390 Customs, Etiquette, Folklore'
WHEN i.itemcallnumber REGEXP '^.*40[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*40[0-9] .*$' THEN '400 Languages'
WHEN i.itemcallnumber REGEXP '^.*41[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*41[0-9] .*$' THEN '410 Linguistics'
WHEN i.itemcallnumber REGEXP '^.*42[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*42[0-9] .*$' THEN '420 English Language'
WHEN i.itemcallnumber REGEXP '^.*43[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*43[0-9] .*$' THEN '430 Germanic and Scandinavian Languages'
WHEN i.itemcallnumber REGEXP '^.*44[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*44[0-9] .*$' THEN '440 French'
WHEN i.itemcallnumber REGEXP '^.*45[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*45[0-9] .*$' THEN '450 Italian'
WHEN i.itemcallnumber REGEXP '^.*46[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*46[0-9] .*$' THEN '460 Spanish'
WHEN i.itemcallnumber REGEXP '^.*47[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*47[0-9] .*$' THEN '470 Latin'
WHEN i.itemcallnumber REGEXP '^.*48[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*48[0-9] .*$' THEN '480 Classical Greek'
WHEN i.itemcallnumber REGEXP '^.*49[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*49[0-9] .*$' THEN '490 Other Languages'
WHEN i.itemcallnumber REGEXP '^.*50[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*50[0-9] .*$' THEN '500 Pure Sciences'
WHEN i.itemcallnumber REGEXP '^.*51[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*51[0-9] .*$' THEN '510 Math'
WHEN i.itemcallnumber REGEXP '^.*52[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*52[0-9] .*$' THEN '520 Astronomy'
WHEN i.itemcallnumber REGEXP '^.*53[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*53[0-9] .*$' THEN '530 Physics'
WHEN i.itemcallnumber REGEXP '^.*54[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*54[0-9] .*$' THEN '540 Chemistry'
WHEN i.itemcallnumber REGEXP '^.*55[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*55[0-9] .*$' THEN '550 Earth Science'
WHEN i.itemcallnumber REGEXP '^.*56[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*56[0-9] .*$' THEN '560 Paleontology'
WHEN i.itemcallnumber REGEXP '^.*57[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*57[0-9] .*$' THEN '570 Life Sciences'
WHEN i.itemcallnumber REGEXP '^.*58[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*58[0-9] .*$' THEN '580 Botany'
WHEN i.itemcallnumber REGEXP '^.*59[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*59[0-9] .*$' THEN '590 Zoology'
WHEN i.itemcallnumber REGEXP '^.*60[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*60[0-9] .*$' THEN '600 Applied Sciences and Technology'
WHEN i.itemcallnumber REGEXP '^.*61[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*61[0-9] .*$' THEN '610 Medicine'
WHEN i.itemcallnumber REGEXP '^.*62[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*62[0-9] .*$' THEN '620 Engineering'
WHEN i.itemcallnumber REGEXP '^.*63[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*63[0-9] .*$' THEN '630 Agriculture'
WHEN i.itemcallnumber REGEXP '^.*64[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*64[0-9] .*$' THEN '640 Home Economics'
WHEN i.itemcallnumber REGEXP '^.*65[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*65[0-9] .*$' THEN '650 Management'
WHEN i.itemcallnumber REGEXP '^.*66[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*66[0-9] .*$' THEN '660 Chemical Technologies'
WHEN i.itemcallnumber REGEXP '^.*67[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*67[0-9] .*$' THEN '670 Manufacturing'
WHEN i.itemcallnumber REGEXP '^.*68[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*68[0-9] .*$' THEN '680 Application Specific Manufacturing'
WHEN i.itemcallnumber REGEXP '^.*69[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*69[0-9] .*$' THEN '690 Building'
WHEN i.itemcallnumber REGEXP '^.*70[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*70[0-9] .*$' THEN '700 Arts'
WHEN i.itemcallnumber REGEXP '^.*71[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*71[0-9] .*$' THEN '710 Civic and Landscape Art'
WHEN i.itemcallnumber REGEXP '^.*72[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*72[0-9] .*$' THEN '720 Architecture'
WHEN i.itemcallnumber REGEXP '^.*73[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*73[0-9] .*$' THEN '730 Sculpture'
WHEN i.itemcallnumber REGEXP '^.*74[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*74[0-9] .*$' THEN '740 Drawing'
WHEN i.itemcallnumber REGEXP '^.*75[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*75[0-9] .*$' THEN '750 Painting'
WHEN i.itemcallnumber REGEXP '^.*76[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*76[0-9] .*$' THEN '760 Graphic and Printed Art'
WHEN i.itemcallnumber REGEXP '^.*77[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*77[0-9] .*$' THEN '770 Photography'
WHEN i.itemcallnumber REGEXP '^.*78[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*78[0-9] .*$' THEN '780 Music'
WHEN i.itemcallnumber REGEXP '^.*79[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*79[0-9] .*$' THEN '790 Sports and Recreation'
WHEN i.itemcallnumber REGEXP '^.*80[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*80[0-9] .*$' THEN '800 Literature'
WHEN i.itemcallnumber REGEXP '^.*81[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*81[0-9] .*$' THEN '810 American Literature'
WHEN i.itemcallnumber REGEXP '^.*82[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*82[0-9] .*$' THEN '820 English Literature'
WHEN i.itemcallnumber REGEXP '^.*83[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*83[0-9] .*$' THEN '830 Germanic Literature'
WHEN i.itemcallnumber REGEXP '^.*84[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*84[0-9] .*$' THEN '840 French Literature'
WHEN i.itemcallnumber REGEXP '^.*85[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*85[0-9] .*$' THEN '850 Italian Literature'
WHEN i.itemcallnumber REGEXP '^.*86[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*86[0-9] .*$' THEN '860 Spanish and Portuguese Literature'
WHEN i.itemcallnumber REGEXP '^.*87[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*87[0-9] .*$' THEN '870 Latin Literature'
WHEN i.itemcallnumber REGEXP '^.*88[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*88[0-9] .*$' THEN '880 Classical Greek Literature'
WHEN i.itemcallnumber REGEXP '^.*89[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*89[0-9] .*$' THEN '890 Literature of Other Languages'
WHEN i.itemcallnumber REGEXP '^.*90[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*90[0-9] .*$' THEN '900 History and Geography'
WHEN i.itemcallnumber REGEXP '^.*91[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*91[0-9] .*$' THEN '910 Travel and Geography'
WHEN i.itemcallnumber REGEXP '^.*92[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*92[0-9] .*$' THEN '920 Genealogy and Geography'
WHEN i.itemcallnumber REGEXP '^.*93[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*93[0-9] .*$' THEN '930 Ancient History'
WHEN i.itemcallnumber REGEXP '^.*94[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*94[0-9] .*$' THEN '940 European History'
WHEN i.itemcallnumber REGEXP '^.*95[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*95[0-9] .*$' THEN '950 Asian History'
WHEN i.itemcallnumber REGEXP '^.*96[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*96[0-9] .*$' THEN '960 African History'
WHEN i.itemcallnumber REGEXP '^.*97[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*97[0-9] .*$' THEN '970 North American History'
WHEN i.itemcallnumber REGEXP '^.*98[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*98[0-9] .*$' THEN '980 South American History'
WHEN i.itemcallnumber REGEXP '^.*99[0-9]\..*$' OR i.itemcallnumber REGEXP '^.*99[0-9] .*$' THEN '990 History of Other Areas'
		ELSE 'all others'
	END dewey_number, location, COUNT(s.datetime) as total_circ, COUNT(DISTINCT s.itemnumber) as unique_circed
FROM items i LEFT OUTER JOIN statistics s USING(itemnumber)
WHERE month(s.datetime)=<<Choose Month|Month>> AND year(s.datetime)=<<Choose Year|Year>> AND s.type IN ('issue','renew') AND s.branch=<<choose your library|branches>>
GROUP BY dewey_number, location",,,,,,,,
R.002594,"/*
R.002594

----------

Name: New items added in a month by itype and location for Overbrook
Created by: Heather Braum

----------

Group:  OVERBROOK
     -

Created on: 2015-08-28 05:54:05
Modified on: 2021-08-16 13:42:19
Date last run: 2019-05-28 13:39:42

----------

Public: 0
Expiry: 0

----------

For when Overbrook needs stats early.

----------
*/

","SELECT i.itype as ""Item Type"", i.location as ""Location"", count(i.biblionumber) as ""Total Added"" FROM items i WHERE month(i.dateaccessioned) = <<choose Month|Month>> AND year (i.dateaccessioned) = <<Choose Year|Year>> AND i.homebranch='OVERBROOK' GROUP BY i.homebranch,i.itype,i.location ORDER BY i.homebranch,i.itype,i.location ASC",,,,,,,,
R.002602,"/*
R.002602

----------

Name: Circ by Call Number Range (Circ of your items at Your Library)
Created by: Heather Braum

----------

Group: Circulation
     Circ Stats

Created on: 2015-09-10 13:49:15
Modified on: 2015-09-10 13:49:15
Date last run: 2022-02-14 21:57:38

----------

Public: 0
Expiry: 300

----------

Limited to Your Library's items, circed at your library, in a set year. 

----------
*/

","SELECT items.location, items.ccode, substring(items.itemcallnumber,1,4) AS 'Call Number range', count(*) AS count FROM statistics LEFT JOIN items USING (itemnumber) WHERE items.homebranch=<<choose library|branches>> AND statistics.type IN ('issue', 'renew') AND YEAR(datetime) = <<Choose Year|Year>> AND statistics.branch = <<branch|branches>> GROUP BY items.location, substring(items.itemcallnumber,1,4), items.ccode ORDER BY items.ccode, substring(items.itemcallnumber,1,4)",,,,,,,,
R.002608,"/*
R.002608

----------

Name: Fixing Series, VF items
Created by: Heather Braum

----------

Group: -
     -

Created on: 2015-09-22 18:03:58
Modified on: 2017-12-19 09:28:37
Date last run: 2022-09-15 10:39:04

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT CONCAT('<a href=\""/cgi-bin/koha/cataloguing/addbiblio.pl?biblionumber=',b.biblionumber,'&op=#tab4XX\"" target=""_blank"">'""edit item""'</a>') as ""edit item"", b.title, i.biblionumber, i.enumchron, b.seriestitle, ExtractValue(t.metadata, '//datafield[@tag=""490""]/subfield[@code>=""v""]') as 490v FROM items i LEFT JOIN biblio b USING(biblionumber) LEFT JOIN biblio_metadata t USING(biblionumber) WHERE i.homebranch='VALLEYFALL' AND i.enumchron IS NOT NULL AND i.biblionumber IN ('276732','464056','301816','635334','443660','276740','464162','670398','670400','552252','235770','533757','484338','504487','268612','362348','466391') AND b.seriestitle IS NULL",,,,,,,,
R.002609,"/*
R.002609

----------

Name: Orphaned requests
Created by: Heather Braum

----------

Group: Holds-Reserves
     -

Created on: 2015-09-24 17:47:27
Modified on: 2022-09-29 09:30:01
Date last run: 2022-09-29 10:00:41

----------

Public: 0
Expiry: 0

----------

The report returns patron's holds on records where, at the time of the hold placing, the record had items available to fulfill holds, but for a number of reasons, no items remain available at this time to fulfill the holds, due to:<br />
<br />
1) Last item available is overdue by 30+ days. <br />
2) Last item available is marked lost/damaged/withdrawn.<br />
3) Last item available is now not for loan (report ignores items with on-order status)<br />
<br />
The report returns a link to your patron's account, the patron's name, when the hold was placed and a link to the record.<br />
<br />
Please do the following to clean these up: <br />
<br />
1) Determine if your patron still wants the requested material. <br />
2) If the patron does still want the item, delete the hold, and either see if another record of the same title, similar format, is available in NExpress or request through ILL.<br />
3) If your patron does not want the item, please delete the hold. <br />
<br />
credit: Jesse Weaver @ ByWater

----------
*/

","SELECT 
  Concat( 
    '<a href=""/cgi-bin/koha/members/moremember.pl?borrowernumber=', 
    reserves.borrowernumber, 
    '"" target=""_blank"">Link to borrower</a>' 
  ) AS LINK_TO_BORROWER, 
  reserves.biblionumber, 
  Date_Format(reserves.reservedate, ""%Y-%m-%d"") AS reservedate, 
  Date_Format(reserves.expirationdate, ""%Y-%m-%d"") AS expirationdate, 
  Date_Format(reserves.reservedate + INTERVAL 1 YEAR, ""%Y-%m-%d"") AS one_year, 
  Concat( 
    '<a href=""/cgi-bin/koha/reserve/request.pl?biblionumbers=', 
    reserves.biblionumber, 
    '"" target=""_blank"">Link to request</a>' 
  ) AS LINK_TO_BIBLIO 
FROM 
  (SELECT 
      items.biblionumber, 
      Count(DISTINCT items.itemnumber) AS Count_itemnumber, 
      items.notforloan, 
      items.damaged, 
      items.itemlost, 
      items.withdrawn 
    FROM 
      items 
    WHERE 
      (items.notforloan < 1 OR 
        items.notforloan IS NULL) AND 
      (items.damaged = 0 OR 
        items.damaged IS NULL) AND 
      (items.itemlost = 0 OR 
        items.itemlost IS NULL) AND 
      (items.withdrawn = 0 OR 
        items.withdrawn IS NULL) 
    GROUP BY 
      items.biblionumber, 
      items.notforloan, 
      items.damaged, 
      items.itemlost, 
      items.withdrawn) counts RIGHT JOIN 
  reserves ON counts.biblionumber = reserves.biblionumber 
WHERE 
  Coalesce(counts.Count_itemnumber, 0) = 0 AND 
  reserves.branchcode LIKE <<Choose your library|LBRANCH>> 
ORDER BY 
  expirationdate, 
  one_year DESC ",,,,,,,,
R.002615,"/*
R.002615

----------

Name: records with 1 item, lost in transit
Created by: Heather Braum

----------

Group: -
     -

Created on: 2015-10-09 14:19:00
Modified on: 2015-10-15 16:44:44
Date last run: 2022-04-19 11:40:35

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT CONCAT ('<a href=\""/cgi-bin/koha/reserve/request.pl?biblionumber=',reserves.biblionumber,'\"" target=""_blank"">',reserves.reserve_id,'</a>') AS ""Link to Reserve"", (SELECT count(*) FROM items WHERE items.biblionumber=reserves.biblionumber) as itemcount FROM reserves where itemnumber iN (SELECT itemnumber from items where itemlost='4' and damaged='2') GROUP BY itemnumber",,,,,,,,
R.002622,"/*
R.002622

----------

Name: List of items with missing status limited by collection code
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Shelf Lists

Created on: 2015-10-15 14:49:39
Modified on: 2015-10-23 13:19:43
Date last run: 2022-07-16 10:13:46

----------

Public: 0
Expiry: 0

----------

Choose library and collection code 

----------
*/

","SELECT biblio.title, items.itemcallnumber, items.datelastseen, items.barcode FROM biblio LEFT JOIN items USING(biblionumber) WHERE items.homebranch=<<choose branch|branches>> AND items.itemlost='3' and items.ccode=<<Choose collection code|CCODE>> ORDER BY title",,,,,,,,
R.002664,"/*
R.002664

----------

Name: Collection Switching from New Itype
Created by: Heather Braum

----------

Group: Catalog Records and Items
     Fix Items

Created on: 2016-02-08 11:49:27
Modified on: 2022-05-16 16:45:08
Date last run: 2022-07-01 07:52:05

----------

Public: 0
Expiry: 0

----------

Replaced by report 3661

----------
*/

","SELECT ""replaced by report 3661"" as INFO",,,,,,,,
R.002665,"/*
R.002665

----------

Name: Checking for mismatched itypes
Created by: Heather Braum

----------

Group: Administrative Reports
     Fix Items-admin

Created on: 2016-02-10 21:23:36
Modified on: 2016-02-10 22:18:56
Date last run: 2022-06-07 16:18:07

----------

Public: 0
Expiry: 0

----------

includes lots of common sets; may have to remove to check for these.... 

----------
*/

","SELECT  CONCAT('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',biblionumber,'\"" target=""_blank"">',biblionumber,'</a>') AS bibnumber, GROUP_CONCAT(DISTINCT itype) 
FROM items 
WHERE biblionumber NOT IN ('551728','636389','521345','682294','682294','573870','572720','568972','566864','304288','297976','577265','')
GROUP BY biblionumber 
HAVING 
count(itemnumber) > '1' AND
GROUP_CONCAT(DISTINCT itype) <> 'BOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'AUDIOBOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'MEDIA' AND 
GROUP_CONCAT(DISTINCT itype) <> 'MAGAZINE' AND 
GROUP_CONCAT(DISTINCT itype) <> 'MUSIC' AND 
GROUP_CONCAT(DISTINCT itype) <> 'REFERENCE' AND 
GROUP_CONCAT(DISTINCT itype) <> 'GAME' AND 
GROUP_CONCAT(DISTINCT itype) <> 'KITS' AND 
GROUP_CONCAT(DISTINCT itype) <> 'COMPUTER' AND 
GROUP_CONCAT(DISTINCT itype) <> 'ILL' AND 
GROUP_CONCAT(DISTINCT itype) <> 'BOOK,NEWBOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'NEWBOOK,BOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'MEDIA,NEWMEDIA' AND 
GROUP_CONCAT(DISTINCT itype) <> 'NEWMEDIA,MEDIA' AND 
GROUP_CONCAT(DISTINCT itype) <> 'AUDIOBOOK,NEWAUDIO' AND 
GROUP_CONCAT(DISTINCT itype) <> 'NEWAUDIO,AUDIOBOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'MAGAZINE,NEWMAG' AND 
GROUP_CONCAT(DISTINCT itype) <> 'NEWMAG,MAGAZINE' AND 
GROUP_CONCAT(DISTINCT itype) <> 'REFERENCE,BOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'BOOK,REFERENCE' AND 
GROUP_CONCAT(DISTINCT itype) <> 'MUSIC,AUDIOBOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'AUDIOBOOK,MUSIC' AND 
GROUP_CONCAT(DISTINCT itype) <> 'AUDIOBOOK,FLPLAYAWAY' AND 
GROUP_CONCAT(DISTINCT itype) <> 'BOOK,KITS' AND 
GROUP_CONCAT(DISTINCT itype) <> 'KITS,BOOK'  AND 
GROUP_CONCAT(DISTINCT itype) <> 'AUDIOBOOK,KITS' AND 
GROUP_CONCAT(DISTINCT itype) <> 'KITS,AUDIOBOOK'  AND 
GROUP_CONCAT(DISTINCT itype) <> 'BOOK,LOCALHOLD2' AND 
GROUP_CONCAT(DISTINCT itype) <> 'LOCALHOLD2,BOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'BOOK,LOCALHOLD2,NEWBOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'BOOK,LOCALHOLD2,NEWBOOK,WALKIN2' AND 
GROUP_CONCAT(DISTINCT itype) <> 'BOOK,WALKIN2' AND 
GROUP_CONCAT(DISTINCT itype) <> 'WALKIN2,BOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'WALKIN,REFERENCE' AND 
GROUP_CONCAT(DISTINCT itype) <> 'REFERENCE,WALKIN' AND 
GROUP_CONCAT(DISTINCT itype) <> 'MEDIA,LOCALHOLD1,NEWMEDIA,WALKIN1' AND 
GROUP_CONCAT(DISTINCT itype) <> 'MEDIA,LOCALHOLD1,NEWMEDIA' AND 
GROUP_CONCAT(DISTINCT itype) <> 'MEDIA,LOCALHOLD1,WALKIN1' AND 
GROUP_CONCAT(DISTINCT itype) <> 'MEDIA,LOCALHOLD1,WALKIN1,NEWMEDIA' AND 
GROUP_CONCAT(DISTINCT itype) <> 'WALKIN' AND 
GROUP_CONCAT(DISTINCT itype) <> 'BOOK,LOCALHOLD' AND 
GROUP_CONCAT(DISTINCT itype) <> 'LOCALHOLD,BOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'AUDIOBOOK,BOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'BOOK,AUDIOBOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'AUDIOBOOK,LOCALHOLD' AND 
GROUP_CONCAT(DISTINCT itype) <> 'LOCALHOLD,AUDIOBOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'BOOK,NEWBOOK,LOCALHOLD2' AND 
GROUP_CONCAT(DISTINCT itype) <> 'BOOK,NEWBOOK,LOCALHOLD2,WALKIN2' AND 
GROUP_CONCAT(DISTINCT itype) <> 'BOOK,NEWBOOK,REFERENCE' AND 
GROUP_CONCAT(DISTINCT itype) <> 'BOOK,NEWBOOK,WALKIN2' AND 
GROUP_CONCAT(DISTINCT itype) <> 'BOOK,NEWBOOK,WALKIN2,LOCALHOLD2' AND 
GROUP_CONCAT(DISTINCT itype) <> 'BOOK,REFERENCE,WALKIN' AND 
GROUP_CONCAT(DISTINCT itype) <> 'BOOK,WALKIN' AND 
GROUP_CONCAT(DISTINCT itype) <> 'BOOK,REFERENCE,NEWBOOK' AND
GROUP_CONCAT(DISTINCT itype) <> 'BOOK,WALKIN,REFERENCE' AND
GROUP_CONCAT(DISTINCT itype) <> 'EQUIPMENT' AND 
GROUP_CONCAT(DISTINCT itype) <> 'FLPLAYAWAY' AND
GROUP_CONCAT(DISTINCT itype) <> 'FLPLAYAWAY,AUDIOBOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'FLPLAYAWQAY,LOCALHOLD' AND
GROUP_CONCAT(DISTINCT itype) <> 'EQUIPMENT,WALKIN' AND 
GROUP_CONCAT(DISTINCT itype) <> 'EQUIPMENT,KITS' AND 
GROUP_CONCAT(DISTINCT itype) <> 'EQUIPMENT,COMPUTER' AND 
GROUP_CONCAT(DISTINCT itype) <> 'FLPLAYAWAY,LOCALHOLD' AND 
GROUP_CONCAT(DISTINCT itype) <> 'COMPUTER,EQUIPMENT' AND 
GROUP_CONCAT(DISTINCT itype) <> 'COMPUTER,WALKIN,EQUIPMENT' AND 
GROUP_CONCAT(DISTINCT itype) <> 'KITS,EQUIPMENT' AND
GROUP_CONCAT(DISTINCT itype) <> 'LAUNCHPAD' AND 
GROUP_CONCAT(DISTINCT itype) <> 'LOCALHOLD' AND 
GROUP_CONCAT(DISTINCT itype) <> 'LAUNCHPAD,LOCALHOLD' AND 
GROUP_CONCAT(DISTINCT itype) <> 'LOCALHOLD,EQUIPMENT' AND 
GROUP_CONCAT(DISTINCT itype) <> 'LOCALHOLD,LAUNCHPAD' AND 
GROUP_CONCAT(DISTINCT itype) <> 'LOCALHOLD2,NEWBOOK,BOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'MEDIA,LOCALHOLD1' AND 
GROUP_CONCAT(DISTINCT itype) <> 'MEDIA,NEWMEDIA,LOCALHOLD1' AND 
GROUP_CONCAT(DISTINCT itype) <> 'MEDIA,WALKIN1,NEWMEDIA' AND 
GROUP_CONCAT(DISTINCT itype) <> 'MEDIA,WALKIN1,NEWMEDIA,LOCALHOLD1' AND 
GROUP_CONCAT(DISTINCT itype) <> 'MIFI' AND 
GROUP_CONCAT(DISTINCT itype) <> 'NEWAUDIO' AND 
GROUP_CONCAT(DISTINCT itype) <> 'NEWBOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'NEWMAG' AND 
GROUP_CONCAT(DISTINCT itype) <> 'NEWBOOK,BOOK,LOCALHOLD2' AND 
GROUP_CONCAT(DISTINCT itype) <> 'NEWBOOK,BOOK,REFERENCE' AND 
GROUP_CONCAT(DISTINCT itype) <> 'NEWBOOK,BOOK,WALKIN2' AND 
GROUP_CONCAT(DISTINCT itype) <> 'NEWBOOK,REFERENCE' AND 
GROUP_CONCAT(DISTINCT itype) <> 'NEWBOOK,REFERENCE,BOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'REFERENCE,BOOK,WALKIN' AND 
GROUP_CONCAT(DISTINCT itype) <> 'REFERENCE,MAGAZINE' AND 
GROUP_CONCAT(DISTINCT itype) <> 'WALKIN,BOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'WALKIN,BOOK,REFERENCE' AND 
GROUP_CONCAT(DISTINCT itype) <> 'WALKIN,LOCALHOLD' AND 
GROUP_CONCAT(DISTINCT itype) <> 'WALKIN,REFERENCE,BOOK' AND 
GROUP_CONCAT(DISTINCT itype) <> 'WALKIN,MAGAZINE' AND 
GROUP_CONCAT(DISTINCT itype) <> 'MAGAZINE,WALKIN'
ORDER BY GROUP_CONCAT(DISTINCT itype)",,,,,,,,
R.002666,"/*
R.002666

----------

Name: Cleaning up mixed up ccodes
Created by: Heather Braum

----------

Group: -
     -

Created on: 2016-02-10 22:19:37
Modified on: 2019-07-01 16:13:51
Date last run: 2019-07-01 16:16:32

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT CONCAT('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',biblionumber,'\"" target=""_blank"">',biblionumber,'</a>') AS bibnumber, 
GROUP_CONCAT(DISTINCT ccode),
COUNT(DISTINCT ccode)
FROM items 
GROUP BY biblionumber 
HAVING 
count(itemnumber) > '1' AND
COUNT(DISTINCT ccode) > 1 AND
GROUP_CONCAT(DISTINCT ccode) LIKE Concat(""%"", <<Enter collection code|LCCODE>>, ""%"")",,,,,,,,
R.002670,"/*
R.002670

----------

Name: fix these emails
Created by: Heather Braum

----------

Group: Administrative Reports
     -

Created on: 2016-02-25 11:56:53
Modified on: 2016-02-26 17:34:07
Date last run: 2021-08-13 14:00:30

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT CONCAT('<a href=\""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=',borrowers.borrowernumber,'\"" target=""_blank"">'""edit patron""'</a>') as ""edit patron"" FROM borrowers WHERE email NOT LIKE '%_@__%.__%' and (email is not NULL and email!="""")",,,,,,,,
R.002675,"/*
R.002675

----------

Name: Shelf list of specific collection code and item type
Created by: Heather Braum

----------

Group: Catalog Records and Items
     -

Created on: 2016-03-07 10:42:35
Modified on: 2016-03-07 10:42:35
Date last run: 2022-08-23 14:17:07

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT b.biblionumber, i.dateaccessioned, b.title, b.author, i.ccode, i.location, i.itemcallnumber, i.itype, t.publicationyear, i.barcode, CONCAT('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=',b.biblionumber,'&itemnumber=',i.itemnumber,'#edititem\"" target=""_blank"">'""edit item""'</a>') as ""edit item"" FROM items i LEFT JOIN biblio b USING (biblionumber) LEFT JOIN biblioitems t USING(biblionumber) WHERE i.homebranch=<<Pick your branch|branches>> AND i.ccode=<<Pick your collection code|CCODE>> AND i.itype=<<item type|itemtypes>> ORDER BY i.itemcallnumber",,,,,,,,
R.002681,"/*
R.002681

----------

Name: Circulation of your library's materials at your library in a year, by item type, collection code and location
Created by: Heather Braum

----------

Group: Daily, Monthly, Yearly Stats
     Yearly

Created on: 2016-04-01 15:57:52
Modified on: 2022-01-05 17:43:47
Date last run: 2022-08-31 12:02:50

----------

Public: 0
Expiry: 300

----------

Choose your branch three times. Gives the circulation of your materials at your library in a given year by item type, collection code and location

----------
*/

","SELECT ""Broken - use <a href='https://drive.google.com/uc?id=15CU4wsuzgq5YWLT4imeBFdNEzXKpb6hx&export=download' target='_blank'>https://drive.google.com/uc?id=15CU4wsuzgq5YWLT4imeBFdNEzXKpb6hx&export=download</a> instead""",,,,,,,,
R.002691,"/*
R.002691

----------

Name: Materials currently checked out (for end of school year) (grade level)
Created by: Heather Braum

----------

Group: School Libraries
     -

Created on: 2016-05-11 11:11:29
Modified on: 2016-05-11 13:31:51
Date last run: 2022-05-19 07:28:17

----------

Public: 0
Expiry: 0

----------

This one is for students with grade levels set. 

Run <a href=""https://staff.nexpresslibrary.org/cgi-bin/koha/reports/guided_reports.pl?reports=2694&phase=Run%20this%20report"" target=""_blank"">report #2694</a> for the list for students (and teachers) without a grade level set. 

----------
*/

","SELECT CONCAT(p.firstname, ' ', p.surname, ' Grade: ', ba_GRADE.attribute, '<br /> <br />title: ', b.title, '<br /> <br />by ', b.author, '<br /> <br />barcode: ', i.barcode, '<br /> <br /> Owning Library: ', i.homebranch, '<br /> <br /> <br /> <br /> cost if lost: $', i.replacementprice, '<br /><br />Originally due: ', date(s.date_due), '<br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br /> <br />') as message FROM borrowers p left join issues s USING (borrowernumber) left join items i USING (itemnumber) left JOIN biblio b USING (biblionumber) LEFT JOIN borrower_attributes ba_GRADE ON (p.borrowernumber = ba_GRADE.borrowernumber AND ba_GRADE.code = 'GRADE') LEFT JOIN branches br ON (i.homebranch = br.branchname) WHERE s.branchcode = <<Pick your branch|branches>> AND p.categorycode='STUDENT' AND ba_GRADE.attribute IS NOT NULL order by p.categorycode asc, ba_GRADE.attribute asc, p.sort1 asc, p.surname asc LIMIT 1000",,,,,,,,
R.002702,"/*
R.002702

----------

Name: Ottawa Patron count
Created by: Heather Braum

----------

Group:  OTTAWA
     -

Created on: 2016-06-29 09:13:45
Modified on: 2021-08-16 13:43:57
Date last run: 2022-05-17 17:29:20

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT b.categorycode, (SELECT ba.attribute FROM borrower_attributes ba WHERE ba.borrowernumber=b.borrowernumber AND ba.code='Location') as location, count(DISTINCT borrowernumber) FROM borrowers b WHERE b.branchcode='OTTAWA' GROUP BY b.categorycode, location",,,,,,,,
R.002707,"/*
R.002707

----------

Name: Intra-Consortial Loans at a branch in the previous calendar month
Created by: George H Williams

----------

Group: Circulation
     Circ Stats

Created on: 2016-07-12 16:32:22
Modified on: 2016-07-12 18:21:58
Date last run: 2022-06-01 11:09:50

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>This report counts items that were checked out at a library that did not have a homebranch of that same library.</p>
<ul><li>Counts items that were checked out during the previous calendar month (between 12:00 a.m. on the first of the month and 11:59 p.m. on the final day of the month)</li>
<li>Counts all items checked out or renewed at a specified branch that were not owned by that branch</li>
<li>grouped by check-out-branch, shelving-location, and collection-code</li>
<li>sorted by check-out-branch, shelving-location, and collection-code</li>
<li>includes rollup totals for each grouping sub-set</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p>This report is similar to report 2708 which does the same thing but allows you to select a date range</p>
</div>

----------
*/

","SELECT 
 CHECK_OUT_BRANCH, SHELVING_LOCATION, COLLECTION_CODE, SUM(C_R) AS CHECKOUTS_PLUS_RENEWALS
FROM
 (
SELECT 
 statistics.branch AS CHECK_OUT_BRANCH, items.location AS SHELVING_LOCATION, statistics.ccode AS COLLECTION_CODE, COUNT(*) AS C_R
FROM
 statistics
JOIN items ON statistics.itemnumber = items.itemnumber
WHERE
 statistics.datetime BETWEEN (CONCAT(DATE_FORMAT(LAST_DAY(NOW() - INTERVAL 1 MONTH), '%Y-%m-'), '01')) AND (CONCAT(DATE_FORMAT(LAST_DAY(NOW()), '%Y-%m-'), '01')) AND (statistics.type = 'issue' OR statistics.type = 'renew') AND (items.homebranch <> statistics.branch)
GROUP BY CHECK_OUT_BRANCH, SHELVING_LOCATION, COLLECTION_CODE 

UNION

SELECT 
 statistics.branch AS CHECK_OUT_BRANCH, deleteditems.location AS SHELVING_LOCATION, statistics.ccode AS COLLECTION_CODE, COUNT(*) AS C_R
FROM
 statistics
JOIN deleteditems ON statistics.itemnumber = deleteditems.itemnumber
WHERE
 statistics.datetime BETWEEN (CONCAT(DATE_FORMAT(LAST_DAY(NOW() - INTERVAL 1 MONTH), '%Y-%m-'), '01')) AND (CONCAT(DATE_FORMAT(LAST_DAY(NOW()), '%Y-%m-'), '01')) AND (statistics.type = 'issue' OR statistics.type = 'renew') AND (deleteditems.homebranch <> statistics.branch)
GROUP BY CHECK_OUT_BRANCH, SHELVING_LOCATION, COLLECTION_CODE) AS X
WHERE CHECK_OUT_BRANCH = <<Select branch|branches>>
GROUP BY CHECK_OUT_BRANCH, SHELVING_LOCATION, COLLECTION_CODE WITH ROLLUP",,,,,,,,
R.002708,"/*
R.002708

----------

Name: Intra-Consortial Loans at a branch during a selected date range
Created by: George H Williams

----------

Group: Circulation
     Circ Stats

Created on: 2016-07-12 17:21:02
Modified on: 2016-07-12 18:21:33
Date last run: 2022-01-20 14:16:26

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>This report counts items that were checked out at a library that did not have a homebranch of that same library.</p>
<ul><li>Counts items that were checked out during a specified date range (between 12:00 a.m. on the <strong>START DATE</strong> and 11:59 p.m. on the <strong>END DATE</strong>)</li>
<li>Counts all items checked out or renewed at a specified branch that were not owned by that branch</li>
<li>grouped by check-out-branch, shelving-location, and collection-code</li>
<li>sorted by check-out-branch, shelving-location, and collection-code</li>
<li>includes rollup totals for each grouping sub-set</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p>This report is similar to report 2707 which does the same thing but only shows items checked out or renewed in the previous calendar month.</p>
</div>

----------
*/

","SELECT 
 CHECK_OUT_BRANCH, SHELVING_LOCATION, COLLECTION_CODE, SUM(C_R) AS CHECKOUTS_PLUS_RENEWALS
FROM
 (
SELECT 
 statistics.branch AS CHECK_OUT_BRANCH, items.location AS SHELVING_LOCATION, statistics.ccode AS COLLECTION_CODE, COUNT(*) AS C_R
FROM
 statistics
JOIN items ON statistics.itemnumber = items.itemnumber
WHERE
 (statistics.datetime BETWEEN (@StartDate:= <<between the beginning of the day on ""START DATE""|date>>)  AND (@EndDate:= <<and the end of the day on ""END DATE""|date>>+ INTERVAL 1 DAY)) AND (statistics.type = 'issue' OR statistics.type = 'renew') AND (items.homebranch <> statistics.branch)
GROUP BY CHECK_OUT_BRANCH, SHELVING_LOCATION, COLLECTION_CODE 

UNION

SELECT 
 statistics.branch AS CHECK_OUT_BRANCH, deleteditems.location AS SHELVING_LOCATION, statistics.ccode AS COLLECTION_CODE, COUNT(*) AS C_R
FROM
 statistics
JOIN deleteditems ON statistics.itemnumber = deleteditems.itemnumber
WHERE
 (statistics.datetime BETWEEN @StartDate  AND @EndDate) AND (statistics.type = 'issue' OR statistics.type = 'renew') AND (deleteditems.homebranch <> statistics.branch)
GROUP BY CHECK_OUT_BRANCH, SHELVING_LOCATION, COLLECTION_CODE) AS X
WHERE CHECK_OUT_BRANCH = <<Select branch|branches>>
GROUP BY CHECK_OUT_BRANCH, SHELVING_LOCATION, COLLECTION_CODE WITH ROLLUP",,,,,,,,
R.002709,"/*
R.002709

----------

Name: LANSING - Adult Non-Fiction items checked out at LANSING but not owned by LANSING
Created by: George H Williams

----------

Group:  LANSING
     -

Created on: 2016-07-12 17:43:09
Modified on: 2021-10-20 10:20:40
Date last run: 2021-12-06 17:21:07

----------

Public: 0
Expiry: 0

----------

All non LANSING Adult Nonfiction checked out at LANSING in a specified date range.

----------
*/

","SELECT 
 CHECK_OUT_BRANCH, SHELVING_LOCATION, COLLECTION_CODE, ITEM_CALL_NUMBER, SUM(C_R) AS CHECKOUTS_PLUS_RENEWALS
FROM
 (
SELECT 
 statistics.branch AS CHECK_OUT_BRANCH, items.location AS SHELVING_LOCATION, statistics.ccode AS COLLECTION_CODE, items.itemcallnumber AS ITEM_CALL_NUMBER, COUNT(*) AS C_R
FROM
 statistics
JOIN items ON statistics.itemnumber = items.itemnumber
WHERE
 (statistics.datetime BETWEEN (@StartDate:= <<between the beginning of the day on ""START DATE""|date>>)  AND (@EndDate:= <<and the end of the day on ""END DATE""|date>>+ INTERVAL 1 DAY)) AND (statistics.type = 'issue' OR statistics.type = 'renew') AND (items.homebranch <> statistics.branch)
GROUP BY CHECK_OUT_BRANCH, SHELVING_LOCATION, COLLECTION_CODE, ITEM_CALL_NUMBER

UNION

SELECT 
 statistics.branch AS CHECK_OUT_BRANCH, deleteditems.location AS SHELVING_LOCATION, statistics.ccode AS COLLECTION_CODE, deleteditems.itemcallnumber AS ITEM_CALL_NUMBER, COUNT(*) AS C_R
FROM
 statistics
JOIN deleteditems ON statistics.itemnumber = deleteditems.itemnumber
WHERE
 (statistics.datetime BETWEEN @StartDate  AND @EndDate) AND (statistics.type = 'issue' OR statistics.type = 'renew') AND (deleteditems.homebranch <> statistics.branch)
GROUP BY CHECK_OUT_BRANCH, SHELVING_LOCATION, COLLECTION_CODE, ITEM_CALL_NUMBER) AS X
WHERE CHECK_OUT_BRANCH = 'LANSING' AND SHELVING_LOCATION=<<Shelving Location|LOC>> AND COLLECTION_CODE = <<Collection code |CCODE>>
GROUP BY CHECK_OUT_BRANCH, SHELVING_LOCATION, COLLECTION_CODE, ITEM_CALL_NUMBER",,,,,,,,
R.002711,"/*
R.002711

----------

Name: GHW - Hoopla Query
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2016-07-13 13:43:12
Modified on: 2017-03-02 15:11:09
Date last run: 2020-10-06 09:26:04

----------

Public: 0
Expiry: 0

----------

Hoopla Report

----------
*/

","SELECT biblionumber FROM biblioitems WHERE biblionumber IN (SELECT biblionumber FROM items WHERE itype = 'DIGITAL' AND homebranch='DIGITAL' AND itemcallnumber='HOOPLA' AND ccode IN ('DLAUDIO','DLVIDEO','DLMUSIC','DLBOOK')) AND date(timestamp) < '2017-03-01' limit 200000

",,,,,,,,
R.002713,"/*
R.002713

----------

Name: GHW - All items added after a specified date
Created by: George H Williams

----------

Group: Catalog Records and Items
     Shelf Lists

Created on: 2016-07-21 15:13:21
Modified on: 2017-12-19 09:32:57
Date last run: 2022-09-21 09:12:45

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>This report shows all items added to NExpress at a specific library branch after a specified date</p>
<ul><li>Shows items that are currently still in NExpress</li>
<li>Allows user to specify the item's homebranch, shelving location, item type, collection code, and the item's date added</li>
<li>grouped by homebranch, location, itype, collection code, and call number</li>
<li>sorted by homebranch, location, itype, collection code, and call number</li>
<li>contains links directly to the item's bibliographic record</li>
</ul><br />
</div>

----------
*/

","SELECT
  CONCAT( '<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber,'\"" target=""_blank"">', biblio.biblionumber, '</a>' ) AS LINK_TO_TITLE,
  items.itemnumber,
  items.homebranch,
  items.barcode,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  items.enumchron,
  biblio.author,
  CONCAT_WS(' ', biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]') ) AS FULL_TITLE,
  items.dateaccessioned,
  items.datelastborrowed,
  items.datelastseen,
  IF(items.onloan IS NULL,' ','Checked out') AS CHECKED_OUT,
  IF(SUM(items.damaged + items.itemlost + items.withdrawn)=0,' ','Damaged, lost, or withdrawn') AS STATUS_PROBLEMS
FROM
  items JOIN
  biblio
    ON items.biblionumber = biblio.biblionumber INNER JOIN
  biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber AND
    items.biblionumber = biblio_metadata.biblionumber
WHERE
  items.homebranch LIKE <<Item home library|LBRANCH>> AND
  items.location LIKE <<Item shelving location|LLOC>> AND
  items.itype LIKE <<Item type|LITYPES>> AND
  items.ccode LIKE <<Item collection code|LCCODE>> AND
  items.dateaccessioned > <<Look for all items added after|date>>
GROUP BY
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  items.enumchron,
  biblio.author,
  biblio.title",,,,,,,,
R.002718,"/*
R.002718

----------

Name: GHW - Reports Template A
Created by: George H Williams

----------

Group: -
     -

Created on: 2016-08-03 17:09:19
Modified on: 2017-12-19 09:33:17
Date last run: -

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>This report shows all items added to NExpress at a specific library branch after a specified date</p>
<ul><li>Shows items that are currently still in NExpress</li>
<li>Allows user to specify the item's homebranch, shelving location, item type, collection code, and the item's date added</li>
<li>grouped by homebranch, location, itype, collection code, and call number</li>
<li>sorted by homebranch, location, itype, collection code, and call number</li>
<li>contains links directly to the item's bibliographic record</li>
</ul><br />
</div>

----------
*/

","SELECT
  CONCAT( '<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber,'\"" target=""_blank"">', biblio.biblionumber, '</a>' ) AS LINK_TO_TITLE,
  items.itemnumber,
  items.homebranch,
  items.barcode,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  items.enumchron,
  biblio.author,
  CONCAT_WS(' ', biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]') ) AS FULL_TITLE,
  items.dateaccessioned,
  items.datelastborrowed,
  items.datelastseen,
  IF(items.onloan IS NULL,' ','Checked out') AS CHECKED_OUT,
  IF(SUM(items.damaged + items.itemlost + items.withdrawn)=0,' ','Damaged, lost, or withdrawn') AS STATUS_PROBLEMS
FROM
  items JOIN
  biblio
    ON items.biblionumber = biblio.biblionumber INNER JOIN
  biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber AND
    items.biblionumber = biblio_metadata.biblionumber
WHERE
  items.homebranch = <<Item home library|branches>> AND
  items.location = <<Item shelving location|LOC>> AND
  items.itype = <<Item type|itemtypes>> AND
  items.ccode = <<Item collection code|CCODE>>
GROUP BY
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  items.enumchron,
  biblio.author,
  biblio.title",,,,,,,,
R.002719,"/*
R.002719

----------

Name: GHW - Reports Template B
Created by: George H Williams

----------

Group: -
     -

Created on: 2016-08-03 17:09:26
Modified on: 2017-12-19 09:33:37
Date last run: -

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>This report shows all items added to NExpress at a specific library branch after a specified date</p>
<ul><li>Shows items that are currently still in NExpress</li>
<li>Allows user to specify the item's homebranch, shelving location, item type, collection code, and the item's date added</li>
<li>grouped by homebranch, location, itype, collection code, and call number</li>
<li>sorted by homebranch, location, itype, collection code, and call number</li>
<li>contains links directly to the item's bibliographic record</li>
</ul><br />
</div>

----------
*/

","SELECT
  CONCAT( '<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber,'\"" target=""_blank"">', biblio.biblionumber, '</a>' ) AS LINK_TO_TITLE,
  items.itemnumber,
  items.homebranch,
  items.barcode,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  items.enumchron,
  biblio.author,
  CONCAT_WS(' ', biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]') ) AS FULL_TITLE,
  items.dateaccessioned,
  items.datelastborrowed,
  items.datelastseen,
  IF(items.onloan IS NULL,' ','Checked out') AS CHECKED_OUT,
  IF(SUM(items.damaged + items.itemlost + items.withdrawn)=0,' ','Damaged, lost, or withdrawn') AS STATUS_PROBLEMS
FROM
  items JOIN
  biblio
    ON items.biblionumber = biblio.biblionumber INNER JOIN
  biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber AND
    items.biblionumber = biblio_metadata.biblionumber
WHERE
  items.homebranch LIKE <<Item home library|LBRANCH>> AND
  items.location LIKE <<Item shelving location|LLOC>> AND
  items.itype LIKE <<Item type|LITYPES>> AND
  items.ccode LIKE <<Item collection code|LCCODE>>
GROUP BY
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  items.enumchron,
  biblio.author,
  biblio.title",,,,,,,,
R.002730,"/*
R.002730

----------

Name: GHW - Expired Holds
Created by: George H Williams

----------

Group: Holds-Reserves
     Holds troubleshooting

Created on: 2016-08-10 15:29:50
Modified on: 2018-04-16 10:48:28
Date last run: 2022-07-13 11:34:17

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Generates a list of items that have been on your holds shelf for more than 7 days</p>
<ul><li>Shows items that have been on a library's hold shelf for more than 7 days and have not been picked up</li>
<li>Shows items waiting at the library you specify</li>
<li>grouped by item request id and borrowernumber</li>
<li>sorted by patron's last name and card number</li>
<li>contains links to the patron's record</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Requests have many dates associated with them.  One of these dates is labeled as 'reserves.expirationdate' in the database.</p>
<p>This 'expirationdate' date is an internal date that the Koha software uses to determine if a request has been waiting for longer than 7 days.  During the upgrade on December 9, 2017, 'expirationdate' dates on all waiting requests were reset by this bug to 2017-12-09 from their original dates.  This causes the ""Holds awaiting pickup report"" at https://staff.nexpresslibrary.org/cgi-bin/koha/circ/waitingreserves.pl to fail to show any requests that have been waiting more than 7 days on the ""Holds waiting over 7 days"" tab.</p>
<p></p>
<p>This report shows the actual expiration dates of any requests that were waiting prior to December 9, 2017.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2730&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', reserves.borrowernumber, '\"" target=""_blank"">Patron record</a>') AS LINK,
  CONCAT_WS(""<br />"", Concat(""Last name:  "",borrowers.surname),
    Concat(""Card number:  "",borrowers.cardnumber)) AS PATRON,
  reserves.branchcode AS PICKUP_BRANCH,
  Concat_Ws(""<br />"", Concat(""The following item has been on the hold shelf for more than 7 days:<br />""),
    Concat(""Home Lib: "", items.homebranch),
    Concat(""Currently at: "", items.holdingbranch),
    Concat(""Location: "", items.location),
    Concat(""Itemtype: "", items.itype),
    Concat(""CCode: "", authorised_values.lib),
    Concat(""Call#: "", items.itemcallnumber),
    Concat(""Author: "", biblio.author), Concat(""Title: "", biblio.title),
    Concat(""Bcode: "", items.barcode),
    Concat(""Home Lib: "", items.homebranch),
    Concat(""Last seen: "", items.datelastseen, ""<br />""),
    Concat(""Please follow your libraries procedures for expired holds and ship these items back to their owning libraries.<br />"")) AS ITEM_INFO,
  Concat_Ws(""<br /><br />"",Concat(""Date<br />arrived: "",reserves.waitingdate),
    Concat(""Expiration<br />in system: "", reserves.expirationdate),
    Concat(""Actual<br />expiration: "",(reserves.waitingdate + INTERVAL 7 DAY))) AS DATES
FROM
  reserves
  JOIN borrowers ON reserves.borrowernumber = borrowers.borrowernumber
  JOIN items ON reserves.itemnumber = items.itemnumber
  JOIN biblio ON items.biblionumber = biblio.biblionumber
  LEFT JOIN authorised_values ON items.ccode = authorised_values.authorised_value
WHERE
  reserves.found = 'W' AND
  (reserves.waitingdate + INTERVAL 7 DAY) < CurDate() - INTERVAL 7 DAY AND
  authorised_values.category = ""CCODE"" AND
  reserves.branchcode LIKE <<Select your library|LBRANCH>>
GROUP BY
  reserves.itemnumber,
  reserves.borrowernumber
ORDER BY
  borrowers.surname,
  borrowers.firstname",,,,,,,,
R.002731,"/*
R.002731

----------

Name: GHW - Flexible Shelflist Report
Created by: George H Williams

----------

Group: Catalog Records and Items
     Shelf Lists

Created on: 2016-08-11 16:36:03
Modified on: 2021-11-16 17:49:45
Date last run: 2022-10-03 11:02:31

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>This report shows all items added to Next Search Catalog at a specific library branch after a specified date - includes date added, date last borrowed, date last seen, and total circulations+renewals</p>
<p>Includes the date the item was added (dateaccessioned), the date the item was last checked out to a patron (datelastborrowed), and the date the item was last scanned on the check-in screen (datelastseen).</p>
<ul><li>Shows items that are currently still in Next</li>
<li>Allows user to specify the item's homebranch, permanent shelving location, item type, collection code, and the item's date added</li>
<li>grouped by homebranch, location, itype, collection code, and call number</li>
<li>sorted by homebranch, location, itype, collection code, and call number</li>
<li>contains links directly to the item's bibliographic record</li>
</ul><br />

<p><ins>Notes:</ins></p>
<p></p>
<p>This report now handles dateaccessioned, datelastborrowed, and datelastseen as follows:</p>
<ul>
  <li>dateaccessioned that are blank or older than 2000 are filtered as if they were added on January 2, 2000</li>
  <li>datelastborrowed that are blank or older than 2000 are filtered as if they were added on January 2, 2000</li>
  <li>datelastseen that are blank or older than 2000 are filtered as if they were added on January 2, 2000</li>
</ul>
<p>These dates will still show the actual dates in the appropriate columns, but you will no longer need to adjust the filters in order to identify dates prior to 2000.  The side-effect of this change is that you will no longer be able filter for dates prior to January 1, 2000.  If you run this report and specify dates before January 3, 2000, you will be able to see these items, but you cannot really specify dates older than January 1, 2000.</p>
<p></p>
<p></p>
<p>publicationyear data comes from the 264$c subfield.  If the data in 264$c is not a 4 digit year, the data will be problematic.  If 264$c is blank, the result in this report will be blank.</p>
<p></p>
<p>Report updated on 2021.09.08 to include ISBN and ISSN fields.</p>
<p></p>
<p>Formerly called ""Flexible Weeding Report""</p>
<p>Replaces reports:
<ul>
  <li>664 (Full Shelf List)</li>
  <li>2686 (Collection Code Super Weeder)</li>
  <li>1013 (Item Type Super Weeder)</li>
  <li>1442 (Super Weeder by Callnumber)</li>
  <li>2471 (BCPL.SuperWeeder.by.Callnumber)</li>
  <li>1017 (Items with NO checkouts (all items))</li>
  <li>1151 (Date last borrowed, Call number and Title limited by Item type)</li>
  <li>1426 (Last seen on a specific date or earlier)</li>
  <li>1807 (Items with NO checkouts -- limited by CCode)</li>
  <li>2202 (Items with NO checkouts (limited to a collection code and location))</li>
  <li>2203 (Items with NO checkouts (limited to a collection code))</li>
  <li>2241 (Last Seen Date, limited by Collection Code)</li>
  <li>2392 (Date last borrowed, Call number and Title limited by Ccode and Location)</li>
  <li>2411 (Date last borrowed)</li>
  <li>1408 (Shelf List of Specific Item Type)</li>
  <li>1409 (Shelf List of Specific CCode and Location)</li>
  <li>1410 (Shelf List of Specific Item Type and Location)</li>
  <li>3014 (GHW - Shelflist with left anchored call number limit)</li>
  <li>2809 (GHW - List of items with display locations)</li>
  <li>886 Videogames Circ List</li>
</ul>
<p></p>
<p>Added public and non-public notes fields on 2016.12.28</p>
<p>Added item count fields on 2018.10.03</p>

</div>

----------
*/

","SELECT
  Concat(
    '<a class=""btn btn-default"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', 
    items.biblionumber, 
    '\"" target=""_blank"">Go to title</a>'
  ) AS LINK_TO_TITLE,
  biblio.biblionumber AS BIBLIO_NUMBER,
  items.itemnumber AS ITEM_NUMBER,
  Concat('-', items.barcode, '-') AS BARCODE,
  items.homebranch,
  items.holdingbranch,
  perm_locs.lib AS PERMANENT_LOCATION,
  current_locs.lib AS LOCATION,
  itemtypes.description AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber,
  biblio.author,
  Concat_Ws("" "", 
    biblio.title, 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),  
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),  
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),  
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')
  ) AS FULL_TITLE,
  biblioitems.publicationyear,
  biblioitems.isbn,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""022""]/subfield[@code=""a""]') AS ISSN,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""024""]/subfield[@code=""a""]') AS UPC,
  items.dateaccessioned,
  items.datelastborrowed,
  items.datelastseen,
  items.issues,
  items.renewals,
  Sum((Coalesce(items.issues, 0)) + (Coalesce(items.renewals, 0))) AS
  CHECKOUTS_PLUS_RENEWALS,
  If(items.onloan IS NULL, 'No', 'Yes') AS CHECKED_OUT_NOW,
  not_loans.lib AS NOT_FOR_LOAN,
  If(Sum(Coalesce(items.damaged, 0) + Coalesce(items.itemlost, 0) +
  Coalesce(items.withdrawn, 0)) = 0, 'No', 'Yes') AS STATUS_PROBLEMS,
  Concat_Ws('', 
    If(Coalesce(damageds.lib, 0) = '', '', Concat(damageds.lib, ' (', Date_Format(items.damaged_on, ""%Y.%m.%d""), ') / ')), 
    If(Coalesce(losts.lib, 0) = '', '', Concat(losts.lib, ' (', Date_Format(items.itemlost_on, ""%Y.%m.%d""), ') / ')), 
    If(Coalesce(withdrawns.lib, 0) = '', '', Concat(withdrawns.lib, ' (', Date_Format(items.withdrawn_on, ""%Y.%m.%d""), ')'))
  ) AS STATUSSES,
  items.itemnotes,
  items.itemnotes_nonpublic,
  items.copynumber,
  items.replacementprice,
  localcounts.Count_itemnumber AS LOCAL_COPIES,
  systemcounts.Count_itemnumber AS SYSTEM_COPIES,
  Concat(
    '<a class=""btn btn-default"" href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=', 
    items.biblionumber, 
    '&itemnumber=', 
    items.itemnumber, 
    '#edititem\"" target=""_blank"">Edit item</a>'
  ) AS EDIT_ITEM
FROM
  biblio JOIN
  biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber JOIN
  items ON items.biblionumber = biblio.biblionumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') perm_locs ON
      perm_locs.authorised_value = items.permanent_location LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') current_locs ON
      current_locs.authorised_value = items.location LEFT JOIN
  itemtypes ON itemtypes.itemtype = items.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE') ccodes ON ccodes.authorised_value =
      items.ccode JOIN
  biblioitems ON biblioitems.biblionumber = biblio.biblionumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'NOT_LOAN') not_loans ON
      not_loans.authorised_value = items.notforloan LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'damaged') damageds ON
      damageds.authorised_value = items.damaged LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'lost') losts ON losts.authorised_value =
      items.itemlost LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'withdrawn') withdrawns ON
      withdrawns.authorised_value = items.withdrawn LEFT JOIN
  (SELECT
      items.biblionumber,
      items.homebranch,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      items.homebranch LIKE <<Item home library|ZBRAN>>
    GROUP BY
      items.biblionumber,
      items.homebranch) localcounts ON localcounts.biblionumber =
      items.biblionumber AND
      localcounts.homebranch = items.homebranch LEFT JOIN
  (SELECT
      items.biblionumber,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    GROUP BY
      items.biblionumber) systemcounts ON systemcounts.biblionumber =
      items.biblionumber
WHERE
  items.homebranch LIKE <<Item home library|ZBRAN>> AND
  Coalesce(items.permanent_location, ""-"") LIKE <<Item permanent shelving location|LLOC>> AND
  Coalesce(items.itype, ""PUNC"") LIKE <<Item type|LITYPES>> AND
  Coalesce(items.ccode, ""XXX"") LIKE <<Item collection code|LCCODE>> AND
  Coalesce(items.itemcallnumber, ""-"") LIKE Concat(<<Enter first part of call number or a % symbol>>, ""%"") AND
  Coalesce(not_loans.lib_opac, ""-"") LIKE <<Not for loan status|LNOT_LOAN>> AND
  (If(
    Coalesce(Year(Coalesce(items.dateaccessioned)), '1999') < '2000', 
    '2000-01-02', 
    items.dateaccessioned
  ) BETWEEN <<Item added between date1|date>> AND <<and date2|date>>) AND
  If(items.onloan IS NULL, 'No', 'Yes') LIKE '%' AND
  (If(
    Coalesce(Year(Coalesce(items.datelastborrowed)), '1999') < '2000', 
    '2000-01-02', 
    items.datelastborrowed
  ) BETWEEN <<Item last borrowed between date1|date>> AND <<and  date2|date>>) AND
  (If(
    Coalesce(Year(Coalesce(items.datelastseen)), '1999') < '2000', 
    '2000-01-02', 
    items.datelastseen
  ) BETWEEN <<Item last seen between date1|date>> AND <<and   date2|date>>) AND
  localcounts.Count_itemnumber >= 0 AND
  systemcounts.Count_itemnumber >= 0
GROUP BY
  biblio.biblionumber,
  items.itemnumber
HAVING
  CHECKOUTS_PLUS_RENEWALS <= <<With X or fewer checkouts|ZNUMBERS>> AND
  CHECKED_OUT_NOW LIKE <<Display checked out items|ZYES_NO>> AND
  STATUS_PROBLEMS LIKE <<Display lost, missing, and withdrawn items|ZYES_NO>> AND
  LOCAL_COPIES >= <<With X or more copies at this library|YNUMBER>> AND
  SYSTEM_COPIES >= <<With X or more copies at throughout the catalog|YNUMBER>>
ORDER BY
  items.homebranch,
  PERMANENT_LOCATION,
  ITYPE,
  CCODE,
  items.itemcallnumber,
  biblio.author,
  FULL_TITLE",,,,,,,,
R.002733,"/*
R.002733

----------

Name: GHW - Expiration Query
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2016-08-12 18:20:41
Modified on: 2021-03-04 19:20:04
Date last run: 2021-03-04 19:20:20

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT @1:=""2003"" AS ""expiry year"",  Count(DISTINCT borrowers.borrowernumber) AS Count_borrowernumber FROM borrowers WHERE borrowers.dateexpiry LIKE '%2003%'
UNION
SELECT @1:=""2004"", Count(DISTINCT borrowers.borrowernumber) AS Count_borrowernumber FROM borrowers WHERE borrowers.dateexpiry LIKE '%2004%'
UNION
SELECT @1:=""2005"", Count(DISTINCT borrowers.borrowernumber) AS Count_borrowernumber FROM borrowers WHERE borrowers.dateexpiry LIKE '%2005%'
UNION
SELECT @1:=""2006"", Count(DISTINCT borrowers.borrowernumber) AS Count_borrowernumber FROM borrowers WHERE borrowers.dateexpiry LIKE '%2006%'
UNION
SELECT @1:=""2007"", Count(DISTINCT borrowers.borrowernumber) AS Count_borrowernumber FROM borrowers WHERE borrowers.dateexpiry LIKE '%2007%'
UNION
SELECT @1:=""2008"", Count(DISTINCT borrowers.borrowernumber) AS Count_borrowernumber FROM borrowers WHERE borrowers.dateexpiry LIKE '%2008%'
UNION
SELECT @1:=""2009"", Count(DISTINCT borrowers.borrowernumber) AS Count_borrowernumber FROM borrowers WHERE borrowers.dateexpiry LIKE '%2009%'
UNION
SELECT @1:=""2010"", Count(DISTINCT borrowers.borrowernumber) AS Count_borrowernumber FROM borrowers WHERE borrowers.dateexpiry LIKE '%2010%'
UNION
SELECT @1:=""2011"", Count(DISTINCT borrowers.borrowernumber) AS Count_borrowernumber FROM borrowers WHERE borrowers.dateexpiry LIKE '%2011%'
UNION
SELECT @1:=""2012"", Count(DISTINCT borrowers.borrowernumber) AS Count_borrowernumber FROM borrowers WHERE borrowers.dateexpiry LIKE '%2012%'
UNION
SELECT @1:=""2013"", Count(DISTINCT borrowers.borrowernumber) AS Count_borrowernumber FROM borrowers WHERE borrowers.dateexpiry LIKE '%2013%'
UNION
SELECT @1:=""2014"", Count(DISTINCT borrowers.borrowernumber) AS Count_borrowernumber FROM borrowers WHERE borrowers.dateexpiry LIKE '%2014%'
UNION
SELECT @1:=""2015"", Count(DISTINCT borrowers.borrowernumber) AS Count_borrowernumber FROM borrowers WHERE borrowers.dateexpiry LIKE '%2015%'
UNION
SELECT @1:=""2016"", Count(DISTINCT borrowers.borrowernumber) AS Count_borrowernumber FROM borrowers WHERE borrowers.dateexpiry LIKE '%2016%'",,,,,,,,
R.002735,"/*
R.002735

----------

Name: GHW - Biblios with more than 20 requests
Created by: George H Williams

----------

Group: Holds-Reserves
     -

Created on: 2016-08-17 10:42:23
Modified on: 2021-03-04 19:13:32
Date last run: 2021-10-20 11:19:05

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Generates a list of all bibliographic records with more than 20 requests</p>
<ul><li>Shows current data</li>
<li>Shows records from all NExpress libraries</li>
<li>grouped by biblionumber</li>
<li>sorted by item count (biggest first) and biblionumber (smallest first)</li>
<li>contains links to the bibliographic record</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p>This report was created to help NExpress libraries identify all titles with more than 20 requests because the previous report (<a href=""https://staff.nexpresslibrary.org/cgi-bin/koha/reports/guided_reports.pl?reports=1152&phase=Run%20this%20report"" target=""_blank"">Report 1152</a>) established to fill this role was limited to show only the 20 items with the greatest number of requests.</p>
<p>Report created by GHW</p>
</div>


----------
*/

","SELECT
  COUNT(reserves.reserve_id) as REQUESTS_COUNT,
  CONCAT_WS(' <br /> ',biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code>=""b""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')) AS FULL_TITLE,
  CONCAT( '<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber,'\"" target=""_blank"">', biblio.biblionumber, '</a>' ) AS LINK_TO_TITLE
FROM
  reserves JOIN
    biblio
      ON reserves.biblionumber = biblio.biblionumber
        JOIN biblio_metadata
          ON biblio_metadata.biblionumber = biblio.biblionumber
GROUP BY
  biblio.biblionumber
HAVING
  Count(reserves.reserve_id) > 19
ORDER BY
  REQUESTS_COUNT DESC,
  biblio.biblionumber ASC",,,,,,,,
R.002743,"/*
R.002743

----------

Name: Directors permissions
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2016-08-25 16:11:02
Modified on: 2017-10-20 17:31:59
Date last run: 2017-10-20 17:35:49

----------

Public: 0
Expiry: 0

----------

From VOKAL/CIN.

----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/members/member-flags.pl?member=', borrowers.borrowernumber, '\"" target=""_blank"">""edit permissions""</a>') AS ""edit permissions"",
  borrowers.surname,
  borrowers.firstname,
  borrowers.cardnumber,
  borrowers.categorycode,
  borrowers.branchcode,
  If(borrowers.flags MOD 2, 'Set', '') AS SuperLib,
  If(MOD(borrowers.flags DIV 2, 2), 'All parameters', GROUP_CONCAT(If(user_permissions.module_bit = 1, permissions.code, '') SEPARATOR ' ')) AS ""CircPermissions"",
  If(MOD(borrowers.flags DIV 4, 2), 'Set', '') AS 'View staff interface',
  If(MOD(borrowers.flags DIV 8, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 3, permissions.code, '') SEPARATOR ' ')) AS ManParams,
  If(MOD(borrowers.flags DIV 16, 2), 'Set', '') AS 'Add/modify patrons',
  If(MOD(borrowers.flags DIV 32, 2), 'Set', '') AS 'Modify permissions',
  If(MOD(borrowers.flags DIV 64, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 6, permissions.code, '') SEPARATOR ' ')) AS ReservePermissions,
  If(MOD(borrowers.flags DIV 128, 2), 'Set', '') AS BorrowBooks,
  If(MOD(borrowers.flags DIV 512, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 9, permissions.code, '') SEPARATOR ' ')) AS EditCatalogue,
  If(MOD(borrowers.flags DIV 1024, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 10, permissions.code, '') SEPARATOR ' ')) AS UpdateCharges,
  If(MOD(borrowers.flags DIV 2048, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 11, permissions.code, '') SEPARATOR ' ')) AS Acquisition,
  If(MOD(borrowers.flags DIV 4096, 2), 'Set', '') AS Management,
  If(MOD(borrowers.flags DIV 8192, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 13, permissions.code, '') SEPARATOR ' ')) AS Tools,
  If(MOD(borrowers.flags DIV 16384, 2), 'Set', '') AS EditAuthories,
  If(MOD(borrowers.flags DIV 32768, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 15, permissions.code, '') SEPARATOR ' ')) AS Series,
  If(MOD(borrowers.flags DIV 65536, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 16, permissions.code, '') SEPARATOR ' ')) AS Reports,
  If(MOD(borrowers.flags DIV 131072, 2), 'Set', '') AS StaffAccess,
  If(MOD(borrowers.flags DIV 262144, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 18, permissions.code, '') SEPARATOR ' ')) AS CourseReserves,
  If(MOD(borrowers.flags DIV 524288, 2), ""All parameters"", GROUP_CONCAT(If(user_permissions.module_bit = 19, permissions.code, '') SEPARATOR ' ')) AS Plugins
FROM
  borrowers
  LEFT JOIN user_permissions ON borrowers.borrowernumber = user_permissions.borrowernumber
  LEFT JOIN permissions ON user_permissions.code = permissions.code
WHERE
  (borrowers.flags > 0 OR
    user_permissions.module_bit > 0) AND
  borrowers.surname LIKE CONCAT('%', <<Choose staff member type|ZSTAFF>>, '%')
GROUP BY
  borrowers.borrowernumber
ORDER BY
  SuperLib DESC,
  borrowers.surname,
  borrowers.categorycode,
  borrowers.branchcode,
  borrowers.firstname",,,,,,,,
R.002744,"/*
R.002744

----------

Name: GHW - Paola Carousel Number report
Created by: George H Williams

----------

Group: -
     -

Created on: 2016-08-29 13:00:26
Modified on: 2020-02-27 10:40:35
Date last run: 2022-09-19 15:00:08

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>This report shows all items added to NExpress at a specific library branch after a specified date - includes date added, date last borrowed, date last seen, and total circulations+renewals</p>
<ul><li>Shows items that are currently still in NExpress</li>
<li>Allows user to specify the item's homebranch, shelving location, item type, collection code, and the item's date added</li>
<li>grouped by homebranch, location, itype, collection code, and call number</li>
<li>sorted by homebranch, location, itype, collection code, and call number</li>
<li>contains links directly to the item's bibliographic record</li>
</ul><br />
</div>

----------
*/

","SELECT
  Coalesce(items.copynumber, ""~"") AS copynumber,
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">', biblio.biblionumber, '</a>') AS LINK_TO_TITLE,
  items.itemnumber,
  items.homebranch,
  items.barcode,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  Concat_Ws(' ', biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')) AS FULL_TITLE,
  items.dateaccessioned,
  items.datelastborrowed,
  items.datelastseen,
  items.issues,
  items.renewals,
  If(items.onloan IS NULL, ' ', 'Currently checked out') AS CHECKED_OUT,
  If(Sum(items.damaged + items.itemlost + items.withdrawn) = 0, ' ', 'Damaged, lost, or withdrawn') AS STATUS_PROBLEMS
FROM
  items
  JOIN biblio ON items.biblionumber = biblio.biblionumber
  JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
WHERE
  (items.homebranch = 'PAOLA' AND
  Coalesce(items.copynumber, ""~"") <> ""~"") OR
  (items.homebranch = 'PAOLA' AND
  Coalesce(items.copynumber, ""~"") = ""~"" AND
  (items.itype LIKE 'NVID%') AND
  items.itemcallnumber LIKE ""%MOV%"")
GROUP BY
  items.itemnumber
ORDER BY
  copynumber,
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  FULL_TITLE",,,,,,,,
R.002746,"/*
R.002746

----------

Name: GHW - Paola Patrons
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2016-08-29 22:19:30
Modified on: 2016-08-29 22:19:30
Date last run: -

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT *
FROM borrowers
WHERE borrowers.branchcode = 'PAOLA'",,,,,,,,
R.002748,"/*
R.002748

----------

Name: GHW - Duplicate search
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2016-08-29 23:37:20
Modified on: 2016-08-30 00:13:23
Date last run: 2022-09-14 08:36:57

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  CONCAT('<a href=\""/cgi-bin/koha/catalogue/search.pl?idx=ti&q=',b.title,'&sort_by=title_az\"" target=""_blank"">',b.title,'</a>') AS ""Title Search"",
  CONCAT(trim(b.title)),
  GROUP_CONCAT(DISTINCT b.biblionumber SEPARATOR ', ') as numbers,
  GROUP_CONCAT(DISTINCT '<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', b.biblionumber,'\"" target=""_blank"">', b.biblionumber, '</a>'  SEPARATOR ', ') AS 'biblionumber',
  GROUP_CONCAT(DISTINCT t.publicationyear SEPARATOR ', ') as copyright,
  GROUP_CONCAT(DISTINCT b.author SEPARATOR ', ') as author,
  GROUP_CONCAT(DISTINCT i.ccode SEPARATOR ', ') as ccode,
  GROUP_CONCAT(DISTINCT i.itype SEPARATOR ', ') as ITEM_TYPE,
  GROUP_CONCAT(DISTINCT i.homebranch SEPARATOR ', ') as homebranches,
  count(DISTINCT b.biblionumber)
FROM biblio b 
  LEFT JOIN items i USING(biblionumber)
  LEFT JOIN biblioitems t USING(biblionumber)
WHERE (i.ccode NOT IN ('ERESOURCE','DLVIDEO','DLAUDIO','DLBOOK','DLMUSIC'))
GROUP BY CONCAT(trim(b.title))
HAVING (count(DISTINCT b.biblionumber) > 1) AND homebranches LIKE '%PAOLA%'
",,,,,,,,
R.002757,"/*
R.002757

----------

Name: GHW - 245h
Created by: George H Williams

----------

Group: -
     -

Created on: 2016-09-02 17:24:17
Modified on: 2018-01-24 16:59:27
Date last run: 2017-12-18 22:15:38

----------

Public: 0
Expiry: 0

----------

Holds ratio

----------
*/

","SELECT
  biblio.biblionumber,
  biblio.author,
  Concat(biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')) AS FULL_TITLE,
  Coalesce(ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'), ""-"") AS MEDIUM
FROM
  biblio
  JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
GROUP BY
  biblio.biblionumber
ORDER BY
  biblio.biblionumber,
  biblio.author,
FULL_TITLE",,,,,,,,
R.002758,"/*
R.002758

----------

Name: Authors with possible duplicates
Created by: Heather Braum

----------

Group: Administrative Reports
     Post-Lansing

Created on: 2016-09-04 16:38:55
Modified on: 2019-02-10 20:54:14
Date last run: 2022-01-14 16:58:34

----------

Public: 0
Expiry: 0

----------

Backwards - start at page 55

----------
*/

","SELECT
  Concat(
     '<a href=\""/cgi-bin/koha/reports/guided_reports.pl?reports=3166&phase=Run+this+report&m_name=searchterm&sql_params=',
    Replace(Replace(Replace(Replace(biblio.author, ""."", """"), "","", """"), ""'"", """"), "" "",""+""),
    '"" target=""_blank"">Run targeted search</a>'
  ) AS ASEARCH,
  Concat(
    '<a href=\""/cgi-bin/koha/catalogue/search.pl?idx=au&q=',
    Replace(Replace(Replace(biblio.author, ""."", """"), "","", """"), ""'"", """"),
    '&sort_by=title_az\"" target=""_blank"">',
    Replace(Replace(Replace(biblio.author, ""."", """"), "","", """"), ""'"", """"),
    '</a>'
  ) AS ""Author Search"",
  Replace(Replace(Replace(biblio.author, ""."", """"), "","", """"), ""'"", """") AS AUTHOR,
  Count(items.itemnumber)
FROM
  biblio
  JOIN items ON items.biblionumber = biblio.biblionumber
WHERE
  items.homebranch = 'HIGH_CC'
GROUP BY
  Replace(Replace(Replace(biblio.author, ""."", """"), "","", """"), ""'"", """")
HAVING
  Count(items.itemnumber) > 1
ORDER BY
  Count(items.itemnumber) DESC",,,,,,,,
R.002760,"/*
R.002760

----------

Name: GHW - Branch Contact Information
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2016-09-06 01:02:47
Modified on: 2016-10-05 10:54:41
Date last run: 2019-02-05 18:45:02

----------

Public: 0
Expiry: 0

----------

Report for GHW to create mail merge contact information sheet and for cleaning up problems with branch information in Koha (data is inconsistent - some address1 fields are street addresses and some are PO boxes - some address2 fields are street addresses and some are PO boxes - etc.  Lots of cleanup to do.

investigate putting Director's contact info as address line 3 and ILL contact as country - or find a way to do both in country or something.

----------
*/

","SELECT
  branches.branchcode,
  branches.branchname,
  branches.branchaddress1 AS MAILING_ADDRESS,
  branches.branchaddress2 AS STREET_ADDRESS_1,
  branches.branchaddress3 AS OTHER_ADDRESS,
  branches.branchcity,
  branches.branchstate,
  branches.branchzip,
  branches.branchphone,
  branches.branchfax,
  branches.branchemail,
  Count(items.itemnumber) AS TOTAL_ITEMS
FROM
  branches JOIN
  items
    ON items.homebranch = branches.branchcode
GROUP BY
  branches.branchcode
ORDER BY
  branches.branchname
    ASC",,,,,,,,
R.002763,"/*
R.002763

----------

Name: GHW - Items more than XX days overdue
Created by: George H Williams

----------

Group: Circulation
     Overdues

Created on: 2016-09-06 10:02:52
Modified on: 2018-04-16 10:48:35
Date last run: 2019-01-25 10:24:52

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Generates a list of items checked out at a specified branch that are owned by a specified branch and are now overdue for more than a specified number of days</p>
<ul><li>Shows current data</li>
<li>Shows items checked out at the library you specify, owned by the location you specify, and overdue for more than the number of days you specify</li>
<li>grouped by check-out library, owning library, item classification, author, title, and due date</li>
<li>contains links to the item's bibliographic record</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p>Report created at the request of LANSING.</p>
<p>Report created by George Williams.</p>
</div>


----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',  biblio.biblionumber, '\"" target=""_blank"">', biblio.biblionumber,  '</a>') AS LINK_TO_TITLE,
  issues.branchcode AS CHECK_OUT_BRANCH,
  items.barcode,
  CONCAT_WS('<br />',items.location,items.ccode,items.itype,items.itemcallnumber) AS CLASSIFICATION,
  biblio.author,
  Concat_Ws(' ', biblio.title, ExtractValue(biblio_metadata.metadata,  '//datafield[@tag=""245""]/subfield[@code=""b""]'),  ExtractValue(biblio_metadata.metadata,  '//datafield[@tag=""245""]/subfield[@code=""p""]'),  ExtractValue(biblio_metadata.metadata,  '//datafield[@tag=""245""]/subfield[@code=""n""]')) AS FULL_TITLE,
  items.dateaccessioned AS DATE_ADDED,
  items.datelastborrowed,
  items.datelastseen AS DATE_LAST_CHECKED_IN,
  items.onloan AS DATE_DUE,
  SUM(IFNULL(items.issues, 0) + IFNULL(items.renewals, 0)) AS CHECK_OUTS_PLUS_RENEWALS,
  If(Sum(items.damaged + items.itemlost + items.withdrawn) = 0, ' ',
  'Damaged, lost, or withdrawn') AS STATUS_PROBLEMS,
  items.homebranch AS ITEMS_HOMEBRANCH
FROM
  items JOIN
  biblio
    ON items.biblionumber = biblio.biblionumber JOIN
  biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber AND
    items.biblionumber = biblio_metadata.biblionumber JOIN
  issues
    ON issues.itemnumber = items.itemnumber
WHERE
  issues.branchcode  LIKE <<Pick the item's check-out branch|LBRANCH>>AND
  items.homebranch  LIKE <<Pick the item's home branch|LBRANCH>> AND
  items.onloan <= (NOW() - INTERVAL <<Select the number of days overdue>> DAY)
GROUP BY
  issues.branchcode,
  items.homebranch,
  items.location,
  items.ccode,
  items.itype,
  items.itemcallnumber,
  biblio.author,
  biblio.title,
  items.onloan
",,,,,,,,
R.002764,"/*
R.002764

----------

Name: GHW - PAOLA Computers Report
Created by: George H Williams

----------

Group: -
     -

Created on: 2016-09-07 22:58:52
Modified on: 2016-09-07 23:14:11
Date last run: 2022-09-13 13:35:16

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  biblio.title,
  issues.date_due,
  CONCAT( '<a href=\""/cgi-bin/koha/members/moremember.pl?borrowernumber=',issues.borrowernumber ,'\"" target=""_blank"">Open patron in new window</a>' ) AS BORROWER_LINK
FROM
  items INNER JOIN
  biblio
    ON items.biblionumber = biblio.biblionumber LEFT JOIN
  issues
    ON issues.itemnumber = items.itemnumber
WHERE
  items.homebranch = 'PAOLA' AND
  items.itype = 'COMPUTER'",,,,,,,,
R.002766,"/*
R.002766

----------

Name: GHW - PAOLA - Carousel Numbers
Created by: George H Williams

----------

Group: -
     -

Created on: 2016-09-08 10:00:42
Modified on: 2017-12-19 09:34:17
Date last run: 2018-07-06 10:36:25

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  items.copynumber,
  items.itemcallnumber,
  Concat_Ws(' ', biblio.title, ExtractValue(biblio_metadata.metadata,'//datafield[@tag=""245""]/subfield[@code=""b""]'),ExtractValue(biblio_metadata.metadata,'//datafield[@tag=""245""]/subfield[@code=""p""]'),ExtractValue(biblio_metadata.metadata,'//datafield[@tag=""245""]/subfield[@code=""n""]')) AS FULL_TITLE,
  items.barcode,
  items.onloan,
  items.itemlost,
  items.damaged
FROM
  items JOIN
  biblio
    ON items.biblionumber = biblio.biblionumber JOIN
  biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber AND
    items.biblionumber = biblio_metadata.biblionumber
WHERE
  items.homebranch = 'PAOLA' AND
  items.copynumber IS NOT NULL
GROUP BY
  items.copynumber, items.itemcallnumber, items.onloan, items.itemlost,
  items.damaged, items.homebranch
ORDER BY
  items.copynumber",,,,,,,,
R.002769,"/*
R.002769

----------

Name: GHW - TEST accounts
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2016-09-10 23:12:34
Modified on: 2018-04-16 10:48:39
Date last run: 2018-01-24 16:28:48

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Shows all of the NExpress test accounts</p>
<ul><li>Shows current accounts</li>
<li>at all NExpress libraries</li>
<li>links directly to the details page of the account (links open in a new window)</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p>This report lists all of the information from the patron's account except the userid, password, and flags fields so that the report can be downloaded, the ""borrowernumber"" links column can be deleted, changes can be made to the account information, and then the data can be imported back into Koha without accidentally changing the userid, password, or flags fields (which can screw up the accounts - yes - learned this one the hard way - again).</p>
</div>

----------
*/

","SELECT
  CONCAT( '<a href=\""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',borrowers.borrowernumber ,'\"" target=""_blank"">', borrowers.borrowernumber, '</a>' ) AS 'BORROWER_NUMBER',
  borrowers.borrowernumber,
  borrowers.cardnumber,
  borrowers.surname,
  borrowers.firstname,
  borrowers.title,
  borrowers.othernames,
  borrowers.initials,
  borrowers.streetnumber,
  borrowers.streettype,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.country,
  borrowers.email,
  borrowers.phone,
  borrowers.mobile,
  borrowers.fax,
  borrowers.emailpro,
  borrowers.phonepro,
  borrowers.B_streetnumber,
  borrowers.B_streettype,
  borrowers.B_address,
  borrowers.B_address2,
  borrowers.B_city,
  borrowers.B_state,
  borrowers.B_zipcode,
  borrowers.B_country,
  borrowers.B_email,
  borrowers.B_phone,
  borrowers.dateofbirth,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  borrowers.gonenoaddress,
  borrowers.lost,
  borrowers.debarred,
  borrowers.debarredcomment,
  borrowers.contactname,
  borrowers.contactfirstname,
  borrowers.contacttitle,
  borrowers.guarantorid,
  borrowers.borrowernotes,
  borrowers.relationship,
  borrowers.ethnicity,
  borrowers.ethnotes,
  borrowers.sex,
  borrowers.opacnote,
  borrowers.contactnote,
  borrowers.sort1,
  borrowers.sort2,
  borrowers.altcontactfirstname,
  borrowers.altcontactsurname,
  borrowers.altcontactaddress1,
  borrowers.altcontactaddress2,
  borrowers.altcontactaddress3,
  borrowers.altcontactstate,
  borrowers.altcontactzipcode,
  borrowers.altcontactcountry,
  borrowers.altcontactphone,
  borrowers.smsalertnumber,
  borrowers.privacy
FROM
  borrowers
WHERE
  borrowers.othernames LIKE ""%TEST%""
ORDER BY
  borrowers.surname,
  borrowers.firstname
  ASC",,,,,,,,
R.002770,"/*
R.002770

----------

Name: GHW - Flexible Circulation and Renewal Count by Shelving Location
Created by: George H Williams

----------

Group: Statistics
     -

Created on: 2016-09-12 01:04:34
Modified on: 2021-10-20 12:16:54
Date last run: 2021-12-14 14:07:30

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Counts circulation (checkouts + renewals) on items checked out between the beginning of the day on DATE1 and the end of the day on DATE2 and groups them by shelving location</p>
<ul><li>Shows items checked out or renewed between two specified dates (between 12:00 a.m. on DATE1 and 11:59 p.m. on DATE2</li>
<li>shows items checked out at the specified library</li>
<li>grouped by item check-out branch</li>
<li>sorted by item check-out branch and shelving location</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p class=""updated"">SHELVING_LOCATION is based on the shelving location of the item at the time it was checked out *Unless the item had a ""Recently returned"" shelving location.*  This report falls back to the items' ""Permanent shelving location"" whenever the statistics data shows that the item's shelving location was ""Recently returned.""</p>
<p>Report created by GHW at the request of LEAVENWRTH so they could track circulation of items on display.</p>
<p>Items without a shelving location will be recorded as having a shelving location of ""Adult.""</p>
<p></p>
<p class=""updated"">Updated on 2021.10.20 to include changes based on the ""Recently returned"" shelving location.</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#statistics #circulation #permanent_location</p>
</div>

----------
*/

","SELECT
  branches.branchname AS BRANCHNAME,
  branches.lib AS SHELVING_LOCATION,
  Coalesce(Sum(statisticss.CKO_RENEW_COUNT), 0) AS CKO_RENEW_COUNT
FROM
  (SELECT
      branches.branchcode,
      branches.branchname,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.category
    FROM
      branches,
      authorised_values
    WHERE
      authorised_values.category = 'LOC') branches LEFT JOIN
  (SELECT
      statistics.branch,
      Count(*) AS CKO_RENEW_COUNT,
      If(
        Coalesce(statistics.location, ""ADULT"") = ""CART"",
        items.permanent_location, 
        Coalesce(statistics.location, ""ADULT"")
      ) AS
      location
    FROM
      statistics LEFT JOIN
      items ON items.itemnumber = statistics.itemnumber
    WHERE
      statistics.datetime BETWEEN 
        <<Between the start of the day on|date>> AND 
        (<<and the end of the day on|date>> + INTERVAL 1 DAY) AND
      (statistics.type = 'issue' OR
        statistics.type = 'renew')
    GROUP BY
      statistics.branch,
      Coalesce(statistics.location, ""ADULT"")) statisticss ON
      statisticss.branch = branches.branchcode AND
      statisticss.location = branches.authorised_value
WHERE
  branches.branchcode LIKE <<Choose your library|LBRANCH>>
GROUP BY
  branches.branchname,
  branches.lib",,,,,,,,
R.002771,"/*
R.002771

----------

Name: GHW - Card Prefix Report - Part 1
Created by: George H Williams

----------

Group: -
     -

Created on: 2016-09-13 18:01:22
Modified on: 2021-02-25 09:53:22
Date last run: 2022-07-22 18:49:23

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Attempts to discern which card number ranges are in use at a specified library</p>
<ul><li>reports on current cards in NExpress</li>
<li>Shows card prefixes at a specified patron homebranch<br />with a specified number of prefix digits<br />and where there are more than a specified number of cards with that prefix</li>
<li>grouped and sorted by patron home library and card number prefix</li>
<li>click on links to see if other libraries are using this same prefix identified in the report (report 2773)</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p>Report 2773 is the companion to this report</p>
<p>Report created at the request of Robin Hastings.</p>
<p>Report created by George Williams.</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2771&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  <<Number of digits in card prefix|YNUMBER>> AS CARD_PREFIX_LENGTH,
  borrowers.branchcode AS BORROWERS_HOME_BRANCH,
  Left(borrowers.cardnumber, <<Number of digits in card prefix|YNUMBER>>) AS LIBRAY_CARD_PREFIX,
  LENGTH(borrowers.cardnumber) AS CARD_NUMBER_LENGTH,
  Count(borrowers.borrowernumber) AS LIBRARY_CARD_COUNT,
  CONCAT( '<a href=\""/cgi-bin/koha/reports/guided_reports.pl?phase=Run+this+report&reports=2773&sql_params=', (Left(borrowers.cardnumber, <<Number of digits in card prefix|YNUMBER>>)) ,'&limit=10000 \"" target=""_blank"">Link to report 2773</a>' ) AS LINK_TO_PREFIX_REPORT_2
FROM
  borrowers
WHERE
  borrowers.branchcode LIKE <<Patron home branch|LBRANCH>>
GROUP BY
  borrowers.branchcode, CARD_NUMBER_LENGTH, LIBRAY_CARD_PREFIX
HAVING
  LIBRARY_CARD_COUNT >= <<Minimum card number count|YNUMBER>>
ORDER BY
  borrowers.branchcode,
  LIBRAY_CARD_PREFIX",,,,,,,,
R.002772,"/*
R.002772

----------

Name: GHW - Guarantors with guarantees that owe money
Created by: George H Williams

----------

Group: Administrative Reports
     Reports Testing Ground

Created on: 2016-09-13 20:06:28
Modified on: 2018-06-04 10:52:10
Date last run: 2022-03-31 10:35:07

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  CONCAT('<a href=\""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', Guarantors.borrowernumber, '\"" target=""_blank"">Link to guarantor</a>') AS LINK_TO_GUARANTOR,
  Concat_WS('<br />',
    Concat(""Cardnumber: "", Guarantors.cardnumber),
    Concat('<br />Home: ', Guarantors.branchcode)
  ) AS GUARANTOR_INFO,
  CONCAT(Guarantors.surname, IF(Guarantors.firstname is null, """", Concat("", "", Guarantors.firstname))) AS GUARANTOR,
  CONCAT_WS('<br />',Guarantors.address, (CONCAT_WS(' ',(CONCAT_WS(', ',Guarantors.city, Guarantors.state)),Guarantors.zipcode)), Guarantors.phone,Guarantors.email) AS GUARANTOR_CONTACT,
  Concat_WS('<br />',
    Concat(""Cardnumber: "", Guarantees.cardnumber),
    Concat('<br />Home: ', Guarantees.branchcode)
  ) AS GUARANTEE_INFO,
  CONCAT(Guarantees.surname, IF(Guarantees.firstname is null, """", Concat("", "", Guarantees.firstname))) AS GUARANTEE,
  CONCAT_WS('<br />',Guarantees.address, (CONCAT_WS(' ',(CONCAT_WS(', ',Guarantees.city, Guarantees.state)),Guarantees.zipcode)), Guarantees.phone,Guarantees.email) AS GUARANTEE_CONTACT,
  FORMAT(Sum(accountlines.amountoutstanding),2) AS AMOUNT_OUTSTANIDING,
  CONCAT('<a href=\""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', Guarantees.borrowernumber, '\"" target=""_blank"">Link to guarantee</a>') AS LINK_TO_GUARANTEE
FROM
  borrowers Guarantors INNER JOIN
  borrowers Guarantees
    ON Guarantors.borrowernumber = Guarantees.guarantorid LEFT JOIN
  accountlines
    ON accountlines.borrowernumber = Guarantees.borrowernumber
WHERE
  Guarantors.branchcode LIKE <<Guarantors home branch|LBRANCH>>
GROUP BY
  Guarantors.borrowernumber,
  Guarantees.borrowernumber
HAVING
  Sum(accountlines.amountoutstanding) > <<Guarantees owing greater than XX.XX>>
ORDER BY
  Guarantors.branchcode,
  Guarantors.surname,
  Guarantors.firstname,
  Guarantees.firstname,
  Guarantees.surname",,,,,,,,
R.002773,"/*
R.002773

----------

Name: GHW - Card prefix report part 2
Created by: George H Williams

----------

Group: -
     -

Created on: 2016-09-14 09:19:42
Modified on: 2018-04-16 11:02:40
Date last run: 2022-07-22 18:49:31

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Attempts to discern which libraries are using a specified card prefix</p>
<ul><li>reports on current cards in NExpress</li>
<li>shows a count of how many cards with the specified prefix exist at all NExpress libraries</li>
<li>grouped and sorted by patron home library</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p>Report 2771 is the companion to this report</p>
<p>Report created at the request of Robin Hastings.</p>
<p>Report created by George Williams.</p>
</div>

----------
*/

","SELECT
  borrowers.branchcode AS BORROWERS_HOME_LIBRARY,
  Count(borrowers.cardnumber) AS CARD_COUNT
FROM
  borrowers
WHERE
  borrowers.cardnumber LIKE CONCAT((<<Card prefix>>),'%')
GROUP BY
  borrowers.branchcode
  WITH ROLLUP",,,,,,,,
R.002777,"/*
R.002777

----------

Name: GHW - News block dump
Created by: George H Williams

----------

Group: -
     -

Created on: 2016-09-23 10:17:30
Modified on: 2019-08-16 15:17:21
Date last run: 2019-08-16 15:17:23

----------

Public: 0
Expiry: 300

----------

Dump of old news items

----------
*/

","SELECT
  opac_news.idnew,
  opac_news.branchcode,
  opac_news.title,
  Replace(opac_news.content, '\r\n', CONCAT(Char(13),Char(10))) AS content,
  opac_news.lang,
  opac_news.timestamp,
  opac_news.expirationdate,
  opac_news.number,
  opac_news.borrowernumber
FROM
  opac_news
WHERE
  opac_news.title LIKE ""%Useful links for%""
ORDER BY
  opac_news.branchcode",,,,,,,,
R.002778,"/*
R.002778

----------

Name: GHW - Holds Queue with scannable barcodes
Created by: George H Williams

----------

Group: Holds-Reserves
     -

Created on: 2016-09-25 22:37:09
Modified on: 2022-03-01 10:11:53
Date last run: 2022-10-03 13:24:42

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo class=""noprint"">
<p>Print holds queue report with scannable barcodes</p>
<ul><li>Shows items in the current holds queue</li>
<li>at the location you specify</li>
<li>grouped by specified location, items home branch, call number, author, and title</li>
<li>contains links to the bibliographic records</li>
</ul><br />
</div>



----------
*/

","SELECT
  Concat_Ws('<br />', 
    Concat('Current: ', hold_fill_targets.source_branchcode),
    Concat('Owned by: ', items.homebranch), 
    Concat('Last seen: ', items.datelastseen),
    (Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">Go to biblio</a>'))
  ) AS INFO,
  Concat_Ws('<br />', 
    If(LOCATIONS.lib = PERM_LOCATIONS.lib, LOCATIONS.lib, Concat(PERM_LOCATIONS.lib, "" ("", LOCATIONS.lib, "")"")), 
    ITEMTYPESS.description,
    CCODES.lib, 
    items.itemcallnumber, 
    items.copynumber
  ) AS CALL_NUMBER,
  Concat_Ws('<br />', 
    biblio.author, 
    (Concat_Ws('<br />', 
      biblio.title, 
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'))
    )
  ) AS AUTHOR_TITLE,
  Concat_Ws('<br />', 
    (Concat('<img src=""/cgi-bin/koha/svc/barcode?barcode=', '*', Upper(items.barcode), '*', '&type=Code39""></img>')), 
    items.barcode
  ) AS BARCODE
FROM
  biblio LEFT JOIN
  ((hold_fill_targets LEFT JOIN
  items ON hold_fill_targets.itemnumber = items.itemnumber) LEFT JOIN
  biblio_metadata ON items.biblionumber = biblio_metadata.biblionumber) ON
      biblio.biblionumber = biblio_metadata.biblionumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE') CCODES ON CCODES.authorised_value =
      items.ccode LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') PERM_LOCATIONS ON
      PERM_LOCATIONS.authorised_value = items.permanent_location LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') LOCATIONS ON
      LOCATIONS.authorised_value = items.location LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) ITEMTYPESS ON ITEMTYPESS.itemtype = items.itype
WHERE
  hold_fill_targets.source_branchcode LIKE <<Select your branch|LBRANCH>>
GROUP BY
  hold_fill_targets.itemnumber
ORDER BY
  items.homebranch,
  If(LOCATIONS.lib = PERM_LOCATIONS.lib, LOCATIONS.lib, Concat(PERM_LOCATIONS.lib, "" ("", LOCATIONS.lib, "")"")),
  ITEMTYPESS.description,
  CCODES.lib,
  items.itemcallnumber,
  biblio.author,
  biblio.title,
  items.barcode",,,,,,,,
R.002779,"/*
R.002779

----------

Name: GHW - Count of current un-expired borrowers at a branch
Created by: George H Williams

----------

Group: Borrowers
     -

Created on: 2016-09-27 10:16:31
Modified on: 2018-04-16 11:02:34
Date last run: 2022-08-31 12:04:59

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Counts un-expired borrowers with a specified homebranch</p>
<ul><li>Counts borrowers currently in NExpress</li>
<li>with a specified homebranch</li>
<li>grouped and sorted by borrower's home library</li>
</ul><br />
</div>

----------
*/

","SELECT
  borrowers.branchcode AS BORROWER_HOME_LIBRARY,
  Count(borrowers.borrowernumber) AS COUNT_OF_BORROWERS
FROM
  borrowers
WHERE
  borrowers.dateexpiry > Now() AND
  borrowers.branchcode LIKE <<Patron home library|LBRANCH>>
GROUP BY
  borrowers.branchcode WITH ROLLUP",,,,,,,,
R.002782,"/*
R.002782

----------

Name: GHW - Requests troubleshooting 001 - Item requests current
Created by: George H Williams

----------

Group: Holds-Reserves
     Holds troubleshooting

Created on: 2016-09-29 09:31:38
Modified on: 2018-04-16 11:02:31
Date last run: 2022-03-28 10:49:55

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Identifies current requests on a specific item (item specific requests)</p>
<ul><li>Shows all current requests</li>
<li>on an item you specify</li>
<li>sorted by the last activity on the item request</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Report created to help troubleshoot problems with requested items (i.e. missing in transit, item on holds list not found, etc.).</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2782&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  reserves.timestamp,
  items.barcode,
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title,
  borrowers.cardnumber AS BORROWER,
  reserves.branchcode AS PICKUP_LOCATION,
  reserves.reservedate,
  reserves.waitingdate,
  reserves.cancellationdate,
  reserves.reservenotes,
  reserves.found
FROM
  items JOIN
  reserves
    ON reserves.itemnumber = items.itemnumber JOIN
  borrowers
    ON reserves.borrowernumber = borrowers.borrowernumber JOIN
  biblio
    ON reserves.biblionumber = biblio.biblionumber
WHERE
  items.barcode = <<Enter item barcode number>>
ORDER BY
  reserves.timestamp DESC",,,,,,,,
R.002783,"/*
R.002783

----------

Name: GHW - Requests troubleshooting 002 - Item request history
Created by: George H Williams

----------

Group: Holds-Reserves
     Holds troubleshooting

Created on: 2016-09-29 09:54:40
Modified on: 2018-04-16 11:02:28
Date last run: 2022-08-22 18:10:36

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Identifies old requests on a specific item</p>
<ul><li>Shows all finished requests</li>
<li>on an item you specify</li>
<li>sorted by the last activity on the item request</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Report created to help troubleshoot problems with requested items (i.e. missing in transit, item on holds list not found, etc.).</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2783&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  old_reserves.timestamp,
  items.barcode,
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title,
  borrowers.cardnumber AS BORROWER,
  old_reserves.branchcode AS PICKUP_LOCATION,
  old_reserves.reservedate,
  old_reserves.waitingdate,
  old_reserves.cancellationdate,
  old_reserves.reservenotes,
  old_reserves.found
FROM
  items JOIN
  old_reserves
    ON old_reserves.itemnumber = items.itemnumber JOIN
  borrowers
    ON old_reserves.borrowernumber = borrowers.borrowernumber JOIN
  biblio
    ON old_reserves.biblionumber = biblio.biblionumber
WHERE
  items.barcode = <<Enter item barcode number>>
ORDER BY
  old_reserves.timestamp DESC",,,,,,,,
R.002784,"/*
R.002784

----------

Name: GHW - Requests troubleshooting 003 - Item in-transit history
Created by: George H Williams

----------

Group: Holds-Reserves
     Holds troubleshooting

Created on: 2016-09-29 10:01:46
Modified on: 2022-03-29 13:37:48
Date last run: 2022-09-30 14:02:26

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Identifies ""In transit"" history of a specific item</p>
<ul><li>Shows all ""In transit"" data</li>
<li>on an item you specify</li>
<li>grouped by transfer ID</li>
<li>sorted by the date the item was shipped to its destination</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Report created to help troubleshoot problems with requested items (i.e. missing in transit, item on holds list not found, etc.).</p>
<p>Report 3039 actively links to this report</p>
<p>Updated on 2022.03.29</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2784&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  UPPER(items.barcode) AS ITEM_BC,
  branchtransfers.itemnumber,
  branchtransfers.frombranch,
  branchtransfers.datesent,
  branchtransfers.tobranch,
  branchtransfers.datecancelled,
  branchtransfers.datearrived,
  branchtransfers.comments,
  branchtransfers.cancellation_reason,
  branchtransfers.reason
FROM
  items
  JOIN branchtransfers ON branchtransfers.itemnumber = items.itemnumber
WHERE
  items.barcode LIKE Concat(""%"", <<Enter item barcode number>>,""%"")
GROUP BY
  branchtransfers.branchtransfer_id
ORDER BY
  branchtransfers.datesent DESC",,,,,,,,
R.002785,"/*
R.002785

----------

Name: GHW - Requests troubleshooting 004 - Item check-out history
Created by: George H Williams

----------

Group: Holds-Reserves
     Holds troubleshooting

Created on: 2016-09-29 10:35:34
Modified on: 2018-04-16 11:02:24
Date last run: 2022-09-30 14:02:21

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Identifies circulation history on a specific item</p>
<ul><li>Shows all circulation history that has been completed</li>
<li>on an item you specify</li>
<li>sorted by the last date the item was returned</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Report created to help troubleshoot problems with requested items (i.e. missing in transit, item on holds list not found, etc.).</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2785&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  old_issues.returndate,
  items.barcode,
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title,
  borrowers.cardnumber AS BORROWER,
  old_issues.branchcode AS CHECK_OUT_BRANCH,
  old_issues.issuedate,
  old_issues.date_due,
  old_issues.renewals,
  old_issues.lastreneweddate
FROM
  old_issues JOIN
  items
    ON old_issues.itemnumber = items.itemnumber JOIN
  biblio
    ON items.biblionumber = biblio.biblionumber JOIN
  borrowers
    ON old_issues.borrowernumber = borrowers.borrowernumber
WHERE
  items.barcode = <<Enter item barcode number>>
ORDER BY
  old_issues.returndate DESC",,,,,,,,
R.002786,"/*
R.002786

----------

Name: GHW - Flexible New Items Report
Created by: George H Williams

----------

Group: -
     -

Created on: 2016-10-05 14:39:48
Modified on: 2020-11-19 18:26:05
Date last run: 2022-06-20 17:00:20

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>This report shows all items added to Next Search Catalog at a specific library branch during a date range</p>
<ul><li>Shows items that are currently still in Next Search Catalog</li>
<li>Allows user to specify the item's homebranch, shelving location, item type, collection code, and the item's date added</li>
<li>grouped by biblionumber and itemnumber</li>
<li>sorted by homebranch, location, itype, collection code, call number, author, title</li>
<li>contains links directly to the item's bibliographic record in the OPAC</li>
</ul><br />
</div>

----------
*/

","SELECT
  Concat(
    '<a class=""btn btn-default"" href=""https://nextkansas.org/cgi-bin/koha/opac-detail.pl?biblionumber=', 
    biblio.biblionumber, 
    '\"" target=""_blank"">Go to OPAC</a>'
  ) AS LINK_TO_OPAC,
  items.biblionumber,
  items.itemnumber,
  items.barcode,
  items.homebranch,
  items.holdingbranch,
  LOCATIONSP.lib AS PERM_LOCATION,
  LOCATIONS.lib AS LOCATION,
  ITYPES.description AS ITEM_TYPE,
  CCODES.lib AS COLLECTION,
  items.itemcallnumber,
  biblio.author,
  Concat_Ws(' ', 
    biblio.title, 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')
  ) AS FULL_TITLE,
  items.dateaccessioned,
  If(items.onloan IS NULL, ' ', 'Currently checked out') AS CHECKED_OUT,
  If(Sum(items.damaged + items.itemlost + items.withdrawn) = 0, ' ', 'Damaged, lost, or withdrawn') AS STATUS_PROBLEMS
FROM
  items JOIN
  biblio ON items.biblionumber = biblio.biblionumber JOIN
  biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber AND
      items.biblionumber = biblio_metadata.biblionumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') LOCATIONSP ON
      LOCATIONSP.authorised_value = items.permanent_location LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') LOCATIONS ON
      LOCATIONS.authorised_value = items.location LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) ITYPES ON ITYPES.itemtype = items.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE') CCODES ON CCODES.authorised_value = items.ccode
WHERE
  items.homebranch LIKE <<Item home library|LBRANCH>> AND
  items.location LIKE <<Item shelving location|LLOC>> AND
  items.itype LIKE <<Item type|LITYPES>> AND
  items.ccode LIKE <<Item collection code|LCCODE>> AND
  items.dateaccessioned BETWEEN <<Start date|date>> AND <<end date|date>>
GROUP BY
  items.biblionumber,
  items.itemnumber
ORDER BY
  items.homebranch,
  PERM_LOCATION,
  ITEM_TYPE,
  COLLECTION,
  items.itemcallnumber,
  biblio.author,
  FULL_TITLE",,,,,,,,
R.002792,"/*
R.002792

----------

Name: GHW - Stats Sample 002
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2016-10-07 23:22:38
Modified on: 2016-10-09 19:58:47
Date last run: -

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  statistics.branch,
  statistics.itemtype,
  count(*)
FROM statistics
WHERE statistics.type = ""issue"" AND
  (statistics.datetime BETWEEN ""2016-09-01"" AND ""2016-09-08"") AND
  statistics.branch LIKE <<Enter branch code>>
GROUP BY statistics.branch, statistics.itemtype
WITH ROLLUP",,,,,,,,
R.002793,"/*
R.002793

----------

Name: GHW - Stats Sample 003
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2016-10-07 23:23:48
Modified on: 2016-10-09 19:58:59
Date last run: -

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  statistics.branch,
  statistics.itemtype,
  count(*)
FROM statistics
WHERE statistics.type = ""issue"" AND
  (statistics.datetime BETWEEN ""2016-09-01"" AND ""2016-09-08"") AND
  statistics.branch = <<Enter branch code|branches>>
GROUP BY statistics.branch, statistics.itemtype
WITH ROLLUP",,,,,,,,
R.002794,"/*
R.002794

----------

Name: GHW - Stats Sample 004
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2016-10-07 23:24:22
Modified on: 2016-10-09 20:06:45
Date last run: -

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  statistics.branch,
  statistics.itemtype,
  count(*)
FROM statistics
WHERE statistics.type = ""issue"" AND
  (statistics.datetime BETWEEN ""2016-09-01"" AND ""2016-09-08"") AND
  statistics.branch LIKE <<Enter branch code|LBRANCH>>
GROUP BY statistics.branch, statistics.itemtype
WITH ROLLUP",,,,,,,,
R.002796,"/*
R.002796

----------

Name: GHW - Duplicate holds on a bibliographic record
Created by: George H Williams

----------

Group: Holds-Reserves
     Duplicate request problems

Created on: 2016-10-10 08:59:30
Modified on: 2018-04-16 11:02:22
Date last run: 2019-02-05 21:53:57

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Searches for duplicate patron holds on a bibliographic record</p>
<ul><li>Searches for current requests</li>
<li>on a specified biblionumber (text input accepts wildcards)</li>
<li>grouped by biblionumber and borrowernumber</li>
<li>sorted by biblionumber and borrowernumber</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p>Helpful for identifying duplicate requests caused by merging records.</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2796&phase=Run%20this%20report""  target=""_blank"">Click here to run this report in a new window.</a></p>
</div>


----------
*/

","SELECT
  reserves.biblionumber,
  reserves.borrowernumber,
  borrowers.surname,
  COUNT(reserves.borrowernumber) AS COUNT_OF_REQUESTS
FROM reserves JOIN borrowers ON reserves.borrowernumber = borrowers.borrowernumber
WHERE (reserves.biblionumber LIKE <<Enter biblionumber>>)
GROUP BY reserves.biblionumber, reserves.borrowernumber
HAVING COUNT_OF_REQUESTS > 1",,,,,,,,
R.002798,"/*
R.002798

----------

Name: GHW - Stats Sample 001
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2016-10-10 09:04:14
Modified on: 2016-10-10 09:09:25
Date last run: -

----------

Public: 0
Expiry: 0

----------

Report created for ""Flexible reports"" demo.

----------
*/

","SELECT
  statistics.branch,
  statistics.itemtype,
  count(*)
FROM statistics
WHERE statistics.type = ""issue"" AND
  (statistics.datetime BETWEEN ""2016-09-01"" AND ""2016-09-08"")
GROUP BY statistics.branch, statistics.itemtype
WITH ROLLUP",,,,,,,,
R.002799,"/*
R.002799

----------

Name: GHW - Items paid for at a specified home branch
Created by: George H Williams

----------

Group: Fines/Fees
     -

Created on: 2016-10-10 09:36:41
Modified on: 2018-04-16 11:02:19
Date last run: 2022-09-23 16:23:02

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Lists items owned by a branch that have been marked as ""Paid for"" in Koha.</p>
<ul><li>Shows items currently in Koha</li>
<li>at the location (or locations) you specify</li>
<li>grouped and sorted by homebranch, shelving location, item type, collection code, call number, author, and title.</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Report created at the request of Eudora Public Library.</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2799&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window.</a></p>
</div>

----------
*/

","SELECT
  items.itemnumber,
  items.barcode,
  items.homebranch,
  items.holdingbranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title,
  items.timestamp
FROM
  items INNER JOIN
  biblio
    ON items.biblionumber = biblio.biblionumber
WHERE
  items.homebranch LIKE <<Enter item home branch|LBRANCH>> AND
  items.paidfor IS NOT NULL AND
  items.paidfor <> "" ""
ORDER BY
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title",,,,,,,,
R.002801,"/*
R.002801

----------

Name: GHW - Requests troubleshooting 005 - Patron requests history
Created by: George H Williams

----------

Group: Holds-Reserves
     Holds troubleshooting

Created on: 2016-10-11 09:41:49
Modified on: 2018-04-16 11:02:17
Date last run: 2019-08-21 16:55:11

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Identifies past requests made by a specific patron</p>
<ul><li>Shows request history</li>
<li>on a patron you specify</li>
<li>sorted by the last activity on the request</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Report created to help troubleshoot problems with requested items (i.e. missing in transit, item on holds list not found, patron received e-mail but we can't find the request, etc.).</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2801&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  old_reserves.reserve_id,
  old_reserves.biblionumber,
  old_reserves.timestamp,
  biblio.author,
  biblio.title,
  borrowers.cardnumber,
  old_reserves.branchcode,
  old_reserves.reservedate,
  old_reserves.waitingdate,
  old_reserves.cancellationdate,
  old_reserves.reservenotes,
  old_reserves.found
FROM
  old_reserves INNER JOIN
  borrowers
    ON old_reserves.borrowernumber = borrowers.borrowernumber INNER JOIN
  biblio
    ON old_reserves.biblionumber = biblio.biblionumber
WHERE
  borrowers.cardnumber = <<Enter patron barcode number>>
ORDER BY
  old_reserves.timestamp
DESC",,,,,,,,
R.002802,"/*
R.002802

----------

Name: GHW - Requests troubleshooting 006 - Patron requests current
Created by: George H Williams

----------

Group: Holds-Reserves
     Holds troubleshooting

Created on: 2016-10-11 09:45:12
Modified on: 2018-04-16 11:02:15
Date last run: 2019-08-21 16:03:37

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Identifies current requests on a specific item (item specific requests)</p>
<ul><li>Shows current requests for a specified patron</li>
<li>on a patron you specify</li>
<li>sorted by the last activity on the request</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Report created to help troubleshoot problems with requested items (i.e. missing in transit, item on holds list not found, patron received e-mail but we can't find the request, etc.).</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2802&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  reserves.timestamp,
  reserves.biblionumber,
  items.barcode,
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title,
  borrowers.cardnumber AS BORROWER,
  reserves.branchcode AS PICKUP_LOCATION,
  reserves.reservedate,
  reserves.waitingdate,
  reserves.cancellationdate,
  reserves.reservenotes,
  reserves.found
FROM
  items JOIN
  reserves
    ON reserves.itemnumber = items.itemnumber JOIN
  borrowers
    ON reserves.borrowernumber = borrowers.borrowernumber JOIN
  biblio
    ON reserves.biblionumber = biblio.biblionumber
WHERE
  borrowers.cardnumber = <<Enter patron barcode number>>
ORDER BY
  reserves.timestamp DESC",,,,,,,,
R.002804,"/*
R.002804

----------

Name: GHW - Accelerated Reader - Search by Interest level, Reading level, or Points
Created by: George H Williams

----------

Group: Catalog Records and Items
     Reading Program Reports

Created on: 2016-10-11 19:15:05
Modified on: 2018-10-18 11:26:49
Date last run: 2022-05-12 10:59:01

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Accelerated reader report</p>
<ul><li>Shows items currently in the catalog with ""Accelerated Reader"" information in the 526a field</li>
<li>at a specified branch</li>
<li>grouped by item home branch, call number information, author, and title</li>
<li>sorted by interest level, grade level, and AR points</li>
<li>contains links to the title's bibliographic record</li>
</ul><br />
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2804&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  items.homebranch,
  items.itype,
  Concat_Ws('<br />', items.location, authorised_values.lib, items.itemcallnumber) AS CALL_NUMBER,
  biblio.author,
  biblio.title,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""526""]//subfield[@code=""a""]') AS PROGRAM,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""526""]//subfield[@code=""b""]') AS INTEREST_LEVEL,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""526""]//subfield[@code=""c""]') AS READING_LEVEL,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""526""]//subfield[@code=""d""]') AS POINTS,
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">Go to staff client</a>') AS LINK_TO_STAFF,
  Concat('<a href=\""https://nextkansas.org/cgi-bin/koha/opac-detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">Go to OPAC</a>') AS LINK_TO_OPAC
FROM
  items
  JOIN biblio ON items.biblionumber = biblio.biblionumber
  JOIN authorised_values ON items.ccode = authorised_values.authorised_value
  JOIN biblio_metadata ON items.biblionumber = biblio_metadata.biblionumber
WHERE
  items.homebranch LIKE <<Choose item home branch|branches>> AND
  authorised_values.category = ""CCODE""
GROUP BY
  items.itemnumber
HAVING
  PROGRAM = ""Accelerated Reader"" AND
  INTEREST_LEVEL LIKE <<Interest level|ZINTEREST>> AND
  READING_LEVEL LIKE <<Reading level|ZPOINTS>> AND
  POINTS LIKE <<est points|ZPOINTS>>
ORDER BY
  PROGRAM,
  INTEREST_LEVEL,
  READING_LEVEL,
  POINTS",,,,,,,,
R.002805,"/*
R.002805

----------

Name: GHW - Requests cancelled after they were on the holds shelf
Created by: George H Williams

----------

Group: Holds-Reserves
     Holds troubleshooting

Created on: 2016-10-12 11:57:05
Modified on: 2018-04-16 11:02:10
Date last run: 2022-07-13 11:35:20

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Looks for requests that were cancelled after they were already waiting on the holds shelf</p>
<ul><li>Allows you to specify a ""Start date"" - will show you requests cancelled after that date</li>
<li>Shows holds cancelled at a specified branch</li>
<li>grouped and sorted by patron name, library card number, item home branch, item type, call number informaiton, author, and title</li>
<li>includes links to the bibliographic records of the items cancelled</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2805&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  borrowers.cardnumber AS PATRON_BC,
  CONCAT(borrowers.surname,', ',borrowers.firstname) AS PATRON_NAME,
  items.barcode AS ITEM_BC,
  items.homebranch AS ITEM_HOMEBRANCH,
  items.itype,
  CONCAT_WS('<br />',items.location, authorised_values.lib, items.itemcallnumber) AS CALL_NUMBER,
  CONCAT_WS('<br />',biblio.author,(CONCAT_WS('<br />',biblio.title,ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')))) AS AUTHOR_TITLE,
  old_reserves.cancellationdate AS DATE_CANCELLED,
  CONCAT('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',biblio.biblionumber,'\"" target=""_blank"">Go to biblio</a>') AS LINK
FROM
  old_reserves JOIN
  borrowers
    ON old_reserves.borrowernumber = borrowers.borrowernumber JOIN
  items
    ON old_reserves.itemnumber = items.itemnumber JOIN
  biblio_metadata
    ON items.biblionumber = biblio_metadata.biblionumber JOIN
  biblio
    ON biblio_metadata.biblionumber = biblio.biblionumber JOIN
  authorised_values
    ON items.ccode = authorised_values.authorised_value
WHERE
  old_reserves.branchcode = <<Pickup branch|branches>> AND
  old_reserves.cancellationdate IS NOT NULL AND
  old_reserves.waitingdate IS NOT NULL AND
  old_reserves.timestamp > <<Display holds cancelled after this date|date>> AND
  authorised_values.category = ""CCODE""
GROUP BY
  old_reserves.branchcode,
  PATRON_NAME,
  PATRON_BC,
  items.homebranch,
  items.itype,
  CALL_NUMBER,
  AUTHOR_TITLE
ORDER BY
  old_reserves.branchcode,
  PATRON_NAME,
  PATRON_BC,
  items.homebranch,
  items.itype,
  CALL_NUMBER,
  AUTHOR_TITLE",,,,,,,,
R.002806,"/*
R.002806

----------

Name: GHW - Circulation statistics for locally owned items by date range
Created by: George H Williams

----------

Group: Statistics
     Date range

Created on: 2016-10-13 16:32:19
Modified on: 2021-10-20 12:30:11
Date last run: 2022-10-01 11:59:01

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo class=noprint>
<p>Counts circulation (check-outs, renewals, and local use) of items checked out at a library that were owned by that library</p>
<ul><li>Counts circulation during the date range you specify</li>
<li>At the library you specify</li>
<li>grouped and sorted by item type, collection code, and shelving location code</li>
<li>Does not count items checked out to ""Inhouse"" accounts</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p class=""updated"">SHELVING_LOCATION is based on the shelving location of the item at the time it was checked out *Unless the item had a ""Recently returned"" shelving location.*  This report falls back to the items' ""Permanent shelving location"" whenever the statistics data shows that the item's shelving location was ""Recently returned.""</p>
<p></p>
<p>Updated on 2020.01.06 to reflect changes in the database structure</p>
<p class=""updated"">Updated on 2021.10.20 to include changes based on the ""Recently returned"" shelving location.</p>
<p class= ""notetags"" style=""display: none;"">#statistics #circulation #permanent_location</p>
</div>

----------
*/

","SELECT
  branches.branchname,
  Coalesce(
    If(locs.lib = ""Recently returned"", itemss.lib, locs.lib), 
    "" Adult""
  ) AS LOCATION,
  Coalesce(itemtypes.description, ""(UNCLASSIFIED)"") AS ITEM_TYPE,
  Coalesce(ccodes.lib, ""Fiction"") AS CCODE,
  Count(*) AS CKO_RENEW_COUNT
FROM
  statistics JOIN
  branches ON branches.branchcode = statistics.branch LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') locs ON locs.authorised_value =
      statistics.location JOIN
  (SELECT
      items.itemnumber,
      ilocs.lib,
      items.homebranch
    FROM
      items LEFT JOIN
      (SELECT
          authorised_values.category,
          authorised_values.authorised_value,
          authorised_values.lib,
          authorised_values.lib_opac
        FROM
          authorised_values
        WHERE
          authorised_values.category = 'LOC') ilocs ON ilocs.authorised_value =
          items.permanent_location
    WHERE
      items.homebranch LIKE <<Choose your library|LBRANCH>>
    UNION
    SELECT
      deleteditems.itemnumber,
      dilocs.lib,
      deleteditems.homebranch
    FROM
      deleteditems LEFT JOIN
      (SELECT
          authorised_values.category,
          authorised_values.authorised_value,
          authorised_values.lib,
          authorised_values.lib_opac
        FROM
          authorised_values
        WHERE
          authorised_values.category = 'LOC') dilocs ON
          dilocs.authorised_value = deleteditems.permanent_location
    WHERE
      deleteditems.homebranch LIKE <<Choose your library|LBRANCH>>) itemss ON itemss.itemnumber =
      statistics.itemnumber LEFT JOIN
  itemtypes ON itemtypes.itemtype = statistics.itemtype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE') ccodes ON ccodes.authorised_value =
      statistics.ccode INNER JOIN
  (SELECT
      borrowers.borrowernumber,
      borrowers.categorycode,
      borrowers.branchcode
    FROM
      borrowers
    WHERE
      borrowers.categorycode <> 'INHOUSE'
    UNION
    SELECT
      deletedborrowers.borrowernumber,
      deletedborrowers.categorycode,
      deletedborrowers.branchcode
    FROM
      deletedborrowers
    WHERE
      deletedborrowers.categorycode <> 'INHOUSE') borrowerss ON
      borrowerss.borrowernumber = statistics.borrowernumber
WHERE
  statistics.branch LIKE <<Choose your library|LBRANCH>> AND
  (statistics.type = 'issue' OR
    statistics.type = 'renew' OR
    statistics.type = 'localuse') AND
  statistics.datetime BETWEEN 
    (<<Between the beginning of the day on|date>>) AND 
    (<<and the end of the day on|date>> + INTERVAL 1 DAY)
GROUP BY
  branches.branchname,
  Coalesce(If(locs.lib = ""Recently returned"", itemss.lib, locs.lib), "" Adult""),
  Coalesce(itemtypes.description, ""(UNCLASSIFIED)""),
  Coalesce(ccodes.lib, ""Fiction"")
ORDER BY
  branches.branchname,
  LOCATION,
  ITEM_TYPE,
  CCODE",,,,,,,,
R.002808,"/*
R.002808

----------

Name: GHW - Flexible shelflist sorted by branch, location, itype, ccode
Created by: George H Williams

----------

Group: Catalog Records and Items
     Shelf Lists

Created on: 2016-10-14 10:30:29
Modified on: 2018-04-16 11:02:08
Date last run: 2022-06-04 18:44:50

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Shows all items at a specified branch with a specified shelving location, a specified item type, and a specified collection code</p>
<ul><li>Shows current items</li>
<li>at a location you specify</li>
<li>grouped and sorted by item home branch, shelving location, item type, collection code, call number, author, and title</li>
<li>contains links to bibliographic records</li>
</ul><br />
</div>

----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">', biblio.biblionumber, '</a>') AS LINK_TO_TITLE,
  items.barcode AS ITEM_BC,
  items.homebranch AS HOMEBRANCH,
  items.location AS SHELVING_LOCATION,
  items.itype AS ITEM_TYPE,
  authorised_values.lib AS CCODE,
  items.itemcallnumber,
  biblio.author,
  Concat_Ws(' ', biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')) AS FULL_TITLE
FROM
  items JOIN
  biblio
    ON items.biblionumber = biblio.biblionumber JOIN
  biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber AND
    items.biblionumber = biblio_metadata.biblionumber LEFT JOIN
  authorised_values
    ON items.ccode = authorised_values.authorised_value
WHERE
  items.homebranch LIKE <<Choose item home branch|LBRANCH>> AND
  items.location LIKE <<Choose item location|LLOC>> AND
  items.itype LIKE <<Choose item type|LITYPES>> AND
  authorised_values.lib LIKE <<Choose collection code|LCCODE>> AND
  authorised_values.category = ""CCODE""
GROUP BY
  HOMEBRANCH,
  SHELVING_LOCATION,
  ITEM_TYPE,
  CCODE,
  items.itemcallnumber,
  biblio.author,
  FULL_TITLE
ORDER BY
  HOMEBRANCH,
  SHELVING_LOCATION,
  ITEM_TYPE,
  CCODE,
  items.itemcallnumber,
  biblio.author,
  FULL_TITLE",,,,,,,,
R.002816,"/*
R.002816

----------

Name: GHW - Quick list of titles by an author
Created by: George H Williams

----------

Group: Catalog Records and Items
     Shelf Lists

Created on: 2016-11-04 16:40:55
Modified on: 2018-04-16 11:02:00
Date last run: 2020-12-03 10:28:39

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>What it does generates a list of all titles by an author by brief title</p>
<ul><li>Shows items currently in the catalog</li>
<li>shows items at a specified library by a specified author</li>
<li>grouped by classification, call number, author, and title information</li>
<li>sorted by title</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Report created at the request of Baldwin Public Library.</p>
<p>The author's name must be entered as SURNAME, FIRSTNAME or the report will not work</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2816&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  items.location,
  items.itype,
  authorised_values.lib AS COLLECTION_CODE,
  items.itemcallnumber AS CALL_NUMBER,
  biblio.author,
  biblio.title
FROM
  items LEFT JOIN
  biblioitems
    ON items.biblioitemnumber = biblioitems.biblioitemnumber LEFT JOIN
  biblio
    ON biblioitems.biblionumber = biblio.biblionumber LEFT JOIN
  authorised_values
    ON items.ccode = authorised_values.authorised_value
WHERE
  items.homebranch LIKE <<Items owned by|LBRANCH>> AND
  items.itype LIKE <<Enter item type|LITYPES>> AND
  biblio.author LIKE concat('%',<<Enter part of author's name in Last, First format>>, '%') AND
  authorised_values.category = ""CCODE""
ORDER BY
  biblio.title",,,,,,,,
R.002820,"/*
R.002820

----------

Name: GHW - Flexible Inventory List
Created by: George H Williams

----------

Group: Catalog Records and Items
     Shelf Lists

Created on: 2016-11-08 15:24:15
Modified on: 2022-03-29 12:13:14
Date last run: 2022-03-29 12:13:23

----------

Public: 0
Expiry: 0

----------

Currently configured for Overbrook


----------
*/

","SELECT
  items.homebranch,
  items.holdingbranch,
  Coalesce(items.location, '') AS LOCATION,
  Coalesce(items.itype, '') AS ITYPE,
  Coalesce(items.ccode, '') AS CCODE,
  items.itemcallnumber,
  items.barcode,
  biblio.author,
  Concat_Ws(' ', 
    biblio.title, 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')
  ) AS FULL_TITLE,
  Concat_Ws(' ', 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""490""]/subfield[@code=""a""]'), 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""490""]/subfield[@code=""v""]')
   )AS SERIES,
  items.onloan,
  If(items.onloan IS NULL, '0', '1') AS CHECKED_OUT,
  If(Sum(items.damaged + items.itemlost + items.withdrawn) = 0, '0', '1') AS STATUS_PROBLEM,
  If(items.itemcallnumber RLIKE ""^CD [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 6 ),
    If(items.itemcallnumber RLIKE ""^INS [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 7 ),
	If(items.itemcallnumber RLIKE ""^INSP [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 8 ),
	If(items.itemcallnumber LIKE ""FIC %"", SubString(items.itemcallnumber FROM 1 FOR 7 ),
	If(items.itemcallnumber RLIKE ""^BLU [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 7 ),
	If(items.itemcallnumber RLIKE ""^COL [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 7 ),
	If(items.itemcallnumber RLIKE ""^DVD [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 7 ),
	If(items.itemcallnumber RLIKE ""^FM [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 6 ),
	If(items.itemcallnumber RLIKE ""^FW [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 6 ),
	If(items.itemcallnumber RLIKE ""^INS [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 7 ),
	If(items.itemcallnumber RLIKE ""^INSP [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 8 ),
	If(items.itemcallnumber RLIKE ""^J DVD [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 9 ),
	If(items.itemcallnumber RLIKE ""^JB [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 6 ),
	If(items.itemcallnumber RLIKE ""^JBB [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 7 ),
	If(items.itemcallnumber RLIKE ""^JE [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 6 ),
	If(items.itemcallnumber RLIKE ""^JF [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 6 ),
	If(items.itemcallnumber RLIKE ""^JP [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 6 ),
	If(items.itemcallnumber RLIKE ""^LPF [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 7 ),
	If(items.itemcallnumber RLIKE ""^LPM [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 7 ),
	If(items.itemcallnumber RLIKE ""^LPW [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 7 ),
	If(items.itemcallnumber RLIKE ""^MCD [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 7 ),
	If(items.itemcallnumber RLIKE ""^SF [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 6 ),
	If(items.itemcallnumber RLIKE ""^SFF [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 7 ),
	If(items.itemcallnumber RLIKE ""^WII [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 7 ),
	If(items.itemcallnumber RLIKE ""^YA [a-zA-Z]"", SubString(items.itemcallnumber FROM 1 FOR 6 ), items.itemcallnumber))))))))))))))))))))))))
  ) AS ALPHACALL,
  If(items.itemcallnumber LIKE ""%#%"", SubString_Index(items.itemcallnumber, ""#"", -1), """") AS ALPHASERIES,
  If(biblio.author LIKE ""%., "", SubString(biblio.author FROM 1 FOR Char_Length(biblio.author) - 3 ),
  If(biblio.author LIKE ""%.,"", SubString(biblio.author FROM 1 FOR Char_Length(biblio.author) - 2 ),
    If(biblio.author LIKE ""%. "", SubString(biblio.author FROM 1 FOR Char_Length(biblio.author) - 2 ),
	If(biblio.author LIKE ""%, "", SubString(biblio.author FROM 1 FOR Char_Length(biblio.author) - 2 ),
	If(biblio.author LIKE ""%."", SubString(biblio.author FROM 1 FOR Char_Length(biblio.author) - 1 ),
	If(biblio.author LIKE ""%,"", SubString(biblio.author FROM 1 FOR Char_Length(biblio.author) - 1 ),
	If(biblio.author LIKE ""% "", SubString(biblio.author FROM 1 FOR Char_Length(biblio.author) - 1 ), biblio.author))))))) AS ALPHAAUTHOR,
  If(biblio.title Like ""The %"", Trim(Leading ""The "" From biblio.title),
    If(biblio.title Like ""A %"", Trim(Leading ""A "" From biblio.title),
    If(biblio.title Like ""An %"", Trim(Leading ""An "" From biblio.title),
    If(biblio.title Like ""'%"", Trim(Leading ""'"" From biblio.title),
    If(biblio.title Like '""%', Trim(Leading '""' From biblio.title), biblio.title))))) AS ALPHATITLE,
  If(items.itemnumber IN (SELECT branchtransfers.itemnumber FROM branchtransfers WHERE branchtransfers.datearrived IS NULL), ""1"", ""0"") AS IN_TRANSIT,
  If(items.itemnumber IN (SELECT reserves.itemnumber FROM reserves WHERE reserves.waitingdate IS NULL), ""1"", ""0"") AS ON_HOLD
FROM
  items INNER JOIN
  biblio
    ON items.biblionumber = biblio.biblionumber INNER JOIN
  biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber
WHERE
  items.homebranch LIKE <<Select home branch|ZBRAN>> AND
  Coalesce(items.location, '') LIKE <<Shelving location|LLOC>> AND
  Coalesce(items.itype, '') LIKE <<Item type|LITYPES>> AND
  Coalesce(items.ccode, '') LIKE <<Collection code|LCCODE>>
GROUP BY
  items.barcode
HAVING
  CHECKED_OUT LIKE <<Display items that are checked out|YES_NO>> AND
  STATUS_PROBLEM LIKE <<Display items with status problems|YES_NO>> AND
  IN_TRANSIT LIKE <<Display items that are in transit|YES_NO>> AND
  ON_HOLD LIKE <<Display items on hold|YES_NO>> 
ORDER BY
  items.homebranch,
  LOCATION,
  ITYPE,
  CCODE,
  ALPHACALL,
  ALPHASERIES,
  ALPHAAUTHOR,
  ALPHATITLE",,,,,,,,
R.002821,"/*
R.002821

----------

Name: GHW - DONI testing
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2016-11-11 10:28:07
Modified on: 2017-02-28 22:38:43
Date last run: -

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', reserves.biblionumber, '\"" target=""_blank"">', reserves.biblionumber, '</a>') AS LINK_TO_TITLE,
  Min(reserves.priority) AS Min_priority,
  reserves.branchcode AS PICKUP_BRANCH,
  Concat('<a href=\""/cgi-bin/koha/reserve/request.pl?biblionumber=', reserves.biblionumber, '\"" target=""_blank"">', reserves.biblionumber, '</a>') AS LINK_TO_HOLD,
  items.barcode,
  Concat('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=', reserves.biblionumber, '&itemnumber=',items.itemnumber,'\"" target=""_blank"">', items.itemnumber, '</a>') AS LINK_TO_EDIT,
  items.itemnumber,
  items.homebranch,
  items.itemnotes_nonpublic
FROM
  reserves INNER JOIN
  items
    ON reserves.biblionumber = items.biblionumber
WHERE
  items.homebranch <> reserves.branchcode AND
  items.homebranch LIKE 'DONI%' AND
  reserves.branchcode LIKE 'DONI%' AND
  reserves.biblionumber IN (SELECT
    reserves.biblionumber
  FROM
    reserves
  WHERE
    reserves.waitingdate IS NULL
  GROUP BY
    reserves.biblionumber
  HAVING
    Count(reserves.reserve_id) > 1) AND
  reserves.biblionumber IN (SELECT
    reserves.biblionumber
  FROM
    reserves JOIN
    items
      ON reserves.biblionumber = items.biblionumber
  WHERE
    reserves.branchcode <> items.homebranch
  GROUP BY
    reserves.biblionumber) AND
  reserves.biblionumber IN (SELECT
    items.biblionumber
  FROM
    items
  WHERE
    items.homebranch LIKE 'DONI%')
GROUP BY
  reserves.biblionumber, items.barcode, items.homebranch
HAVING
  Min(reserves.priority) <> 0
ORDER BY
  reserves.biblionumber",,,,,,,,
R.002823,"/*
R.002823

----------

Name: GHW - Koha Calendar by Branch
Created by: George H Williams

----------

Group: -
     -

Created on: 2016-11-15 09:48:53
Modified on: 2018-12-09 21:25:04
Date last run: 2020-11-17 14:52:43

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  special_holidays.branchcode AS BRANCH,
  special_holidays.title AS TITLE,
  special_holidays.description AS DESCRIPTION,
  Str_To_Date(Concat(special_holidays.month, '/', special_holidays.day, '/',
  special_holidays.year), '%m/%d/%Y') AS UPCOMING_DATE,
  Date_Format(Str_To_Date(Concat(special_holidays.month, '/',
  special_holidays.day, '/', special_holidays.year), '%m/%d/%Y'),
  '%W') AS DAY_OF_WEEK,
  special_holidays.year AS REPEATS
FROM
  special_holidays
WHERE
  (special_holidays.branchcode LIKE @brn:=<<Enter your branch|LBRANCH>> COLLATE utf8mb4_unicode_ci) AND
  Str_To_Date(Concat(special_holidays.month, '/', special_holidays.day, '/',
  special_holidays.year), '%m/%d/%Y') > Now() - INTERVAL 1 DAY
UNION
SELECT
  repeatable_holidays.branchcode AS BRANCH,
  repeatable_holidays.title AS TITLE,
  repeatable_holidays.description AS DESCRIPTION,
  Str_To_Date(Concat(repeatable_holidays.month, '/', repeatable_holidays.day,
  '/', (If(repeatable_holidays.month >= Month(CurDate()), Year(CurDate()),
  Year(CurDate()) + 1))), '%m/%d/%Y') AS UPCOMING_DATE,
  If(repeatable_holidays.weekday = 0, 'Every Sunday',
  If(repeatable_holidays.weekday = 1, 'Every Monday',
  If(repeatable_holidays.weekday = 2, 'Every Tuesday',
  If(repeatable_holidays.weekday = 3, 'Every Wednesday',
  If(repeatable_holidays.weekday = 4, 'Every Thursday',
  If(repeatable_holidays.weekday = 5, 'Every Friday',
  If(repeatable_holidays.weekday = 6, 'Every Saturday',
  Date_Format(Str_To_Date(Concat(repeatable_holidays.month, '/',
  repeatable_holidays.day, '/', (If(repeatable_holidays.month >=
  Month(CurDate()), Year(CurDate()), Year(CurDate()) + 1))), '%m/%d/%Y'),
  '%W')))))))) AS DAY_OF_WEEK,
  ('R') AS REPEATS
FROM
  repeatable_holidays
WHERE
  (repeatable_holidays.branchcode LIKE @brn AND
  Str_To_Date(Concat(repeatable_holidays.month, '/', repeatable_holidays.day,
  '/', (If(repeatable_holidays.month >= Month(CurDate()), Year(CurDate()),
  Year(CurDate()) + 1))), '%m/%d/%Y') > Now() - INTERVAL 1 DAY) OR
  (repeatable_holidays.branchcode LIKE @brn AND
  Str_To_Date(Concat(repeatable_holidays.month, '/', repeatable_holidays.day,
  '/', (If(repeatable_holidays.month >= Month(CurDate()), Year(CurDate()),
  Year(CurDate()) + 1))), '%m/%d/%Y') IS NULL)
ORDER BY
  BRANCH,
  UPCOMING_DATE",,,,,,,,
R.002824,"/*
R.002824

----------

Name: GHW - Upcoming closed dates at a branch
Created by: George H Williams

----------

Group: -
     -

Created on: 2016-11-15 10:29:39
Modified on: 2022-07-07 10:24:06
Date last run: 2022-07-07 10:24:10

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Shows upcoming closures at a specified branch</p>
<ul><li>Shows repeating closures for the next 12 months and all future closures on individually specified dates</li>
<li>Shows closures at the branch you specify</li>
<li>sorted by branch and date of holiday (repeating weekly holidays appear first on the list)</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2824&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  (special_holidays.branchcode COLLATE utf8mb4_unicode_ci) AS BRANCH,
  special_holidays.title AS TITLE,
  special_holidays.description AS DESCRIPTION,

  Str_To_Date(
    Concat(special_holidays.month, '/', special_holidays.day, '/', special_holidays.year), 
    '%m/%d/%Y'
  ) AS UPCOMING_DATE,

  Date_Format(
    Str_To_Date(Concat(special_holidays.month, '/', special_holidays.day, '/', special_holidays.year), '%m/%d/%Y'), 
    '%W'
  ) AS DAY_OF_WEEK,

  IF(special_holidays.year IS NULL, ""X"", Concat(special_holidays.year, "" only"" )) AS REPEATS
FROM
  special_holidays
WHERE
  (special_holidays.branchcode LIKE @brn:=<<Enter your branch|LBRANCH>> COLLATE utf8mb4_unicode_ci) AND
  Str_To_Date(
    Concat(special_holidays.month, '/', special_holidays.day, '/', special_holidays.year), '%m/%d/%Y'
  ) > Now() - INTERVAL 1 DAY
UNION
SELECT
  repeatable_holidays.branchcode AS BRANCH,
  repeatable_holidays.title AS TITLE,
  repeatable_holidays.description AS DESCRIPTION,

  Str_To_Date(
    Concat(repeatable_holidays.month, '/', repeatable_holidays.day, '/', (If(repeatable_holidays.month >= Month(CurDate()), Year(CurDate()), Year(CurDate()) + 1))), '%m/%d/%Y'
  ) AS UPCOMING_DATE,

  If(repeatable_holidays.weekday = 0, 'Every Sunday', 
    If(repeatable_holidays.weekday = 1, 'Every Monday', 
      If(repeatable_holidays.weekday = 2, 'Every Tuesday', 
        If(repeatable_holidays.weekday = 3, 'Every Wednesday', 
          If(repeatable_holidays.weekday = 4, 'Every Thursday', 
            If(repeatable_holidays.weekday = 5, 'Every Friday', 
              If(repeatable_holidays.weekday = 6, 'Every Saturday', 
                Date_Format(
                  Str_To_Date(
                    Concat(repeatable_holidays.month, '/', repeatable_holidays.day, '/', (If(repeatable_holidays.month >= Month(CurDate()), Year(CurDate()), Year(CurDate()) + 1))), '%m/%d/%Y'
                    ), 
                  '%W'
                )
              )
            )
          )
        )
      )
    )
  ) AS DAY_OF_WEEK,

  If(
    repeatable_holidays.weekday IS NULL, 
    ""Repeats annually"", 
    ""Repeats weekly""
  ) AS REPEATS
FROM
  repeatable_holidays
WHERE
  (
    repeatable_holidays.branchcode LIKE @brn AND
    Str_To_Date(
      Concat(repeatable_holidays.month, '/', repeatable_holidays.day, '/', (If(repeatable_holidays.month >= Month(CurDate()), Year(CurDate()), Year(CurDate()) + 1))), '%m/%d/%Y'
    ) > Now() - INTERVAL 1 DAY

  ) OR (

    repeatable_holidays.branchcode LIKE @brn AND 
    Str_To_Date(
      Concat(repeatable_holidays.month, '/', repeatable_holidays.day, '/', (If(repeatable_holidays.month >= Month(CurDate()), Year(CurDate()), Year(CurDate()) + 1))), '%m/%d/%Y'
    ) IS NULL
  )
ORDER BY
  BRANCH,
  UPCOMING_DATE",,,,,,,,
R.002825,"/*
R.002825

----------

Name: GHW - Newly added - not indexed
Created by: George H Williams

----------

Group: Catalog Records and Items
     Fix Items

Created on: 2016-11-15 16:41:08
Modified on: 2018-04-16 11:05:33
Date last run: 2020-11-10 15:50:16

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Shows titles that haven't indexed properly since 2016.11.10</p>
<ul><li>Shows items added since 2016.11.10</li>
<li>At the library you specify</li>
<li>sorted by homebranch, shelving location, item type, collection code, call number, author, and title</li>
<li>contains links to the bibliographic record of the item</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report was created to help catalogers find items that can't be searched because of the indexing problems we are currently having.</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2825&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">', biblio.biblionumber, '</a>') AS LINK_TO_TITLE,
  biblio.biblionumber,
  Coalesce(items.barcode, '') AS BARCODE,
  Coalesce(items.homebranch, '') AS HOMEBRANCH,
  Coalesce(items.location, '') AS LOCATION,
  Coalesce(items.itype, '') AS ITYPE,
  Coalesce(items.ccode, '') AS CCODE,
  Coalesce(items.itemcallnumber, '') AS CALL_NUMBER,
  biblio.author,
  biblio.title
FROM
  biblio LEFT JOIN
  items
    ON items.biblionumber = biblio.biblionumber INNER JOIN
  biblioitems
    ON biblioitems.biblionumber = biblio.biblionumber
WHERE
  biblio.biblionumber > '769233' AND
  Coalesce(items.homebranch, '') LIKE <<Choose a branch|LBRANCH>>
ORDER BY
  HOMEBRANCH,
  LOCATION,
  ITYPE,
  CCODE,
  CALL_NUMBER,
  biblio.author,
  biblio.title",,,,,,,,
R.002826,"/*
R.002826

----------

Name: GHW - Item data by barcode number
Created by: George H Williams

----------

Group: Catalog Records and Items
     Fix Items

Created on: 2016-11-15 16:53:28
Modified on: 2018-04-16 11:05:31
Date last run: 2019-02-18 15:29:37

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Shows information on an item based on its barcode number</p>
<ul><li>shows current data on that item's record</li>
<li>on any item in NExpress</li>
<li>sorted by homebranch, shelving location, item type, collection code, call number, author, and title</li>
<li>contains links to the bibliographic record of the item</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report was created to help find items while we work through our indexing problems.</p>
<p>The input field in this report can accept the standard SQL wildcard characters (%, _, [charlist], [^charlist], [!charlist]).</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2826&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">', biblio.biblionumber, '</a>') AS LINK_TO_TITLE,
  biblio.biblionumber,
  Coalesce(items.barcode, '') AS BARCODE,
  Coalesce(items.homebranch, '') AS HOMEBRANCH,
  Coalesce(items.location, '') AS LOCATION,
  Coalesce(items.itype, '') AS ITYPE,
  Coalesce(items.ccode, '') AS CCODE,
  Coalesce(items.itemcallnumber, '') AS CALL_NUMBER,
  biblio.author,
  biblio.title
FROM
  biblio LEFT JOIN
  items
    ON items.biblionumber = biblio.biblionumber INNER JOIN
  biblioitems
    ON biblioitems.biblionumber = biblio.biblionumber
WHERE
  Coalesce(items.barcode, '') LIKE <<Enter item barcode number (you can use SQL wildcards)>>
ORDER BY
  HOMEBRANCH,
  LOCATION,
  ITYPE,
  CCODE,
  CALL_NUMBER,
  biblio.author,
  biblio.title",,,,,,,,
R.002829,"/*
R.002829

----------

Name: GHW - OD Letter Report - Phase 1
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2016-11-21 12:10:10
Modified on: 2016-11-21 13:23:30
Date last run: 2017-11-22 13:38:33

----------

Public: 0
Expiry: 0

----------

Getting item information so far

----------
*/

","SELECT
  issues.borrowernumber,
  Concat_Ws('<br />', (Concat_Ws(' / ', '<ins>Call#-Author-Title</ins>', items.itemcallnumber, biblio.author, '<span style=""text-transform: uppercase"">',biblio.title,'</span>')),
  (Concat_Ws(' / ', (Concat(DateDiff(Now(), issues.date_due), ' <ins>days overdue</ins>')), (Concat('<ins>Date due:</ins> ', CAST(issues.date_due AS date))), (Concat('<ins>Replacement price:</ins> ', CONCAT('$',FORMAT(items.replacementprice,2)) )))),
  (Concat_Ws(' / ', (Concat('<ins>Checked out at:</ins> ', issues.branchcode)), (Concat('<ins>Item home branch:</ins> ', items.homebranch)), (Concat('Barcode: ', items.barcode))))) AS BIGINFO
FROM
  items INNER JOIN
  biblio
    ON items.biblionumber = biblio.biblionumber INNER JOIN
  issues
    ON issues.itemnumber = items.itemnumber
WHERE
  issues.date_due < Now() - INTERVAL 7 DAY
GROUP BY
  issues.borrowernumber, issues.date_due
ORDER BY
  issues.borrowernumber",,,,,,,,
R.002830,"/*
R.002830

----------

Name: Phase 2 Concat w group
Created by: George H Williams

----------

Group: -
     -

Created on: 2016-11-21 13:26:03
Modified on: 2016-11-21 18:42:09
Date last run: -

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  Concat_Ws('<br />', CONCAT('<ins>',(Concat_Ws(' | ', 'Item details: ', items.itemcallnumber, biblio.author, CONCAT('<span style=""text-transform: uppercase"">', biblio.title,'</span>'), concat(items.barcode,'</ins>')))),
  (Concat_Ws(' | ',(Concat(DateDiff(Now(), issues.date_due), ' days overdue')), (Concat('Date due: ', CAST(issues.date_due AS date))), (Concat('Replacement price: $', items.replacementprice)))), 
  (Concat_Ws(' | ',(Concat('Checked out at: ', issues.branchcode)), CONCAT( (Concat('Item home branch: ',items.homebranch)),'<br /><p> </p>')))) AS ITEMINFO,
  items.content
FROM
  items JOIN
  biblio
    ON items.biblionumber = biblio.biblionumber JOIN
  issues
    ON issues.itemnumber = items.itemnumber
WHERE
  issues.date_due < Now() - INTERVAL 7 DAY AND issues.borrowernumber LIKE <<Enter borrower number>> AND issues.branchcode LIKE <<Checkout branch|LBRANCH>>
GROUP BY
  issues.borrowernumber, items.itemnumber
ORDER BY
  issues.borrowernumber ASC
",,,,,,,,
R.002831,"/*
R.002831

----------

Name: GHW - Lost/missing items report for printing from Koha
Created by: George H Williams

----------

Group: -
     -

Created on: 2016-11-23 11:11:59
Modified on: 2017-12-19 09:35:57
Date last run: 2021-08-13 15:38:31

----------

Public: 0
Expiry: 0

----------

<p><span style=""background-color: darkred; color: white"">Needs metadata conversion post 17.05</p>

----------
*/

","SELECT
  Concat_Ws('<br />',CONCAT('<a href=\""/cgi-bin/koha/catalogue/moredetail.pl?itemnumber=',items.itemnumber,'&biblionumber=',items.biblionumber,'\"" target=""_blank"">Link to item</a>'),
    Concat(items.barcode, '<br />'),
    Concat('Home: ', items.homebranch),
    Concat('Current: ', items.holdingbranch)) AS BC_LIBRARY,
  Concat_Ws('<br />', items.location, items.itype, authorised_values.lib, items.itemcallnumber) AS CLASSIFICATION,
  Concat_Ws('<br />', Concat('AU: ', If(biblio.author IS NULL, '_', biblio.author)), 
    Concat('<span style=""text-transform: uppercase"">TI: ', (Concat_Ws('<br />          ', biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')))), '</span>') AS AUTH_TITLE,
  Concat_Ws('<br />', (Concat('Added: ', items.dateaccessioned)), (Concat('Last borrowed: ', If(items.datelastborrowed IS NULL, 'Never', items.datelastborrowed))), (Concat('Last seen: ', items.datelastseen))) AS HISTORY,
  CONCAT_WS('<br />',(CONCAT('Status: ',authorised_values1.lib)),CONCAT('Date: ',If(items.itemlost_on IS NULL, 'Lost before OCT-14', items.itemlost_on))) AS LOST
FROM
  items JOIN
  biblio_metadata
    ON items.biblionumber = biblio_metadata.biblionumber JOIN
  biblio
    ON items.biblionumber = biblio.biblionumber LEFT JOIN
  authorised_values
    ON items.ccode = authorised_values.authorised_value LEFT JOIN
  authorised_values authorised_values1
    ON items.itemlost = authorised_values1.authorised_value
WHERE
  (authorised_values.category = 'CCODE' OR authorised_values.category IS NULL) AND
  (authorised_values1.category = 'LOST' OR authorised_values1.category IS NULL) AND
  items.homebranch LIKE <<Enter branch|ZBRAN>> AND
  items.itemlost LIKE <<Enter lost status|ZLOST>>
GROUP BY
  items.itemnumber
ORDER BY
  items.homebranch,
  CLASSIFICATION,
  AUTH_TITLE",,,,,,,,
R.002833,"/*
R.002833

----------

Name: GHW - 001 Monthly circulation
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2016-11-28 08:38:18
Modified on: 2016-11-28 12:21:10
Date last run: 2022-06-07 16:30:17

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  statistics.branch,
  Count(*) AS CIRC_PLUS_RENEWALS,
  Concat_Ws('.', Year(statistics.datetime), Month(statistics.datetime)) AS DATE
FROM
  statistics
WHERE
  (statistics.type = 'issue' OR statistics.type = 'renew' OR statistics.type = 'localuse') AND
  Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
  Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH)
GROUP BY
  statistics.branch
  WITH ROLLUP",,,,,,,,
R.002838,"/*
R.002838

----------

Name: GHW 998 - Circulation count during a date range
Created by: George H Williams

----------

Group: -
     -

Created on: 2016-11-28 11:11:26
Modified on: 2020-06-19 15:06:53
Date last run: 2022-01-06 21:56:12

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  statistics.branch AS CHECK_OUT_BRANCH,
  If(borrowers.branchcode IS NULL AND deletedborrowers.branchcode IS NULL, ' --', Concat(Coalesce(borrowers.branchcode, deletedborrowers.branchcode))) AS BORROWERS_HOMEBRANCH,
  If(borrowers.categorycode IS NULL AND deletedborrowers.categorycode IS NULL, ' --', Concat(Coalesce(borrowers.categorycode, deletedborrowers.categorycode))) AS BORROWERS_CATEGORY,
  If(items.homebranch IS NULL AND deleteditems.homebranch IS NULL, ' --', Concat(Coalesce(items.homebranch, deleteditems.homebranch))) AS ITEM_HOMEBRANCH,
  If(items.itype IS NULL AND deleteditems.itype IS NULL, ' --', Concat(Coalesce(items.itype , deleteditems.itype ))) AS ITEM_TYPE,
  If(items.ccode IS NULL AND deleteditems.ccode IS NULL, ' --', Concat(Coalesce(items.ccode, deleteditems.ccode))) AS ITEM_CCODE,
  Count(*) AS CIRC_PLUS_RENEWALS
FROM
  statistics LEFT JOIN
  borrowers
    ON statistics.borrowernumber = borrowers.borrowernumber LEFT JOIN
  deletedborrowers
    ON statistics.borrowernumber = deletedborrowers.borrowernumber LEFT JOIN
  items
    ON statistics.itemnumber = items.itemnumber LEFT JOIN
  deleteditems
    ON statistics.itemnumber = deleteditems.itemnumber
WHERE
  (statistics.datetime BETWEEN  <<Start date|date>>  AND (<<End date|date>>+ INTERVAL 1 DAY)) AND
  (statistics.type = 'issue' OR statistics.type = 'renew' OR statistics.type = 'localuse') AND
  statistics.branch LIKE <<Check-out branch|LBRANCH>> AND
  If(borrowers.branchcode IS NULL AND deletedborrowers.branchcode IS NULL, ' --', Concat(Coalesce(borrowers.branchcode, deletedborrowers.branchcode))) LIKE <<Borrower home branch|LBRANCH>> AND
  If(borrowers.categorycode IS NULL AND deletedborrowers.categorycode IS NULL, ' --', Concat(Coalesce(borrowers.categorycode, deletedborrowers.categorycode))) LIKE <<Borrower category|LBORROWERCAT>> AND
  If(items.homebranch IS NULL AND deleteditems.homebranch IS NULL, ' --', Concat(Coalesce(items.homebranch, deleteditems.homebranch))) LIKE <<Item home branch|LBRANCH>> AND
  If(items.itype IS NULL AND deleteditems.itype IS NULL, ' --', Concat(Coalesce(items.itype , deleteditems.itype ))) LIKE <<Item type|LITYPES>> AND
  If(items.ccode IS NULL AND deleteditems.ccode IS NULL, ' --', Concat(Coalesce(items.ccode, deleteditems.ccode))) LIKE <<Item collection code|LCCODE>>
GROUP BY
  CHECK_OUT_BRANCH,
  BORROWERS_HOMEBRANCH,
  BORROWERS_CATEGORY,
  ITEM_HOMEBRANCH,
  ITEM_TYPE,
  ITEM_CCODE
  WITH ROLLUP",,,,,,,,
R.002841,"/*
R.002841

----------

Name: GHW - Daily/hourly statistical tracker
Created by: George H Williams

----------

Group: Statistics
     -

Created on: 2016-11-28 15:42:16
Modified on: 2021-04-30 14:52:05
Date last run: 2022-09-06 16:43:30

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Counts check-outs, renewals, and check-ins and borrower accounts used on an hourly basis</p>
<ul><li>Shows activity during the previous calendar month</li>
<li>shows activity at a branch you specify</li>
<li>grouped by circulation branch, date, day of the week, hour of the day (in 24 hour format), and type of activity (CKO = Checkout; RENEW = Renewal; RETURN = check in)</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Replaces report 590</p>
<p></p>
<p>Updated to include count of borrowers for each type of transaction.</p>
<p></p>
<p>The hour shows in military format - i.e. 13=1:00 p.m., 18=6:00 p.m., etc.</p>
<p>Koha counts renewals as happening at the location where the initial check-out happened - i.e. if an item was renewed by the patron via the OPAC, it counts as a renewal at the branch where the item was checked out (This is why you may see renewals on days your library is normally closed).</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2841&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  branchess.branchname,
  ALL_STATS.DATE,
  ALL_STATS.DAY,
  Concat(ALL_STATS.HOUR_OF_DAY, "":00 - "", ALL_STATS.HOUR_OF_DAY, "":59"") AS HOUR,
  Coalesce(CKO.COUNT, 0) AS CKO,
  Coalesce(RENEWALS.COUNT, 0) AS RENEW,
  Coalesce(RETURNS.COUNT, 0) AS RETURNS,
  ALL_STATS.COUNT AS TOTAL_CKO_RENEW_RETURN,
  Coalesce(ckoborrowers.Count_borrowernumber, 0) AS CKO_BORROWERS,
  Coalesce(renewborrowers.Count_borrowernumber, 0) AS RENEW_BORROWERS,
  totalborrowers.Count_borrowernumber AS CKO_AND_RENEW_BORROWERS
FROM
  (SELECT
     branches.branchcode,
     branches.branchname
   FROM
     branches) branchess LEFT JOIN
  (SELECT
     statistics.branch,
     DayName(statistics.datetime) AS DAY,
     Date_Format(statistics.datetime, '%Y-%m-%d') AS DATE,
     Hour(statistics.datetime) AS HOUR_OF_DAY,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     (statistics.type = 'issue' OR
         statistics.type = 'renew' OR
         statistics.type = 'return') AND
     Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
     Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH)
   GROUP BY
     statistics.branch,
     DayName(statistics.datetime),
     Date_Format(statistics.datetime, '%Y-%m-%d'),
     Hour(statistics.datetime)) ALL_STATS ON ALL_STATS.branch =
      branchess.branchcode LEFT JOIN
  (SELECT
     statistics.branch,
     DayName(statistics.datetime) AS DAY,
     Date_Format(statistics.datetime, '%Y-%m-%d') AS DATE,
     Hour(statistics.datetime) AS HOUR_OF_DAY,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     statistics.type = 'return' AND
     Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
     Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH)
   GROUP BY
     statistics.branch,
     DayName(statistics.datetime),
     Date_Format(statistics.datetime, '%Y-%m-%d'),
     Hour(statistics.datetime)) RETURNS ON RETURNS.branch = branchess.branchcode
      AND
      RETURNS.DATE = ALL_STATS.DATE AND
      RETURNS.HOUR_OF_DAY = ALL_STATS.HOUR_OF_DAY LEFT JOIN
  (SELECT
     statistics.branch,
     DayName(statistics.datetime) AS DAY,
     Date_Format(statistics.datetime, '%Y-%m-%d') AS DATE,
     Hour(statistics.datetime) AS HOUR_OF_DAY,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     statistics.type = 'issue' AND
     Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
     Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH)
   GROUP BY
     statistics.branch,
     DayName(statistics.datetime),
     Date_Format(statistics.datetime, '%Y-%m-%d'),
     Hour(statistics.datetime)) CKO ON CKO.branch = branchess.branchcode AND
      CKO.DATE = ALL_STATS.DATE AND
      CKO.HOUR_OF_DAY = ALL_STATS.HOUR_OF_DAY LEFT JOIN
  (SELECT
     statistics.branch,
     DayName(statistics.datetime) AS DAY,
     Date_Format(statistics.datetime, '%Y-%m-%d') AS DATE,
     Hour(statistics.datetime) AS HOUR_OF_DAY,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     statistics.type = 'renew' AND
     Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
     Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH)
   GROUP BY
     statistics.branch,
     DayName(statistics.datetime),
     Date_Format(statistics.datetime, '%Y-%m-%d'),
     Hour(statistics.datetime)) RENEWALS ON
      RENEWALS.branch = branchess.branchcode AND
      RENEWALS.DATE = ALL_STATS.DATE AND
      RENEWALS.HOUR_OF_DAY = ALL_STATS.HOUR_OF_DAY LEFT JOIN
  (SELECT
     statistics.branch,
     DayName(statistics.datetime) AS DAY,
     Date_Format(statistics.datetime, '%Y-%m-%d') AS DATE,
     Hour(statistics.datetime) AS HOUR_OF_DAY,
     Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber
   FROM
     statistics
   WHERE
     Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
     Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
     (statistics.type = 'issue' OR
         statistics.type = 'renew')
   GROUP BY
     statistics.branch,
     DayName(statistics.datetime),
     Date_Format(statistics.datetime, '%Y-%m-%d'),
     Hour(statistics.datetime)) totalborrowers ON totalborrowers.branch =
      branchess.branchcode AND
      totalborrowers.DATE = ALL_STATS.DATE AND
      totalborrowers.HOUR_OF_DAY = ALL_STATS.HOUR_OF_DAY LEFT JOIN
  (SELECT
     statistics.branch,
     DayName(statistics.datetime) AS DAY,
     Date_Format(statistics.datetime, '%Y-%m-%d') AS DATE,
     Hour(statistics.datetime) AS HOUR_OF_DAY,
     Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber
   FROM
     statistics
   WHERE
     Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
     Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
     statistics.type = 'issue'
   GROUP BY
     statistics.branch,
     DayName(statistics.datetime),
     Date_Format(statistics.datetime, '%Y-%m-%d'),
     Hour(statistics.datetime)) ckoborrowers ON ckoborrowers.branch =
      branchess.branchcode AND
      ckoborrowers.DATE = ALL_STATS.DATE AND
      ckoborrowers.HOUR_OF_DAY = ALL_STATS.HOUR_OF_DAY LEFT JOIN
  (SELECT
     statistics.branch,
     DayName(statistics.datetime) AS DAY,
     Date_Format(statistics.datetime, '%Y-%m-%d') AS DATE,
     Hour(statistics.datetime) AS HOUR_OF_DAY,
     Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber
   FROM
     statistics
   WHERE
     Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
     Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
     statistics.type = 'renew'
   GROUP BY
     statistics.branch,
     DayName(statistics.datetime),
     Date_Format(statistics.datetime, '%Y-%m-%d'),
     Hour(statistics.datetime)) renewborrowers ON renewborrowers.branch =
      branchess.branchcode AND
      renewborrowers.DATE = ALL_STATS.DATE AND
      renewborrowers.HOUR_OF_DAY = ALL_STATS.HOUR_OF_DAY
WHERE
  branchess.branchcode LIKE <<Choose your library|branches>>
GROUP BY
  branchess.branchname,
  ALL_STATS.DATE,
  ALL_STATS.DAY,
  ALL_STATS.HOUR_OF_DAY
ORDER BY
  branchess.branchname,
  ALL_STATS.DATE,
  ALL_STATS.DAY,
  ALL_STATS.HOUR_OF_DAY",,,,,,,,
R.002842,"/*
R.002842

----------

Name: GHW - Single item reports dashboard
Created by: George H Williams

----------

Group: -
     -

Created on: 2016-11-29 09:09:19
Modified on: 2022-03-29 12:15:08
Date last run: 2021-09-30 12:29:13

----------

Public: 0
Expiry: 0

----------

Obselete - use report 3282 instead

----------
*/

","SELECT
  Concat('Obselete - use report 3282 instead')",,,,,,,,
R.002844,"/*
R.002844

----------

Name: GHW - Deleted borrowers count - date range
Created by: George H Williams

----------

Group: Borrowers
     Patron Statistics

Created on: 2016-12-02 14:56:53
Modified on: 2018-04-16 11:05:22
Date last run: 2021-07-22 14:28:11

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Count of patrons deleted during the specified date range<br />(between the beginning of the day on the specified ""START DATE"" to the end of the day on the specified ""END DATE"")</p>
<ul><li>Looks at patrons who were manually deleted - does not include patrons that were deleted in batch processes</li>
<li>Allows you to specify a patron home branch and patron category if you wish</li>
<li>grouped by patron home branch and patron category - includes total count by home branch and a total for the entire table</li>
<li>sorted by patron home branch and patron category</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Report created at the request of Paola Free Library.</p>
<p>This report can only look back to the previous 60 days because we are purging data from the action logs that is more than 60 days old.</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2844&phase=Run this report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  deletedborrowers.branchcode AS PATRON_HOME_LIBRARY,
  deletedborrowers.categorycode AS PATRON_CATEGORY,
  Count(deletedborrowers.borrowernumber) AS COUNT_OF_PATRONS_DELETED
FROM
  action_logs JOIN
  deletedborrowers
    ON deletedborrowers.borrowernumber = action_logs.object
WHERE
  action_logs.module = 'MEMBERS' AND
  deletedborrowers.branchcode LIKE <<Choose patron home library|LBRANCH>> AND
  deletedborrowers.categorycode LIKE <<Choose patron category|LBORROWERCAT>> AND
  (action_logs.timestamp BETWEEN <<between the beginning of the day on ""START DATE""|date>>  AND (<<and the end of the day on ""END DATE""|date>>+ INTERVAL 1 DAY)) AND
  action_logs.action LIKE 'DELET%'
GROUP BY
  PATRON_HOME_LIBRARY, PATRON_CATEGORY
  WITH ROLLUP",,,,,,,,
R.002847,"/*
R.002847

----------

Name: GHW - Library Contact Information
Created by: George H Williams

----------

Group: -
     -

Created on: 2016-12-06 14:43:22
Modified on: 2018-04-16 11:05:18
Date last run: 2020-10-15 22:07:17

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Generates a list of contact information for all NExpress libraries</p>
<ul><li>Shows the data currently in NExpress</li>
<li>At the branch or group of branches you specify</li>
<li>grouped by branch code</li>
<li>sorted by branch code</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2847&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  branches.branchcode AS BRANCH_CODE,
  CONCAT(CONCAT(branches.branchname,'<p><ins>Mailing address:</ins><br />',Concat_Ws('<br />', branches.branchaddress1, Concat(branches.branchcity,', ', branches.branchstate, ' ', branches.branchzip)),'</p>'),
  CONCAT('<ins>Street address:</ins><br />',Concat_Ws('<br />', If(branches.branchaddress2 = ' ', branches.branchaddress1, branches.branchaddress2), Concat(branches.branchcity,', ', branches.branchstate)))) AS ADDRESS,
  Concat_Ws('<p>', Concat('Phone: ', branches.branchphone,'</p>'), Concat('Fax: ', branches.branchfax,'</p>'), Concat('e-mail: ', branches.branchemail,'</p>'), Concat('Website: ', branches.branchurl,'</p>'),Concat('Courier route #: ', branches.branchcountry,'</p>')) AS PHONE_EMAIL_COURIER,
  REPLACE(branches.branchaddress3, ' | ', '<br />') AS DIRECTOR_ILL_CONTACTS,
  CONCAT_WS('<br />',CONCAT('Total titles: ',Count(DISTINCT items.biblionumber)), CONCAT('Total items: ',Count(DISTINCT items.itemnumber))) AS HOLDINGS
FROM
  branches LEFT JOIN
  items
    ON items.homebranch = branches.branchcode
WHERE
  branches.branchcode LIKE <<Choose your branch|LBRANCH>>
GROUP BY
  branches.branchcode",,,,,,,,
R.002849,"/*
R.002849

----------

Name: GHW - Message Queue test
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2016-12-09 14:22:58
Modified on: 2016-12-09 14:22:58
Date last run: -

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.cardnumber,
  message_queue.content
FROM
  message_queue INNER JOIN
  borrowers
    ON message_queue.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.cardnumber = 'X5G001'",,,,,,,,
R.002850,"/*
R.002850

----------

Name: GHW - Borrower Notes
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2016-12-09 17:43:52
Modified on: 2016-12-12 01:08:06
Date last run: 2021-05-17 10:42:55

----------

Public: 1
Expiry: 0

----------



----------
*/

","SELECT
  borrowers.cardnumber,
  borrowers.borrowernotes
FROM
  borrowers
WHERE
  borrowers.borrowernotes <> ' '",,,,,,,,
R.002851,"/*
R.002851

----------

Name: GHW - Borrowers with Messages at LEAVENWRTH
Created by: George H Williams

----------

Group:  LEAVENWRTH
     -

Created on: 2016-12-12 14:08:07
Modified on: 2021-08-16 20:33:42
Date last run: 2022-07-07 14:53:59

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Shows patrons at LEAVENWRTH with ""messages"" on their accounts</p>
<ul><li>Shows patrons currently in Koha</li>
<li>Only shows patrons whose messages were added at LEAVENWRTH</li>
<li>grouped by borrower's cardnumber and message date</li>
<li>contains links to the patron account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2851&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>


----------
*/

","SELECT
  Concat_Ws('<br />',
    Concat('Card: ', patron.cardnumber),
    Concat('Last name: ', patron.surname),
    Concat('<a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', patron.borrowernumber, '"" target=""_blank"">Open patron in new window</a>')
  ) AS PATRON,
  Concat_Ws('<br />',
    Concat('Created by: ', If(messages.manager_id IS NULL, '-', staff.userid)),
    Concat('At: ', messages.branchcode),
    Concat('On: ', messages.message_date)
  ) AS INFO,
  messages.message
FROM borrowers patron
JOIN messages ON messages.borrowernumber = patron.borrowernumber
  LEFT JOIN borrowers staff ON messages.manager_id = staff.borrowernumber
WHERE
  messages.branchcode LIKE Concat('%', <<Choose your library|LBRANCH>>, '%')
GROUP BY
  messages.message_id
ORDER BY
  patron.branchcode,
  patron.surname,
  patron.cardnumber,
  messages.branchcode",,,,,,,,
R.002852,"/*
R.002852

----------

Name: GHW - LEAVENWRTH Reset patrsons - includes information that might block their deletion
Created by: George H Williams

----------

Group:  LEAVENWRTH
     -

Created on: 2016-12-12 16:53:41
Modified on: 2021-08-16 20:33:33
Date last run: 2022-07-07 14:53:32

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Shows all ""Reset"" patrons with current checkout count (if any), current amount due (if any), guarantors (if any), and current guarantees (if any)</p>
<ul><li>Shows patrons that still have a NExpress account</li>
<li>Only shows patrons with the word ""reset"" in the barcode number</li>
<li>grouped and sorted by card number, patron homebranch, expiration date, current checkout count, and amount owed</li>
<li>links to the patron's account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2852&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  borrowers.cardnumber,
  borrowers.branchcode AS BORROWER_HOMEBRANCH,
  borrowers.dateexpiry,
  currentcheckouts.CKO_COUNT AS CURRENT_CHECKOUTS,
  format(feesowed.Sum_amountoutstanding, 2) AS OWES,
  borrowers1.cardnumber AS IS_GUARANTEED_BY,
  GROUP_CONCAT(guarantorstable.cardnumber SEPARATOR "", "") AS GUARANTOR
FROM
  borrowers LEFT JOIN
  (SELECT
    issues.borrowernumber,
    Count(issues.issue_id) AS CKO_COUNT
  FROM
    issues
  GROUP BY
    issues.borrowernumber) currentcheckouts
    ON borrowers.borrowernumber = currentcheckouts.borrowernumber LEFT JOIN
  (SELECT
    accountlines.borrowernumber,
    Sum(accountlines.amountoutstanding) AS Sum_amountoutstanding
  FROM
    accountlines
  GROUP BY
    accountlines.borrowernumber) feesowed
    ON borrowers.borrowernumber = feesowed.borrowernumber LEFT JOIN
  (SELECT
    borrowers.guarantorid,
    borrowers.cardnumber
  FROM
    borrowers) guarantorstable
    ON borrowers.borrowernumber = guarantorstable.guarantorid LEFT JOIN
  borrowers borrowers1
    ON borrowers.guarantorid = borrowers1.borrowernumber
WHERE
  borrowers.cardnumber LIKE ""%RESET%""
GROUP BY
  borrowers.cardnumber,
  BORROWER_HOMEBRANCH,
  borrowers.dateexpiry,
  CURRENT_CHECKOUTS,
  OWES,
  IS_GUARANTEED_BY",,,,,,,,
R.002853,"/*
R.002853

----------

Name: GHW - Action Logs - previous 2 calendar months
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2016-12-14 08:35:31
Modified on: 2019-11-11 22:08:21
Date last run: 2021-05-17 10:42:55

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo class=noprint>
<p>Outputs any changes to system preferences in the last 10 days to a csv file</p>
<p><ins>Notes:</ins></p>
<p></p>
<p>Best to run via the link in this window.</p>
<p></p>
<p>Run monthly and store offsite</p>
<p></p>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=2853"">Click here to download as a csv file</a></p>
</div>

----------
*/

","SELECT
  action_logs.action_id,
  action_logs.timestamp,
  action_logs.user,
  action_logs.module,
  action_logs.action,
  action_logs.object,
  Replace(Replace(SUBSTRING(action_logs.info, 1, 40000), Char(13), '|Z|'), Char(10), '|Y|') AS INFO_ONE,
  Replace(Replace(SUBSTRING(action_logs.info, 40001, 40000), Char(13), '|Z|'), Char(10), '|Y|') AS INFO_TWO
FROM
  action_logs
WHERE
  action_logs.timestamp > AddDate(Last_Day(SubDate(Now(), INTERVAL 3 MONTH)), 1) AND
  action_logs.module = 'SYSTEMPREFERENCE'",,,,,,,,
R.002854,"/*
R.002854

----------

Name: GHW - Hiawatha Sample
Created by: George H Williams

----------

Group:  HIAWATHA
     -

Created on: 2016-12-15 08:49:55
Modified on: 2021-08-16 20:39:36
Date last run: 2021-07-23 12:11:25

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  message_queue.content
FROM
  message_queue
WHERE
  (message_queue.letter_code = 'OVERDUE' OR
    message_queue.letter_code = 'FREEZE') AND
  message_queue.message_transport_type = 'email' AND
  message_queue.time_queued LIKE CONCAT(<<Enter date|date>>, '%') AND
  message_queue.from_address LIKE '%hiawathalibrary.org%'",,,,,,,,
R.002856,"/*
R.002856

----------

Name: GHW - Sent Overdue Notices
Created by: George H Williams

----------

Group: Notices
     -

Created on: 2016-12-15 11:27:46
Modified on: 2018-12-14 12:32:55
Date last run: 2022-10-03 11:58:01

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Shows overdue notices automatically sent by Koha</p>
<ul><li>shows notices sent during the date range you specify</li>
<li>shows notices sent by the library you specify</li>
<li>allows you to specify notices sent as print notices, notices sent as e-mail, or both</li>
<li>allows you to print Overdue notice 1, Overdue notice 2, or Overdue notice 3 or any combination of these notices</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report was created to work with the new notices NExpress will start using on January 1, 2016.</p>
<p>You should run the report and then download the results into Excel or another spreadsheet program.  The results will be very hard to read on the screen in Koha.</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2856&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  message_queue.content
FROM
  message_queue
WHERE
  (message_queue.letter_code LIKE <<Enter|ZODUE1>> or message_queue.letter_code LIKE <<Enter|ZODUE2>> or message_queue.letter_code LIKE <<Enter|ZODUE3>>) AND
  message_queue.message_transport_type LIKE <<Type of notice|ZTRANSPORT>> AND
  (message_queue.time_queued BETWEEN <<between the beginning of the day on START DATE|date>>  AND (<<and the end of the day on END DATE|date>>+ INTERVAL 1 DAY)) AND
  message_queue.subject LIKE <<Choose location|ZNOTICEB>>
GROUP BY
  message_queue.time_queued, message_queue.content",,,,,,,,
R.002858,"/*
R.002858

----------

Name: GHW - Items more than XX days overdue
Created by: George H Williams

----------

Group: Fines/Fees
     -

Created on: 2016-12-15 16:10:39
Modified on: 2022-03-30 09:09:29
Date last run: 2022-09-20 13:07:53

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Lists patrons with items more than XX days overdue at a specified library</p>
<ul><li>Shows patrons who currently have overdues</li>
<li>that were checked out at the specified location</li>
<li>grouped by</li>
<li>sorted by patron name, card number, and date due</li>
<li>links to the patron record</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Report created at the request of HIAWATHA.</p>
<p>Essentially the same as report 350 - just with fewer fields.</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2858&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat_Ws('<br />', 
    Concat(
      borrowers.firstname, 
      ' ', 
      borrowers.surname
    ),  
    (
      IF(
        borrowers.address2 = """", 
        borrowers.address, 
        Concat(borrowers.address, '<br />', borrowers.address2)
      )
    ), 
    Concat(
      borrowers.city, 
      ', ',  
      borrowers.state, 
      ' ', 
      borrowers.zipcode
    ),
    borrowers.categorycode
  ) AS ADDRESS,
  borrowers.firstname,
  borrowers.surname,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  items.itemcallnumber,
  biblio.author,
  biblio.title,
  (To_Days(CurDate()) - To_Days(issues.date_due)) AS DAYS_OVERDUE,
  items.replacementprice
FROM
  borrowers JOIN
  issues
    ON borrowers.borrowernumber = issues.borrowernumber JOIN
  items
    ON issues.itemnumber = items.itemnumber JOIN
  biblio
    ON items.biblionumber = biblio.biblionumber JOIN
  biblioitems
    ON biblio.biblionumber = biblioitems.biblionumber
WHERE
  (To_Days(CurDate()) - To_Days(issues.date_due)) > <<More than XX days overdue>> AND
  issues.branchcode LIKE <<Check-out branch|ZBRAN>>
GROUP BY
  items.itemnumber,
  issues.date_due
ORDER BY
  borrowers.surname,
  borrowers.firstname,
  borrowers.cardnumber,
  issues.date_due",,,,,,,,
R.002859,"/*
R.002859

----------

Name: GHW - All requests on an item by barcode number
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2016-12-15 17:58:33
Modified on: 2018-04-16 11:05:05
Date last run: -

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Shows all hold information for an item - current and past</p>
<ul><li>shows current requests and request history</li>
<li>from any item in NExpress</li>
<li>grouped by request ID</li>
<li>sorted by time of last activity on request</li>
<li>links to the corresponding current requests on a biblio report</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2859&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  allreserves.timestamp AS LAST_ACTIVITY,
  items.homebranch AS HOME,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title,
  borrowers.cardnumber AS PATRON_BC,
  allreserves.branchcode AS PICK_UP,
  allreserves.reservedate AS PLACED,
  allreserves.waitingdate,
  allreserves.cancellationdate,
  allreserves.expirationdate,
  allreserves.found,
  allreserves.reservenotes,
  items.barcode,
  CONCAT('<a href=\""/cgi-bin/koha/reports/guided_reports.pl?reports=2860&phase=Run+this+report&sql_params=',biblio.biblionumber, '\"" target=""_blank"">', biblio.biblionumber, '</a>') AS REQUESTS_ON_BIB
FROM
  (SELECT
    *
  FROM
    old_reserves
  UNION
  SELECT
    *
  FROM
    reserves) allreserves RIGHT JOIN
  biblio
    ON biblio.biblionumber = allreserves.biblionumber LEFT JOIN
  items
    ON allreserves.itemnumber = items.itemnumber JOIN
  borrowers
    ON borrowers.borrowernumber = allreserves.borrowernumber
WHERE
  items.barcode LIKE <<Enter item barcode number>>
GROUP BY
  allreserves.reserve_id, items.barcode
ORDER BY
  LAST_ACTIVITY DESC",,,,,,,,
R.002860,"/*
R.002860

----------

Name: GHW - All requests on a bibliographic record
Created by: George H Williams

----------

Group: -
     -

Created on: 2016-12-15 18:29:15
Modified on: 2016-12-15 18:37:11
Date last run: 2019-06-30 21:12:17

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  allreserves.timestamp AS LAST_ACTIVITY,
  items.homebranch AS HOME,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title,
  borrowers.cardnumber AS PATRON_BC,
  allreserves.branchcode AS PICK_UP,
  allreserves.reservedate AS PLACED,
  allreserves.waitingdate,
  allreserves.cancellationdate,
  allreserves.expirationdate,
  allreserves.found,
  allreserves.reservenotes,
  items.barcode,
  CONCAT('<a href=\""/cgi-bin/koha/reports/guided_reports.pl?reports=2859&phase=Run+this+report&sql_params=',items.barcode, '\"" target=""_blank"">', items.barcode, '</a>') AS REQUESTS_ON_BIB
FROM
  (SELECT
    *
  FROM
    old_reserves
  UNION
  SELECT
    *
  FROM
    reserves) allreserves RIGHT JOIN
  biblio
    ON biblio.biblionumber = allreserves.biblionumber LEFT JOIN
  items
    ON allreserves.itemnumber = items.itemnumber JOIN
  borrowers
    ON borrowers.borrowernumber = allreserves.borrowernumber
WHERE
  biblio.biblionumber LIKE <<Enter biblio number>>
GROUP BY
  allreserves.reserve_id, items.barcode
ORDER BY
  LAST_ACTIVITY DESC",,,,,,,,
R.002861,"/*
R.002861

----------

Name: GHW - Top 200 circulations
Created by: George H Williams

----------

Group: Circulation
     Circ Stats

Created on: 2016-12-19 10:09:30
Modified on: 2022-01-05 12:12:15
Date last run: 2022-08-30 14:39:03

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Shows the check-out count for the top 200 most circulated items</p>
<ul><li>Shows check-outs during the specified date range<br />(between the beginning of the day on the specified ""START DATE"" to the end of the day on the specified ""END DATE"")</li>
<li>Can be limited to items checked out at a specified library, with a specified home branch, shelving location, item type, and collection code</li>
<li>grouped by author and title</li>
<li>sorted by most check-outs to least check-outs</li>
<li>limited to 200 rows</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report was updated and fixed on January 5, 2022</p>
<p></p>
<p>Please note that, because this report gathers data from the issues and oldissues tables in Koha, you cannot see accurate data from more than 13 months old.</p>
<p></p>
<p>Also note that this report cannot count the circulation of items that have been deleted.  If an item circulates 50 times on Tuesday, but is deleted on Wednesday, it will not be counted by this report if the report is run on Thursday.</p>
<p></p>
<p><ins>The report will almost certainly fail if you use extremely broad parameters.  If you try to run this report with ""All libraries"" as the checkout branch, ""All libraries"" as the item home branch, and no limits on shelving locations, item types, or collection codes and a date range longer than just a few weeks, the report will almost certainly fail and may slow down Koha while it runs.</ins></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2861&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',
  items.biblionumber, '\"" target=""_blank"">', items.biblionumber, '</a>') AS
  LINK_TO_TITLE,
  biblio.author,
  Concat_Ws(' ', 
    biblio.title, 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')
  ) AS TITLE,
  Count(DISTINCT allissues.issue_id) AS CIRCULATION_COUNT
FROM
  (SELECT
      issues.issue_id,
      issues.itemnumber,
      issues.branchcode,
      issues.issuedate
    FROM
      issues
    WHERE
      issues.branchcode LIKE <<Choose check-out branch|ZBRAN>> AND
      issues.issuedate BETWEEN 
        <<Count checkouts between the beginning of the day on|date>> AND 
        (<<and the end of the day on|date>> + INTERVAL 1 DAY)
    GROUP BY
      issues.issue_id,
      issues.itemnumber,
      issues.branchcode,
      issues.issuedate
    UNION
    SELECT
      old_issues.issue_id,
      old_issues.itemnumber,
      old_issues.branchcode,
      old_issues.issuedate
    FROM
      old_issues
    WHERE
      old_issues.branchcode LIKE <<Choose check-out branch|ZBRAN>> AND
      old_issues.issuedate BETWEEN 
        <<Count checkouts between the beginning of the day on|date>> AND 
        (<<and the end of the day on|date>> + INTERVAL 1 DAY)
    GROUP BY
      old_issues.issue_id,
      old_issues.itemnumber,
      old_issues.branchcode,
      old_issues.issuedate) allissues  JOIN
  items ON items.itemnumber = allissues.itemnumber  JOIN
  biblio ON items.biblionumber = biblio.biblionumber  JOIN
  biblio_metadata ON biblio_metadata.biblionumber = items.biblionumber
WHERE
  items.homebranch LIKE <<Choose item homebranch|LBRANCH>> AND
  items.permanent_location LIKE <<Choose item permanent shelving location|LLOC>> AND
  items.itype LIKE <<Choose item type|LITYPES>> AND
  items.ccode LIKE <<Choose item collection code|LCCODE>>
GROUP BY
  biblio.biblionumber
ORDER BY
  CIRCULATION_COUNT DESC
LIMIT 200",,,,,,,,
R.002865,"/*
R.002865

----------

Name: GHW - Overdue Notice Template
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2016-12-31 19:25:57
Modified on: 2022-03-22 15:34:49
Date last run: 2022-07-27 10:21:16

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Shows overdue notice template automatically sent by Koha</p>
<ul><li>shows notices template for the library you specify</li>
<li>allows you to specify which template you want to look at</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report was created to work with the new notices NExpress will start using on January 1, 2016.</p>
<p>You should run the report and then download the results into Excel or another spreadsheet program.  The results will be very hard to read on the screen in Koha.</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2865&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  branchess.branchname,
  Coalesce(codes_branches.message_transport_type,
  codes_blanks.message_transport_type) AS TYPE,
  Coalesce(codes_branches.code, codes_blanks.code) AS LETTER_CODE,
  Coalesce(codes_branches.name, codes_blanks.name) AS LETTER_NAME,
  Coalesce(codes_branches.title, codes_blanks.title) AS LETTER_TITLE,
  Coalesce(codes_branches.content, codes_blanks.content) AS LETTER_CONTENT
FROM
  (SELECT
      branches.branchname,
      branches.branchcode,
      letter.code,
      letter.message_transport_type
    FROM
      branches,
      letter
    WHERE
      letter.code LIKE ""OD%""
    GROUP BY
      branches.branchname,
      branches.branchcode,
      letter.code,
      letter.message_transport_type) branchess LEFT JOIN
  (SELECT
      letter.branchcode,
      letter.message_transport_type,
      letter.code,
      letter.name,
      letter.title,
      letter.content
    FROM
      letter
    WHERE
      letter.code LIKE ""OD%"" AND
      letter.branchcode NOT LIKE """"
    GROUP BY
      letter.branchcode,
      letter.message_transport_type,
      letter.code
    ORDER BY
      letter.branchcode,
      letter.message_transport_type,
      letter.code) codes_branches ON codes_branches.branchcode =
      branchess.branchcode AND
      codes_branches.code = branchess.code AND
      codes_branches.message_transport_type = branchess.message_transport_type
  LEFT JOIN
  (SELECT
      letter.branchcode,
      letter.message_transport_type,
      letter.code,
      letter.name,
      letter.title,
      letter.content
    FROM
      letter
    WHERE
      letter.code LIKE ""OD%"" AND
      letter.branchcode LIKE """"
    GROUP BY
      letter.branchcode,
      letter.message_transport_type,
      letter.code
    ORDER BY
      letter.branchcode,
      letter.message_transport_type,
      letter.code) codes_blanks ON codes_blanks.code = branchess.code AND
      codes_blanks.message_transport_type = branchess.message_transport_type
WHERE
  branchess.branchcode LIKE <<Choose a branch|ZBRAN>> AND
  branchess.code LIKE <<Choose an overdue notice|ZODUE>>
GROUP BY
  branchess.branchname,
  Coalesce(codes_branches.message_transport_type,
  codes_blanks.message_transport_type),
  Coalesce(codes_branches.code, codes_blanks.code),
  Coalesce(codes_branches.name, codes_blanks.name),
  Coalesce(codes_branches.title, codes_blanks.title),
  Coalesce(codes_branches.content, codes_blanks.content)",,,,,,,,
R.002866,"/*
R.002866

----------

Name: GHW - YE 2.2a
Created by: George H Williams

----------

Group: Daily, Monthly, Yearly Stats
     Yearly Stats Suite

Created on: 2017-01-01 22:38:29
Modified on: 2017-01-01 22:50:22
Date last run: 2022-01-02 13:18:54

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  branches.branchcode AS BRANCH,
  Coalesce(TOTAL_PATRONS.COUNT, 0) AS '2.2a_TOTAL_PATRONS'
FROM
  branches LEFT JOIN
  (SELECT
    borrowers.branchcode,
    Count(*) AS COUNT
  FROM
    borrowers
  GROUP BY
    borrowers.branchcode) TOTAL_PATRONS
    ON branches.branchcode = TOTAL_PATRONS.branchcode
GROUP BY
  branches.branchcode
",,,,,,,,
R.002867,"/*
R.002867

----------

Name: GHW - YE - 9.1a
Created by: George H Williams

----------

Group: Daily, Monthly, Yearly Stats
     Yearly Stats Suite

Created on: 2017-01-01 22:39:19
Modified on: 2021-12-30 22:38:38
Date last run: 2022-01-01 01:32:02

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branches.branchcode,
  Coalesce(Count(BOOK_S.itemnumber), 0) AS '9.1a_BOOK_S'
FROM
  branches LEFT JOIN
  (
    SELECT
      items.homebranch,
      items.itemnumber
    FROM
      items
    WHERE
      items.dateaccessioned < MakeDate(Year(Now()), 1) - INTERVAL 1 YEAR AND
      ((items.itype = 'BOOK' OR
        items.itype = 'PBBKNEW' OR
        items.itype = 'PBBKCLUB' OR
        items.itype = 'PBBKWALK' OR
        items.itype = 'LOCALHOLD2') OR
      (items.itype = 'PUNC' AND
        (items.ccode = 'XXX' OR
        items.ccode = 'BIOGRAPHY' OR
        items.ccode = 'BOARDBK' OR
        items.ccode = 'JYA_CHAP' OR
        items.ccode = 'READER' OR
        items.ccode = 'FICTION' OR
        items.ccode = 'GENEALOGY' OR
        items.ccode = 'INSPRATION' OR
        items.ccode = 'KANSAS' OR
        items.ccode = 'LARGEPRINT' OR
        items.ccode = 'MYSTERY' OR
        items.ccode = 'NONFICTION' OR
        items.ccode = 'PAPERBACK' OR
        items.ccode = 'EASY' OR
        items.ccode = 'REFERENCE' OR
        items.ccode = 'ROMANCE' OR
        items.ccode = 'SF-FANT')) OR
      (items.itype = 'LOCALHOLD' AND
        (items.ccode = 'XXX' OR
        items.ccode = 'BIOGRAPHY' OR
        items.ccode = 'BOARDBK' OR
        items.ccode = 'READER' OR
        items.ccode = 'EDUCATION' OR
        items.ccode = 'FICTION' OR
        items.ccode = 'GRAPHIC' OR
        items.ccode = 'KANSAS' OR
        items.ccode = 'NONFICTION' OR
        items.ccode = 'OVERSIZE' OR
        items.ccode = 'PARENTING' OR
        items.ccode = 'EASY' OR
        items.ccode = 'PROFCOLL' OR
        items.ccode = 'WESTERN')) OR
      (items.itype = 'REFERENCE' AND
        (items.ccode = 'ATLAS' OR
        items.ccode = 'BIOGRAPHY' OR
        items.ccode = 'FICTION' OR
        items.ccode = 'GENEALOGY' OR
        items.ccode = 'GRAPHIC' OR
        items.ccode = 'INSPRATION' OR
        items.ccode = 'KANSAS' OR
        items.ccode = 'NONFICTION' OR
        items.ccode = 'OVERSIZE' OR
        items.ccode = 'EASY' OR
        items.ccode = 'PROFCOLL' OR
        items.ccode = 'REFERENCE')) OR
      (items.itype = 'PSPECIAL' AND
        (items.ccode = 'XXX' OR
        items.ccode = 'BIOGRAPHY' OR
        items.ccode = 'BOARDBK' OR
        items.ccode = 'EDUCATION' OR
        items.ccode = 'FICTION' OR
        items.ccode = 'GENEALOGY' OR
        items.ccode = 'HOLIDAY' OR
        items.ccode = 'KANSAS' OR
        items.ccode = 'MYSTERY' OR
        items.ccode = 'NONFICTION' OR
        items.ccode = 'OVERSIZE' OR
        items.ccode = 'PAPERBACK' OR
        items.ccode = 'PARENTING' OR
        items.ccode = 'EASY' OR
        items.ccode = 'PROFCOLL' OR
        items.ccode = 'REFERENCE' OR
        items.ccode = 'SF-FANT' OR
        items.ccode = 'SPC_DARE')))
  GROUP BY
    items.homebranch,
    items.itemnumber
  UNION
  SELECT
    deleteditems.homebranch,
    deleteditems.itemnumber
  FROM
    deleteditems
  WHERE
    deleteditems.dateaccessioned < MakeDate(Year(Now()), 1) - INTERVAL 1 YEAR
    AND
    ((deleteditems.itype = 'BOOK' OR
      deleteditems.itype = 'PBBKNEW' OR
      deleteditems.itype = 'PBBKWALK' OR
      deleteditems.itype = 'PBBKCLUB' OR 
      deleteditems.itype = 'LOCALHOLD2') OR
      (deleteditems.itype = 'PUNC' AND
        (deleteditems.ccode = 'XXX' OR
        deleteditems.ccode = 'BIOGRAPHY' OR
        deleteditems.ccode = 'BOARDBK' OR
        deleteditems.ccode = 'JYA_CHAP' OR
        deleteditems.ccode = 'READER' OR
        deleteditems.ccode = 'FICTION' OR
        deleteditems.ccode = 'GENEALOGY' OR
        deleteditems.ccode = 'INSPRATION' OR
        deleteditems.ccode = 'KANSAS' OR
        deleteditems.ccode = 'LARGEPRINT' OR
        deleteditems.ccode = 'MYSTERY' OR
        deleteditems.ccode = 'NONFICTION' OR
        deleteditems.ccode = 'PAPERBACK' OR
        deleteditems.ccode = 'EASY' OR
        deleteditems.ccode = 'REFERENCE' OR
        deleteditems.ccode = 'ROMANCE' OR
        deleteditems.ccode = 'SF-FANT')) OR
      (deleteditems.itype = 'LOCALHOLD' AND
        (deleteditems.ccode = 'XXX' OR
        deleteditems.ccode = 'BIOGRAPHY' OR
        deleteditems.ccode = 'BOARDBK' OR
        deleteditems.ccode = 'READER' OR
        deleteditems.ccode = 'EDUCATION' OR
        deleteditems.ccode = 'FICTION' OR
        deleteditems.ccode = 'GRAPHIC' OR
        deleteditems.ccode = 'KANSAS' OR
        deleteditems.ccode = 'NONFICTION' OR
        deleteditems.ccode = 'OVERSIZE' OR
        deleteditems.ccode = 'PARENTING' OR
        deleteditems.ccode = 'EASY' OR
        deleteditems.ccode = 'PROFCOLL' OR
        deleteditems.ccode = 'WESTERN')) OR
      (deleteditems.itype = 'REFERENCE' AND
        (deleteditems.ccode = 'ATLAS' OR
        deleteditems.ccode = 'BIOGRAPHY' OR
        deleteditems.ccode = 'FICTION' OR
        deleteditems.ccode = 'GENEALOGY' OR
        deleteditems.ccode = 'GRAPHIC' OR
        deleteditems.ccode = 'INSPRATION' OR
        deleteditems.ccode = 'KANSAS' OR
        deleteditems.ccode = 'NONFICTION' OR
        deleteditems.ccode = 'OVERSIZE' OR
        deleteditems.ccode = 'EASY' OR
        deleteditems.ccode = 'PROFCOLL' OR
        deleteditems.ccode = 'REFERENCE')) OR
      (deleteditems.itype = 'PSPECIAL' AND
        (deleteditems.ccode = 'XXX' OR
        deleteditems.ccode = 'BIOGRAPHY' OR
        deleteditems.ccode = 'BOARDBK' OR
        deleteditems.ccode = 'EDUCATION' OR
        deleteditems.ccode = 'FICTION' OR
        deleteditems.ccode = 'GENEALOGY' OR
        deleteditems.ccode = 'HOLIDAY' OR
        deleteditems.ccode = 'KANSAS' OR
        deleteditems.ccode = 'MYSTERY' OR
        deleteditems.ccode = 'NONFICTION' OR
        deleteditems.ccode = 'OVERSIZE' OR
        deleteditems.ccode = 'PAPERBACK' OR
        deleteditems.ccode = 'PARENTING' OR
        deleteditems.ccode = 'EASY' OR
        deleteditems.ccode = 'PROFCOLL' OR
        deleteditems.ccode = 'REFERENCE' OR
        deleteditems.ccode = 'SF-FANT' OR
        deleteditems.ccode = 'SPC_DARE'))
    ) AND
    deleteditems.timestamp BETWEEN (MakeDate(Year(Now()), 1) - INTERVAL 1 YEAR) AND (MakeDate(Year(Now()), 1))
  GROUP BY
    deleteditems.homebranch,
    deleteditems.itemnumber) BOOK_S ON branches.branchcode = BOOK_S.homebranch
GROUP BY
  branches.branchcode",,,,,,,,
R.002868,"/*
R.002868

----------

Name: GHW - YE 9.1b-9.5
Created by: George H Williams

----------

Group: Daily, Monthly, Yearly Stats
     Yearly Stats Suite

Created on: 2017-01-01 22:40:38
Modified on: 2021-12-31 13:44:20
Date last run: 2022-01-01 01:27:02

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branches.branchcode AS BRANCH,
  Coalesce(Count(BOOKS_A.itemnumber), 0) AS '9.1b_BOOKS_A',
  Coalesce(BOOKS_D.COUNT, 0) AS '9.1c_BOOKS_D',
  Coalesce(AUDIO_T.COUNT, 0) AS '9.2_ADUTIO_T',
  Coalesce(VIDEO_T.COUNT, 0) AS '9.3a_VIDEO_T',
  Coalesce(VIDEO_DVD_T.COUNT, 0) AS '9.3b_VIDEO_DVD_T',
  Coalesce(ALL_ITEMS.COUNT, 0) - Coalesce(ALL_BOOKS.COUNT, 0) -
  Coalesce(AUDIO_T.COUNT, 0) - Coalesce(VIDEO_T.COUNT, 0) AS '9.5_OTHER_T'
FROM
  branches LEFT JOIN
  (SELECT
      items.homebranch,
      items.itemnumber
    FROM
      items
    WHERE
      (Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 YEAR) AND
        (items.itype = 'BOOK' OR
          items.itype = 'PBBKNEW' OR
          items.itype = 'PBBKCLUB' OR
          items.itype = 'PBBKWALK' OR
          items.itype = 'LOCALHOLD2') OR
        (Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 YEAR) AND
          (items.itype = 'PUNC' AND
            (items.ccode = 'XXX' OR
              items.ccode = 'BIOGRAPHY' OR
              items.ccode = 'BOARDBK' OR
              items.ccode = 'JYA_CHAP' OR
              items.ccode = 'READER' OR
              items.ccode = 'FICTION' OR
              items.ccode = 'GENEALOGY' OR
              items.ccode = 'INSPRATION' OR
              items.ccode = 'KANSAS' OR
              items.ccode = 'LARGEPRINT' OR
              items.ccode = 'MYSTERY' OR
              items.ccode = 'NONFICTION' OR
              items.ccode = 'PAPERBACK' OR
              items.ccode = 'EASY' OR
              items.ccode = 'REFERENCE' OR
              items.ccode = 'ROMANCE' OR
              items.ccode = 'SF-FANT')) OR
          (items.itype = 'LOCALHOLD' AND
            (items.ccode = 'XXX' OR
              items.ccode = 'BIOGRAPHY' OR
              items.ccode = 'BOARDBK' OR
              items.ccode = 'READER' OR
              items.ccode = 'EDUCATION' OR
              items.ccode = 'FICTION' OR
              items.ccode = 'GRAPHIC' OR
              items.ccode = 'KANSAS' OR
              items.ccode = 'NONFICTION' OR
              items.ccode = 'OVERSIZE' OR
              items.ccode = 'PARENTING' OR
              items.ccode = 'EASY' OR
              items.ccode = 'PROFCOLL' OR
              items.ccode = 'WESTERN')) OR
          (items.itype = 'REFERENCE' AND
            (items.ccode = 'ATLAS' OR
              items.ccode = 'BIOGRAPHY' OR
              items.ccode = 'FICTION' OR
              items.ccode = 'GENEALOGY' OR
              items.ccode = 'GRAPHIC' OR
              items.ccode = 'INSPRATION' OR
              items.ccode = 'KANSAS' OR
              items.ccode = 'NONFICTION' OR
              items.ccode = 'OVERSIZE' OR
              items.ccode = 'EASY' OR
              items.ccode = 'PROFCOLL' OR
              items.ccode = 'REFERENCE')) OR
          (items.itype = 'PSPECIAL' AND
            (items.ccode = 'XXX' OR
              items.ccode = 'BIOGRAPHY' OR
              items.ccode = 'BOARDBK' OR
              items.ccode = 'EDUCATION' OR
              items.ccode = 'FICTION' OR
              items.ccode = 'GENEALOGY' OR
              items.ccode = 'HOLIDAY' OR
              items.ccode = 'KANSAS' OR
              items.ccode = 'MYSTERY' OR
              items.ccode = 'NONFICTION' OR
              items.ccode = 'OVERSIZE' OR
              items.ccode = 'PAPERBACK' OR
              items.ccode = 'PARENTING' OR
              items.ccode = 'EASY' OR
              items.ccode = 'PROFCOLL' OR
              items.ccode = 'REFERENCE' OR
              items.ccode = 'SF-FANT' OR
              items.ccode = 'SPC_DARE'))))
    GROUP BY
      items.homebranch,
      items.itemnumber
    UNION
    SELECT
      deleteditems.homebranch,
      deleteditems.itemnumber
    FROM
      deleteditems
    WHERE
      (Year(deleteditems.dateaccessioned) = Year(Now() - INTERVAL 1 YEAR) AND
        (deleteditems.itype = 'BOOK' OR
          deleteditems.itype = 'PBBKNEW' OR
          deleteditems.itype = 'PBBKWALK' OR
          deleteditems.itype = 'PBBKCLUB' OR
          deleteditems.itype = 'LOCALHOLD2')) OR
      (Year(deleteditems.dateaccessioned) = Year(Now() - INTERVAL 1 YEAR) AND
        ((deleteditems.itype = 'PUNC' AND
            (deleteditems.ccode = 'XXX' OR
              deleteditems.ccode = 'BIOGRAPHY' OR
              deleteditems.ccode = 'BOARDBK' OR
              deleteditems.ccode = 'JYA_CHAP' OR
              deleteditems.ccode = 'READER' OR
              deleteditems.ccode = 'FICTION' OR
              deleteditems.ccode = 'GENEALOGY' OR
              deleteditems.ccode = 'INSPRATION' OR
              deleteditems.ccode = 'KANSAS' OR
              deleteditems.ccode = 'LARGEPRINT' OR
              deleteditems.ccode = 'MYSTERY' OR
              deleteditems.ccode = 'NONFICTION' OR
              deleteditems.ccode = 'PAPERBACK' OR
              deleteditems.ccode = 'EASY' OR
              deleteditems.ccode = 'REFERENCE' OR
              deleteditems.ccode = 'ROMANCE' OR
              deleteditems.ccode = 'SF-FANT')) OR
          (deleteditems.itype = 'LOCALHOLD' AND
            (deleteditems.ccode = 'XXX' OR
              deleteditems.ccode = 'BIOGRAPHY' OR
              deleteditems.ccode = 'BOARDBK' OR
              deleteditems.ccode = 'READER' OR
              deleteditems.ccode = 'EDUCATION' OR
              deleteditems.ccode = 'FICTION' OR
              deleteditems.ccode = 'GRAPHIC' OR
              deleteditems.ccode = 'KANSAS' OR
              deleteditems.ccode = 'NONFICTION' OR
              deleteditems.ccode = 'OVERSIZE' OR
              deleteditems.ccode = 'PARENTING' OR
              deleteditems.ccode = 'EASY' OR
              deleteditems.ccode = 'PROFCOLL' OR
              deleteditems.ccode = 'WESTERN')) OR
          (deleteditems.itype = 'REFERENCE' AND
            (deleteditems.ccode = 'ATLAS' OR
              deleteditems.ccode = 'BIOGRAPHY' OR
              deleteditems.ccode = 'FICTION' OR
              deleteditems.ccode = 'GENEALOGY' OR
              deleteditems.ccode = 'GRAPHIC' OR
              deleteditems.ccode = 'INSPRATION' OR
              deleteditems.ccode = 'KANSAS' OR
              deleteditems.ccode = 'NONFICTION' OR
              deleteditems.ccode = 'OVERSIZE' OR
              deleteditems.ccode = 'EASY' OR
              deleteditems.ccode = 'PROFCOLL' OR
              deleteditems.ccode = 'REFERENCE')) OR
          (deleteditems.itype = 'PSPECIAL' AND
            (deleteditems.ccode = 'XXX' OR
              deleteditems.ccode = 'BIOGRAPHY' OR
              deleteditems.ccode = 'BOARDBK' OR
              deleteditems.ccode = 'EDUCATION' OR
              deleteditems.ccode = 'FICTION' OR
              deleteditems.ccode = 'GENEALOGY' OR
              deleteditems.ccode = 'HOLIDAY' OR
              deleteditems.ccode = 'KANSAS' OR
              deleteditems.ccode = 'MYSTERY' OR
              deleteditems.ccode = 'NONFICTION' OR
              deleteditems.ccode = 'OVERSIZE' OR
              deleteditems.ccode = 'PAPERBACK' OR
              deleteditems.ccode = 'PARENTING' OR
              deleteditems.ccode = 'EASY' OR
              deleteditems.ccode = 'PROFCOLL' OR
              deleteditems.ccode = 'REFERENCE' OR
              deleteditems.ccode = 'SF-FANT' OR
              deleteditems.ccode = 'SPC_DARE'))))
    GROUP BY
      deleteditems.homebranch,
      deleteditems.itemnumber) BOOKS_A ON branches.branchcode =
      BOOKS_A.homebranch LEFT JOIN
  (SELECT
      deleteditems.homebranch,
      Count(deleteditems.itemnumber) AS COUNT
    FROM
      deleteditems
    WHERE
      (Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 YEAR) AND
        (deleteditems.itype = 'BOOK' OR
          deleteditems.itype = 'LOCALHOLD2' OR
          deleteditems.itype = 'PBBKNEW' OR
          deleteditems.itype = 'WALKIN2')) OR
      (Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 YEAR) AND
        (deleteditems.itype = 'LOCALHOLD' OR
          deleteditems.itype = 'REFERENCE' OR
          deleteditems.itype = 'WALKIN' OR
          deleteditems.itype = 'XXX') AND
        (deleteditems.ccode = 'BILINGUAL' OR
          deleteditems.ccode = 'BIOGRAPHY' OR
          deleteditems.ccode = 'BOARDBK' OR
          deleteditems.ccode = 'EASY' OR
          deleteditems.ccode = 'EDUCATION' OR
          deleteditems.ccode = 'FICTION' OR
          deleteditems.ccode = 'GENEALOGY' OR
          deleteditems.ccode = 'GRAPHIC' OR
          deleteditems.ccode = 'HOLIDAY' OR
          deleteditems.ccode = 'INSPRATION' OR
          deleteditems.ccode = 'KANSAS' OR
          deleteditems.ccode = 'LARGEPRINT' OR
          deleteditems.ccode = 'LARGEPRNF' OR
          deleteditems.ccode = 'MYSTERY' OR
          deleteditems.ccode = 'NONFICTION' OR
          deleteditems.ccode = 'OVERSIZE' OR
          deleteditems.ccode = 'PAPERBACK' OR
          deleteditems.ccode = 'PARENTING' OR
          deleteditems.ccode = 'PROFCOLL' OR
          deleteditems.ccode = 'READER' OR
          deleteditems.ccode = 'ROMANCE' OR
          deleteditems.ccode = 'SF-FANT' OR
          deleteditems.ccode = 'SPANISH' OR
          deleteditems.ccode = 'WESTERN'))
    GROUP BY
      deleteditems.homebranch) BOOKS_D ON branches.branchcode =
      BOOKS_D.homebranch LEFT JOIN
  (SELECT
      items.homebranch,
      COUNT(*) AS COUNT
    FROM
      items
    WHERE
      (Year(items.dateaccessioned) < MakeDate(Year(Now()), 1) AND
        (items.itype = 'AUDIOBOOK' OR
          items.itype = 'FLPLAYAWAY' OR
          items.itype = 'NAUDNEW')) OR
      (Year(items.dateaccessioned) < MakeDate(Year(Now()), 1) AND
        ((items.itype = 'DIGITAL' AND
            (items.ccode = 'BOOKONCD' OR
              items.ccode = 'BOOKONMP')) OR
          (items.itype = 'KIT' AND
            (items.ccode = 'BOOKONCD' OR
              items.ccode = 'BOOKONMP')) OR
          (items.itype = 'LAUNCHPAD' AND
            (items.ccode = 'BOOKONCD')) OR
          (items.itype = 'MUSIC' AND
            (items.ccode = 'BOOKONCD')) OR
          (items.itype = 'PSPECIAL' AND
            (items.ccode = 'BOOKONCD' OR
              items.ccode = 'BOOKONMP')) OR
          (items.itype = 'PUNC' AND
            (items.ccode = 'BOOKONCD')) OR
          (items.itype = 'REFERENCE' AND
            (items.ccode = 'BOOKONCD' OR
              items.ccode = 'BOOKONMP'))))
    GROUP BY
      items.homebranch) AUDIO_T ON branches.branchcode = AUDIO_T.homebranch
  LEFT JOIN
  (SELECT
      items.homebranch,
      count(*) AS COUNT
    FROM
      items
    WHERE
      Year(items.dateaccessioned) < MakeDate(Year(Now()), 1)
    GROUP BY
      items.homebranch) ALL_ITEMS ON branches.branchcode = ALL_ITEMS.homebranch
  LEFT JOIN
  (SELECT
      items.homebranch,
      count(*) AS COUNT
    FROM
      items
    WHERE
      (Year(items.dateaccessioned) < MakeDate(Year(Now()), 1) AND
        (items.itype = 'NVIDEO' OR
          items.itype = 'NVIDLH' OR
          items.itype = 'NVIDNEW' OR
          items.itype = 'NVIDTV')) OR
      (Year(items.dateaccessioned) < MakeDate(Year(Now()), 1) AND
        ((items.itype = 'DIGITAL' AND
            (items.ccode = 'VID_D')) OR
          (items.itype = 'EQUIPMENT' AND
            (items.ccode = 'VID_M')) OR
          (items.itype = 'GAME' AND
            (items.ccode = 'VID_D')) OR
          (items.itype = 'HCC_RES' AND
            (items.ccode = 'VID_D')) OR
          (items.itype = 'KITS' AND
            (items.ccode = 'VID_D')) OR
          (items.itype = 'LOCALHOLD' AND
            (items.ccode = 'VID_B' OR
              items.ccode = 'VID_C' OR
              items.ccode = 'VID_D')) OR
          (items.itype = 'MAGAZINE' AND
            (items.ccode = 'VID_D')) OR
          (items.itype = 'MUSIC' AND
            (items.ccode = 'VID_D')) OR
          (items.itype = 'NREL_TOOL' AND
            (items.ccode = 'VID_D')) OR
          (items.itype = 'PSPECIAL' AND
            (items.ccode = 'VID_B' OR
              items.ccode = 'VID_C' OR
              items.ccode = 'VID_D')) OR
          (items.itype = 'PUNC' AND
            (items.ccode = 'VID_B' OR
              items.ccode = 'VID_D')) OR
          (items.itype = 'REFERENCE' AND
            (items.ccode = 'VHS' OR
              items.ccode = 'VID_D'))))
    GROUP BY
      items.homebranch) VIDEO_T ON branches.branchcode = VIDEO_T.homebranch
  LEFT JOIN
  (SELECT
      items.homebranch,
      Count(items.itemnumber) AS COUNT
    FROM
      items
    WHERE
      items.dateaccessioned < MakeDate(Year(Now()), 1) - INTERVAL 1 YEAR AND
      ((items.itype = 'BOOK' OR
          items.itype = 'PBBKNEW' OR
          items.itype = 'PBBKCLUB' OR
          items.itype = 'PBBKWALK' OR
          items.itype = 'LOCALHOLD2') OR
        (items.itype = 'PUNC' AND
          (items.ccode = 'XXX' OR
            items.ccode = 'BIOGRAPHY' OR
            items.ccode = 'BOARDBK' OR
            items.ccode = 'JYA_CHAP' OR
            items.ccode = 'READER' OR
            items.ccode = 'FICTION' OR
            items.ccode = 'GENEALOGY' OR
            items.ccode = 'INSPRATION' OR
            items.ccode = 'KANSAS' OR
            items.ccode = 'LARGEPRINT' OR
            items.ccode = 'MYSTERY' OR
            items.ccode = 'NONFICTION' OR
            items.ccode = 'PAPERBACK' OR
            items.ccode = 'EASY' OR
            items.ccode = 'REFERENCE' OR
            items.ccode = 'ROMANCE' OR
            items.ccode = 'SF-FANT')) OR
        (items.itype = 'LOCALHOLD' AND
          (items.ccode = 'XXX' OR
            items.ccode = 'BIOGRAPHY' OR
            items.ccode = 'BOARDBK' OR
            items.ccode = 'READER' OR
            items.ccode = 'EDUCATION' OR
            items.ccode = 'FICTION' OR
            items.ccode = 'GRAPHIC' OR
            items.ccode = 'KANSAS' OR
            items.ccode = 'NONFICTION' OR
            items.ccode = 'OVERSIZE' OR
            items.ccode = 'PARENTING' OR
            items.ccode = 'EASY' OR
            items.ccode = 'PROFCOLL' OR
            items.ccode = 'WESTERN')) OR
        (items.itype = 'REFERENCE' AND
          (items.ccode = 'ATLAS' OR
            items.ccode = 'BIOGRAPHY' OR
            items.ccode = 'FICTION' OR
            items.ccode = 'GENEALOGY' OR
            items.ccode = 'GRAPHIC' OR
            items.ccode = 'INSPRATION' OR
            items.ccode = 'KANSAS' OR
            items.ccode = 'NONFICTION' OR
            items.ccode = 'OVERSIZE' OR
            items.ccode = 'EASY' OR
            items.ccode = 'PROFCOLL' OR
            items.ccode = 'REFERENCE')) OR
        (items.itype = 'PSPECIAL' AND
          (items.ccode = 'XXX' OR
            items.ccode = 'BIOGRAPHY' OR
            items.ccode = 'BOARDBK' OR
            items.ccode = 'EDUCATION' OR
            items.ccode = 'FICTION' OR
            items.ccode = 'GENEALOGY' OR
            items.ccode = 'HOLIDAY' OR
            items.ccode = 'KANSAS' OR
            items.ccode = 'MYSTERY' OR
            items.ccode = 'NONFICTION' OR
            items.ccode = 'OVERSIZE' OR
            items.ccode = 'PAPERBACK' OR
            items.ccode = 'PARENTING' OR
            items.ccode = 'EASY' OR
            items.ccode = 'PROFCOLL' OR
            items.ccode = 'REFERENCE' OR
            items.ccode = 'SF-FANT' OR
            items.ccode = 'SPC_DARE')))
    GROUP BY
      items.homebranch) ALL_BOOKS ON ALL_BOOKS.homebranch = branches.branchcode
  LEFT JOIN
  (SELECT
      items.homebranch,
      count(*) AS COUNT
    FROM
      items
    WHERE
      (Year(items.dateaccessioned) < MakeDate(Year(Now()), 1) AND
        ((items.itype = 'NVIDEO' AND
            (items.ccode <> 'VHS' AND
              items.ccode <> 'VID_M')) OR
          (items.itype = 'NVIDLH' AND
            (items.ccode <> 'VHS' AND
              items.ccode <> 'VID_M')) OR
          (items.itype = 'NVIDNEW' AND
            (items.ccode <> 'VHS' AND
              items.ccode <> 'VID_M')) OR
          (items.itype = 'NVIDTV' AND
            (items.ccode <> 'VHS' AND
              items.ccode <> 'VID_M')))) OR
      (Year(items.dateaccessioned) < MakeDate(Year(Now()), 1) AND
        ((items.itype = 'DIGITAL' AND
            (items.ccode = 'VID_D')) OR
          (items.itype = 'GAME' AND
            (items.ccode = 'VID_D')) OR
          (items.itype = 'HCC_RES' AND
            (items.ccode = 'VID_D')) OR
          (items.itype = 'KITS' AND
            (items.ccode = 'VID_D')) OR
          (items.itype = 'LOCALHOLD' AND
            (items.ccode = 'VID_B' OR
              items.ccode = 'VID_C' OR
              items.ccode = 'VID_D')) OR
          (items.itype = 'MAGAZINE' AND
            (items.ccode = 'VID_D')) OR
          (items.itype = 'MUSIC' AND
            (items.ccode = 'VID_D')) OR
          (items.itype = 'NREL_TOOL' AND
            (items.ccode = 'VID_D')) OR
          (items.itype = 'PSPECIAL' AND
            (items.ccode = 'VID_B' OR
              items.ccode = 'VID_C' OR
              items.ccode = 'VID_D')) OR
          (items.itype = 'PUNC' AND
            (items.ccode = 'VID_B' OR
              items.ccode = 'VID_D')) OR
          (items.itype = 'REFERENCE' AND
            (items.ccode = 'VID_D'))))
    GROUP BY
      items.homebranch) VIDEO_DVD_T ON VIDEO_DVD_T.homebranch =
      branches.branchcode
GROUP BY
  branches.branchcode",,,,,,,,
R.002870,"/*
R.002870

----------

Name: GHW - YE 11.1 
Created by: George H Williams

----------

Group: Daily, Monthly, Yearly Stats
     Yearly Stats Suite

Created on: 2017-01-01 22:51:24
Modified on: 2020-12-31 15:46:42
Date last run: 2022-01-27 09:11:00

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  branches.branchcode AS BRANCH,
  Coalesce(ADULT_C.COUNT, 0) AS '11.1_ADULT_C'
FROM
  branches LEFT JOIN
  (SELECT
      statistics.branch,
      Count(*) AS COUNT
    FROM
      statistics LEFT JOIN
      items ON statistics.itemnumber = items.itemnumber LEFT JOIN
      deleteditems ON statistics.itemnumber = deleteditems.itemnumber
    WHERE
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 YEAR) AND
      (statistics.type = 'issue' OR
          statistics.type = 'renew') AND
      ((Coalesce(deleteditems.permanent_location, deleteditems.location) = 'ADULT') OR
          (Coalesce(items.permanent_location, items.location) = 'ADULT'))
    GROUP BY
      statistics.branch) ADULT_C ON branches.branchcode = ADULT_C.branch
GROUP BY
  branches.branchcode,
  ADULT_C.COUNT",,,,,,,,
R.002871,"/*
R.002871

----------

Name: GHW - YE 11.2
Created by: George H Williams

----------

Group: Daily, Monthly, Yearly Stats
     Yearly Stats Suite

Created on: 2017-01-01 22:52:08
Modified on: 2020-12-31 15:55:10
Date last run: 2021-01-01 01:10:02

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  branches.branchcode AS BRANCH,
  Coalesce(YOUTH_C.COUNT, 0) AS '11.2_YOUTH_C'
FROM
  branches LEFT JOIN
  (SELECT
      statistics.branch,
      Count(*) AS COUNT
    FROM
      statistics LEFT JOIN
      items ON statistics.itemnumber = items.itemnumber LEFT JOIN
      deleteditems ON statistics.itemnumber = deleteditems.itemnumber
    WHERE
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 YEAR) AND
      (statistics.type = 'issue' OR
          statistics.type = 'renew') AND
      ((Coalesce(deleteditems.permanent_location, deleteditems.location) <> 'ADULT') OR
          (Coalesce(items.permanent_location, items.location) <> 'ADULT'))
    GROUP BY
      statistics.branch) YOUTH_C ON branches.branchcode = YOUTH_C.branch
GROUP BY
  branches.branchcode,
  YOUTH_C.COUNT
",,,,,,,,
R.002873,"/*
R.002873

----------

Name: GHW - Payments, Credits, and Writeoffs - Last Month
Created by: George H Williams

----------

Group: Fines/Fees
     -

Created on: 2017-01-04 11:48:38
Modified on: 2021-05-07 09:30:14
Date last run: 2022-09-23 16:23:42

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Reports on fee payment/credit/writeoff activity at a library</p>
<ul><li>Shows activity in the previous calendar month</li>
<li>Shows all fees collected/processed at a specified library</li>
<li>grouped by accountlines_id</li>
<li>sorted by payment locttion, payment type, payment timestamp</li>
<li>links to the payment accountline details page</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Updated may 5, 2021.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2873&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  staff.branchcode AS PAYMENT_BRANCH,
  accountlines.accountlines_id AS PAYMENT_ID,
  accountlines.timestamp,
  staff.cardnumber AS STAFF_LOGIN,
  Format(accountlines.amount, 2) AS AMOUNT,
  patrons.cardnumber AS BORROWER,
  Trim(Replace(accountlines.note, '\r\n', ' ')) AS NOTE,
  If(
    accountlines.status IS NULL,
    accountlines.credit_type_code,
    Concat(accountlines.credit_type_code, ' / ', accountlines.status)
  ) AS PAYMENT_TYPE,
  CONCAT(
    '<a href=""https://staff.nextkansas.org/cgi-bin/koha/members/accountline-details.pl?accountlines_id=', 
    accountlines.accountlines_id, 
    '"" target=""_blank"">Go to transaction</a>'
  ) AS LINK_TO_PAYMENT
FROM
  accountlines LEFT JOIN
  borrowers staff ON staff.borrowernumber = accountlines.manager_id LEFT JOIN
  borrowers patrons ON accountlines.borrowernumber = patrons.borrowernumber
WHERE
  staff.branchcode LIKE <<Choose your library|LBRANCH>> AND
  staff.categorycode = 'STAFF' AND
  accountlines.credit_type_code IS NOT NULL AND
  Year(accountlines.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND
  Month(accountlines.timestamp) = Month(Now() - INTERVAL 1 MONTH)
GROUP BY
  accountlines.accountlines_id
ORDER BY
  PAYMENT_BRANCH,
  accountlines.timestamp,
  accountlines.accountlines_id",,,,,,,,
R.002874,"/*
R.002874

----------

Name: GHW - Payments, Credits, and Writeoffs - Date Range
Created by: George H Williams

----------

Group: Fines/Fees
     -

Created on: 2017-01-04 12:34:28
Modified on: 2021-05-07 09:30:17
Date last run: 2022-09-29 12:19:36

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Reports on fee payment/credit/writeoff activity at a library</p>
<ul><li>Shows activity during a specified date range (between the beginning of the day on the specified ""START DATE"" to the end of the day on the specified ""END DATE"")</li>
<li>Shows all fees collected/processed at a specified library</li>
<li>grouped by accountlines_id</li>
<li>sorted by payment locttion, payment type, payment timestamp</li>
<li>links to the payment accountline details page</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Updated may 5, 2021.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2874&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  staff.branchcode AS PAYMENT_BRANCH,
  accountlines.accountlines_id AS PAYMENT_ID,
  accountlines.timestamp,
  staff.cardnumber AS STAFF_LOGIN,
  Format(accountlines.amount, 2) AS AMOUNT,
  patrons.cardnumber AS BORROWER,
  Trim(Replace(accountlines.note, '\r\n', ' ')) AS NOTE,
  If(
    accountlines.status IS NULL,
    accountlines.credit_type_code,
    Concat(accountlines.credit_type_code, ' / ', accountlines.status)
  ) AS PAYMENT_TYPE,
  CONCAT(
    '<a href=""https://staff.nextkansas.org/cgi-bin/koha/members/accountline-details.pl?accountlines_id=', 
    accountlines.accountlines_id, 
    '"" target=""_blank"">Go to transaction</a>'
  ) AS LINK_TO_PAYMENT
FROM
  accountlines LEFT JOIN
  borrowers staff ON staff.borrowernumber = accountlines.manager_id LEFT JOIN
  borrowers patrons ON accountlines.borrowernumber = patrons.borrowernumber
WHERE
  staff.branchcode LIKE <<Choose your library|LBRANCH>> AND
  staff.categorycode = 'STAFF' AND
  accountlines.credit_type_code IS NOT NULL AND
  accountlines.timestamp BETWEEN <<Between the beginning of the day on START DATE|date>> AND <<and the end of the day on END DATE|date>> + INTERVAL 1 DAY
GROUP BY
  accountlines.accountlines_id
ORDER BY
  PAYMENT_BRANCH,
  accountlines.timestamp,
  accountlines.accountlines_id",,,,,,,,
R.002875,"/*
R.002875

----------

Name: GHW - message queue test
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2017-01-04 17:18:08
Modified on: 2017-01-17 22:17:12
Date last run: 2021-11-29 19:50:44

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  *
FROM
  message_queue
ORDER BY
  message_id
  DESC
LIMIT 100",,,,,,,,
R.002877,"/*
R.002877

----------

Name: GHW - lost and checked out
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2017-01-05 15:14:59
Modified on: 2017-01-05 15:15:39
Date last run: 2017-10-23 08:47:52

----------

Public: 0
Expiry: 0

----------

Report for GHW 2017.01.05


----------
*/

","SELECT
  authorised_values.lib,
  items.itemnumber,
  items.homebranch,
  items.barcode,
  items.itemlost_on,
  items.onloan
FROM
  items LEFT JOIN
  authorised_values
    ON items.itemlost = authorised_values.authorised_value
WHERE
  items.itemlost <> 0 AND
  items.onloan IS NOT NULL AND
  authorised_values.category = 'LOST'
GROUP BY
  authorised_values.lib, items.itemnumber, items.homebranch, items.barcode,
  items.itemlost_on, items.onloan
ORDER BY
  authorised_values.lib,
  items.homebranch,
  items.itemlost_on
",,,,,,,,
R.002878,"/*
R.002878

----------

Name: GHW - lost more than 45 with 0 lost statusses
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2017-01-05 15:16:14
Modified on: 2017-01-05 15:16:14
Date last run: 2021-08-15 21:21:18

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  items.itemnumber,
  items.barcode,
  items.homebranch,
  authorised_values.lib,
  items.itemlost_on,
  items.onloan,
  issues.date_due,
  borrowers.categorycode
FROM
  items LEFT JOIN
  authorised_values
    ON items.itemlost = authorised_values.authorised_value LEFT JOIN
  issues
    ON issues.itemnumber = items.itemnumber INNER JOIN
  borrowers
    ON issues.borrowernumber = borrowers.borrowernumber
WHERE
  (items.itemlost < 1 OR
    items.itemlost IS NULL) AND
  items.onloan < CurDate() - INTERVAL 46 DAY AND
  authorised_values.category = 'LOST' AND
  borrowers.categorycode <> 'ASSOCIATE' AND
  borrowers.categorycode <> 'STUDENT' AND
  borrowers.categorycode <> 'INHOUSE' AND
  borrowers.categorycode <> 'TEACHER' AND
  borrowers.categorycode <> 'ILL' AND
  borrowers.categorycode <> 'STAFF'
GROUP BY
  items.itemnumber, items.barcode, items.homebranch, authorised_values.lib,
  items.itemlost_on, items.onloan, issues.date_due, borrowers.categorycode
ORDER BY
  authorised_values.lib,
  items.homebranch,
  items.itemlost_on
",,,,,,,,
R.002879,"/*
R.002879

----------

Name: GHW - Tonganoxie 200th patron report
Created by: George H Williams

----------

Group:  TONGANOXIE
     -

Created on: 2017-01-06 12:02:25
Modified on: 2021-08-16 13:40:06
Date last run: 2018-05-04 17:45:55

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Shows an index of patrons with a TONGANOXIE home library during the 2017 calendar year</p>
<ul><li>Shows patrons added during 2017</li>
<li>With a Tonganoxie home branch</li>
<li>grouped by borrowers.cardnumber, borrowers.dateenrolled, borrowers.borrowernumber</li>
<li>sorted by patron index number</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2879&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  borrowers.cardnumber,
  borrowers.dateenrolled,
  @curRow := @curRow + 1 AS PATRON_NUMBER
FROM
  borrowers CROSS JOIN
  (SELECT
    @curRow := 0) r
WHERE
  borrowers.branchcode = 'Tonganoxie' AND
  Year(borrowers.dateenrolled) = 2017
GROUP BY
  borrowers.cardnumber, borrowers.dateenrolled, borrowers.borrowernumber
ORDER BY
  PATRON_NUMBER DESC",,,,,,,,
R.002880,"/*
R.002880

----------

Name: GHW - Monthly 101 - Circulation
Created by: George H Williams

----------

Group: Statistics
     End of month statistics

Created on: 2017-01-09 09:39:56
Modified on: 2021-10-26 12:00:25
Date last run: 2022-03-29 10:19:39

----------

Public: 0
Expiry: 0

----------

<p><ins>Notes:</ins></p>
<p></p>
<p class=""updated"">SHELVING_LOCATION is based on the shelving location of the item at the time it was checked out *Unless the item had a ""Recently returned"" shelving location.*  This report falls back to the items' ""Permanent shelving location"" whenever the statistics data shows that the item's shelving location was ""Recently returned.""</p>
<p></p>

<p style=""display: none;"">MNTHLY</p>

<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=2880"">Click here to download as a csv file</a></p>

----------
*/

","SELECT
  branches.branchcode,
  Coalesce(CIR_RENEW_LM.count, 0) AS CHECKOUT_RENEW_LM,
  Coalesce(ADULT.count, 0) AS CR_ADULT_LM,
  Coalesce(YOUTH.count, 0) AS CR_YOUTH_LM,
  Coalesce(ILL_LOANED.count, 0) AS NX_ILL_LOANED_LM,
  Coalesce(ILL_BORROWED.count, 0) AS NX_ILL_BORROWED_LM,
  Coalesce(ACCT_USED.count, 0) AS PATRON_LM
FROM
  branches LEFT JOIN
  (SELECT
      statistics.branch,
      Count(*) AS count
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH)
    GROUP BY
      statistics.branch) CIR_RENEW_LM ON branches.branchcode =
      CIR_RENEW_LM.branch LEFT JOIN
  (SELECT
      statistics.branch,
      Count(*) AS count
    FROM
      statistics LEFT JOIN
      items ON items.itemnumber = statistics.itemnumber
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      (If(
          statistics.location LIKE ""CART"", 
          items.permanent_location,
          statistics.location
        ) LIKE '%ADULT%' OR
        statistics.location IS NULL)
    GROUP BY
      statistics.branch) ADULT ON branches.branchcode = ADULT.branch LEFT JOIN
  (SELECT
      items.homebranch,
      COUNT(*) AS count
    FROM
      branchtransfers LEFT JOIN
      items ON branchtransfers.itemnumber = items.itemnumber
    WHERE
      items.homebranch <> branchtransfers.tobranch AND
      Year(branchtransfers.datesent) = Year(Now() - INTERVAL 1 MONTH) AND
      Month(branchtransfers.datesent) = Month(Now() - INTERVAL 1 MONTH) AND
      branchtransfers.tobranch <> branchtransfers.frombranch AND
      branchtransfers.comments IS NULL
    GROUP BY
      items.homebranch) ILL_LOANED ON branches.branchcode =
      ILL_LOANED.homebranch LEFT JOIN
  (SELECT
      branchtransfers.tobranch,
      COUNT(*) AS count
    FROM
      branchtransfers LEFT JOIN
      items ON branchtransfers.itemnumber = items.itemnumber
    WHERE
      branchtransfers.tobranch <> items.homebranch AND
      Month(branchtransfers.datesent) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(branchtransfers.datesent) = Year(Now() - INTERVAL 1 MONTH) AND
      branchtransfers.frombranch <> branchtransfers.tobranch AND
      branchtransfers.comments IS NULL
    GROUP BY
      branchtransfers.tobranch) ILL_BORROWED ON branches.branchcode =
      ILL_BORROWED.tobranch LEFT JOIN
  (SELECT
      statistics.branch,
      Count(DISTINCT statistics.borrowernumber) AS count
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew' OR
        statistics.type = 'localuse') AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH)
    GROUP BY
      statistics.branch) ACCT_USED ON branches.branchcode = ACCT_USED.branch
  LEFT JOIN
  (SELECT
      statistics.branch,
      Count(*) AS count
    FROM
      statistics LEFT JOIN
      items ON items.itemnumber = statistics.itemnumber
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      statistics.location <> """" AND
      If(
        statistics.location LIKE ""CART"", 
        items.permanent_location,
        statistics.location
      ) NOT LIKE ""%ADULT%""
    GROUP BY
      statistics.branch) YOUTH ON branches.branchcode = YOUTH.branch
GROUP BY
  branches.branchcode
ORDER BY
  branches.branchcode",,,,,,,,
R.002881,"/*
R.002881

----------

Name: GHW - Monthly 102 - Items and holdings
Created by: George H Williams

----------

Group: Statistics
     End of month statistics

Created on: 2017-01-09 16:41:50
Modified on: 2019-07-01 16:06:33
Date last run: 2022-03-01 10:12:02

----------

Public: 0
Expiry: 0

----------

<p style=""display: none;"">MNTHLY</p>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=2881"">Click here to download as a csv file</a></p>

----------
*/

","SELECT
  branches.branchcode AS BRANCH,
  Coalesce(Sum(DISTINCT START_ITEMS.count), 0) AS START_I,
  Coalesce(Sum(DISTINCT END_ITEMS.count), 0) AS END_I,
  Coalesce(Sum(DISTINCT ITEMS_ADDED.count), 0) AS ITEMS_ADD_L_M,
  Coalesce(ITEMS_DELETED.count, 0) AS ITEMS_DEL_L_M,
  Coalesce(Sum(DISTINCT TOTAL_HOLDINGS.count), 0) AS TOTAL_HOLDINGS,
  Coalesce(HOLDINGS_ADDED.count, 0) AS HOLD_ADD_L_M,
  Coalesce(HOLDINGS_DELETED.count, 0) AS HOLD_DEL_L_M
FROM
  branches LEFT JOIN
  (SELECT
    items.homebranch,
    Count(*) AS count
  FROM
    items
  WHERE
    items.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 2
    MONTH)), 1)
  GROUP BY
    items.homebranch
  UNION
  SELECT
    deleteditems.homebranch,
    Count(*) AS count
  FROM
    deleteditems
  WHERE
    deleteditems.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 2
    MONTH)), 1) AND
    deleteditems.timestamp >= AddDate(Last_Day(SubDate(Now(), INTERVAL
    2 MONTH)), 1)
  GROUP BY
    deleteditems.homebranch) START_ITEMS
    ON branches.branchcode = START_ITEMS.homebranch LEFT JOIN
  (SELECT
    items.homebranch,
    Count(*) AS count
  FROM
    items
  WHERE
    items.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 1
    MONTH)), 1)
  GROUP BY
    items.homebranch
  UNION
  SELECT
    deleteditems.homebranch,
    Count(*) AS count
  FROM
    deleteditems
  WHERE
    deleteditems.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 1
    MONTH)), 1) AND
    deleteditems.timestamp >= AddDate(Last_Day(SubDate(Now(), INTERVAL
    1 MONTH)), 1)
  GROUP BY
    deleteditems.homebranch) END_ITEMS
    ON branches.branchcode = END_ITEMS.homebranch LEFT JOIN
  (SELECT
    items.homebranch,
    Count(*) AS count
  FROM
    items
  WHERE
    Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
    Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH)
  GROUP BY
    items.homebranch
  UNION
  SELECT
    deleteditems.homebranch,
    Count(*) AS count
  FROM
    deleteditems
  WHERE
    Month(deleteditems.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
    Year(deleteditems.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH)
  GROUP BY
    deleteditems.homebranch) ITEMS_ADDED
    ON branches.branchcode = ITEMS_ADDED.homebranch LEFT JOIN
  (SELECT
    deleteditems.homebranch,
    Count(*) AS count
  FROM
    deleteditems
  WHERE
    Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
    Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 MONTH)
  GROUP BY
    deleteditems.homebranch) ITEMS_DELETED
    ON branches.branchcode = ITEMS_DELETED.homebranch LEFT JOIN
  (SELECT
    items.homebranch,
    Count(DISTINCT items.biblionumber) AS count
  FROM
    items
  WHERE
    items.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 1
    MONTH)), 1)
  GROUP BY
    items.homebranch
  UNION
  SELECT
    deleteditems.homebranch,
    Count(DISTINCT deleteditems.biblionumber) AS count
  FROM
    deleteditems
  WHERE
    deleteditems.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 1
    MONTH)), 1) AND
    deleteditems.timestamp >= AddDate(Last_Day(SubDate(Now(), INTERVAL
    1 MONTH)), 1)
  GROUP BY
    deleteditems.homebranch) TOTAL_HOLDINGS
    ON branches.branchcode = TOTAL_HOLDINGS.homebranch LEFT JOIN
  (SELECT
    items.homebranch,
    Count(DISTINCT items.biblionumber) AS count
  FROM
    biblio INNER JOIN
    items
      ON items.biblionumber = biblio.biblionumber
  WHERE
    Month(biblio.datecreated) = Month(Now() - INTERVAL 1 MONTH) AND
    Year(biblio.datecreated) = Year(Now() - INTERVAL 1 MONTH)
  GROUP BY
    items.homebranch) HOLDINGS_ADDED
    ON branches.branchcode = HOLDINGS_ADDED.homebranch LEFT JOIN
  (SELECT
    deleteditems.homebranch,
    Count(DISTINCT deleteditems.biblionumber) AS count
  FROM
    deleteditems INNER JOIN
    deletedbiblio
      ON deletedbiblio.biblionumber = deleteditems.biblionumber
  WHERE
    Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
    Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 MONTH)
  GROUP BY
    deleteditems.homebranch) HOLDINGS_DELETED
    ON branches.branchcode = HOLDINGS_DELETED.homebranch
GROUP BY
  branches.branchcode",,,,,,,,
R.002882,"/*
R.002882

----------

Name: GHW - Patrons with multiple holds on 1 biblio
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2017-01-10 11:28:21
Modified on: 2018-08-30 22:45:47
Date last run: 2022-10-03 09:04:29

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Generates a list of all items where 1 patron has more than 1 hold on 1 bibliographic record</p>
<ul><li>Shows current multiple holds</li>
<li>at all NExpress libraries</li>
<li>grouped by biblionumber, patron barcode, and borrowernumber</li>
<li>sorted by biblionumber, patron barcode, and borrowernumber</li>
<li>contains links to the request record and the patron record</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2882&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/reserve/request.pl?biblionumber=', reserves.biblionumber, '\"" target=""_blank"">',
  reserves.biblionumber, '</a>') AS LINK_TO_REQUESTS,
  reserves.biblionumber,
  borrowers.cardnumber,
  Count(reserves.borrowernumber) AS Count_borrowernumber,
  Concat('<a href=\""/cgi-bin/koha/members/moremember.pl?borrowernumber=', borrowers.borrowernumber, '\"" target=""_blank"">', borrowers.borrowernumber, '</a>') AS LINK_TO_PATRON
FROM
  reserves
  JOIN borrowers ON reserves.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.categorycode <> 'BOOKCLUB'  AND
  reserves.found IS NULL   
GROUP BY
  reserves.biblionumber,
  borrowers.cardnumber,
  borrowers.borrowernumber
HAVING
  Count(reserves.borrowernumber) > 1",,,,,,,,
R.002883,"/*
R.002883

----------

Name: GHW - Deleted item information
Created by: George H Williams

----------

Group: Catalog Records and Items
     -

Created on: 2017-01-10 16:12:46
Modified on: 2018-04-16 11:04:50
Date last run: 2022-09-12 16:05:31

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Lists information about deleted items</p>
<ul><li>Shows information on items that have data in the deleteditems table</li>
<li>Shows information for the single barcode number you specify</li>
<li>grouped by item barcode</li>
<li>If there is still an active bibliographic record for the title, a link will appear to that record</li>
</ul><br />
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2883&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  If(Coalesce(biblio.biblionumber, 0) = deleteditems.biblionumber, Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank""><ins>Click for bibliographic record</ins></a>'), If(Coalesce(deletedbiblio.biblionumber, 0) > 0, '<span style=""background-color: yellow; color: red;"">Biblio has been deleted</span>', '--') ) AS BIBLIO_RECORD_STATUS,
  deleteditems.barcode,
  deleteditems.homebranch,
  deleteditems.location,
  deleteditems.itype,
  deleteditems.ccode,
  deleteditems.itemcallnumber,
  If(Coalesce(deletedbiblio.author, '--') = '--', Coalesce(biblio.author, '--'), Coalesce(deletedbiblio.author, '--')) AS AUTHOR,
  If(Coalesce(deletedbiblio.title, '--') = '--', Coalesce(biblio.title, '--'), Coalesce(deletedbiblio.title, '--')) AS TITLE,
  deleteditems.replacementprice,
  deleteditems.timestamp AS DELETED_ON
FROM
  deleteditems LEFT JOIN
  biblio
    ON deleteditems.biblionumber = biblio.biblionumber LEFT JOIN
  deletedbiblio
    ON deleteditems.biblionumber = deletedbiblio.biblionumber
WHERE
  deleteditems.barcode LIKE Concat(""%"", <<Enter single barcode number>>, ""%"")
GROUP BY
  deleteditems.biblionumber
ORDER BY
  deleteditems.homebranch,
  deleteditems.location,
  deleteditems.itype,
  deleteditems.ccode,
  deleteditems.itemcallnumber,
  AUTHOR,
  TITLE",,,,,,,,
R.002885,"/*
R.002885

----------

Name: GHW Courier Accident
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2017-01-18 15:46:09
Modified on: 2017-01-18 15:57:27
Date last run: 2022-08-29 13:10:28

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  items.itemnumber,
  items.barcode,
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title,
  items.replacementprice,
  items.itemnotes,
  items.itemnotes_nonpublic,
  items.itemlost,
  items.itemlost_on,
  items.withdrawn,
  items.withdrawn_on,
  items.damaged
FROM
  items INNER JOIN
  biblio
    ON items.biblionumber = biblio.biblionumber
WHERE
  (items.barcode = ""0003029007988"") OR
  (items.barcode = ""0003029001669"") OR
  (items.barcode = ""0003010023156"") OR
  (items.barcode = ""0003010023803"") OR
  (items.barcode = ""0003010023164"") OR
  (items.barcode = ""0003010023145"") OR
  (items.barcode = ""0003042021081"") OR
  (items.barcode = ""0003029037053"") OR
  (items.barcode = ""1BERN000080299"") OR
  (items.barcode = ""0003044002704"") OR
  (items.barcode = ""SAB1000000650"") OR
  (items.barcode = ""0003029028293"") OR
  (items.barcode = ""0003029028295"") OR
  (items.barcode = ""0003029028294"") OR
  (items.barcode = ""0003029028296"") OR
  (items.barcode = ""0003033001085"") OR
  (items.barcode = ""00107000084270"") OR
  (items.barcode = ""0003029037642"") OR
  (items.barcode = ""0003014007043"") OR
  (items.barcode = ""0003012047032"") OR
  (items.barcode = ""3FN9000035583V"") OR
  (items.barcode = ""0003041000774"") OR
  (items.barcode = ""0003005010525"") OR
  (items.barcode = ""33080001238586"") OR
  (items.barcode = ""0003029005267"") OR
  (items.barcode = ""3HFPL36006621"") OR
  (items.barcode = ""0003004022749"") OR
  (items.barcode = ""1BERN000119618"") OR
  (items.barcode = ""1BERN00013748D"") OR
  (items.barcode = ""00107000185580"") OR
  (items.barcode = ""3HFPL36001064"") OR
  (items.barcode = ""3HFPL36004855"") OR
  (items.barcode = ""0003046001536"") OR
  (items.barcode = ""0003000037519"") OR
  (items.barcode = ""0003026023246"") OR
  (items.barcode = ""0003009015297"") OR
  (items.barcode = ""0003004019053"") OR
  (items.barcode = ""0003029007445"") OR
  (items.barcode = ""00107000080450"") OR
  (items.barcode = ""3HFPL36002484"") OR
  (items.barcode = ""1BERN000142412"") OR
  (items.barcode = ""3CY6000015020K"") OR
  (items.barcode = ""3FN9000034443P"") OR
  (items.barcode = ""0003034003739"") OR
  (items.barcode = ""0003044009764"") OR
  (items.barcode = ""0003045005375"") OR
  (items.barcode = ""0003042005596"") OR
  (items.barcode = ""0003042005591"") OR
  (items.barcode = ""0003042005594"") OR
  (items.barcode = ""0003042006408"") OR
  (items.barcode = ""0003044005087"") OR
  (items.barcode = ""0003042000080"") OR
  (items.barcode = ""0003034003404"") OR
  (items.barcode = ""0003042007332"") OR
  (items.barcode = ""0003034004575"") OR
  (items.barcode = ""0003029040699"") OR
  (items.barcode = ""0003034007063"") OR
  (items.barcode = ""0003029003886"") OR
  (items.barcode = ""0003042012495"") OR
  (items.barcode = ""0003034008922"") OR
  (items.barcode = ""0003016004908"") OR
  (items.barcode = ""0003045000815"") OR
  (items.barcode = ""0003042020027"") OR
  (items.barcode = ""3HFPL00022466F"") OR
  (items.barcode = ""3 FI900201637G"") OR
  (items.barcode = ""33080001327728"") OR
  (items.barcode = ""0003029015944"") OR
  (items.barcode = ""0003029018212"") OR
  (items.barcode = ""0003029012110"") OR
  (items.barcode = ""3HFPL00017942I"") OR
  (items.barcode = ""0003028012846"") OR
  (items.barcode = ""0003035006178"") OR
  (items.barcode = ""0003009047210"") OR
  (items.barcode = ""1BERN000129417"") OR
  (items.barcode = ""3 FI900217269O"") OR
  (items.barcode = ""0003029027520"") OR
  (items.barcode = ""0003035011786"") OR
  (items.barcode = ""3HFPL00027835K"") OR
  (items.barcode = ""0003009032627"") OR
  (items.barcode = ""0003035006883"") OR
  (items.barcode = ""0003018024553"") OR
  (items.barcode = ""ILEA000300116V"") OR
  (items.barcode = ""ILEA000300115U"") OR
  (items.barcode = ""ILEA000300113S"") OR
  (items.barcode = ""ILEA000300111Q"") OR
  (items.barcode = ""ILEA000300110P"") OR
  (items.barcode = ""0003035010983"") OR
  (items.barcode = ""0003035010376"") OR
  (items.barcode = ""1BERN000026064"") OR
  (items.barcode = ""1BERN00015826"") OR
  (items.barcode = ""0003045000129"") OR
  (items.barcode = ""WAC405802"") OR
  (items.barcode = ""ilea0003742070"") OR
  (items.barcode = ""0003029009687"") OR
  (items.barcode = ""1BERN00012279B"") OR
  (items.barcode = ""0003028010123"") OR
  (items.barcode = ""00105000735933"") OR
  (items.barcode = ""0003000032383"") OR
  (items.barcode = ""0003029042480"") OR
  (items.barcode = ""0003022016024"") OR
  (items.barcode = ""0003023012994"") OR
  (items.barcode = ""0003012056239"") OR
  (items.barcode = ""0003035004018"") OR
  (items.barcode = ""0003035001280"") OR
  (items.barcode = ""0003035007844"") OR
  (items.barcode = ""0003028033554"") OR
  (items.barcode = ""0003004019516"") OR
  (items.barcode = ""0003035000315"") OR
  (items.barcode = ""0003023018839"") OR
  (items.barcode = ""00106000069919"") OR
  (items.barcode = ""0003019013629"") OR
  (items.barcode = ""0003018024438"") OR
  (items.barcode = ""SAB1000000107"") OR
  (items.barcode = ""3HFPL000021097"") OR
  (items.barcode = ""0003035010738"") OR
  (items.barcode = ""00107000294382"") OR
  (items.barcode = ""3 FI900205553H"") OR
  (items.barcode = ""0003035007420"") OR
  (items.barcode = ""0003027017088"") OR
  (items.barcode = ""0003035007699"") OR
  (items.barcode = ""0003029040826"") OR
  (items.barcode = ""3HFPL000032000"") OR
  (items.barcode = ""0003012056898"") OR
  (items.barcode = ""3ZC3032004664"") OR
  (items.barcode = ""0003029040094"") OR
  (items.barcode = ""0003029040091"") OR
  (items.barcode = ""3 FI900201674H"") OR
  (items.barcode = ""00107000378151"") OR
  (items.barcode = ""0003027025370"") OR
  (items.barcode = ""3HFPL36001100"") OR
  (items.barcode = ""0003027024003"") OR
  (items.barcode = ""0003012044800"") OR
  (items.barcode = ""0003012050683"") OR
  (items.barcode = ""0003009023777"") OR
  (items.barcode = ""0003024013975"") OR
  (items.barcode = ""0003014005533"") OR
  (items.barcode = ""3ZC3032007933"") OR
  (items.barcode = ""0003005009535"") OR
  (items.barcode = ""0003010014398"") OR
  (items.barcode = ""0003016005894"") OR
  (items.barcode = ""0003043004572"") OR
  (items.barcode = ""0003009041987"") OR
  (items.barcode = ""0003029022567"") OR
  (items.barcode = ""3HFPL36000403"") OR
  (items.barcode = ""0003009007777"") OR
  (items.barcode = ""0003004023660"") OR
  (items.barcode = ""3HFPL36005698"") OR
  (items.barcode = ""0003026026947"") OR
  (items.barcode = ""0003029041631"") OR
  (items.barcode = ""0003004021173"") OR
  (items.barcode = ""0003031004738"") OR
  (items.barcode = ""3HFPL36003154"") OR
  (items.barcode = ""0003029036615"") OR
  (items.barcode = ""3 FI900209878V"") OR
  (items.barcode = ""3 FI900206401A"") OR
  (items.barcode = ""0003027019303"") OR
  (items.barcode = ""ILEA0003028280"") OR
  (items.barcode = ""0003029026959"") OR
  (items.barcode = ""0003029026956"") OR
  (items.barcode = ""0003041003213"") OR
  (items.barcode = ""3HFPL36001701"") OR
  (items.barcode = ""3HFPL36004843"") OR
  (items.barcode = ""0003042000836"") OR
  (items.barcode = ""0003042005600"") OR
  (items.barcode = ""0003000046049"") OR
  (items.barcode = ""3HFPL36006812"") OR
  (items.barcode = ""0003003011243"") OR
  (items.barcode = ""3HFPL000232169"") OR
  (items.barcode = ""0003026022884"") OR
  (items.barcode = ""0003026023200"") OR
  (items.barcode = ""0003026022978"") OR
  (items.barcode = ""0003026022722"") OR
  (items.barcode = ""0003015022912"") OR
  (items.barcode = ""0003041004243"") OR
  (items.barcode = ""0003000024669"") OR
  (items.barcode = ""0003000024513"") OR
  (items.barcode = ""0003000020558"") OR
  (items.barcode = ""0003000020983"") OR
  (items.barcode = ""0003041000096"") OR
  (items.barcode = ""0003029038742"") OR
  (items.barcode = ""3HFPL36005744"") OR
  (items.barcode = ""0003027015214"") OR
  (items.barcode = ""3HFPL36006775"") OR
  (items.barcode = ""3ZC3032004050"") OR
  (items.barcode = ""0003028031935"") OR
  (items.barcode = ""0003038007759"") OR
  (items.barcode = ""3ZC9000131147X"") OR
  (items.barcode = ""3ZC9000026400S"") OR
  (items.barcode = ""0003015024311"") OR
  (items.barcode = ""0003021007665"") OR
  (items.barcode = ""0003028031261"") OR
  (items.barcode = ""3HFPL000220144"") OR
  (items.barcode = ""0003009002863"") OR
  (items.barcode = ""0003004024238"") OR
  (items.barcode = ""0003019008000"") OR
  (items.barcode = ""0003004021996"") OR
  (items.barcode = ""0003043000490"") OR
  (items.barcode = ""0003045005506"") OR
  (items.barcode = ""0003029038203"") OR
  (items.barcode = ""0003004022848"") OR
  (items.barcode = ""3 FI9002114229"") OR
  (items.barcode = ""00107000256472"") OR
  (items.barcode = ""0003006027821"") OR
  (items.barcode = ""0003012040722"") OR
  (items.barcode = ""0003009052498"") OR
  (items.barcode = ""0003006040772"") OR
  (items.barcode = ""00107000246598"") OR
  (items.barcode = ""0003029038933"") OR
  (items.barcode = ""3HFPL00021349E"") OR
  (items.barcode = ""0003027024328"") OR
  (items.barcode = ""ILEA0003192675"") OR
  (items.barcode = ""0003024008237"") OR
  (items.barcode = ""1003007103619"") OR
  (items.barcode = ""0003013007454"") OR
  (items.barcode = ""0003013005175"") OR
  (items.barcode = ""0003024012493"") OR
  (items.barcode = ""0003004024995"") OR
  (items.barcode = ""0003004022383"") OR
  (items.barcode = ""0003034008879"") OR
  (items.barcode = ""0003024006193"") OR
  (items.barcode = ""0003024006136"") OR
  (items.barcode = ""0003034000613"") OR
  (items.barcode = ""0003034001037"") OR
  (items.barcode = ""0003013019953"") OR
  (items.barcode = ""0003003001852"") OR
  (items.barcode = ""0003024000003"") OR
  (items.barcode = ""0003034008694"") OR
  (items.barcode = ""0003018011490"") OR
  (items.barcode = ""0003013022325"") OR
  (items.barcode = ""0003015016005"") OR
  (items.barcode = ""0003015001202"") OR
  (items.barcode = ""0003024002018"") OR
  (items.barcode = ""ilea000365299b"") OR
  (items.barcode = ""00105000106309"") OR
  (items.barcode = ""0003034002992"") OR
  (items.barcode = ""0003005001486"") OR
  (items.barcode = ""00105000175940"") OR
  (items.barcode = ""0003017003989"") OR
  (items.barcode = ""0003034005525"") OR
  (items.barcode = ""0003034008556"") OR
  (items.barcode = ""0003024007758"") OR
  (items.barcode = ""0003004009051"") OR
  (items.barcode = ""0003000046306"") OR
  (items.barcode = ""0003024001358"") OR
  (items.barcode = ""0003024001362"") OR
  (items.barcode = ""3CX4000005702N"") OR
  (items.barcode = ""1BERN000020721"") OR
  (items.barcode = ""1003004102281"") OR
  (items.barcode = ""0003034009055"") OR
  (items.barcode = ""0003033009849"") OR
  (items.barcode = ""0003033011325"") OR
  (items.barcode = ""0003033010153"") OR
  (items.barcode = ""0003004003388"") OR
  (items.barcode = ""0003012049732"") OR
  (items.barcode = ""0003000044241"") OR
  (items.barcode = ""0003000032550"") OR
  (items.barcode = ""0003012052579"") OR
  (items.barcode = ""0003029044032"") OR
  (items.barcode = ""3HFPL36005894"") OR
  (items.barcode = ""0003040017651"") OR
  (items.barcode = ""33080000892151"") OR
  (items.barcode = ""0003029033892"") OR
  (items.barcode = ""ILEA0002837726"") OR
  (items.barcode = ""ILEA000313861%"") OR
  (items.barcode = ""ILEA0002550874"") OR
  (items.barcode = ""3HFPL36001868"") OR
  (items.barcode = ""0003010012151"") OR
  (items.barcode = ""0003010023090"") OR
  (items.barcode = ""3ZC3032012018"") OR
  (items.barcode = ""0003010022979"") OR
  (items.barcode = ""33080000916976"") OR
  (items.barcode = ""3HFPL36002523"") OR
  (items.barcode = ""0003010022881"") OR
  (items.barcode = ""0003031004068"") OR
  (items.barcode = ""0003010023054"") OR
  (items.barcode = ""0003010023467"") OR
  (items.barcode = ""0003035011196"") OR
  (items.barcode = ""0003035010130"") OR
  (items.barcode = ""ilea000344599b"") OR
  (items.barcode = ""ilea0003426631"") OR
  (items.barcode = ""ilea0003346092"") OR
  (items.barcode = ""33080001303950"") OR
  (items.barcode = ""0003010024400"") OR
  (items.barcode = ""ilea000362081/"") OR
  (items.barcode = ""0003016006007"") OR
  (items.barcode = ""0003004022198"") OR
  (items.barcode = ""3ZC3032010945"") OR
  (items.barcode = ""ilea0003659325"") OR
  (items.barcode = ""0003010024902"") OR
  (items.barcode = ""ilea0003534811"") OR
  (items.barcode = ""0003000028933"") OR
  (items.barcode = ""0003040018149"") OR
  (items.barcode = ""33080001199309"") OR
  (items.barcode = ""3ZC3032005981"") OR
  (items.barcode = ""0003033010708"")
ORDER BY
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title",,,,,,,,
R.002886,"/*
R.002886

----------

Name: GHW - Adult patrons with linked guarantees and E-mail Newsletter permissions
Created by: George H Williams

----------

Group: Borrowers
     Guarantor/guranantee reports

Created on: 2017-01-24 10:38:37
Modified on: 2018-04-16 11:06:10
Date last run: 2019-11-13 13:34:33

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Shows all adults with linked child accounts and whether or not the adult's permission to allow you to subscribe that adult to a library newsletter has been recorded in their account.</p>
<ul><li>Shows current data</li>
<li>Where the adult has a specified home library</li>
<li>grouped by the adult's barcode number and the child's barcode number</li>
<li>sorted by the adult's name</li>
</ul><br />
<p>Notes:</p>
<p>All ""Youth"" accounts are automatically updated to the corresponding ""Adult"" account type when the child turns 18.</p>
<p>This report will only show accounts that are linked.  If the adult's name is listed as the Guarantor in a child's account, but the link is not established, this report will show nothing.</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2886&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  guarantors.cardnumber AS ADULT_BARCODE,
  Concat(guarantors.surname, "", "", guarantors.firstname) AS ADULT_NAME,
  guarantors.email AS ADULT_EMAIL,
  Concat(newsletter.code, "", "", newsletter.lib) AS ADULT_NEWSLETTER_PERMISSION,
  guarantors.branchcode AS ADULT_BRANCH,
  guarantees.cardnumber AS CHILD_BARCODE,
  Concat(guarantees.surname, "", "", guarantees.firstname) AS CHILD_NAME,
  guarantees.branchcode AS CHILD_BRANCH,
  Date_Format(From_Days(DateDiff(Now(), guarantees.dateofbirth)), ""%Y"") + 0 AS CHILD_AGE
FROM
  borrowers guarantors JOIN
  borrowers guarantees
    ON guarantees.guarantorid = guarantors.borrowernumber LEFT JOIN
  (SELECT
    borrower_attributes.borrowernumber,
    borrower_attributes.code,
    authorised_values.lib,
    authorised_values.authorised_value
  FROM
    borrower_attributes INNER JOIN
    borrower_attribute_types
      ON borrower_attributes.code = borrower_attribute_types.code INNER JOIN
    authorised_values
      ON borrower_attribute_types.authorised_value_category =
      authorised_values.category AND borrower_attributes.attribute =
      authorised_values.authorised_value
  WHERE
    borrower_attributes.code = 'NEWSLETTER') newsletter
    ON guarantors.borrowernumber = newsletter.borrowernumber
WHERE
  guarantors.branchcode LIKE <<Choose the adult's home branch|ZBRAN>> AND
  Date_Format(From_Days(DateDiff(Now(), guarantees.dateofbirth)), ""%Y"") + 0 <= <<Child's age equal to or less than|Z_AGE_LEST>> AND
  Coalesce(newsletter.authorised_value, 'NotAsked') LIKE <<Choose newsletter attribute|YEMAILNEWS>>
GROUP BY
  guarantors.cardnumber, guarantors.email, guarantees.cardnumber,
  Coalesce(newsletter.authorised_value, 'NotAsked')
ORDER BY
  ADULT_NAME",,,,,,,,
R.002888,"/*
R.002888

----------

Name: GHW - Patrons with specified category
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2017-01-24 16:21:30
Modified on: 2017-01-24 16:21:30
Date last run: 2020-12-17 22:59:59

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.cardnumber,
  borrowers.surname,
  borrowers.dateexpiry
FROM
  borrowers
WHERE
  borrowers.categorycode LIKE <<Borrower's category|categorycode>> AND
  borrowers.branchcode LIKE <<Borrower's home library|ZBRAN>>
GROUP BY
  borrowers.branchcode, borrowers.categorycode, borrowers.cardnumber,
  borrowers.surname, borrowers.dateexpiry
ORDER BY
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.surname",,,,,,,,
R.002889,"/*
R.002889

----------

Name: GHW - Holds queue by Accelerated Reader
Created by: George H Williams

----------

Group: Holds-Reserves
     -

Created on: 2017-01-31 09:54:21
Modified on: 2018-08-20 14:45:28
Date last run: 2022-10-03 09:16:10

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Shows items with requests in the holds queue at the specified branch</p>
<ul><li>shows items currently in the holds queue</li>
<li>shows items at the library you specify</li>
<li>grouped by item barcode number</li>
<li>sorted by Accelerated Reader information from the 526 a,b,c, and d subfields (if there is any data in those fields)</li>
<li>contains links to the bibliographic records</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report was created to help out the Axtell School where they have the library arranged by Accelerated Reader Level.  This report won't be perfect because not all items have AR data in the 526 fields, but it might help speed a few things up for them.</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2889&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat_Ws("", "", ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""526""]/subfield[@code=""a""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""526""]/subfield[@code=""b""]'), ExtractValue(biblio_metadata.metadata,'//datafield[@tag=""526""]/subfield[@code=""c""]')) AS AR,
  Concat_Ws('<br />', hold_fill_targets.source_branchcode, items.homebranch,(Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',biblio.biblionumber, '\"" target=""_blank"">Go to biblio</a>'))) AS CURRENT_OWNING,
  Concat_Ws('<br />', items.location, authorised_values.lib, items.itemcallnumber) AS CALL_NUMBER,
  Concat_Ws('<br />', biblio.author, (Concat_Ws('<br />', biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')))) AS AUTHOR_TITLE,
  Concat_Ws('<br />', (Concat('<img src=""/cgi-bin/koha/svc/barcode?barcode=', '*', items.barcode, '*', '&type=Code39""></img>')), items.barcode) AS BARCODE,
  items.itemnotes
FROM
  biblio LEFT JOIN
  ((hold_fill_targets LEFT JOIN
  items
    ON hold_fill_targets.itemnumber = items.itemnumber) LEFT JOIN
  biblio_metadata
    ON items.biblionumber = biblio_metadata.biblionumber)
    ON biblio.biblionumber = biblio_metadata.biblionumber LEFT JOIN
  authorised_values
    ON items.ccode = authorised_values.authorised_value
WHERE
  hold_fill_targets.source_branchcode LIKE <<Choose branch|LBRANCH>> AND
  authorised_values.category = ""ccode""
GROUP BY
  items.barcode
ORDER BY
  AR,
  items.homebranch,
  items.location,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title
",,,,,,,,
R.002895,"/*
R.002895

----------

Name: GHW - Lost statuses by check-out branch with last patron data
Created by: George H Williams

----------

Group: Circulation
     Overdues

Created on: 2017-02-01 15:28:38
Modified on: 2021-10-13 15:13:23
Date last run: 2022-10-03 10:02:10

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Lists items with any ""Lost"" status that were checked out at your library</p>
<ul><li>Shows items that currently have the ""Lost"" status you specify</li>
<li>shows items that were checked out at your library - regardless of which library owns the item</li>
<li>grouped by itemnumber</li>
<li>sorted by the default Next sort order (home library, location, item type, collection code, call number, title, author, barcode number) + patron borrowernumber<br /><br />
OR<br /><br />
date marked lost, borrowers cardnumber, and then the normal sort order</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Monthly cleanup</p>
<p></p>
<p>Replaces report 888</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2895&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  items.holdingbranch AS CKO_BRANCH,
  CONCAT('<a href=\""/cgi-bin/koha/catalogue/moredetail.pl?itemnumber=', items.itemnumber, '&biblionumber=', items.biblionumber, '/"" target=""_blank"">Link to item</a>') AS LINK_I,
  items.barcode AS ITEM_BARCODE,
  items.homebranch AS ITEM_HOME,
  items.location AS LOCATION,
  items.itype AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber AS CALL_NUMBER,
  biblio.author,
  Concat_Ws(' ', biblio.title,
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')) AS TITLE,
  losts.lib AS LOST_STATUS,
  Date_Format(old_issues.returndate, '%m/%d/%Y') AS LOST_ON,
  borrowers.branchcode AS BORROWER_HOME_LIBRARY,
  borrowers.cardnumber AS LAST_PATRON_CARD,
  borrowers.surname AS LAST_PATRON_NAME,
  borrowers.email,
  items.replacementprice,
  CONCAT('<a href=\""/cgi-bin/koha/members/pay.pl?borrowernumber=', borrowers.borrowernumber, '/"" target=""_blank"">Link to patron</a>') AS LINK_P,
  @SortOrder := <<Sort by|XS_DATE>> AS SORTING
FROM
  items
  JOIN biblio ON items.biblionumber = biblio.biblionumber
  LEFT JOIN (SELECT
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = ""CCODE"") ccodes ON items.ccode = ccodes.authorised_value
  LEFT JOIN (SELECT
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'LOST') losts ON items.itemlost = losts.authorised_value
  JOIN old_issues ON old_issues.itemnumber = items.itemnumber
  JOIN borrowers ON old_issues.borrowernumber = borrowers.borrowernumber
  JOIN biblio_metadata ON biblio.biblionumber = biblio_metadata.biblionumber
WHERE
  Date_Format(old_issues.returndate, '%m/%d/%Y') = Date_Format(items.itemlost_on, '%m/%d/%Y') AND
  items.holdingbranch LIKE <<Check-out branch|ZBRAN>>  
GROUP BY
  items.itemnumber,
  Date_Format(old_issues.returndate, '%m/%d/%Y'),
  borrowers.cardnumber,
  borrowers.surname
HAVING
  LOST_STATUS LIKE <<Choose lost status|ZLOST_ONLY>>
ORDER BY
  (CASE WHEN @SortOrder= 3 THEN old_issues.returndate END) ASC,
  (CASE WHEN @SortOrder= 2 THEN old_issues.returndate END) DESC,
  (CASE WHEN @SortOrder= 1 THEN CKO_BRANCH END) ASC,
  (CASE WHEN @SortOrder> 1 THEN borrowers.cardnumber END) ASC,
  LOCATION, ITYPE, CCODE, CALL_NUMBER, TITLE, biblio.author, items.barcode, old_issues.borrowernumber, LAST_PATRON_CARD, LAST_PATRON_NAME ASC",,,,,,,,
R.002896,"/*
R.002896

----------

Name: GHW - Items by home library and lost status
Created by: George H Williams

----------

Group: -
     -

Created on: 2017-02-01 16:27:01
Modified on: 2020-08-18 16:40:29
Date last run: 2022-09-15 14:46:41

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Generates a list of lost items</p>
<ul><li>Shows items that currently have the lost status you specify</li>
<li>shows items with a home library that you specify</li>
<li>that were declared lost during the date range you specify</li>
<li>grouped by item barcode number</li>
<li>sorted by NExpress standard classification scheme</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Replaces report 888</p>
<p></p>
<p>If an item has a blank LOST_DATE and a blank DAYS_LOST it is because the item was marked lost before we upgraded to Koha 3.16 (October 2014)</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2896&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  items.itemnumber AS ITEM_NUMBER,
  items.barcode AS BARCODE,
  items.homebranch AS ITEM_HOME,
  items.holdingbranch,
  items.location AS LOCATION,
  items.itype AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber AS CALL_NUMBER,
  biblio.author,
  Concat_Ws(
    ' ',
    biblio.title,
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')
  ) AS FULL_TITLE,
  losts.lib AS LOST_STATUS,
  If(items.itemlost_on IS NULL, (CAST('2000-02-29' AS DATETIME)), items.itemlost_on) AS LOST_DATE,
  DateDiff(CurDate(), items.itemlost_on) AS DAYS_LOST,
  items.replacementprice
FROM
  items
  JOIN biblio ON items.biblionumber = biblio.biblionumber
  LEFT JOIN (SELECT
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = ""CCODE"") ccodes ON items.ccode = ccodes.authorised_value
  LEFT JOIN (SELECT
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'LOST') losts ON items.itemlost = losts.authorised_value
  JOIN biblio_metadata ON biblio.biblionumber = biblio_metadata.biblionumber
WHERE
  items.homebranch LIKE <<Item home branch|ZBRAN>> AND
  items.itemlost LIKE <<Item lost status|LLOST>> AND
  If(items.itemlost_on IS NULL, (CAST('2000-01-01' AS DATETIME)), items.itemlost_on) BETWEEN <<Lost between start date|date>> AND <<and end date|date>>
GROUP BY
  items.barcode
HAVING
  LOST_DATE 
ORDER BY
  ITEM_HOME,
  LOCATION,
  ITYPE,
  CCODE,
  CALL_NUMBER,
  FULL_TITLE,
  biblio.author",,,,,,,,
R.002897,"/*
R.002897

----------

Name: GHW - Overdue items by check-out branch
Created by: George H Williams

----------

Group: Circulation
     Overdues

Created on: 2017-02-01 16:54:32
Modified on: 2021-08-12 11:41:34
Date last run: 2021-12-30 12:41:20

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Generates a list of items checked out at a branch that were due before a certain date</p>
<ul><li>Shows currently overdue items due before the date you specify</li>
<li>shows items checked out at the library you specify regardless of who owns the item</li>
<li>grouped by item barcode number</li>
<li>sorted by NExpress standard classification scheme</li>
</ul><br />
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2897&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  items.holdingbranch AS CKO_BRANCH,
  items.itemnumber,
  items.barcode AS BARCODE,
  items.homebranch AS ITEM_HOME,
  items.location AS LOCATION,
  items.itype AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber AS CALL_NUMBER,
  biblio.author,
  Concat_Ws(' ', biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')) AS FULL_TITLE,
  borrowers.cardnumber AS PATRON_BARCODE,
  borrowers.surname AS PATRON_LASTNAME,
  borrowers.email,
  borrowers.categorycode AS PATRON_CATEGORY,
  items.onloan AS ITEM_DUE_DATE,
  DateDiff(CurDate(), items.onloan) AS DAYS_OVERDUE
FROM
  items JOIN
  biblio
    ON items.biblionumber = biblio.biblionumber LEFT JOIN
  (SELECT
    authorised_values.authorised_value,
    authorised_values.lib
  FROM
    authorised_values
  WHERE
    authorised_values.category = ""CCODE"") ccodes
    ON items.ccode = ccodes.authorised_value JOIN
  biblio_metadata
    ON biblio.biblionumber = biblio_metadata.biblionumber JOIN
  issues
    ON issues.itemnumber = items.itemnumber JOIN
  borrowers
    ON issues.borrowernumber = borrowers.borrowernumber
WHERE
  items.holdingbranch LIKE <<Check out branch|ZBRAN>> AND
  items.onloan <= <<Items due on or before|date>>
GROUP BY
  items.barcode
ORDER BY
  ITEM_HOME,
  LOCATION,
  ITYPE,
  CCODE,
  CALL_NUMBER,
  FULL_TITLE,
  biblio.author",,,,,,,,
R.002898,"/*
R.002898

----------

Name: GHW - Monthly 103 - Borrowers
Created by: George H Williams

----------

Group: Statistics
     End of month statistics

Created on: 2017-02-01 19:48:17
Modified on: 2019-07-01 16:06:36
Date last run: 2022-03-01 10:14:02

----------

Public: 0
Expiry: 300

----------

<p style=""display: none;"">MNTHLY</p>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=2898"">Click here to download as a csv file</a></p>

----------
*/

","SELECT
  branches.branchcode,
  Coalesce(BORROWERS1.COUNT, 0) AS TOTAL_BORROWERS,
  Coalesce(BORROWERSA.COUNT, 0) AS B_ADDED_LM,
  Coalesce(BORROWERSR.COUNT, 0) AS B_RENEWED_LM,
  Coalesce(BORROWESD.COUNT, 0) AS B_DELETED_LM
FROM
  branches
  LEFT JOIN (SELECT
        borrowers.branchcode,
        Count(*) AS COUNT
      FROM
        borrowers
      WHERE
        borrowers.dateenrolled < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1)
      GROUP BY
        borrowers.branchcode) BORROWERS1 ON branches.branchcode = BORROWERS1.branchcode
  LEFT JOIN (SELECT
        borrowers.branchcode,
        Count(*) AS COUNT
      FROM
        borrowers
      WHERE
        Month(borrowers.dateenrolled) = Month(Now() - INTERVAL 1 MONTH) AND
        Year(borrowers.dateenrolled) = Year(Now() - INTERVAL 1 MONTH)
      GROUP BY
        borrowers.branchcode) BORROWERSA ON branches.branchcode = BORROWERSA.branchcode
  LEFT JOIN (SELECT
        deletedborrowers.branchcode,
        Count(*) AS COUNT
      FROM
        action_logs
        JOIN deletedborrowers ON deletedborrowers.borrowernumber = action_logs.object
      WHERE
        action_logs.module = 'MEMBERS' AND
        Month(action_logs.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
        Year(action_logs.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND
        action_logs.action LIKE 'DELET%'
      GROUP BY
        deletedborrowers.branchcode) BORROWESD ON branches.branchcode = BORROWESD.branchcode
  LEFT JOIN (SELECT
        borrowers.branchcode,
        Count(*) AS COUNT
      FROM
        borrowers
      WHERE
        Month(borrowers.date_renewed) = Month(Now() - INTERVAL 1 MONTH) AND
        Year(borrowers.date_renewed) = Year(Now() - INTERVAL 1 MONTH)
      GROUP BY
        borrowers.branchcode) BORROWERSR ON branches.branchcode = BORROWERSR.branchcode
GROUP BY
  branches.branchcode
ORDER BY
  branches.branchcode",,,,,,,,
R.002901,"/*
R.002901

----------

Name: GHW - Materials added count by collection code and location - previous calendar month
Created by: George H Williams

----------

Group: Daily, Monthly, Yearly Stats
     Monthly

Created on: 2017-02-07 15:03:15
Modified on: 2021-04-06 16:32:23
Date last run: 2022-10-03 12:23:49

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Count of items added by item home library and item collection code</p>
<ul><li>counts items added in the previous calendar month</li>
<li>at the library you specify</li>
<li>grouped and sorted by item home branch, location, and collection code</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Updated on 2021.04.06</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2901&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  branch_ccode.branchname AS LIBRARY,
  branch_ccode.lib AS COLLECTION_CODE,
  Coalesce(itemsall.Count_itemnumber, 0) AS ADDED_LM_ALL,
  Coalesce(itemsadult.Count_itemnumber, 0) AS ADDED_LM_ADULT,
  Coalesce(itemsya.Count_itemnumber, 0) AS ADDED_LM_YA,
  Coalesce(itemchild.Count_itemnumber, 0) AS ADDED_LM_CHILD,
  Coalesce(itemsother.Count_itemnumber, 0) AS ADDED_LM_OTHER
FROM
  (SELECT
      branches.branchname,
      branches.branchcode,
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      branches,
      authorised_values
    WHERE
      branches.branchcode LIKE <<Choose your library|ZBRAN>> AND
      authorised_values.category = 'CCODE') branch_ccode LEFT JOIN
  (SELECT
      Count(items.itemnumber) AS Count_itemnumber,
      Coalesce(items.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(items.ccode, ""XXX"") AS ccode
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH)
    GROUP BY
      Coalesce(items.ccode, ""XXX""),
      items.homebranch) itemsall ON
      itemsall.homebranch = branch_ccode.branchcode AND
      itemsall.ccode = branch_ccode.authorised_value LEFT JOIN
  (SELECT
      Count(items.itemnumber) AS Count_itemnumber,
      Coalesce(items.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(items.ccode, ""XXX"") AS ccode
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      (Coalesce(items.permanent_location, ""CART"") = 'ADULT' OR
        Coalesce(items.permanent_location, ""CART"") = 'LVPLADULT' OR
        Coalesce(items.permanent_location, ""CART"") = 'PAOLAADULT' OR
        Coalesce(items.permanent_location, ""CART"") = 'BALDADULT')
    GROUP BY
      Coalesce(items.homebranch, ""NEKLS""),
      Coalesce(items.ccode, ""XXX"")) itemsadult ON itemsadult.homebranch =
      branch_ccode.branchcode AND
      itemsadult.ccode = branch_ccode.authorised_value LEFT JOIN
  (SELECT
      Count(items.itemnumber) AS Count_itemnumber,
      Coalesce(items.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(items.ccode, ""XXX"") AS ccode
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      (Coalesce(items.permanent_location, ""CART"") LIKE ""%YA%"" OR
        Coalesce(items.permanent_location, ""CART"") LIKE ""YOUNGADULT"")
    GROUP BY
      Coalesce(items.homebranch, ""NEKLS""),
      Coalesce(items.ccode, ""XXX"")) itemsya ON itemsya.homebranch =
      branch_ccode.branchcode AND
      itemsya.ccode = branch_ccode.authorised_value LEFT JOIN
  (SELECT
      Count(items.itemnumber) AS Count_itemnumber,
      Coalesce(items.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(items.ccode, ""XXX"") AS ccode
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      Coalesce(items.permanent_location, ""CART"") LIKE ""%CHILD%""
    GROUP BY
      Coalesce(items.homebranch, ""NEKLS""),
      Coalesce(items.ccode, ""XXX"")) itemchild ON itemchild.homebranch =
      branch_ccode.branchcode AND
      itemchild.ccode = branch_ccode.authorised_value LEFT JOIN
  (SELECT
      Count(items.itemnumber) AS Count_itemnumber,
      Coalesce(items.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(items.ccode, ""XXX"") AS ccode
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      Coalesce(items.permanent_location, ""CART"") NOT LIKE ""%ADULT%"" AND
      Coalesce(items.permanent_location, ""CART"") NOT LIKE ""%CHILD%"" AND
      Coalesce(items.permanent_location, ""CART"") NOT LIKE ""%YA%""
    GROUP BY
      Coalesce(items.homebranch, ""NEKLS""),
      Coalesce(items.ccode, ""XXX"")) itemsother ON itemsother.homebranch =
      branch_ccode.branchcode AND
      itemsother.ccode = branch_ccode.authorised_value
GROUP BY
  branch_ccode.branchname,
  branch_ccode.lib
ORDER BY
  LIBRARY,
  COLLECTION_CODE",,,,,,,,
R.002902,"/*
R.002902

----------

Name: GHW - Materials added count by item type and permanent location - previous calendar month
Created by: George H Williams

----------

Group: Daily, Monthly, Yearly Stats
     Monthly

Created on: 2017-02-07 15:12:53
Modified on: 2022-02-10 10:40:02
Date last run: 2022-06-07 15:20:28

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Count of items at your library by item type</p>
<ul><li>counts items by item type</li>
<li>at the library you specify</li>
<li>grouped and sorted by home branch, location, and item type</li>
<li>includes totals added and deleted in the previous calendar month</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p>Updated on February 20, 2022</p>
</div>

----------
*/

","SELECT
  branchtypes.branchname,
  branchtypes.description AS ""ITEM TYPE"",
  Sum(itemss.Count_itemnumber) AS ""TOTAL ITEMS"",
  Sum(adultitems.Count_itemnumber) AS ""ADULT ITEMS"",
  Sum(yaitems.Count_itemnumber) AS ""YOUNG ADULT ITEMS"",
  Sum(juvenileitems.Count_itemnumber) AS ""JUVENILE ITEMS"",
  Sum(items_added.Count_itemnumber) AS ""TOTAL ADDED LM"",
  Sum(adult_added.Count_itemnumber) AS ""ADULT ADDED LM"",
  Sum(ya_added.Count_itemnumber) AS ""YOUNG ADULT ADDED LM"",
  Sum(juvenile_added.Count_itemnumber) AS ""JUVENILE ADDED LM"",
  Sum(items_deleted.Count_itemnumber) AS ""TOTAL DELETED LM"",
  Sum(adult_deleted.Count_itemnumber) AS ""ADULT DELETED LM"",
  Sum(ya_deleted.Count_itemnumber) AS ""YOUNG ADULT DELETED LM"",
  Sum(juvenile_deleted.Count_itemnumber) AS ""JUVENILE DELETED LM""
FROM
  (
    SELECT
      branches.branchcode,
      branches.branchname,
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes,
      branches
    WHERE
      branches.branchcode LIKE <<Choose your library|ZBRAN>>
  ) branchtypes LEFT JOIN
  (
    SELECT
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    GROUP BY
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype)
  ) itemss ON itemss.homebranch = branchtypes.branchcode AND
      itemss.itype = branchtypes.itemtype LEFT JOIN
  (
    SELECT
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      (items.permanent_location LIKE '%ADULT%' OR
        items.permanent_location = 'CART' OR
        items.permanent_location = 'CATALOGING' OR
        items.permanent_location = 'PROC' OR
        items.permanent_location IS NULL)
    GROUP BY
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype)
  ) adultitems ON adultitems.homebranch = branchtypes.branchcode AND
      adultitems.itype = branchtypes.itemtype LEFT JOIN
  (
    SELECT
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      items.permanent_location LIKE ""%CHILD%""
    GROUP BY
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype)
  ) juvenileitems ON juvenileitems.homebranch = branchtypes.branchcode AND
      juvenileitems.itype = branchtypes.itemtype LEFT JOIN
  (
    SELECT
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      items.permanent_location LIKE ""%YA%""
    GROUP BY
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype)
  ) yaitems ON yaitems.homebranch = branchtypes.branchcode AND
      yaitems.itype = branchtypes.itemtype LEFT JOIN
  (
    SELECT
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH)
    GROUP BY
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype)
  ) items_added ON items_added.homebranch = branchtypes.branchcode AND
      items_added.itype = branchtypes.itemtype LEFT JOIN
  (
    SELECT
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      (items.permanent_location LIKE '%ADULT%' OR
        items.permanent_location = 'CART' OR
        items.permanent_location = 'CATALOGING' OR
        items.permanent_location = 'PROC' OR
        items.permanent_location IS NULL)
    GROUP BY
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype)
  ) adult_added ON adult_added.homebranch = branchtypes.branchcode AND
      adult_added.itype = branchtypes.itemtype LEFT JOIN
  (
    SELECT
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      items.permanent_location LIKE ""%CHILD%""
    GROUP BY
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype)
  ) juvenile_added ON juvenile_added.homebranch = branchtypes.branchcode AND
      juvenile_added.itype = branchtypes.itemtype LEFT JOIN
  (
    SELECT
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      items.permanent_location LIKE ""%YA%""
    GROUP BY
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype)
  ) ya_added ON ya_added.homebranch = branchtypes.branchcode AND
      ya_added.itype = branchtypes.itemtype LEFT JOIN
  (
    SELECT
      deleteditems.homebranch,
      If(deleteditems.itype IS NULL, ""XXX"", If(deleteditems.itype = """", ""XXX"",
      deleteditems.itype)) AS ccode,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 MONTH)
    GROUP BY
      deleteditems.homebranch,
      If(deleteditems.itype IS NULL, ""XXX"", If(deleteditems.itype = """", ""XXX"",
      deleteditems.itype))
    ) items_deleted ON items_deleted.homebranch = branchtypes.branchcode AND
      items_deleted.ccode = branchtypes.itemtype LEFT JOIN
  (
    SELECT
      deleteditems.homebranch,
      If(deleteditems.itype IS NULL, ""XXX"", If(deleteditems.itype = """", ""XXX"",
      deleteditems.itype)) AS ccode,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      (deleteditems.permanent_location LIKE '%ADULT%' OR
        deleteditems.permanent_location = 'CART' OR
        deleteditems.permanent_location = 'CATALOGING' OR
        deleteditems.permanent_location = 'PROC' OR
        deleteditems.permanent_location IS NULL)
    GROUP BY
      deleteditems.homebranch,
      If(deleteditems.itype IS NULL, ""XXX"", If(deleteditems.itype = """", ""XXX"", deleteditems.itype))
  ) adult_deleted ON adult_deleted.homebranch = branchtypes.branchcode AND
      adult_deleted.ccode = branchtypes.itemtype LEFT JOIN
  (
    SELECT
      deleteditems.homebranch,
      If(deleteditems.itype IS NULL, ""XXX"", If(deleteditems.itype = """", ""XXX"",
      deleteditems.itype)) AS ccode,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      deleteditems.permanent_location LIKE ""%CHILD%""
    GROUP BY
      deleteditems.homebranch,
      If(deleteditems.itype IS NULL, ""XXX"", If(deleteditems.itype = """", ""XXX"", deleteditems.itype))
  ) juvenile_deleted ON juvenile_deleted.homebranch = branchtypes.branchcode AND
      juvenile_deleted.ccode = branchtypes.itemtype LEFT JOIN
  (
    SELECT
      deleteditems.homebranch,
      If(deleteditems.itype IS NULL, ""XXX"", If(deleteditems.itype = """", ""XXX"",
      deleteditems.itype)) AS ccode,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      deleteditems.permanent_location LIKE ""%YA%""
    GROUP BY
      deleteditems.homebranch,
      If(deleteditems.itype IS NULL, ""XXX"", If(deleteditems.itype = """", ""XXX"", deleteditems.itype))
  ) ya_deleted ON ya_deleted.homebranch = branchtypes.branchcode AND
      ya_deleted.ccode = branchtypes.itemtype
GROUP BY
  branchtypes.branchname,
  branchtypes.description
ORDER BY
  branchtypes.branchname,
  ""ITEM TYPE""",,,,,,,,
R.002908,"/*
R.002908

----------

Name: GHW - messages
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2017-02-20 11:47:46
Modified on: 2017-02-20 11:53:59
Date last run: 2020-12-08 11:20:15

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  message_queue.content
FROM
  message_queue
WHERE
  (message_queue.letter_code LIKE ""PREDUEDGST"") AND
  (message_queue.time_queued BETWEEN <<between the beginning of the day on ""START DATE""|date>>  AND (<<and the end of the day on ""END DATE""|date>>+ INTERVAL 1 DAY)) 
GROUP BY
  message_queue.time_queued, message_queue.content",,,,,,,,
R.002909,"/*
R.002909

----------

Name: GHW - Duplicate borrowers at a library
Created by: George H Williams

----------

Group: -
     -

Created on: 2017-02-20 16:37:40
Modified on: 2019-07-23 10:03:51
Date last run: 2022-06-21 17:48:42

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Report of possible duplicate borrowers at a library</p>
<ul><li>Shows patrons currently in the database</li>
<li>with at least one library account at the library you specify</li>
<li>grouped and sorted by last name/first name</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Updated on 2019.07.22 to filter out middle names - now matches on last name and first name when those two names are spelled exactly.  Ignores everything after the first space between name/initial strings in the borrowers.firstname field.</p>
<p></p>
<p>Report created by George Williams.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2909&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>


----------
*/

","SELECT
  surname,
  firstname,
  GROUP_CONCAT(CONCAT(surname, '-', firstname) ORDER BY borrowernumber SEPARATOR '<br />'),
  GROUP_CONCAT(cardnumber ORDER BY borrowernumber SEPARATOR '<br />') as CARD_NUMBER,
  GROUP_CONCAT(dateofbirth ORDER BY borrowernumber SEPARATOR '<br />') as BIRTH_DATE,
  GROUP_CONCAT((Concat('<a href=\""/cgi-bin/koha/members/moremember.pl?borrowernumber=', borrowernumber, '\"" target=""_blank"">', borrowernumber, '</a>')) ORDER BY borrowernumber SEPARATOR '<br />') as BORROWER_NUMBER,
  GROUP_CONCAT(branchcode ORDER BY borrowernumber SEPARATOR '<br />') as HOME_BRANCH,
  GROUP_CONCAT(Concat(borrowers.borrowernumber, ' // ', borrowers.debarredcomment) ORDER BY borrowernumber SEPARATOR '<br />') AS COMMENTS
FROM borrowers
GROUP BY
  CONCAT(TRIM(surname),'-',TRIM(SUBSTRING_INDEX(firstname, ' ', 1)),'/')
HAVING
  COUNT(CONCAT(TRIM(surname),'-',TRIM(SUBSTRING_INDEX(firstname, ' ', 1)),'/'))>1 AND
  HOME_BRANCH LIKE CONCAT( '%', <<Select one branch|branches>>, '%')",,,,,,,,
R.002910,"/*
R.002910

----------

Name: GHW - Bounced e-mail helper
Created by: George H Williams

----------

Group: Borrowers
     -

Created on: 2017-02-20 18:56:41
Modified on: 2018-04-16 11:08:08
Date last run: 2021-09-07 22:17:38

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Generates a list of patrons based on their e-mail address and produces a ""Bounced Email"" message that can be quickly cut and pasted into a message on the patron's account.</p>
<ul><li>Shows all borrowers that are using the specified e-mail address</li>
<li>Shows borrowers at all NExpress branches with that e-mail address</li>
<li>grouped by barcode number</li>
<li>includes links to the patron record</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>If more than one patron is using the e-mail address you enter on their account, you will receive one result in this report for each patron with that e-mail address.</p>
<p></p>
<p>For bounced text messages, use report 3062.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2910&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  borrowers.email,
  borrowers.cardnumber,
  Concat(""BOUNCED EMAIL<br />An e-mail sent to this patron's e-mail address <strong>("",borrowers.email,"")</strong> bounced.<br />Please confirm the patron's contact information the next time they use their account.<br />"", CurDate()) AS MESSAGE,
  Concat('<a href=\""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', borrowers.borrowernumber, '\"" target=""_blank"">', borrowers.borrowernumber,'</a>') AS 'LINK_TO_PATRON'
FROM
  borrowers
WHERE
  borrowers.email LIKE CONCAT( '%',<<Enter patron's e-mail address>>, '%')
GROUP BY borrowers.cardnumber",,,,,,,,
R.002911,"/*
R.002911

----------

Name: GHW - Items Waiting Pickup
Created by: George H Williams

----------

Group: Holds-Reserves
     -

Created on: 2017-02-23 11:17:34
Modified on: 2018-04-16 11:08:13
Date last run: 2022-09-29 14:03:56

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Generates a list of items awaiting pickup</p>
<ul><li>Shows items currently on the hold shelf</li>
<li>at the pick-up location you specify</li>
<li>sorted by date the item was placed on your hold shelf</li>
<li>contains links to the requesting patron's account</li>
</ul><br />
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2911&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  reserves.branchcode AS PICKUP_LOCATION,
  reserves.waitingdate AS WAITING_SINCE,
  Concat_Ws(""<br />"", Concat(""Title: "", biblio.title), Concat(""Author: "", If(biblio.author = """", ""-"", biblio.author)), Concat_Ws("" | "", ""Call#: "", items.location, items.itype, items.ccode, items.itemcallnumber, items.enumchron, items.copynumber), Concat(""Barcode: "", UPPER(items.barcode))) AS
  ITEM_DETAILS,
  Concat_Ws(""<br />"", Concat(borrowers.surname, "", "", borrowers.firstname), borrowers.cardnumber, borrowers.phone, If(borrowers.email = """", ""-"", borrowers.email), Concat(""<br />"", If(contact.attribute IS NULL, ""<span style='color:red; font-weight: bold;'>NO CONTACT METHOD SPECIFIED</span>"", If(contact.attribute = ""Phone"", Concat(""<span style='color:red; font-weight: bold;'>Please Phone</span>""), If(contact.attribute = ""Email"", Concat(""<span style='color:green; font-weight: bold;'>Patron prefers e-mail</span>""), If(contact.attribute = ""Text"", Concat(""<span style='color:red; font-weight: bold;'>Please Text</span>""), Concat(""<span style='color:red; font-weight: bold;'>Prefered contact method: "", ""</span>""))))))) AS PATRON_DETAILS,
  Concat('<a href=\""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', borrowers.borrowernumber, '\"" target=""_blank"">Open patron account in new window</a>') AS LINK_TO_PATRON
FROM
  reserves JOIN
  items
    ON reserves.itemnumber = items.itemnumber JOIN
  biblio
    ON items.biblionumber = biblio.biblionumber JOIN
  borrowers
    ON reserves.borrowernumber = borrowers.borrowernumber LEFT JOIN
  (SELECT
    borrower_attributes.borrowernumber,
    borrower_attributes.code,
    borrower_attributes.attribute
  FROM
    borrower_attributes
  WHERE
    borrower_attributes.code = 'HOLD') contact
    ON borrowers.borrowernumber = contact.borrowernumber
WHERE
  reserves.branchcode LIKE <<Choose branch|LBRANCH>> AND
  reserves.found = 'W'
ORDER BY
  WAITING_SINCE DESC",,,,,,,,
R.002912,"/*
R.002912

----------

Name: GHW - End of year Inventory at branch
Created by: George H Williams

----------

Group: Catalog Records and Items
     Shelf Lists

Created on: 2017-02-23 17:12:52
Modified on: 2017-02-23 17:27:48
Date last run: 2022-08-08 16:35:55

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  items.barcode,
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title,
  items.price,
  items.replacementprice,
  items.itemlost,
  items.damaged,
  items.onloan,
  items.notforloan,
  items.withdrawn,
  items.dateaccessioned,
  If(items.timestamp > 1, ""-"", items.timestamp) AS DELETED_ON
FROM
  items INNER JOIN
  biblio
    ON items.biblionumber = biblio.biblionumber
WHERE
  items.homebranch = 'BONNERSPGS' AND
  items.dateaccessioned < MakeDate(Year(Now()), 1)
UNION
SELECT
  deleteditems.barcode,
  deleteditems.homebranch,
  deleteditems.location,
  deleteditems.itype,
  deleteditems.ccode,
  deleteditems.itemcallnumber,
  deletedbiblio.author,
  deletedbiblio.title,
  deleteditems.price,
  deleteditems.replacementprice,
  deleteditems.itemlost,
  deleteditems.damaged,
  deleteditems.onloan,
  deleteditems.notforloan,
  deleteditems.withdrawn,
  deleteditems.dateaccessioned,
  deleteditems.timestamp
FROM
  deleteditems INNER JOIN
  deletedbiblio
    ON deleteditems.biblionumber = deletedbiblio.biblionumber
WHERE
  deleteditems.homebranch = 'BONNERSPGS' AND
  deleteditems.dateaccessioned < MakeDate(Year(Now()), 1) AND
  deleteditems.timestamp > MakeDate(Year(Now()), 1)
  UNION
SELECT
  deleteditems.barcode,
  deleteditems.homebranch,
  deleteditems.location,
  deleteditems.itype,
  deleteditems.ccode,
  deleteditems.itemcallnumber,
  biblio.author,
  biblio.title,
  deleteditems.price,
  deleteditems.replacementprice,
  deleteditems.itemlost,
  deleteditems.damaged,
  deleteditems.onloan,
  deleteditems.notforloan,
  deleteditems.withdrawn,
  deleteditems.dateaccessioned,
  deleteditems.timestamp
FROM
  deleteditems INNER JOIN
  biblio
    ON deleteditems.biblionumber = biblio.biblionumber
WHERE
  deleteditems.homebranch = 'BONNERSPGS' AND
  deleteditems.dateaccessioned < MakeDate(Year(Now()), 1) AND
  deleteditems.timestamp > MakeDate(Year(Now()), 1)
ORDER BY
  homebranch,
  location,
  itype,
  ccode,
  itemcallnumber,
  author,
  title",,,,,,,,
R.002915,"/*
R.002915

----------

Name: GHW - Flexible Item Status Report
Created by: George H Williams

----------

Group: Catalog Records and Items
     Shelf Lists

Created on: 2017-03-01 09:17:47
Modified on: 2021-04-13 17:10:35
Date last run: 2022-08-10 14:20:55

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Generates a list of items based on their status</p>
<ul><li>Shows items currently in the system</li>
<li>At the library you specify</li>
<li>grouped and sorted by the normal Next Search Catalog classification scheme</li>
<li>contains links to the item's bibliographic record</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Replaces the following reports:</p>
<ul>
<li>1420 - Items with a Lost Status</li>
</ul>
</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2915&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>


----------
*/

","SELECT
  Concat(
    '<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',
    biblio.biblionumber, 
    '\"" target=""_blank"">', 
    biblio.biblionumber,
    '</a>'
  ) AS LINK_TO_TITLE,
  items.itemnumber AS itemnumber,
  Concat(""-"", items.barcode, ""-"") AS BARCODE,
  items.homebranch,
  items.holdingbranch,
  permlocs.lib AS PERM_LOCATION,
  locs.lib AS LOCATION,
  itypes.description AS ITYPE,
  CCODES.lib AS CCODE,
  items.itemcallnumber,
  biblio.author,
  Concat_Ws(' ', 
    biblio.title, 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')
  ) AS FULL_TITLE,
  items.copynumber,
  items.onloan,
  items.datelastborrowed,
  items.datelastseen,
  Coalesce(withdrawn.lib, ""-"") AS WITHDRAWN_STATUS,
  items.withdrawn_on,
  Coalesce(lost.lib, ""-"") AS LOST_STATUS,
  items.itemlost_on,
  Coalesce(damaged.lib, ""-"") AS DAMAGED_STATUS,
  Coalesce(not_for_loan.lib, ""-"") AS NOT_FOR_LOAN_STATUS,
  items.replacementprice,
  If(paidfor.amountoutstanding = 0, ""$0.00 outstanding lost fees"", """") AS OUTSTANDING_FEES,
  not_for_loan.lib_opac
FROM
  items JOIN
  biblio ON items.biblionumber = biblio.biblionumber JOIN
  biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber AND
      items.biblionumber = biblio_metadata.biblionumber JOIN
  authorised_values ccode ON items.ccode = ccode.authorised_value LEFT JOIN
  (SELECT
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.category,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'NOT_LOAN') not_for_loan ON
      items.notforloan = not_for_loan.authorised_value LEFT JOIN
  (SELECT
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.category,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'WITHDRAWN') withdrawn ON
      items.withdrawn = withdrawn.authorised_value LEFT JOIN
  (SELECT
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.category,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOST') lost ON items.itemlost =
      lost.authorised_value LEFT JOIN
  (SELECT
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.category,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'DAMAGED') damaged ON items.damaged =
      damaged.authorised_value LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itypes ON itypes.itemtype = items.itype LEFT JOIN
  (SELECT
      accountlines.itemnumber,
      accountlines.amountoutstanding,
      accountlines.note,
      accountlines.credit_type_code,
      accountlines.debit_type_code
    FROM
      accountlines
    WHERE
      accountlines.amountoutstanding = 0 AND
      accountlines.debit_type_code LIKE 'L%') paidfor ON paidfor.itemnumber =
      items.itemnumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') permlocs ON
      permlocs.authorised_value = items.permanent_location LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values) locs ON locs.authorised_value = items.location
  LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE') CCODES ON CCODES.authorised_value =
      items.ccode
WHERE
  items.homebranch LIKE <<Select library|ZBRAN>> AND 
  Coalesce(lost.lib, ""-"") LIKE <<Lost status|ZLOST>> AND 
  items.damaged LIKE <<Damaged status|ZDAMAGED>> AND 
  items.withdrawn LIKE <<Withdrawn status|ZWITHDRAWN>> AND 
  Coalesce(not_for_loan.lib_opac, ""-"") LIKE <<Not-for-loan status|LNOT_LOAN>> 
GROUP BY
  items.itemnumber,
  CCODES.lib,
  not_for_loan.lib_opac,
  biblio.biblionumber
ORDER BY
  items.homebranch,
  PERM_LOCATION,
  ITYPE,
  CCODE,
  items.itemcallnumber,
  biblio.author,
  FULL_TITLE",,,,,,,,
R.002917,"/*
R.002917

----------

Name: GHW - Current Overdues
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2017-03-02 11:03:59
Modified on: 2017-03-02 11:03:59
Date last run: 2020-10-19 15:32:02

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branches.branchcode AS CHECK_OUT_BRANCH,
  CurDate() - INTERVAL 1 DAY AS YESTERDAY,
  Coalesce(yesterday.count, 0) AS DUE_YESTERDAY,
  CurDate() - INTERVAL 8 DAY AS EIGHT,
  Coalesce(eightdays.count, 0) AS DUE_EIGHT,
  CurDate() - INTERVAL 15 DAY AS FIFTEEN,
  Coalesce(fifteendays.count, 0) AS DUE_FIFTEEN,
  CurDate() - INTERVAL 22 DAY AS TWENTY_TWO,
  Coalesce(twentytwo.count, 0) AS DUE_TWENTYTWO,
  CurDate() - INTERVAL 29 DAY AS TWENTY_NINE,
  Coalesce(twentynine.count, 0) AS DUE_TWENTYNINE
FROM
  (SELECT
    Count(DISTINCT issues.issue_id) AS count,
    issues.branchcode,
    CAST(issues.date_due AS DATE) AS due_yesterday
  FROM
    issues
  WHERE
    CAST(issues.date_due AS DATE) = CurDate() - INTERVAL 1 DAY
  GROUP BY
    issues.branchcode) yesterday RIGHT JOIN
  branches
    ON branches.branchcode = yesterday.branchcode LEFT JOIN
  (SELECT
    Count(DISTINCT issues.issue_id) AS count,
    issues.branchcode,
    CAST(issues.date_due AS DATE) AS due_eight
  FROM
    issues
  WHERE
    CAST(issues.date_due AS DATE) = CurDate() - INTERVAL 8 DAY
  GROUP BY
    issues.branchcode, CAST(issues.date_due AS DATE)) eightdays
    ON branches.branchcode = eightdays.branchcode LEFT JOIN
  (SELECT
    Count(DISTINCT issues.issue_id) AS count,
    issues.branchcode,
    CAST(issues.date_due AS DATE) AS due_fifteen
  FROM
    issues
  WHERE
    CAST(issues.date_due AS DATE) = CurDate() - INTERVAL 15 DAY
  GROUP BY
    issues.branchcode, CAST(issues.date_due AS DATE)) fifteendays
    ON branches.branchcode = fifteendays.branchcode LEFT JOIN
  (SELECT
    Count(DISTINCT issues.issue_id) AS count,
    issues.branchcode,
    CAST(issues.date_due AS DATE) AS due_twentytwo
  FROM
    issues
  WHERE
    CAST(issues.date_due AS DATE) = CurDate() - INTERVAL 22 DAY
  GROUP BY
    issues.branchcode, CAST(issues.date_due AS DATE)) twentytwo
    ON branches.branchcode = twentytwo.branchcode LEFT JOIN
  (SELECT
    Count(DISTINCT issues.issue_id) AS count,
    issues.branchcode,
    CAST(issues.date_due AS DATE) AS due_twentynine
  FROM
    issues
  WHERE
    CAST(issues.date_due AS DATE) = CurDate() - INTERVAL 29 DAY
  GROUP BY
    issues.branchcode, CAST(issues.date_due AS DATE)) twentynine
    ON branches.branchcode = twentynine.branchcode
GROUP BY
  branches.branchcode, Coalesce(yesterday.count, 0), Coalesce(eightdays.count,
  0), Coalesce(fifteendays.count, 0), Coalesce(twentytwo.count, 0),
  Coalesce(twentynine.count, 0)",,,,,,,,
R.002918,"/*
R.002918

----------

Name: GHW - Overdue count at a library - during the previous calendar month
Created by: George H Williams

----------

Group: Circulation
     Overdues

Created on: 2017-03-02 14:05:56
Modified on: 2018-04-16 11:08:21
Date last run: 2021-08-15 21:21:37

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Counts the number of overdue items that were returned during the previous calendar month grouped by the number of days the item was overdue.</p>
<ul><li>Shows overdue items returned in the previous calendar month.</li>
<li>shows overdue items based on the check-out library you specify.</li>
<li>grouped and sorted by the check-out library and the number of days the item was late when it was checked in</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Starting in January of 2017, all NExpress items that were overdue more than 45 days began to be moved from being checked-out to being checked in with a ""Lost (overdue more than 45 days)"" status unless the items were checked out to patrons in certain categories (i.e. student/teacher/inhouse, etc).  Please take this into consideration when looking at the number of overdue items that are checked in when they are 46 days overdue.  These items will almost always be items that were automatically changed from overdue to ""Lost.""</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2918&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  old_issues.branchcode,
  DateDiff(old_issues.returndate, old_issues.date_due) AS DAYS_LATE,
  Count(DISTINCT old_issues.issue_id) AS COUNT
FROM
  old_issues
WHERE
  old_issues.branchcode LIKE <<Select library|ZBRAN>> AND
  Month(old_issues.returndate) = Month(Now() - INTERVAL 1 MONTH) AND
  Year(old_issues.returndate) = Year(Now() - INTERVAL 1 MONTH) AND
  old_issues.date_due < old_issues.returndate
GROUP BY
  old_issues.branchcode, DateDiff(old_issues.returndate, old_issues.date_due)
ORDER BY
  DAYS_LATE,
  COUNT",,,,,,,,
R.002919,"/*
R.002919

----------

Name: GHW - Overdue count at a library - during a month you specify
Created by: George H Williams

----------

Group: Circulation
     Overdues

Created on: 2017-03-02 15:01:10
Modified on: 2018-04-16 11:08:27
Date last run: 2021-12-30 12:39:27

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Counts the number of overdue items that were returned during the month you specify grouped by the number of days the item was overdue.</p>
<ul><li>Shows overdue items returned in the month you specify.</li>
<li>shows overdue items based on the check-out library you specify.</li>
<li>grouped and sorted by the check-out library and the number of days the item was late when it was checked in</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Starting in January of 2017, all NExpress items that were overdue more than 45 days began to be moved from being checked-out to being checked in with a ""Lost (overdue more than 45 days)"" status unless the items were checked out to patrons in certain categories (i.e. student/teacher/inhouse, etc).  Please take this into consideration when looking at the number of overdue items that are checked in when they are 46 days overdue.  These items will almost always be items that were automatically changed from overdue to ""Lost.""</p>
<p></p>
<p>Also note that NExpress old circulation data is purged once it is more than 13 months old.  You will not be able to run accurate reports on any check-ins from more than 13 months ago.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2919&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  old_issues.branchcode,
  DateDiff(old_issues.returndate, old_issues.date_due) AS DAYS_LATE,
  Count(DISTINCT old_issues.issue_id) AS COUNT
FROM
  old_issues
WHERE
  old_issues.branchcode LIKE <<Select library|ZBRAN>> AND
  Month(old_issues.returndate) = <<Choose month|Month>> AND
  Year(old_issues.returndate) = <<Choose year|Year>> AND
  old_issues.date_due < old_issues.returndate
GROUP BY
  old_issues.branchcode, DateDiff(old_issues.returndate, old_issues.date_due)
ORDER BY
  old_issues.branchcode,
  DAYS_LATE",,,,,,,,
R.002921,"/*
R.002921

----------

Name: GHW - Count of checkins during a specified date range
Created by: George H Williams

----------

Group: Circulation
     Circ Stats

Created on: 2017-03-08 08:40:06
Modified on: 2018-04-16 11:08:31
Date last run: 2020-09-21 09:59:02

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Counts the number of items returned at a specified branch during a specified date range (and can be limited to specified days of the week)</p>
<ul><li>Counts returns during the date range you specify (the statistics table only covers the previous 25 months)</li>
<li>Counts returns at the library you specify</li>
<li>grouped and sorted by the branch where the items were checked in and the date the items were returned</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2921&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  statistics.branch AS CHECK_IN_BRANCH,
  CAST(statistics.datetime AS DATE) AS DATE,
  Date_Format(statistics.datetime, '%a') AS DAY,
  COUNT(*) AS RETURN_COUNT
FROM
  statistics
WHERE
  statistics.type = 'return' AND
  statistics.branch LIKE <<Choose check-in branch|LBRANCH>> AND
  (CAST(statistics.datetime AS DATE) BETWEEN <<Choose start date|date>> AND <<Choose end date|date>>) AND
  Date_Format(statistics.datetime, '%a') LIKE <<Choose day of the week|ZDOW>>
GROUP BY
  CHECK_IN_BRANCH,
  DATE",,,,,,,,
R.002924,"/*
R.002924

----------

Name: GHW - BONNERSPGS price repair
Created by: George H Williams

----------

Group:  BONNERSPGS
     -

Created on: 2017-03-17 16:59:13
Modified on: 2021-08-16 20:41:35
Date last run: 2019-12-26 17:27:38

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Report for Bonner Springs to help add discounted costs of items to records</p>
<ul><li>Shows items added in the date range you specify</li>
<li>Shows items owned by Bonner Springs with a value in the 952g field of less than $0.01</li>
<li>Allows the user to specify shelving location, collection code, item type, and source of acquisition</li>
<li>sorted by standard NExpress classification scheme</li>
<li>links to the ""Edit item"" page for each item</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>The sources of acquisition in the database appear to be “AMAZON,” “AUTHOR,” “CENTER POINT,” “CHILDREN'S PLUS,” “Donation,” “GALE,” “INGRAM,” “INGRAMS,” “MIDWEST TAPE,” “MIDWEST TAPES,” “NEW READERS PRESS,” “OMNIGRAPHICS,” ""PUBLISHER DIRECT,"" ""RECATALOG,"" “RECORDED BOOKS,” and “TURN THE PAGE KC.”  If staff want to limit to one source, they can enter the exact name of the source in the ""Source of acquisition"" field in this report, or, since Ingram appears to be spelled two different ways, staff can type ""Ing%"" to get all items from Ingram - even if ""Ingram"" is misspelled in the item record.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2924=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat('<a href=https://staff.nexpresslibrary.org/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=', items.biblionumber, '&itemnumber=', items.itemnumber, '\"" target=""_blank"">', biblio.biblionumber, '</a>') AS
  LINK_TO_ITEM,
  items.barcode,
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  Concat_Ws(' ', biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')) AS FULL_TITLE,
  items.dateaccessioned,
  Coalesce(items.booksellerid, ""-"") AS SOURCE,
  Coalesce(items.price, 0) AS PRICE,
  items.price,
  items.replacementprice
FROM
  items
  JOIN biblio ON items.biblionumber = biblio.biblionumber
  JOIN biblio_metadata ON items.biblionumber = biblio_metadata.biblionumber
WHERE
  items.dateaccessioned BETWEEN <<Items added after|date>> AND <<but before|date>> AND
  items.homebranch = ""BONNERSPGS"" AND
  items.location LIKE <<Enter shelving location|LLOC>> AND
  items.itype LIKE <<Enter item type|LITYPES>> AND
  items.ccode LIKE <<Enter item collection code|LCCODE>> AND
  Coalesce(items.booksellerid, ""-"") LIKE Concat(""%"", <<Enter the name, or part of the name, of the acquisition source>>, ""%"") AND
  Coalesce(items.price, 0) < .01
GROUP BY
  items.barcode
ORDER BY
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title
LIMIT 10000",,,,,,,,
R.002927,"/*
R.002927

----------

Name: GHW - Deleted item information
Created by: George H Williams

----------

Group: Catalog Records and Items
     -

Created on: 2017-03-29 09:38:37
Modified on: 2018-04-16 11:08:43
Date last run: 2019-06-25 11:34:09

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Shows information on items that have been deleted and are still in the deleteditems table</p>
<ul><li>Shows information on items that are in the deleteditems table</li>
<li>Shows information for the barcode number you specify (wildcards are OK)</li>
<li>grouped by itemnumber</li>
<li>sorted by item information</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2927&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  deleteditems.itemnumber,
  If(biblio.biblionumber IS NULL, deletedbiblio.biblionumber, biblio.biblionumber) AS BIBLIONUMBER,
  deleteditems.barcode,
  Concat_Ws(""<br />"",
    Concat(""Home library: "", deleteditems.homebranch),
    Concat(""Location: "", deleteditems.location), Concat(""Item type: "", deleteditems.itype),
    Concat(""Collection Code: "", Coalesce(ccode.lib, ""-"")),
    Concat(""Call number: "", deleteditems.itemcallnumber),
    Concat(""Author: "", If(Coalesce(biblio.author, ""-"") = ""-"", Coalesce(deletedbiblio.author, ""-""), Coalesce(biblio.author, ""-""))),
    Concat(""Title: "", If(Coalesce(biblio.title, ""-"") = ""-"", Coalesce(deletedbiblio.title, ""-""), Coalesce(biblio.title, ""-""))),
    Concat(""Replacement Price: $"", Format(deleteditems.replacementprice, 2)),
    Concat(""Withdrawn status: "", Coalesce(withdrawnitems.lib, ""-"")),
    Concat(""Lost status: "", Coalesce(lostitems.lib, ""-"")),
    Concat(""Damaged status: "", Coalesce(damageditems.lib, ""-"")),
    Concat(""Deleted on: "", deleteditems.timestamp)) AS ITEM_INFORMATION,
  If(biblio.title IS NULL, ""<span style='background-color: yellow'>Biblio has also been deleted<span>"", (Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">Go to bibliographic record</a>'))) AS DELETED_OR_LINK
FROM
  deleteditems LEFT JOIN
  biblio
    ON deleteditems.biblionumber = biblio.biblionumber LEFT JOIN
  authorised_values ccode
    ON deleteditems.ccode = ccode.authorised_value LEFT JOIN
  deletedbiblio
    ON deleteditems.biblionumber = deletedbiblio.biblionumber LEFT JOIN
  (SELECT
    authorised_values.category,
    authorised_values.authorised_value,
    authorised_values.lib
  FROM
    authorised_values
  WHERE
    authorised_values.category = 'LOST') lostitems
    ON deleteditems.itemlost = lostitems.authorised_value LEFT JOIN
  (SELECT
    authorised_values.category,
    authorised_values.authorised_value,
    authorised_values.lib
  FROM
    authorised_values
  WHERE
    authorised_values.category = 'WITHDRAWN') withdrawnitems
    ON deleteditems.withdrawn = withdrawnitems.authorised_value LEFT JOIN
  (SELECT
    authorised_values.category,
    authorised_values.authorised_value,
    authorised_values.lib
  FROM
    authorised_values
  WHERE
    authorised_values.category = 'DAMAGED') damageditems
    ON deleteditems.damaged = damageditems.authorised_value
WHERE
  deleteditems.barcode LIKE <<Enter item barcode number>>
GROUP BY
  deleteditems.itemnumber
ORDER BY
  ITEM_INFORMATION",,,,,,,,
R.002929,"/*
R.002929

----------

Name: Requests report testing
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2017-04-14 10:06:57
Modified on: 2019-11-29 16:57:17
Date last run: 2019-11-29 16:58:32

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  requests.ACTIVE_REQUESTS,
  requests.cardnumber,
  requests.author,
  requests.title,
  requests.itemnumber as ITEM_NUMBER,
  requests.REQ_PLACED_ON,
  requests.PICK_UP_BRANCH,
  requests.reservenotes,
  requests.found,
  requests.waitingdate,
  requests.expirationdate,
  requests.cancellationdate,
  requests.timestamp,
  requests.reserve_id,
  borrowers.cardnumber AS cardnumber1
FROM
  borrowers
  INNER JOIN (SELECT
      Concat(If(old_reserves.reserve_id > 0, ""Inactive"", """"), If(old_reserves.cancellationdate > 0, "" - cancelled"",
      "" - filled"")) AS ACTIVE_REQUESTS,
      borrowers.cardnumber,
      biblio.author,
      biblio.title,
      old_reserves.itemnumber,
      old_reserves.reservedate AS REQ_PLACED_ON,
      old_reserves.branchcode AS PICK_UP_BRANCH,
      old_reserves.reservenotes,
      old_reserves.found,
      old_reserves.waitingdate,
      old_reserves.expirationdate,
      old_reserves.cancellationdate,
      old_reserves.timestamp,
      old_reserves.reserve_id,
      old_reserves.borrowernumber
    FROM
      old_reserves
      JOIN borrowers ON old_reserves.borrowernumber = borrowers.borrowernumber
      JOIN biblio ON old_reserves.biblionumber = biblio.biblionumber
    UNION
    SELECT
      Concat(If(reserves.reserve_id > 0, ""Active"", """"), If(reserves.found = ""T"", "" - item in transit"", If(reserves.found
      = ""W"", "" - waiting for pickup"", """"))) AS ACTIVE_REQUESTS,
      borrowers.cardnumber,
      biblio.author,
      biblio.title,
      reserves.itemnumber,
      reserves.reservedate AS REQ_PLACED_ON,
      reserves.branchcode AS PICK_UP_BRANCH,
      reserves.reservenotes,
      reserves.found,
      reserves.waitingdate,
      reserves.expirationdate,
      reserves.cancellationdate,
      reserves.timestamp,
      reserves.reserve_id,
      reserves.borrowernumber
    FROM
      reserves
      JOIN borrowers ON reserves.borrowernumber = borrowers.borrowernumber
      JOIN biblio ON reserves.biblionumber = biblio.biblionumber
    ORDER BY
      REQ_PLACED_ON DESC) requests ON borrowers.borrowernumber = requests.borrowernumber
WHERE
  requests.ACTIVE_REQUESTS LIKE <<Request status|ZREQTYPE>> AND
  requests.cardnumber LIKE Concat(""%"",<<Enter patron barcode number>>,""%"") AND
  requests.PICK_UP_BRANCH LIKE <<Choose request pick-up branch|LBRANCH>>",,,,,,,,
R.002930,"/*
R.002930

----------

Name: GHW - Patrons with outstanding fees based on fee-creating branch
Created by: George H Williams

----------

Group: -
     -

Created on: 2017-04-26 12:32:24
Modified on: 2019-12-26 11:46:38
Date last run: 2022-04-19 17:00:27

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Lists all patrons with outstanding fees based on the library that ""owns"" the fee (see the notes below for the definition of which library owns the fee)</p>
<ul><li>Shows patrons with outstanding balances due</li>
<li>shows patrons with fees that are owned by the library you specify, with a fee type you specify, and/or by the patron's home library</li>
<li>also allows you to limit the results to show all patrons, only patrons with items checked out, or only patrons with no items currently checked out</li>
<li>grouped by patron card number and accountlines ID</li>
<li>sorted by the patron's last name, first name, and card number</li>
<li>contains links to the account tab on the patron's account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Determining which library a fee belongs to can be very complicated in Koha.  This report makes that determination as follows:
  <ul>
    <li>If the accountlines table indicates the staff login (i.e. NEKLSCIRC, OTTATECH, HORTDIRECTOR) who created a fee, the staff login's home library is the library that owns the fee</li>
    <li>If the accountlines table does not indicate a staff login and the item was checked out less than 13 months ago, the checkout is linked to the library where the item was checked out by connecting accountlines to the to the old_issues table (we purge data more than 13 months old from the old_issues table)</li>
    <li>If the accountlines table does not indicate a staff login and the item was checked out more than 13 months ago, it's assumed that the patron's home library owns the fee</li>
    <li>If the accountlines table does not indicate a staff login and the item is currently checked out to the patron, the checkout is linked to the library where the item was checked out by connecting accountlines to the issues table</li>
  </ul>
</p>
<p></p>
<p>Updated on 2019.03.15 by GHW</p>
<p></p>
<p>Report created by George Williams.</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2930&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

<p><span style=""color: yellow; background-color: red; font-size: 200%;"">References accountlines.accounttype.  Needs to be updated after January 4, 2020</span></p>

----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/members/boraccount.pl?borrowernumber=', borrowers.borrowernumber, '\"" target=""_blank"">Link to fees</a>') AS 'LINK',
  Upper(borrowers.cardnumber) AS CARDNUMBER,
  borrowers.firstname,
  borrowers.surname,
  borrowers.address,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.email,
  borrowers.phone,
  borrowers.branchcode,
  If(Count(DISTINCT issues.issue_id) > 0, ""Yes"", ""No"") AS HAS_ITEMS_OUT,
  Count(DISTINCT issues.issue_id) AS CURRENT_CKO_COUNT,
  outstanding.date AS FEE_DATE,
  If(
    outstanding.accounttype = ""L"", ""Lost Item"",
    If(
      outstanding.accounttype LIKE ""F%"", ""Fine"",
      If(
        outstanding.accounttype = ""A"", ""Account management fee"",
        If(
          outstanding.accounttype = ""N"", ""New card"",
          If(
            outstanding.accounttype = ""M"", ""Sundry"",
            If(
              outstanding.accounttype LIKE ""C%"", ""Copier fees"",
              If(
                outstanding.accounttype LIKE ""D%"", ""Damaged item"",
                ""-""
              )
            )
          )
        )
      )
    )
  ) AS TYPE_OF_FEE,
  Format(outstanding.amount, 2) AS FULL_FEE_AMOUNT,
  outstanding.accountlines_id,
  outstanding.description AS FEE_DESCRIPTION,
  outstanding.note AS FEE_NOTE,
  Format(Sum(outstanding.amount - outstanding.amountoutstanding), 2) AS PAID_SO_FAR,
  If(Sum(outstanding.amount > outstanding.amountoutstanding), CAST(outstanding.timestamp AS DATE), ""-"") AS MOST_RECENT_PAYMENT,
  Format(outstanding.amountoutstanding, 2) AS AMOUNT_OUTSTANDING
FROM
  (
    SELECT
      accountlines.accountlines_id,
      accountlines.borrowernumber,
      accountlines.accountno,
      accountlines.itemnumber,
      accountlines.date,
      accountlines.amount,
      accountlines.description,
      accountlines.accounttype,
      accountlines.amountoutstanding,
      accountlines.timestamp,
      accountlines.lastincrement,
      accountlines.note,
      accountlines.manager_id,
      borrowers.branchcode
    FROM
      accountlines
      JOIN borrowers
        ON borrowers.borrowernumber = accountlines.manager_id
    WHERE
      accountlines.amountoutstanding > 0 AND
      borrowers.branchcode LIKE @brn := <<Choose library where the fee was created|LBRANCH>> COLLATE utf8mb4_unicode_ci
    UNION
    SELECT
      accountlines.accountlines_id,
      accountlines.borrowernumber,
      accountlines.accountno,
      accountlines.itemnumber,
      accountlines.date,
      accountlines.amount,
      accountlines.description,
      accountlines.accounttype,
      accountlines.amountoutstanding,
      accountlines.timestamp,
      accountlines.lastincrement,
      accountlines.note,
      accountlines.manager_id,
      old_issues.branchcode
    FROM
      accountlines
      JOIN old_issues
        ON old_issues.borrowernumber = accountlines.borrowernumber AND
        old_issues.itemnumber = accountlines.itemnumber
    WHERE
      accountlines.amountoutstanding > 0 AND
      old_issues.branchcode LIKE  @brn AND
      accountlines.manager_id IS NULL
    UNION
    SELECT
      accountlines.accountlines_id,
      accountlines.borrowernumber,
      accountlines.accountno,
      accountlines.itemnumber,
      accountlines.date,
      accountlines.amount,
      accountlines.description,
      accountlines.accounttype,
      accountlines.amountoutstanding,
      accountlines.timestamp,
      accountlines.lastincrement,
      accountlines.note,
      accountlines.manager_id,
      borrowers.branchcode
    FROM
      accountlines
      INNER JOIN borrowers
        ON borrowers.borrowernumber = accountlines.borrowernumber
    WHERE
      accountlines.accountlines_id NOT IN (
          SELECT
            accountlines.accountlines_id
          FROM
            accountlines
            JOIN old_issues
              ON old_issues.borrowernumber = accountlines.borrowernumber AND
              old_issues.itemnumber = accountlines.itemnumber
          WHERE
            accountlines.amountoutstanding > 0 AND
            old_issues.branchcode LIKE @brn AND
            accountlines.manager_id IS NULL
          UNION
          SELECT
            accountlines.accountlines_id
          FROM
            accountlines
            JOIN issues
              ON issues.borrowernumber = accountlines.borrowernumber AND
              issues.itemnumber = accountlines.itemnumber
          WHERE
            accountlines.amountoutstanding > 0 AND
            issues.branchcode LIKE @brn AND
            accountlines.manager_id IS NULL
        ) AND
      accountlines.amountoutstanding > 0 AND
      borrowers.branchcode LIKE @brn AND
      accountlines.manager_id IS NULL
    UNION
    SELECT
      accountlines.accountlines_id,
      accountlines.borrowernumber,
      accountlines.accountno,
      accountlines.itemnumber,
      accountlines.date,
      accountlines.amount,
      accountlines.description,
      accountlines.accounttype,
      accountlines.amountoutstanding,
      accountlines.timestamp,
      accountlines.lastincrement,
      accountlines.note,
      accountlines.manager_id,
      issues.branchcode
    FROM
      accountlines
      JOIN issues
        ON issues.borrowernumber = accountlines.borrowernumber AND
        issues.itemnumber = accountlines.itemnumber
    WHERE
      accountlines.amountoutstanding > 0 AND
      issues.branchcode LIKE @brn AND
      accountlines.manager_id IS NULL
  ) outstanding
  JOIN borrowers
    ON borrowers.borrowernumber = outstanding.borrowernumber
  LEFT JOIN issues
    ON issues.borrowernumber = borrowers.borrowernumber
WHERE
  If(
    outstanding.accounttype = ""L"", ""Lost Item"",
    If(
      outstanding.accounttype LIKE ""F%"", ""Fine"",
      If(
        outstanding.accounttype = ""A"", ""Account management fee"",
        If(
          outstanding.accounttype = ""N"", ""New card"",
          If(
            outstanding.accounttype = ""M"", ""Sundry"",
            If(
              outstanding.accounttype LIKE ""C%"", ""Copier fees"",
              If(
                outstanding.accounttype LIKE ""D%"", ""Damaged item"",
                ""-""
              )
            )
          )
        )
      )
    )
  ) LIKE <<Select fee type|LFTYPE>> AND
  borrowers.branchcode LIKE <<Select patron home library|LBRANCH>>
GROUP BY
  Upper(borrowers.cardnumber),
  outstanding.accountlines_id
HAVING
  HAS_ITEMS_OUT LIKE <<Patron currently has items checked out?|ZYES_NO>>
ORDER BY
  borrowers.surname,
  borrowers.firstname,
  borrowers.cardnumber",,,,,,,,
R.002931,"/*
R.002931

----------

Name: GHW - Card prefix report - System-wide
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2017-04-28 10:56:00
Modified on: 2021-02-25 10:13:54
Date last run: 2022-07-21 11:13:40

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  <<Number of digits in card prefix|YNUMBER>> AS CARD_PREFIX_LENGTH,
  UPPER(Left(borrowers.cardnumber, <<Number of digits in card prefix|YNUMBER>>)) AS LIBRAY_CARD_PREFIX,
  LENGTH(borrowers.cardnumber) AS CARD_NUMBER_LENGTH,
  Count(borrowers.borrowernumber) AS LIBRARY_CARD_COUNT,
  CONCAT( '<a href=\""/cgi-bin/koha/reports/guided_reports.pl?phase=Run+this+report&reports=2773&sql_params=', (Left(borrowers.cardnumber, <<Number of digits in card prefix|YNUMBER>>)) ,'&limit=10000 \"" target=""_blank"">Link to report 2773</a>' ) AS LINK_TO_PREFIX_REPORT_2
FROM
  borrowers
GROUP BY
  LIBRAY_CARD_PREFIX, CARD_NUMBER_LENGTH
HAVING
  LIBRARY_CARD_COUNT >= <<Minimum card number count|YNUMBER>>
ORDER BY
  LIBRAY_CARD_PREFIX, CARD_NUMBER_LENGTH",,,,,,,,
R.002933,"/*
R.002933

----------

Name: GHW - SMS notices
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2017-04-29 18:17:44
Modified on: 2017-04-29 18:17:44
Date last run: 2022-08-18 11:36:33

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  letter.module,
  letter.code,
  letter.branchcode,
  letter.name,
  letter.is_html,
  letter.title,
  letter.content,
  letter.message_transport_type
FROM
  letter
WHERE
  letter.message_transport_type = 'SMS'
ORDER BY
  letter.branchcode,
  letter.code",,,,,,,,
R.002934,"/*
R.002934

----------

Name: GHW -  SMS Counts
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2017-04-29 19:22:08
Modified on: 2017-04-29 19:22:08
Date last run: 2018-10-07 15:47:23

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  letter.message_transport_type,
  letter.code,
  letter.title,
  letter.content,
  Count(letter.branchcode) AS Count_branchcode
FROM
  letter
WHERE
  letter.message_transport_type = 'SMS'
GROUP BY
  letter.message_transport_type,
  letter.code,
  letter.title,
  letter.content",,,,,,,,
R.002937,"/*
R.002937

----------

Name: GHW Flex 99
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2017-05-01 10:36:27
Modified on: 2017-12-19 09:32:37
Date last run: 2017-09-11 13:41:38

----------

Public: 0
Expiry: 0

----------

<p><span style=""background-color: darkred; color: white"">Needs metadata conversion post 17.05</p>

----------
*/

","SELECT
  items.holdingbranch AS CKO_BRANCH,
  items.barcode AS ITEM_BARCODE,
  items.homebranch AS ITEM_HOME,
  items.location AS LOCATION,
  items.itype AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber AS CALL_NUMBER,
  biblio.author,
  Concat_Ws(' ', biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')) AS FULL_TITLE,
  losts.lib AS LOST_STATUS,
  Date_Format(old_issues.returndate, '%m/%d/%Y') AS LOST_ON,
  borrowers.cardnumber AS LAST_PATRON_CARD,
  borrowers.surname AS LAST_PATRON_NAME,
  items.replacementprice
FROM
  items INNER JOIN
  biblio
    ON items.biblionumber = biblio.biblionumber LEFT JOIN
  (SELECT
    authorised_values.authorised_value,
    authorised_values.lib
  FROM
    authorised_values
  WHERE
    authorised_values.category = ""CCODE"") ccodes
    ON items.ccode = ccodes.authorised_value LEFT JOIN
  (SELECT
    authorised_values.authorised_value,
    authorised_values.lib
  FROM
    authorised_values
  WHERE
    authorised_values.category = 'LOST') losts
    ON items.itemlost = losts.authorised_value INNER JOIN
  biblio_metadata
    ON biblio.biblionumber = biblio_metadata.biblionumber INNER JOIN
  old_issues
    ON old_issues.itemnumber = items.itemnumber INNER JOIN
  borrowers
    ON old_issues.borrowernumber = borrowers.borrowernumber
WHERE
  Date_Format(old_issues.returndate, '%m/%d/%Y') =
  Date_Format(items.itemlost_on, '%m/%d/%Y') AND
  items.holdingbranch LIKE <<Check-out branch|ZBRAN>>
GROUP BY
  items.barcode, Date_Format(old_issues.returndate, '%m/%d/%Y'),
  borrowers.cardnumber, borrowers.surname
HAVING
 LOST_STATUS LIKE <<Choose check-out library|ZLOST>>
ORDER BY
  CKO_BRANCH,
  LOCATION,
  ITYPE,
  CCODE,
  CALL_NUMBER,
  FULL_TITLE,
  biblio.author,
  old_issues.borrowernumber,
  LAST_PATRON_CARD,
  LAST_PATRON_NAME",,,,,,,,
R.002938,"/*
R.002938

----------

Name: GHW - Unique Management Report
Created by: George H Williams

----------

Group: -
     -

Created on: 2017-05-02 16:50:04
Modified on: 2019-12-26 11:46:44
Date last run: 2020-02-22 19:33:12

----------

Public: 0
Expiry: 0

----------

<p><span style=""color: yellow; background-color: red; font-size: 200%;"">References accountlines.accounttype.  Needs to be updated after January 4, 2020</span></p>

----------
*/

","SELECT
  CONCAT( '<a href=\""/cgi-bin/koha/members/boraccount.pl?borrowernumber=',borrowers.borrowernumber ,'\"" target=""_blank"">Link to fees</a>' ) AS 'LINK',
  Upper(borrowers.cardnumber) AS CARDNUMBER,
  borrowers.surname,
  borrowers.firstname,
  borrowers.address,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.phone,
  borrowers.mobile,
  borrowers.phonepro,
  borrowers.B_phone,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateofbirth,
  
  If(Count(DISTINCT issues.issue_id) > 0, ""Yes"", ""No"") AS HAS_ITEMS_OUT,
  Count(DISTINCT issues.issue_id) AS CURRENT_CKO_COUNT,
  outstanding.date AS FEE_DATE,
  If(outstanding.accounttype = ""L"", ""Lost Item"", If(outstanding.accounttype LIKE ""F%"", ""Fine"",
    If(outstanding.accounttype = ""A"", ""Account management fee"", If(outstanding.accounttype = ""N"", ""New card"",
    If(outstanding.accounttype = ""M"", ""Sundry"", If(outstanding.accounttype LIKE ""C%"", ""Copier fees"",
    If(outstanding.accounttype LIKE ""D%"", ""Damaged item"", ""-""))))))) AS TYPE_OF_FEE,
  Format(outstanding.amount, 2) AS FULL_FEE_AMOUNT,
  outstanding.description AS FEE_DESCRIPTION,
  outstanding.note AS FEE_NOTE,
  Format(Sum(outstanding.amount - outstanding.amountoutstanding),2) AS PAID_SO_FAR,
  If(Sum(outstanding.amount > outstanding.amountoutstanding), CAST(outstanding.timestamp AS DATE), ""-"") AS MOST_RECENT_PAYMENT,
  Format(outstanding.amountoutstanding,2) AS AMOUNT_OUTSTANDING
FROM
    (SELECT
      accountlines.accountlines_id,
      accountlines.borrowernumber,
      accountlines.accountno,
      accountlines.itemnumber,
      accountlines.date,
      accountlines.amount,
      accountlines.description,
      accountlines.accounttype,
      accountlines.amountoutstanding,
      accountlines.timestamp,
      accountlines.lastincrement,
      accountlines.note,
      accountlines.manager_id
    FROM
      accountlines
      JOIN borrowers ON borrowers.borrowernumber = accountlines.manager_id
    WHERE
      accountlines.amountoutstanding > 0 AND
      borrowers.branchcode = @brn := <<Select branch|ZBRAN>> COLLATE utf8mb4_unicode_ci
    UNION
    SELECT
      accountlines.accountlines_id,
      accountlines.borrowernumber,
      accountlines.accountno,
      accountlines.itemnumber,
      accountlines.date,
      accountlines.amount,
      accountlines.description,
      accountlines.accounttype,
      accountlines.amountoutstanding,
      accountlines.timestamp,
      accountlines.lastincrement,
      accountlines.note,
      accountlines.manager_id
    FROM
      accountlines
      JOIN old_issues ON old_issues.borrowernumber = accountlines.borrowernumber AND old_issues.itemnumber =
        accountlines.itemnumber
    WHERE
      accountlines.amountoutstanding > 0 AND
      old_issues.branchcode = @brn) outstanding
  JOIN borrowers ON borrowers.borrowernumber = outstanding.borrowernumber
  LEFT JOIN issues ON issues.borrowernumber = borrowers.borrowernumber
GROUP BY
  Upper(borrowers.cardnumber),
  outstanding.accountlines_id
HAVING
  HAS_ITEMS_OUT LIKE <<Patron currently has items checked out?|ZYES_NO>>
ORDER BY
  borrowers.surname,
  borrowers.firstname,
  borrowers.cardnumber",,,,,,,,
R.002939,"/*
R.002939

----------

Name: GHW - BONNERSPGS Auditor's inventory with prices
Created by: George H Williams

----------

Group:  BONNERSPGS
     -

Created on: 2017-05-03 10:19:32
Modified on: 2021-08-16 20:41:41
Date last run: 2019-12-31 15:55:46

----------

Public: 0
Expiry: 0

----------

<div id=reportinfo>
<p>Report for Bonner Springs to generate list of materials for auditing</p>
<ul><li>Shows items currently in the catalog which were added in the date range you specify (items that were added during that time-frame but have already been deleted will not appear in this list)</li>
<li>Includes the 952$g and 952$v price informaiton</li>
<li>Allows the user to specify shelving location, collection code, item type, and source of acquisition</li>
<li>sorted by standard NExpress classification scheme</li>
<li>links to the ""Edit item"" page for each item</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>The sources of acquisition in the database appear to be “AMAZON,” “AUTHOR,” “CENTER POINT,” “CHILDREN'S PLUS,” “Donation,” “GALE,” “INGRAM,” “INGRAMS,” “MIDWEST TAPE,” “MIDWEST TAPES,” “NEW READERS PRESS,” “OMNIGRAPHICS,” ""PUBLISHER DIRECT,"" ""RECATALOG,"" “RECORDED BOOKS,” and “TURN THE PAGE KC.”  If staff want to limit to one source, they can enter the exact name of the source in the ""Source of acquisition"" field in this report, or, since Ingram appears to be spelled two different ways, staff can type ""Ing%"" to get all items from Ingram - even if ""Ingram"" is misspelled in the item record.</p>
<p></p>
<p>For a full list of items, put a ""%"" in the ""Enter the name, or part of the name, of the acquisition source"" input field.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2939=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat('<a href=https://staff.nexpresslibrary.org/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=', items.biblionumber, '&itemnumber=', items.itemnumber, '\"" target=""_blank"">', biblio.biblionumber, '</a>') AS
  LINK_TO_ITEM,
  CONCAT(""-"",items.barcode,""-"") AS BARCODE,
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  Concat_Ws(' ', biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')) AS FULL_TITLE,
  items.dateaccessioned,
  Coalesce(items.booksellerid, ""-"") AS SOURCE,
  Coalesce(items.price, 0) AS PRICE,
  items.replacementprice
FROM
  items
  JOIN biblio ON items.biblionumber = biblio.biblionumber
  JOIN biblio_metadata ON items.biblionumber = biblio_metadata.biblionumber
WHERE
  items.dateaccessioned BETWEEN <<Items added after|date>> AND <<but before|date>> AND
  items.homebranch = ""BONNERSPGS"" AND
  items.location LIKE <<Enter shelving location|LLOC>> AND
  items.itype LIKE <<Enter item type|LITYPES>> AND
  items.ccode LIKE <<Enter item collection code|LCCODE>> AND
  Coalesce(items.booksellerid, ""-"") LIKE Concat(""%"", <<Enter the name, or part of the name, of the acquisition source>>, ""%"")
GROUP BY
  items.barcode
ORDER BY
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title",,,,,,,,
R.002946,"/*
R.002946

----------

Name: GHW - Library information for contact list
Created by: George H Williams

----------

Group: -
     -

Created on: 2017-05-12 01:07:13
Modified on: 2022-05-04 16:26:32
Date last run: 2022-10-03 07:43:49

----------

Public: 0
Expiry: 43200

----------

<div id=reportinfo>
<p>Generates the table that gets used for the contacts tab on the ""Library contact information"" tab on the circulation home page</p>
<ul><li>Shows current contact information</li>
<li>For all libraries</li>
<li>grouped and sorted by library location code</li>
<li>contains links to each branch's home page that open in a new window/tab</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Updated on 2022.05.04 to include:</p>
<ul>
  <li>Registered borrowers = Number of borrowers with this home library</li>
  <li>Active borrowers - previous 12 months = number of borrowers that used their card to check out or renew physical materials in the previous 12 months</li>
  <li>Active borrowers - previous 24 months = number of borrowers that used their card to check out or renew physical materials in the previous 24 months</li>
</ul>
<p></p>
</div>

----------
*/

","SELECT 
  Concat( 
    Concat(
      Replace(branches.branchname, ' - ', '<br />'), 
      '<p><ins>Mailing address:</ins><br />', 
      Concat_Ws('<br />', 
        branches.branchaddress1, 
        Concat(branches.branchcity, ', ', branches.branchstate, ' ', branches.branchzip)
      ), 
      '</p>'
    ), 
    Concat(
      '<ins>Street address:</ins><br />', 
      Concat_Ws('<br />', 
        If(branches.branchaddress2 = ' ', branches.branchaddress1, branches.branchaddress2), 
        Concat(branches.branchcity, ', ', branches.branchstate, '<br />')
      )
    ) 
  ) AS Library, 
  Concat_Ws('<p>', 
    Concat('<p>Phone: ', branches.branchphone, '</p>'), 
    Concat('Fax: ', branches.branchfax, '</p>'), 
    Concat('e-mail: ', branches.branchemail, '</p>'), 
    Concat('Website: <a href=""', branches.branchurl, '"" target=""_blank"">Click here</a></p>'), 
    Concat('Courier route #: ', branches.branchcountry, '</p>') 
  ) AS ""Contact information"", 
  Concat_Ws('<br />', 
    Replace( 
      Replace( 
        Replace( 
          branches.branchaddress3, 
          '|', 
          '<br /><br />' 
        ), 
        'Director:', 
        '<span style=""background: yellow; text-decoration: underline; font-size: 120%;"">Director:</span><br />' 
      ), 
      'Accreditation:', 
      '<span style=""background: aqua; text-decoration: underline; font-size: 120%;"">Type:</span><br />' 
    ), 
    ' ', 
    Concat('<span style=""background: wheat; text-decoration: underline;"">Registered borrowers:</span> ', total_borrowerss.TOTAL_REGISTERED), 
    Concat('<span style=""background: wheat; text-decoration: underline;"">Active borrowers - previous 12 months:</span> ', active_one.ACTIVE_ONE), 
    Concat('<span style=""background: wheat; text-decoration: underline;"">Active borrowers - previous 24 months:</span> ', active_two.ACTIVE_TWO), 
    ' ', 
    Concat('<span style=""background: wheat; text-decoration: underline;"">Total titles:</span> ', Count(DISTINCT items.biblionumber)), 
    Concat('<span style=""background: wheat; text-decoration: underline;"">Total items:</span> ', Count(DISTINCT items.itemnumber)), 
    ' ', 
    Concat('Last updated: ', Now()) 
  ) AS ""Staff contacts / holdings"" 
FROM 
  branches LEFT JOIN 
  items ON items.homebranch = branches.branchcode LEFT JOIN 
  ( 
    SELECT 
      borrowers.branchcode, 
      Count(DISTINCT borrowers.borrowernumber) AS TOTAL_REGISTERED 
    FROM 
      borrowers 
    GROUP BY 
      borrowers.branchcode 
  ) total_borrowerss 
  ON total_borrowerss.branchcode = branches.branchcode LEFT JOIN 
  ( 
    SELECT 
      Coalesce(borrowers.branchcode, deletedborrowers.branchcode) AS branchcode, 
      Count(DISTINCT statistics.borrowernumber) AS ACTIVE_ONE 
    FROM 
      statistics LEFT JOIN 
      borrowers ON borrowers.borrowernumber = statistics.borrowernumber 
      LEFT JOIN 
      deletedborrowers ON deletedborrowers.borrowernumber = 
          statistics.borrowernumber 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      statistics.datetime BETWEEN CurDate() - INTERVAL 1 YEAR AND CurDate() 
    GROUP BY 
      Coalesce(borrowers.branchcode, deletedborrowers.branchcode) 
  ) active_one 
  ON active_one.branchcode = branches.branchcode LEFT JOIN 
  ( 
    SELECT 
      Coalesce(borrowers.branchcode, deletedborrowers.branchcode) AS branchcode, 
      Count(DISTINCT statistics.borrowernumber) AS ACTIVE_TWO 
    FROM 
      statistics LEFT JOIN 
      borrowers ON borrowers.borrowernumber = statistics.borrowernumber 
      LEFT JOIN 
      deletedborrowers ON deletedborrowers.borrowernumber = 
          statistics.borrowernumber 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      statistics.datetime BETWEEN CurDate() - INTERVAL 2 YEAR AND CurDate() 
    GROUP BY 
      Coalesce(borrowers.branchcode, deletedborrowers.branchcode) 
  ) active_two 
  ON active_two.branchcode = branches.branchcode 
WHERE 
  branches.branchcode LIKE ""%"" 
GROUP BY 
  branches.branchcode 
ORDER BY 
  Library 
LIMIT 500",,,,,,,,
R.002950,"/*
R.002950

----------

Name: GHW - Overdue count at a library - during the previous calendar month - LEAVENWRTH
Created by: George H Williams

----------

Group:  LEAVENWRTH
     -

Created on: 2017-05-23 15:31:22
Modified on: 2022-01-05 09:42:44
Date last run: 2022-10-01 06:15:02

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Counts the number of overdue items that were returned during the previous calendar month grouped by the number of days the item was overdue.</p>
<ul><li>Shows overdue items returned in the previous calendar month.</li>
<li>shows overdue items checked out at LEAVENWRTH.</li>
<li>grouped and sorted by the check-out library and the number of days the item was late when it was checked in</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Starting in January of 2017, all NExpress items that were overdue more than 45 days began to be moved from being checked-out to being checked in with a ""Lost (overdue more than 45 days)"" status unless the items were checked out to patrons in certain categories (i.e. student/teacher/inhouse, etc).  Please take this into consideration when looking at the number of overdue items that are checked in when they are 46 days overdue.  These items will almost always be items that were automatically changed from overdue to ""Lost.""</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2950&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  old_issues.branchcode,
  LPad(DateDiff(old_issues.returndate, old_issues.date_due), 3, 0) AS DAYS_LATE,
  Count(DISTINCT old_issues.issue_id) AS COUNT
FROM
  old_issues
WHERE
  old_issues.branchcode LIKE ""LEAVENWRTH"" AND
  Month(old_issues.returndate) = Month(Now() - INTERVAL 1 MONTH) AND
  Year(old_issues.returndate) = Year(Now() - INTERVAL 1 MONTH) AND
  old_issues.date_due < old_issues.returndate
GROUP BY
  old_issues.branchcode,
  DateDiff(old_issues.returndate, old_issues.date_due)
UNION
SELECT
  "" Month"" AS Column1,
  Concat(Year(Now() - INTERVAL 1 MONTH), "" - "", Month(Now() - INTERVAL 1 MONTH)) AS Column2,
  NULL AS Column3
ORDER BY
  branchcode,
  DAYS_LATE,
  COUNT",,,,,,,,
R.002951,"/*
R.002951

----------

Name: GHW - Patrons with Newsletter permission flag during date range
Created by: George H Williams

----------

Group: -
     -

Created on: 2017-05-30 10:34:44
Modified on: 2017-05-30 10:35:32
Date last run: 2022-09-30 11:36:05

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.branchcode,
  borrowers.cardnumber,
  Concat(borrowers.surname, "", "", borrowers.firstname) AS BORROWER_NAME,
  borrowers.email,
  Concat(newsletter.code, "", "", newsletter.lib) AS PERMISSION
FROM
  borrowers LEFT JOIN
  (SELECT
    borrower_attributes.borrowernumber,
    borrower_attributes.code,
    authorised_values.lib,
    authorised_values.authorised_value
  FROM
    borrower_attributes INNER JOIN
    borrower_attribute_types
      ON borrower_attributes.code = borrower_attribute_types.code INNER JOIN
    authorised_values
      ON borrower_attribute_types.authorised_value_category =
      authorised_values.category AND borrower_attributes.attribute =
      authorised_values.authorised_value
  WHERE
    borrower_attributes.code = 'NEWSLETTER') newsletter
    ON borrowers.borrowernumber = newsletter.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Choose patron home branch|ZBRAN>> AND
  Coalesce(newsletter.authorised_value, 'NotAsked') LIKE <<Newsletter Permission|YEMAILNEWS>> AND
  borrowers.dateenrolled BETWEEN <<Patron account created between|date>> and (<<and|date>> + interval 1 day) 
GROUP BY
  borrowers.cardnumber, borrowers.email
ORDER BY
  borrowers.branchcode, Concat(borrowers.surname, "", "", borrowers.firstname)",,,,,,,,
R.002958,"/*
R.002958

----------

Name: GHW - Deleted items list by date range
Created by: George H Williams

----------

Group: Catalog Records and Items
     Weeded Already

Created on: 2017-06-15 10:26:44
Modified on: 2018-04-16 11:11:10
Date last run: 2022-09-01 09:49:09

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a list of items that have already been deleted from the catalog - includes all price information as well as the timestamp from when the item was deleted</p>
<ul><li>Lists items that were deleted between the dates you specify</li>
<li>at the library you specify</li>
<li>grouped by itemnumber</li>
<li>sorted by homebranch, location, item type, collection code, author, title, and call number</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This gets the item information from the deleteditems table and the biblio information from the biblios table or the deletedbiblios table depending on whether or not the bibliographic record has been deleted.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2958&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  deleteditems.barcode,
  deleteditems.homebranch,
  deleteditems.holdingbranch,
  location.lib AS LOCATION,
  itemtypes.description AS ITYPE,
  ccode.lib AS CCODE,
  deleteditems.itemcallnumber,
  Coalesce(biblio.author, deletedbiblio.author) AS AUTHOR,
  Coalesce(biblio.title, deletedbiblio.title) AS TITLE,
  deleteditems.price,
  deleteditems.replacementprice,
  deleteditems.timestamp AS DELETED_ON,
  deleteditems.itemlost,
  deleteditems.itemlost_on,
  deleteditems.withdrawn,
  deleteditems.withdrawn_on
FROM
  deleteditems
  LEFT JOIN biblio ON deleteditems.biblionumber = biblio.biblionumber
  LEFT JOIN deletedbiblio ON deleteditems.biblionumber = deletedbiblio.biblionumber
  LEFT JOIN itemtypes ON deleteditems.itype = itemtypes.itemtype
  LEFT JOIN (SELECT
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
    GROUP BY
      authorised_values.authorised_value,
      authorised_values.lib) ccode ON deleteditems.ccode = ccode.authorised_value
  LEFT JOIN (SELECT
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC'
    GROUP BY
      authorised_values.authorised_value,
      authorised_values.lib) location ON deleteditems.location = location.authorised_value
WHERE
  deleteditems.homebranch LIKE <<Choose item home library|LBRANCH>> AND
  Coalesce(deleteditems.location, ""-"") LIKE <<Choose location|LLOC>> AND
  Coalesce(deleteditems.itype, ""-"") LIKE <<Choose item type|LITYPES>> AND
  Coalesce(deleteditems.ccode, ""-"") LIKE <<Choose collection code|LCCODE>> AND
  deleteditems.timestamp BETWEEN <<Between the beginning of the day on|date>> AND (<<and the end of the day on|date>> + INTERVAL 1 DAY) 
GROUP BY
  deleteditems.itemnumber
ORDER BY
  deleteditems.homebranch,
  LOCATION,
  ITYPE,
  CCODE,
  AUTHOR,
  TITLE,
  deleteditems.itemcallnumber",,,,,,,,
R.002959,"/*
R.002959

----------

Name: GHW - Items about to be automatically deleted
Created by: George H Williams

----------

Group: -
     -

Created on: 2017-06-21 17:08:16
Modified on: 2018-08-31 12:45:10
Date last run: 2022-09-29 07:58:16

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a list of items that will be automatically deleted two months from today</p>
<ul><li>Shows items that are about to be deleted</li>
<li>at the branch you specify</li>
<li>grouped by item number</li>
<li>sorted by homebranch, location, item type, collection code, call number, author, and title</li>
<li>contains links to the bibliographic records of the items about to be deleted</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><span style=""background-color:darkred; color:white;"">Updated 2017.09.08 to correct for some errors/problems that have come up in the auto-deletion process.</span></p>
<p></p>
<p>This report goes along with the script that NExpress asked ByWater to write in 2015 that automatically deletes any items that have had a ""Lost,"" ""Lost (more than 45 days overdue),"" ""Missing,"" ""Lost - Damaged/Replace,"" ""Lost - Patron Claims Returned,"" ""In Processing,"" ""Discard,"" ""Lost - Not Returnable,"" or  ""Withdrawn"" status for more than 13 months.  This report allows libraries to see what these items are 2 months before the items are scheduled to be deleted.</p>
<p></p>
<p>The report will show all deletions that are scheduled to happen 2 months in the future.  For example, if you run the report in January, you will see what is going to be deleted automatically through the end of March.  If you run it in July, you will see what is going to be deleted through the end of September.  If you run it in December, you will see what is going to be deleted through the end of February of the next year.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2959&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">', biblio.biblionumber, '</a>') AS LINK_TO_TITLE,
  Concat(""-"", items.barcode, ""-"") AS BARCODE,
  items.homebranch,
  Concat(itemtypes.description, "" ("", items.itype, "")"") AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber,
  biblio.author,
  Concat_Ws("" "", biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""c""]')) AS FULL_TITLE,
  biblioitems.publicationyear,
  Greatest(Coalesce(CAST(items.dateaccessioned AS DATE), 0),
    Coalesce(CAST(items.datelastborrowed AS DATE), 0),
    Coalesce(CAST(items.datelastseen AS DATE), 0),
    Coalesce(CAST(items.itemlost_on AS DATE), 0),
    Coalesce(CAST(items.withdrawn_on AS DATE), 0),
    Coalesce(CAST(items.timestamp AS DATE), 0)) AS LAST_CHANGE,
  Greatest(Coalesce(CAST(items.dateaccessioned AS DATE), 0),
    Coalesce(CAST(items.datelastborrowed AS DATE), 0),
    Coalesce(CAST(items.datelastseen AS DATE), 0),
    Coalesce(CAST(items.itemlost_on AS DATE), 0),
    Coalesce(CAST(items.withdrawn_on AS DATE), 0),
    Coalesce(CAST(items.timestamp AS DATE), 0)) + INTERVAL 13 MONTH AS AUTO_DELETE_DATE,
  Concat(Coalesce(lcodes.lib, ""-""), "" | "", Coalesce(wcodes.lib, ""-"")) AS STATUS
FROM
  biblio
  JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
  JOIN items ON items.biblionumber = biblio.biblionumber
  LEFT JOIN (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'CCODE') ccodes ON items.ccode = ccodes.authorised_value
  JOIN biblioitems ON biblioitems.biblionumber = biblio.biblionumber AND
    items.biblioitemnumber = biblioitems.biblioitemnumber
  JOIN itemtypes ON items.itype = itemtypes.itemtype
  LEFT JOIN (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'LOST') lcodes ON items.itemlost = lcodes.authorised_value
  LEFT JOIN (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'withdrawn') wcodes ON items.withdrawn = wcodes.authorised_value
WHERE
  items.homebranch LIKE <<Choose item home branch|LBRANCH>> AND
  ((items.itemlost > 0 AND
  (Greatest(Coalesce(CAST(items.dateaccessioned AS DATE), 0),
    Coalesce(CAST(items.datelastborrowed AS DATE), 0),
    Coalesce(CAST(items.datelastseen AS DATE), 0),
    Coalesce(CAST(items.itemlost_on AS DATE), 0),
    Coalesce(CAST(items.withdrawn_on AS DATE), 0),
    Coalesce(CAST(items.timestamp AS DATE), 0)) + INTERVAL 13 MONTH) < AddDate(Last_Day(SubDate(Now(), INTERVAL -2 MONTH)), 1)) OR
  (items.withdrawn > 0 AND
  (Greatest(Coalesce(CAST(items.dateaccessioned AS DATE), 0),
    Coalesce(CAST(items.datelastborrowed AS DATE), 0),
    Coalesce(CAST(items.datelastseen AS DATE), 0),
    Coalesce(CAST(items.itemlost_on AS DATE), 0),
    Coalesce(CAST(items.withdrawn_on AS DATE), 0),
    Coalesce(CAST(items.timestamp AS DATE), 0)) + INTERVAL 13 MONTH) < AddDate(Last_Day(SubDate(Now(), INTERVAL -2 MONTH)), 1)))
GROUP BY
  biblio.biblionumber,
  items.itemnumber
ORDER BY
  items.homebranch,
  ITYPE,
  CCODE,
  items.itemcallnumber,
  biblio.author,
  FULL_TITLE",,,,,,,,
R.002960,"/*
R.002960

----------

Name: GHW - GitHub Notices and Slips report
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2017-06-23 11:25:44
Modified on: 2021-09-28 15:30:45
Date last run: 2022-07-18 16:08:13

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a report for converting notices and slips into text files for storage on GITHUB.</p>
<ul><li>Shows current notice and slip data</li>
<li>at all NExpress locations</li>
<li>sorted by branchcode and lettercode</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Run this report and open the file in EXCEL.  Then run the macro to output the rows from this file into separate text files.</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2960&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT 
  Concat( 
    If(letter.branchcode = "" "", ""AAAAA"", letter.branchcode), 
    ""\\"", 
    letter.code, 
    ""."", 
    letter.lang, 
    ""."", 
    letter.message_transport_type 
  ) AS FILE, 
  Concat( 
    Concat( 
      If(letter.branchcode = "" "", ""AAAAA"", letter.branchcode), 
      ""."", 
      letter.code, 
      ""."", 
      letter.lang, 
      ""."", 
      letter.message_transport_type, 
      "".txt"" 
    ), 
    CHAR(13), CHAR(10), CHAR(13), CHAR(10), 
    Concat(""Name: "", letter.name), 
    CHAR(13), CHAR(10), CHAR(13), CHAR(10), 
    Concat(""-----""), 
    CHAR(13), CHAR(10), CHAR(13), CHAR(10), 
    letter.title, 
    CHAR(13), CHAR(10), CHAR(13), CHAR(10), 
    Concat(""-----""), 
    CHAR(13), CHAR(10), CHAR(13), CHAR(10), 
    Concat(""Message content:""), 
    CHAR(13), CHAR(10), CHAR(13), CHAR(10), 
    Concat(""----------""), 
    CHAR(13), CHAR(10), CHAR(13), CHAR(10), 
    letter.content 
  ) AS CONTENTS 
FROM 
  letter 
GROUP BY 
  FILE 
ORDER BY 
FILE",,,,,,,,
R.002962,"/*
R.002962

----------

Name: GHW - Returns by date range
Created by: George H Williams

----------

Group: -
     -

Created on: 2017-06-26 17:37:39
Modified on: 2017-06-26 17:37:39
Date last run: 2020-08-17 09:18:55

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branches.branchcode,
  Coalesce(circulation.RETURNS, 0) AS CKO_PLUS_RENEW
FROM
  branches
  LEFT JOIN (SELECT
      statistics.branch,
      COUNT(*) AS RETURNS
    FROM
      statistics
    WHERE
      (statistics.type = 'return') AND
      statistics.datetime BETWEEN <<Between the beginning of the day on|date>> AND <<the end of the day on|date>> + INTERVAL 1 DAY
    GROUP BY
      statistics.branch) circulation ON branches.branchcode = circulation.branch
WHERE
  branches.branchcode LIKE <<Select checkout branch|LBRANCH>>
GROUP BY
  branches.branchcode,
  Coalesce(circulation.RETURNS, 0)",,,,,,,,
R.002963,"/*
R.002963

----------

Name: SQL helper - Date Snippets
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2017-06-26 19:16:07
Modified on: 2020-10-09 00:57:04
Date last run: 2022-09-18 22:23:49

----------

Public: 0
Expiry: 300

----------

Reusable code for setting dates in SQL reports

----------
*/

","SELECT  
  @1 := 'YESTERDAY'  AS DESCRIPTION,  
  @2 := 'CurDate() - INTERVAL 1 DAY' AS `""SQL""`,  
  CurDate() - INTERVAL 1 DAY  
UNION  
SELECT  
  @1 := 'TODAY',  
  @2 := 'CurDate()',  
  CurDate()  
UNION  
SELECT  
  @1 := 'TOMORROW',  
  @2 := 'CurDate() + INTERVAL 1 DAY',  
  CurDate() + INTERVAL 1 DAY  
UNION  
SELECT  
  @1 := '-',  
  @2 := '-',  
  CONCAT('-')  
UNION  
SELECT  
  @1 := 'FIRST_DATE_LAST_YEAR',  
  @2 := 'MakeDate(Year(Now()), 1) - INTERVAL 1 YEAR',  
  MakeDate(Year(Now()), 1) - INTERVAL 1 YEAR  
UNION  
SELECT  
  @1 := 'FIRST_DATE_THIS_YEAR',  
  @2 := 'MakeDate(Year(Now()), 1)',  
  MakeDate(Year(Now()), 1)  
UNION  
SELECT  
  @1 := 'FIRST_DATE_NEXT_YEAR',  
  @2 := 'MakeDate(Year(Now()), 1) + INTERVAL 1 YEAR',  
  MakeDate(Year(Now()), 1) + INTERVAL 1 YEAR  
UNION  
SELECT  
  @1 := '--',  
  @2 := '--',  
  CONCAT('--')  
UNION  
SELECT  
  @1 := 'FIRST_DATE_LAST_M',  
  @2 := 'AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)',  
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)  
UNION  
SELECT  
  @1 := 'FIRST_DATE_THIS_M',  
  @2 := 'AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1)',  
  AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1)  
UNION  
SELECT  
  @1 := 'FIRST_DATE_NEXT_M',  
  @2 := 'AddDate(Last_Day(SubDate(Now(), INTERVAL 0 MONTH)), 1)',  
  AddDate(Last_Day(SubDate(Now(), INTERVAL 0 MONTH)), 1)  
UNION  
SELECT  
  @1 := '---',  
  @2 := '---',  
  CONCAT('---')  
UNION  
SELECT  
  @1 := 'LAST_DATE_LAST_M',  
  @2 := 'Last_Day(CURRENT_DATE()) - INTERVAL 1 MONTH',  
  Last_Day(CURRENT_DATE()) - INTERVAL 1 MONTH  
UNION  
SELECT  
  @1 := 'LAST_DATE_THIS_M',  
  @2 := 'Last_Day(CURRENT_DATE())',  
  Last_Day(CURRENT_DATE())  
UNION  
SELECT  
  @1 := 'LAST_DATE_NEXT_M',  
  @2 := 'Last_Day(CURRENT_DATE()) + INTERVAL 1 MONTH',  
  Last_Day(CURRENT_DATE()) + INTERVAL 1 MONTH  
UNION  
SELECT  
  @1 := '----',  
  @2 := '----',  
  CONCAT('----')  
UNION  
SELECT  
  @1 := 'Y_LAST_Y',  
  @2 := 'Year(Now() - INTERVAL 1 YEAR)',  
  Year(Now() - INTERVAL 1 YEAR)  
UNION  
SELECT  
  @1 := 'Y_THIS_Y',  
  @2 := 'Year(Now())',  
  Year(Now())  
UNION  
SELECT  
  @1 := 'Y_NEXT_Y',  
  @2 := 'Year(Now() + INTERVAL 1 YEAR)',  
  Year(Now() + INTERVAL 1 YEAR)  
UNION  
SELECT  
  @1 := '-----',  
  @2 := '-----',  
  CONCAT('-----')  
UNION  
SELECT  
  @1 := 'Y_LAST_M',  
  @2 := 'Year(Now() - INTERVAL 1 MONTH)',  
  Year(Now() - INTERVAL 1 MONTH)  
UNION  
SELECT  
  @1 := 'Y_THIS_M',  
  @2 := 'Year(Now())',  
  Year(Now())  
UNION  
SELECT  
  @1 := 'Y_NEXT_M',  
  @2 := 'Year(Now() + INTERVAL 1 MONTH)',  
  Year(Now() + INTERVAL 1 MONTH)  
UNION  
SELECT  
  @1 := '------',  
  @2 := '------',  
  CONCAT('------')  
UNION  
SELECT  
  @1 := 'M_LAST_M',  
  @2 := 'Month(Now() - INTERVAL 1 MONTH)',  
  Month(Now() - INTERVAL 1 MONTH)  
UNION  
SELECT  
  @1 := 'M_THIS_M',  
  @2 := 'Month(Now())',  
  Month(Now())  
UNION  
SELECT  
  @1 := 'M_NEXT_M',  
  @2 := 'Month(Now() + INTERVAL 1 MONTH)',  
  Month(Now() + INTERVAL 1 MONTH)  
UNION  
SELECT  
  @1 := '-------',  
  @2 := '-------',  
  CONCAT('-------')  
UNION  
SELECT  
  @1 := 'D_1_YEAR_AGO',  
  @2 := 'CurDate() - INTERVAL 1 YEAR',  
  CurDate() - INTERVAL 1 YEAR  
UNION  
SELECT  
  @1 := 'D_TODAY',  
  @2 := 'CurDate()',  
  CurDate()  
UNION  
SELECT  
  @1 := 'D_1_YEAR_FROM_NOW',  
  @2 := 'CurDate() + INTERVAL 1 YEAR',  
  CurDate() + INTERVAL 1 YEAR  
UNION  
SELECT  
  @1 := '--------',  
  @2 := '--------',  
  CONCAT('--------')  
UNION  
SELECT  
  @1 := 'D_TWO_SUNDAYS_AGO',  
  @2 := 'Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY) - INTERVAL 1 WEEK',  
  Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY) - INTERVAL 1 WEEK  
UNION  
SELECT  
  @1 := 'D_LAST_SUNDAY',  
  @2 := 'Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY)',  
  Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY)  
UNION  
SELECT  
  @1 := 'D_THIS_SUNDAY',  
  @2 := 'Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) - 1 DAY)',  
  Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) - 1 DAY)  
UNION  
SELECT  
  @1 := 'D_NEXT_SUNDAY',  
  @2 := 'Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) - 1 DAY) + INTERVAL 1 WEEK',  
  Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) - 1 DAY) + INTERVAL 1 WEEK
UNION  
SELECT  
  @1 := '---------',  
  @2 := '---------',  
  CONCAT('---------')  
UNION  
SELECT  
  @1 := 'D_TWO_SATURDAYS_AGO',  
  @2 := 'Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 7 DAY)',  
  Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 7 DAY)  
UNION  
SELECT  
  @1 := 'D_LAST_SATURDAY_AGO',  
  @2 := 'Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) - 0 DAY)',  
  Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) - 0 DAY)  
UNION  
SELECT  
  @1 := 'D_THIS_SATURDAY',  
  @2 := 'Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) - 7 DAY)',  
  Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) - 7 DAY)
  
UNION  
SELECT  
  @1 := 'D_NEXT_SATURDAY',  
  @2 := 'Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) - 14 DAY)',  
  Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) - 14 DAY)  
  ",,,,,,,,
R.002964,"/*
R.002964

----------

Name: GHW - Collection agency report 01 - Unique management
Created by: George H Williams

----------

Group:  OTTAWA
     -

Created on: 2017-06-27 16:32:34
Modified on: 2021-08-16 13:44:01
Date last run: 2022-09-30 10:23:53

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a report of newly delinquent patrons for OTTAWA to send to Unique Management for collections.</p>
<ul><li>Shows patrons who owe money to OTTAWA and were initially billed more than 60 days ago but less than 1 year ago.</li>
<li>Shows patrons whose fees were created at OTTAWA (i.e. item with fees was checked out at OTTAWA or fee was created by an OTTAWA staff member) and have not yet been turned over to collections</li>
<li>grouped by borrowernumber</li>
<li>sorted by borrowers name, last name first</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2964&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Upper(borrowers.cardnumber) AS CARDNUMBER,
  borrowers.borrowernumber,
  borrowers.surname,
  borrowers.firstname,
  borrowers.address,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.phone,
  borrowers.mobile,
  borrowers.phonepro AS ALT_PHONE_ONE,
  borrowers.B_phone AS ALT_PHONE_TWO,
  borrowers.branchcode,
  If(
    categories.category_type = ""A"", ""Adult"", If(
      categories.category_type = ""C"", ""Child"", If(
        categories.category_type = ""S"", ""Staff"", If(
          categories.category_type = ""I"", ""Organization"", If(
            categories.category_type = ""P"", ""Professional"", If(
              categories.category_type = ""X"", ""Statistical"", ""-""
            )
          )
        )
      )
    )
  ) AS CATEGORY,
  borrowers.dateofbirth,
  Format(Sum(outstanding_sixty.amountoutstanding), 2) AS AMOUNT_OUTSTANDING_SIXTY, 
  Format(outstanding_total.Sum_amountoutstanding, 2) AS AMOUNT_OUTSTANDING_TOTAL
FROM
  (SELECT
      accountlines.accountlines_id,
      accountlines.borrowernumber,
      accountlines.itemnumber,
      accountlines.date,
      accountlines.amount,
      accountlines.description,
      accountlines.amountoutstanding,
      accountlines.timestamp,
      accountlines.note,
      accountlines.manager_id
    FROM
      accountlines JOIN
      borrowers ON borrowers.borrowernumber = accountlines.manager_id
    WHERE
      accountlines.amountoutstanding > 0 AND
      accountlines.date BETWEEN (Date_Sub(CurDate(), INTERVAL 1 YEAR)) AND (Date_Sub(CurDate(), INTERVAL 60 DAY)) AND
      borrowers.branchcode = @brn := ""OTTAWA"" COLLATE utf8mb4_unicode_ci
    UNION
    SELECT
      accountlines.accountlines_id,
      accountlines.borrowernumber,
      accountlines.itemnumber,
      accountlines.date,
      accountlines.amount,
      accountlines.description,
      accountlines.amountoutstanding,
      accountlines.timestamp,
      accountlines.note,
      accountlines.manager_id
    FROM
      accountlines JOIN
      old_issues ON old_issues.borrowernumber = accountlines.borrowernumber AND 
      old_issues.itemnumber = accountlines.itemnumber
    WHERE
      accountlines.amountoutstanding > 0 AND
      accountlines.timestamp BETWEEN (Date_Sub(CurDate(), INTERVAL 1 YEAR)) AND (Date_Sub(CurDate(), INTERVAL 60 DAY)) AND old_issues.branchcode = @brn) outstanding_sixty JOIN
      borrowers ON borrowers.borrowernumber = outstanding_sixty.borrowernumber JOIN
      categories ON borrowers.categorycode = categories.categorycode LEFT JOIN
  (SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute,
      authorised_values.category,
      authorised_values.lib
    FROM
      borrower_attributes JOIN
      authorised_values ON borrower_attributes.attribute = authorised_values.authorised_value
    WHERE
      borrower_attributes.code = 'CAOTTAWA' AND
      authorised_values.category = 'COLLAGEN') collagen ON
      borrowers.borrowernumber = collagen.borrowernumber LEFT JOIN
  (SELECT
      accountlines.borrowernumber,
      Sum(accountlines.amountoutstanding) AS Sum_amountoutstanding
    FROM
      accountlines
    WHERE
      accountlines.amountoutstanding > .01
    GROUP BY
      accountlines.borrowernumber) outstanding_total ON
      outstanding_total.borrowernumber = outstanding_sixty.borrowernumber
WHERE
  collagen.attribute IS NULL
GROUP BY
  borrowers.borrowernumber
HAVING
  AMOUNT_OUTSTANDING_SIXTY > 25
ORDER BY
  borrowers.surname,
  borrowers.firstname",,,,,,,,
R.002965,"/*
R.002965

----------

Name: GHW - Collection agency report 02 - Unique management
Created by: George H Williams

----------

Group:  OTTAWA
     -

Created on: 2017-06-27 16:45:08
Modified on: 2021-08-16 13:44:05
Date last run: 2022-09-30 10:24:49

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a report of newly delinquent patrons for OTTAWA to send to Unique Management for collections.</p>
<ul><li>Shows patrons who owe money to OTTAWA and were initially billed more than 60 days ago but less than 1 year ago.</li>
<li>Shows whose accounts were just turned over to collections and now need their accounts flagged and need the collection fee added to their accounts</li>
<li>grouped by borrowernumber</li>
<li>sorted by borrowers name, last name first</li>
<li>links</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2965&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/members/maninvoice.pl?borrowernumber=', borrowers.borrowernumber, '\"" target=""_blank"">', Upper(borrowers.cardnumber), '</a>') AS ""MANUAL_INVOICE"",
  Upper(borrowers.cardnumber) AS CARDNUMBER,
  borrowers.borrowernumber,
  borrowers.surname,
  borrowers.firstname,
  borrowers.address,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.phone,
  borrowers.mobile,
  borrowers.phonepro AS ALT_PHONE_ONE,
  borrowers.B_phone AS ALT_PHONE_TWO,
  borrowers.branchcode,
  If(categories.category_type = ""A"", ""Adult"", If(categories.category_type = ""C"", ""Child"", If(categories.category_type = ""S"", ""Staff"", If(categories.category_type = ""I"", ""Organization"", If(categories.category_type = ""P"", ""Professional"", If(categories.category_type = ""X"", ""Statistical"", ""-"")))))) AS CATEGORY,
  borrowers.dateofbirth,
  Format(Sum(outstanding.amountoutstanding), 2) AS AMOUNT_OUTSTANDING
FROM
  (SELECT
      accountlines.accountlines_id,
      accountlines.borrowernumber,
      accountlines.itemnumber,
      accountlines.date,
      accountlines.amount,
      accountlines.description,
      accountlines.amountoutstanding,
      accountlines.timestamp,
      accountlines.note,
      accountlines.manager_id
    FROM
      accountlines JOIN
      borrowers ON borrowers.borrowernumber = accountlines.manager_id
    WHERE
      accountlines.amountoutstanding > 0 AND
      accountlines.date BETWEEN (Date_Sub(CurDate(), INTERVAL 1 YEAR)) AND (Date_Sub(CurDate(), INTERVAL 60 DAY)) AND
      borrowers.branchcode = @brn := ""OTTAWA"" COLLATE utf8mb4_unicode_ci
    UNION
    SELECT
      accountlines.accountlines_id,
      accountlines.borrowernumber,
      accountlines.itemnumber,
      accountlines.date,
      accountlines.amount,
      accountlines.description,
      accountlines.amountoutstanding,
      accountlines.timestamp,
      accountlines.note,
      accountlines.manager_id
    FROM
      accountlines JOIN
      old_issues ON old_issues.borrowernumber = accountlines.borrowernumber AND
          old_issues.itemnumber = accountlines.itemnumber
    WHERE
      accountlines.amountoutstanding > 0 AND
      old_issues.branchcode = @brn AND
      accountlines.timestamp BETWEEN (Date_Sub(CurDate(), INTERVAL 1 YEAR)) AND (Date_Sub(CurDate(), INTERVAL 60 DAY))) outstanding JOIN
  borrowers ON borrowers.borrowernumber = outstanding.borrowernumber JOIN
  categories ON borrowers.categorycode = categories.categorycode LEFT JOIN
  (SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute,
      authorised_values.category,
      authorised_values.lib
    FROM
      borrower_attributes JOIN
      authorised_values ON borrower_attributes.attribute = authorised_values.authorised_value
    WHERE
      borrower_attributes.code = 'CAOTTAWA' AND
      authorised_values.category = 'COLLAGEN') collagen ON borrowers.borrowernumber = collagen.borrowernumber
WHERE
  collagen.attribute IS NULL
GROUP BY
  borrowers.borrowernumber
HAVING
  AMOUNT_OUTSTANDING > 25
ORDER BY
  borrowers.surname,
  borrowers.firstname",,,,,,,,
R.002966,"/*
R.002966

----------

Name: GHW - Collection agency report 03 - Unique management
Created by: George H Williams

----------

Group:  OTTAWA
     -

Created on: 2017-06-27 17:08:37
Modified on: 2021-08-16 13:44:09
Date last run: 2022-09-30 10:22:25

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Shows patrons that OTTAWA has turned over to their collection agency</p>
<ul><li>Shows patrons who currently have collection agency flags on their account.</li>
<li>regardless of the patron's home library</li>
<li>grouped by borrowernumber and sort1</li>
<li>sorted by borrowers name, last name first</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2966&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  borrowers.borrowernumber,
  borrowers.cardnumber,
  borrowers.surname,
  borrowers.firstname,
  Format(Sum(accountlines.amountoutstanding), 2) AS Due
FROM
  accountlines
  LEFT JOIN borrowers ON accountlines.borrowernumber = borrowers.borrowernumber
  LEFT JOIN categories ON borrowers.categorycode = categories.categorycode
  LEFT JOIN (SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute,
      authorised_values.category,
      authorised_values.lib
    FROM
      borrower_attributes
      JOIN authorised_values ON borrower_attributes.attribute = authorised_values.authorised_value
    WHERE
      borrower_attributes.code = 'CAOTTAWA' AND
      authorised_values.category = 'COLLAGEN') collagen ON borrowers.borrowernumber = collagen.borrowernumber
WHERE
  collagen.attribute LIKE ""OTTA%""
GROUP BY
  borrowers.borrowernumber,
  borrowers.cardnumber
ORDER BY
  borrowers.surname,
  borrowers.firstname",,,,,,,,
R.002969,"/*
R.002969

----------

Name: GHW - Monthly 104
Created by: George H Williams

----------

Group: Statistics
     End of month statistics

Created on: 2017-07-01 13:22:33
Modified on: 2019-11-14 09:20:23
Date last run: 2022-03-01 10:49:09

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Generates end of month data for spreadsheet report</p>
<ul><li>Reports end of month data for Next-wide spreadsheet - Cells G58, H58, and I58</li>
</ul><br />
<p></p>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=2969"">Click here to download as a csv file</a></p>
<p class= ""notetags"" style=""display: none;"">Monthly</p>
</div>



----------
*/

","SELECT
  'Total biblios on last day of last month' AS DESCRIPTION,
  count(*) AS COUNT
FROM
  biblio
WHERE
  biblio.datecreated < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1)
UNION
SELECT
  'Biblios added last month' AS DESCRIPTION,
  Count(*)
FROM
  biblio
WHERE
  Month(biblio.datecreated) = Month(Now() - INTERVAL 1 MONTH) AND
  Year(biblio.datecreated) = Year(Now() - INTERVAL 1 MONTH)
UNION
SELECT
  'Biblios deleted last month' AS DESCRIPTION,
  Count(*)
FROM
  deletedbiblio
WHERE
  Month(deletedbiblio.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
  Year(deletedbiblio.timestamp) = Year(Now() - INTERVAL 1 MONTH)",,,,,,,,
R.002971,"/*
R.002971

----------

Name: GHW - EOM Cleanup 001
Created by: George H Williams

----------

Group: Borrowers
     Patron attributes

Created on: 2017-07-05 14:11:52
Modified on: 2019-07-24 17:48:07
Date last run: 2020-07-13 16:52:03

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Shows patrons who were added in the last 60 days but have no information in their ""Registration Library"" field.</p>
<ul><li>Shows patrons added in the last 60 days without at registration library</li>
<li>at any NExpress library</li>
<li>grouped by patron barcode number</li>
<li>sorted by STAFF_HOME_BRANCH and borrower.attribute</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2971&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  borrowers.cardnumber,
  branches.branchname AS STAFF_HOME_BRANCH,
  regbranch.attribute
FROM
  borrowers
  LEFT JOIN (SELECT
        borrower_attributes.borrowernumber,
        borrower_attributes.code,
        borrower_attributes.attribute
      FROM
        borrower_attributes
      WHERE
        borrower_attributes.code = 'REGBRANCH') regbranch ON borrowers.borrowernumber = regbranch.borrowernumber
  JOIN action_logs ON action_logs.object = borrowers.borrowernumber
  JOIN borrowers staff ON action_logs.user = staff.borrowernumber
  INNER JOIN branches ON staff.branchcode = branches.branchcode
WHERE
  regbranch.attribute IS NULL AND
  action_logs.module = 'MEMBERS' AND
  action_logs.action LIKE 'CREAT%'
GROUP BY
  staff.branchcode,
  branches.branchname,
  borrowers.borrowernumber
ORDER BY
  STAFF_HOME_BRANCH,
  regbranch.attribute",,,,,,,,
R.002972,"/*
R.002972

----------

Name: GHW - EOM 002
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2017-07-05 16:06:40
Modified on: 2017-07-05 16:09:03
Date last run: 2018-06-01 15:06:46

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.borrowernumber,
  Concat(borrowers.cardnumber) AS cardnumber,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.address,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode
FROM
  borrowers
WHERE
  borrowers.state <> ""AL"" AND
  borrowers.state <> ""AK"" AND
  borrowers.state <> ""AZ"" AND
  borrowers.state <> ""AR"" AND
  borrowers.state <> ""CA"" AND
  borrowers.state <> ""CO"" AND
  borrowers.state <> ""CT"" AND
  borrowers.state <> ""DE"" AND
  borrowers.state <> ""DC"" AND
  borrowers.state <> ""FL"" AND
  borrowers.state <> ""GA"" AND
  borrowers.state <> ""HI"" AND
  borrowers.state <> ""ID"" AND
  borrowers.state <> ""IL"" AND
  borrowers.state <> ""IN"" AND
  borrowers.state <> ""IA"" AND
  borrowers.state <> ""KS"" AND
  borrowers.state <> ""KY"" AND
  borrowers.state <> ""LA"" AND
  borrowers.state <> ""ME"" AND
  borrowers.state <> ""MD"" AND
  borrowers.state <> ""MA"" AND
  borrowers.state <> ""MI"" AND
  borrowers.state <> ""MN"" AND
  borrowers.state <> ""MS"" AND
  borrowers.state <> ""MO"" AND
  borrowers.state <> ""MT"" AND
  borrowers.state <> ""NE"" AND
  borrowers.state <> ""NV"" AND
  borrowers.state <> ""NH"" AND
  borrowers.state <> ""NJ"" AND
  borrowers.state <> ""NM"" AND
  borrowers.state <> ""NY"" AND
  borrowers.state <> ""NC"" AND
  borrowers.state <> ""ND"" AND
  borrowers.state <> ""OH"" AND
  borrowers.state <> ""OK"" AND
  borrowers.state <> ""OR"" AND
  borrowers.state <> ""PA"" AND
  borrowers.state <> ""PR"" AND
  borrowers.state <> ""RI"" AND
  borrowers.state <> ""SC"" AND
  borrowers.state <> ""SD"" AND
  borrowers.state <> ""TN"" AND
  borrowers.state <> ""TX"" AND
  borrowers.state <> ""UT"" AND
  borrowers.state <> ""VT"" AND
  borrowers.state <> ""VA"" AND
  borrowers.state <> ""VI"" AND
  borrowers.state <> ""WA"" AND
  borrowers.state <> ""WV"" AND
  borrowers.state <> ""WI"" AND
  borrowers.state <> ""WY"" AND
  borrowers.branchcode NOT LIKE ""PH%"" AND
  borrowers.branchcode NOT LIKE ""LOU%""
GROUP BY
  borrowers.borrowernumber,
  Concat(borrowers.cardnumber),
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.address,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode
ORDER BY
  borrowers.state,
  borrowers.branchcode,
  borrowers.categorycode",,,,,,,,
R.002975,"/*
R.002975

----------

Name: GHW - G2 Request and sharing statistics - request statistics - Next Search Catalog
Created by: George H Williams

----------

Group: Statistics
     2022 beginning of month statistics

Created on: 2017-07-11 11:52:53
Modified on: 2022-03-11 15:44:34
Date last run: 2022-10-01 01:15:02

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint> 
<p>Request and sharing statistics - request statistics</p> 
<ul><li>during the previous calendar month</li> 
<li>at all system libraries</li> 
<li>grouped and sorted by pick up library</li> 
</ul><br /> 
<p><ins>Notes:</ins></p> 
<p></p> 
<p class=""updated"">This report and these notes updated on 2022.03.11</p> 
<p></p> 
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=2975"">Click here to download as a csv file</a></p> 
<p class= ""notetags"" style=""display: none;"">#monthly #statistics #requests #count</p> 
<!-- html notes rendered on guided_reports.pl by jquery at https://wiki.koha-community.org/wiki/JQuery_Library#Render_patron_messages_as_HTML_and_in_Report_notes --> 
</div> 






----------
*/

","SELECT 
  branches.branchname AS ""Library"", 
  Sum(Coalesce(requests_placed.Count_reserve_id, 0)) AS ""Requests placed last month"", 
  Coalesce(requests_filled.Count_reserve_id, 0) AS ""Requests filled last month"", 
  Coalesce(requests_cancelled_from_hold_shelf.Count_reserve_id, 0) AS ""Requests cancelled after placement on hold shelf"", 
  Coalesce(requests_cancelled_in_transit.Count_reserve_id, 0) AS ""Requests cancelled while in transit"", 
  Coalesce(requests_cancelled_before_pulled.Count_reserve_id, 0) AS ""Requests cancelled before an item was found"", 
  Coalesce(requests_cancelled.Count_reserve_id, 0) AS ""Requests cancelled total"", 
  Coalesce(requests_expired_unfilled.Count_reserve_id, 0) AS ""Requests expired last month"", 
  Sum(Coalesce(requests_placed_staff.Count_reserve_id, 0)) AS ""Requests placed by staff"", 
  (Sum(Coalesce(requests_placed.Count_reserve_id, 0)) - Sum(Coalesce(requests_placed_staff.Count_reserve_id, 0))) AS ""Requests placed in the OPAC"" 
FROM 
  branches LEFT JOIN 
    (SELECT 
      reserves.branchcode, 
      Count(reserves.reserve_id) AS Count_reserve_id 
    FROM 
      reserves 
    WHERE 
      Year(reserves.reservedate) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(reserves.reservedate) = Month(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      reserves.branchcode 
    UNION 
    SELECT 
      old_reserves.branchcode, 
      Count(old_reserves.reserve_id) AS Count_reserve_id 
    FROM 
      old_reserves 
    WHERE 
      Month(old_reserves.reservedate) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(old_reserves.reservedate) = Year(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      old_reserves.branchcode 
    ) requests_placed 
  ON branches.branchcode = requests_placed.branchcode LEFT JOIN 
    (SELECT 
      old_reserves.branchcode, 
      Count(old_reserves.reserve_id) AS Count_reserve_id 
    FROM 
      old_reserves JOIN 
      action_logs ON action_logs.object = old_reserves.reserve_id 
    WHERE 
      Month(action_logs.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(action_logs.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND 
      old_reserves.found = 'F' AND 
      action_logs.module = 'HOLDS' AND 
      action_logs.action LIKE ""DEL%"" 
    GROUP BY 
      old_reserves.branchcode 
    ) requests_filled 
  ON branches.branchcode = requests_filled.branchcode LEFT JOIN 
    (SELECT 
      old_reserves.branchcode, 
      Count(old_reserves.reserve_id) AS Count_reserve_id 
    FROM 
      old_reserves 
    WHERE 
      Month(old_reserves.cancellationdate) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(old_reserves.cancellationdate) = Year(Now() - INTERVAL 1 MONTH) AND 
      (old_reserves.found <> 'F' OR 
        old_reserves.found IS NULL) 
    GROUP BY 
      old_reserves.branchcode 
    ) requests_cancelled 
  ON branches.branchcode = requests_cancelled.branchcode LEFT JOIN 
    (SELECT 
      old_reserves.branchcode, 
      Count(old_reserves.reserve_id) AS Count_reserve_id 
    FROM 
      old_reserves 
    WHERE 
      Month(old_reserves.cancellationdate) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(old_reserves.cancellationdate) = Year(Now() - INTERVAL 1 MONTH) AND 
      old_reserves.found = 'T' 
    GROUP BY 
      old_reserves.branchcode 
    ) requests_cancelled_in_transit 
  ON branches.branchcode = requests_cancelled_in_transit.branchcode LEFT JOIN 
    (SELECT 
      old_reserves.branchcode, 
      Count(old_reserves.reserve_id) AS Count_reserve_id 
    FROM 
      old_reserves 
    WHERE 
      Month(old_reserves.cancellationdate) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(old_reserves.cancellationdate) = Year(Now() - INTERVAL 1 MONTH) AND 
      old_reserves.found = 'W' 
    GROUP BY 
      old_reserves.branchcode 
    ) requests_cancelled_from_hold_shelf 
  ON branches.branchcode = requests_cancelled_from_hold_shelf.branchcode LEFT JOIN 
    (SELECT 
      old_reserves.branchcode, 
      Count(old_reserves.reserve_id) AS Count_reserve_id 
    FROM 
      old_reserves 
    WHERE 
      Month(old_reserves.cancellationdate) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(old_reserves.cancellationdate) = Year(Now() - INTERVAL 1 MONTH) AND 
      old_reserves.found IS NULL 
    GROUP BY 
      old_reserves.branchcode 
    ) requests_cancelled_before_pulled 
  ON branches.branchcode = requests_cancelled_before_pulled.branchcode LEFT JOIN 
    (SELECT 
      reserves.branchcode, 
      Count(reserves.reserve_id) AS Count_reserve_id 
    FROM 
      reserves JOIN 
      action_logs ON action_logs.object = reserves.reserve_id 
    WHERE 
      Year(reserves.reservedate) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(reserves.reservedate) = Month(Now() - INTERVAL 1 MONTH) AND 
      action_logs.module = 'HOLDS' AND 
      action_logs.action LIKE 'CREAT%' AND 
      action_logs.interface = 'intranet' 
    GROUP BY 
      reserves.branchcode 
    UNION 
    SELECT 
      old_reserves.branchcode, 
      Count(old_reserves.reserve_id) AS Count_reserve_id 
    FROM 
      old_reserves JOIN 
      action_logs ON action_logs.object = old_reserves.reserve_id 
    WHERE 
      Month(old_reserves.reservedate) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(old_reserves.reservedate) = Year(Now() - INTERVAL 1 MONTH) AND 
      action_logs.module = 'HOLDS' AND 
      action_logs.action LIKE 'CREAT%' AND 
      action_logs.interface = 'intranet' 
    GROUP BY 
      old_reserves.branchcode 
    ) requests_placed_staff 
  ON requests_placed_staff.branchcode = branches.branchcode LEFT JOIN 
    (SELECT 
      old_reserves.branchcode, 
      Count(old_reserves.reserve_id) AS Count_reserve_id 
    FROM 
      old_reserves JOIN 
      action_logs ON action_logs.object = old_reserves.reserve_id 
    WHERE 
      Month(action_logs.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(action_logs.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND 
      old_reserves.found IS NULL AND 
      action_logs.module = 'HOLDS' AND 
      action_logs.action = 'CANCEL' AND 
      action_logs.user = 0 
    GROUP BY 
      old_reserves.branchcode 
    ) requests_expired_unfilled 
  ON requests_expired_unfilled.branchcode = branches.branchcode 
GROUP BY 
  branches.branchname, 
  Coalesce(requests_filled.Count_reserve_id, 0), 
  Coalesce(requests_cancelled_from_hold_shelf.Count_reserve_id, 0), 
  Coalesce(requests_cancelled_in_transit.Count_reserve_id, 0), 
  Coalesce(requests_cancelled_before_pulled.Count_reserve_id, 0), 
  Coalesce(requests_cancelled.Count_reserve_id, 0), 
  requests_expired_unfilled.Count_reserve_id 
ORDER BY 
  Library ",,,,,,,,
R.002979,"/*
R.002979

----------

Name: GHW - Circulation Statistics by borrower's birth year (date range)
Created by: George H Williams

----------

Group: Statistics
     Date range

Created on: 2017-07-25 13:44:51
Modified on: 2018-04-16 11:11:31
Date last run: 2021-03-01 11:40:12

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Counts checkouts + renewals grouped by the patron's birth year</p>
<ul><li>Shows data from the date range you specify</li>
<li>at the library you specify</li>
<li>grouped and sorted by checkout branchcode and borrower's birth year</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Data from the statistics table is purged after 25 months so this report cannot generate reports for data more than 25 months old.  As with all statistical data, the best practice is to run the reports for the data you want within a month or two of the creation of that data and then to save that data as a spreadsheet.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2979&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  branches.branchcode,
  Coalesce(CIR_RENEW_LM.BIRTHYEAR, ""-"") AS BORROWERS_BIRTH_YEAR,
  Coalesce(CIR_RENEW_LM.count, 0) AS CHECKOUT_RENEW_LM
FROM
  branches
  LEFT JOIN (SELECT
      statistics.branch,
      Count(*) AS count,
      Coalesce(Year(borrowers.dateofbirth), Year(deletedborrowers.dateofbirth)) AS BIRTHYEAR
    FROM
      statistics
      LEFT JOIN borrowers ON statistics.borrowernumber = borrowers.borrowernumber
      LEFT JOIN deletedborrowers ON statistics.borrowernumber = deletedborrowers.borrowernumber
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
        (statistics.datetime BETWEEN <<Items checked out or renewed between|date>> and (<<and|date>> + interval 1 day))
    GROUP BY
      statistics.branch,
      Coalesce(Year(borrowers.dateofbirth), Year(deletedborrowers.dateofbirth))) CIR_RENEW_LM ON branches.branchcode = CIR_RENEW_LM.branch
WHERE
  branches.branchcode LIKE <<Choose check-out branch|LBRANCH>> AND
  Coalesce(CIR_RENEW_LM.BIRTHYEAR, ""-"") LIKE CONCAT(""%"",<<Enter patron's birth year (or enter ""%"" for all patrons)>>,""%"")
GROUP BY
  branches.branchcode,
  Coalesce(CIR_RENEW_LM.BIRTHYEAR, ""-"")
ORDER BY
  branches.branchcode,
  BORROWERS_BIRTH_YEAR",,,,,,,,
R.002981,"/*
R.002981

----------

Name: GHW - Holding branch is LIBRARY A, but Home branch is LIBRARY B
Created by: George H Williams

----------

Group: -
     -

Created on: 2017-08-07 09:45:47
Modified on: 2022-03-29 13:32:12
Date last run: 2022-03-29 13:39:16

----------

Public: 0
Expiry: 300

----------

DRAFT - This report runs but is still in progress.


----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">',
  biblio.biblionumber, '</a>') AS LINK_TO_TITLE,
  items.itemnumber,
  items.homebranch,
  items.holdingbranch,
  Concat(""-"", Coalesce(items.barcode, ""-""), ""-"") AS BARCODE,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  Concat_Ws(' ', biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ExtractValue(biblio_metadata.metadata,
  '//datafield[@tag=""245""]/subfield[@code=""n""]')) AS FULL_TITLE,
  items.dateaccessioned,
  items.datelastborrowed,
  items.datelastseen,
  Sum((Coalesce(items.issues, 0)) + Coalesce(items.renewals, 0)) AS CHECKOUTS_PLUS_RENEWALS,
  items.onloan AS CHECKED_OUT,
  damagedt.lib AS DAMAGED,
  lostt.lib AS LOST,
  withdrawnt.lib AS WITHDRAWN,
  items.itemnotes,
  items.itemnotes_nonpublic,
  items.price,
  items.replacementprice
FROM
  items
  JOIN biblio ON items.biblionumber = biblio.biblionumber
  JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber AND items.biblionumber =
    biblio_metadata.biblionumber
  LEFT JOIN (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'DAMAGED') damagedt ON items.damaged = damagedt.authorised_value
  LEFT JOIN (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOST') lostt ON items.itemlost = lostt.authorised_value
  LEFT JOIN (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'WITHDRAWN') withdrawnt ON items.withdrawn = withdrawnt.authorised_value
  LEFT JOIN (SELECT
      branchtransfers.itemnumber,
      branchtransfers.datearrived,
      branchtransfers.datesent
    FROM
      branchtransfers
    WHERE
      branchtransfers.datearrived IS NULL) transferst ON items.itemnumber = transferst.itemnumber
  LEFT JOIN (SELECT
      reserves.itemnumber,
      reserves.found
    FROM
      reserves) reservest ON items.itemnumber = reservest.itemnumber
WHERE
  items.onloan IS NULL AND
  transferst.datesent IS NULL AND
  reservest.found IS NULL AND
  (items.holdingbranch NOT LIKE @brn := <<Choose your library|ZBRAN>> COLLATE utf8mb4_unicode_ci) AND
  items.homebranch LIKE @brn
GROUP BY
  items.itemnumber
ORDER BY
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  FULL_TITLE",,,,,,,,
R.002987,"/*
R.002987

----------

Name: Koha US Sample 07
Created by: George H Williams

----------

Group: -
     -

Created on: 2017-08-07 19:49:20
Modified on: 2017-08-07 19:49:20
Date last run: 2017-12-18 22:13:26

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branches.branchcode,
  Coalesce(stats.CIRC_PLUS_RENEW, 0) AS CIRC_PLUS_RENEWAL
FROM
  branches
  LEFT JOIN (SELECT
      statistics.branch,
      Coalesce(count(*), 0) AS CIRC_PLUS_RENEW
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      statistics.datetime BETWEEN ""2017-07-01"" AND ""2017-08-01""
    GROUP BY
      statistics.branch) stats ON branches.branchcode = stats.branch
WHERE
  branches.branchcode LIKE <<Choose your library|LBRANCH>>
GROUP BY
  branches.branchcode",,,,,,,,
R.002991,"/*
R.002991

----------

Name: GHW - Patron Lists
Created by: George H Williams

----------

Group: -
     -

Created on: 2017-08-16 21:52:18
Modified on: 2019-07-17 11:44:25
Date last run: 2022-05-12 16:30:27

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  patron_lists.name,
  patron_list_patrons.borrowernumber,
  borrowers.surname,
  borrowers.firstname
FROM
  patron_lists
  INNER JOIN patron_list_patrons ON patron_list_patrons.patron_list_id = patron_lists.patron_list_id
  INNER JOIN borrowers ON patron_list_patrons.borrowernumber = borrowers.borrowernumber
ORDER BY
  patron_lists.name,
  borrowers.surname,
  borrowers.firstname",,,,,,,,
R.002992,"/*
R.002992

----------

Name: GHW - Call numbers with inappropriate space problems
Created by: George H Williams

----------

Group: Catalog Records and Items
     Fix Items

Created on: 2017-09-01 14:01:00
Modified on: 2019-11-06 00:39:17
Date last run: 2022-04-27 14:46:26

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat(
    '<a target=""_blank"" href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=', 
    biblio.biblionumber, 
    '&itemnumber=', 
    items.itemnumber, 
    '\"">', 
    'Edit item', 
    '</a>'
  ) AS Edit,
  Replace(items.itemcallnumber, ' ', '⋆') AS callnumber,
  Concat(
    '<a target=""_blank"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', 
    biblio.biblionumber, 
    '\"">', 
    biblio.title, 
    '</a>'
  ) AS Title,
  biblio.author,
  items.location AS location1,
  items.ccode AS ccode1,
  items.itype,
  items.barcode,
  biblio.biblionumber
FROM
  items
  LEFT JOIN biblio ON items.biblionumber = biblio.biblionumber
WHERE
  items.homebranch LIKE <<Choose item homebranch|LBRANCH>> AND
  ((items.itemcallnumber LIKE ' %'))
GROUP BY
  items.location,
  items.ccode,
  items.biblionumber
ORDER BY
  items.itemcallnumber",,,,,,,,
R.002993,"/*
R.002993

----------

Name: Patron re-import
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2017-09-06 13:56:13
Modified on: 2021-06-15 11:08:03
Date last run: 2022-08-16 22:21:34

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.borrowernumber,
  borrowers.cardnumber,
  borrowers.surname,
  borrowers.firstname,
  borrowers.title,
  borrowers.othernames,
  borrowers.initials,
  borrowers.streetnumber,
  borrowers.streettype,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.country,
  borrowers.email,
  borrowers.phone,
  borrowers.mobile,
  borrowers.fax,
  borrowers.emailpro,
  borrowers.phonepro,
  borrowers.B_streetnumber,
  borrowers.B_streettype,
  borrowers.B_address,
  borrowers.B_address2,
  borrowers.B_city,
  borrowers.B_state,
  borrowers.B_zipcode,
  borrowers.B_country,
  borrowers.B_email,
  borrowers.B_phone,
  borrowers.dateofbirth,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  borrowers.gonenoaddress,
  borrowers.lost,
  borrowers.debarred,
  borrowers.debarredcomment,
  borrowers.contactname,
  borrowers.contactfirstname,
  borrowers.contacttitle,
  borrowers.borrowernotes,
  borrowers.relationship,
  borrowers.ethnicity,
  borrowers.ethnotes,
  borrowers.sex,
  borrowers.password,
  borrowers.flags,
  borrowers.userid,
  borrowers.opacnote,
  borrowers.contactnote,
  borrowers.sort1,
  borrowers.sort2,
  borrowers.altcontactfirstname,
  borrowers.altcontactsurname,
  borrowers.altcontactaddress1,
  borrowers.altcontactaddress2,
  borrowers.altcontactaddress3,
  borrowers.altcontactstate,
  borrowers.altcontactzipcode,
  borrowers.altcontactcountry,
  borrowers.altcontactphone,
  borrowers.smsalertnumber,
  borrowers.sms_provider_id,
  borrowers.privacy,
  borrowers.privacy_guarantor_checkouts,
  borrowers.checkprevcheckout,
  borrowers.updated_on,
  borrowers.lastseen
FROM
  borrowers
WHERE
  borrowers.dateofbirth < CurDate() - INTERVAL 18 YEAR
GROUP BY
  borrowers.borrowernumber",,,,,,,,
R.003000,"/*
R.003000

----------

Name: GHW - Expired patrons 005 - patrons by expired attribute
Created by: George H Williams

----------

Group: Borrowers
     Patron attributes

Created on: 2017-09-18 10:49:25
Modified on: 2022-04-14 17:30:59
Date last run: 2022-09-19 10:35:17

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Lists patrons based on Account Expiration attributes.</p>
<ul><li>Shows patrons who currently have an Account Expiration attribute set</li>
<li>at the library you specify</li>
<li>grouped by borrower number</li>
<li>sorted by branchcode, patron name, and borrower number</li>
<li>contains links to borrower accounts</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3000&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat('<a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', borrowers.borrowernumber, '"" target=""_blank"">Link to patron</a>') AS LINK_TO_PATRON,
  borrowers.borrowernumber,
  borrowers.cardnumber,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  If(
    (AddDate(Last_Day(SubDate(borrowers.dateexpiry, INTERVAL -37 MONTH)), 1) + INTERVAL 14 DAY) < CAST('2018-04-15' AS DATE), 
    CAST('2018-04-15' AS DATE), 
    (AddDate(Last_Day(SubDate(borrowers.dateexpiry, INTERVAL -37 MONTH)), 1) + INTERVAL 14 DAY)
  ) AS PROJECTED_DELETION,
  Coalesce(accountlinesx.DUE_SUM, 0) AS AMT_DUE,
  Coalesce(issuesx.ICOUNT, 0) AS CHECKOUTS,
  Coalesce(guaranteesx.GCOUNT, 0) AS GUARANTEES,
  Coalesce(requestsx.Count_reserve_id, 0) AS REQUESTS,
  expired_attribute.lib AS ATTRIBUTE
FROM
  borrowers LEFT JOIN
  (SELECT
      accountlines.borrowernumber,
      Format(Sum(accountlines.amountoutstanding), 2) AS DUE_SUM
    FROM
      accountlines
    GROUP BY
      accountlines.borrowernumber) accountlinesx ON borrowers.borrowernumber =
      accountlinesx.borrowernumber LEFT JOIN
  (SELECT
      issues.borrowernumber,
      Count(issues.issue_id) AS ICOUNT
    FROM
      issues
    GROUP BY
      issues.borrowernumber) issuesx ON borrowers.borrowernumber =
      issuesx.borrowernumber LEFT JOIN
  (SELECT
      reserves.borrowernumber,
      Count(reserves.reserve_id) AS Count_reserve_id
    FROM
      reserves
    GROUP BY
      reserves.borrowernumber) requestsx ON borrowers.borrowernumber =
      requestsx.borrowernumber LEFT JOIN
  (SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute,
      authorised_values.lib,
      authorised_values.category
    FROM
      borrower_attributes JOIN
      authorised_values ON borrower_attributes.attribute =
          authorised_values.authorised_value
    WHERE
      borrower_attributes.code = 'expired' AND
      authorised_values.category = 'expired') expired_attribute ON
      borrowers.borrowernumber = expired_attribute.borrowernumber LEFT JOIN
  (SELECT
      borrower_relationships.guarantor_id,
      Count(borrower_relationships.guarantee_id) AS GCOUNT
    FROM
      borrower_relationships
    GROUP BY
      borrower_relationships.guarantor_id) guaranteesx ON
      guaranteesx.guarantor_id = borrowers.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Choose your library|LBRANCH>> AND
  borrowers.othernames NOT LIKE ""%SIP%"" AND
  borrowers.categorycode <> 'STAFF' AND
  borrowers.categorycode <> 'ILL' AND
  borrowers.categorycode <> 'HOOPLA' AND
  expired_attribute.attribute LIKE <<Choose expiration notice|LEXPIRED>>
GROUP BY
  borrowers.borrowernumber
ORDER BY
  borrowers.dateexpiry,
  borrowers.branchcode,
  borrowers.surname,
  borrowers.firstname,
  borrowers.borrowernumber",,,,,,,,
R.003004,"/*
R.003004

----------

Name: GHW - Circulation Transaction Log
Created by: George H Williams

----------

Group: Circulation
     -

Created on: 2017-10-05 15:03:46
Modified on: 2020-02-18 15:02:02
Date last run: 2022-07-25 11:58:59

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a transaction log for all checkouts and renewals at a branch on one day</p>
<ul><li>Shows a log for the date you specify</li>
<li>Shows all of the checkouts and renewals at the branch you specify</li>
<li>grouped by date, time, item barcode, and patron barcode</li>
<li>sorted by date/time from newest to oldest</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report will only show the staff login for checkouts (renewals are not logged) but the way this report gathers data from the action logs is not perfect so you may see renewals with staff login information and checkouts with no staff login information.<br />
Staff login information can only be recovered if the circulation occurred in the previous 60 days.  The table where that information is stored has data more than 60 days old purged on a daily basis.<br />
Transaction history is only saved for the previous 25 months.  You cannot run this report to gather data more than 25 months old.<br />
This report will only cover 1 day at a time.  Creating a report that generates a log for multiple days has the potential to disrupt the system.<br />
</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3004&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  statistics.datetime,
  statistics.branch,
  actions.cardnumber AS STAFF_LOGIN,
  statistics.type,
  Upper(items.barcode) AS ITEM_BC,
  statistics.itemtype,
  statistics.ccode,
  Upper(borrowers.cardnumber) AS PATRON_BC
FROM
  statistics
  LEFT JOIN items ON statistics.itemnumber = items.itemnumber
  LEFT JOIN borrowers ON statistics.borrowernumber = borrowers.borrowernumber
  LEFT JOIN (SELECT
        action_logs.timestamp,
        action_logs.object,
        action_logs.info,
        action_logs.module,
        action_logs.action,
        action_logs.user,
        borrowers.cardnumber
      FROM
        action_logs
        JOIN borrowers ON action_logs.user = borrowers.borrowernumber
      WHERE
        action_logs.module = 'circulation' AND
        (action_logs.action = 'issue' OR
         action_logs.action = 'renewal')) actions
  ON statistics.itemnumber = actions.info
  AND statistics.borrowernumber = actions.object
  AND statistics.datetime = actions.timestamp
WHERE
  (statistics.type = 'ISSUE' OR
    statistics.type = 'RENEW') AND
  statistics.branch LIKE <<Choose your branch|ZBRAN>> AND
  statistics.datetime BETWEEN (@startdate := CAST(<<Choose the date|date>> AS DATE)) AND (CAST(@startdate AS DATE) + INTERVAL 1 DAY)
GROUP BY
  statistics.datetime,
  ITEM_BC,
  PATRON_BC
ORDER BY
  statistics.datetime DESC",,,,,,,,
R.003006,"/*
R.003006

----------

Name: GHW - Prioritized Holds Queue
Created by: George H Williams

----------

Group: -
     -

Created on: 2017-10-12 12:11:36
Modified on: 2017-12-19 09:38:38
Date last run: 2021-07-03 11:09:19

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat_Ws('<br />',
    hold_fill_targets.source_branchcode,
    items.homebranch,
    (Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">Go to biblio</a>')),
    If(localonly.Count_itemnumber > 0, ""<span style='background-color: yellow;'>TOP PRIORITY<br />ONLY COPY AVAILABLE</span>"",
    If(availablecount.Count_itemnumber < 3, ""<span style='background-color: orange;'>Priority<br />All other copies checked out</span>"", ""-""))) AS CURRENT_OWNING,
  Concat_Ws('<br />', items.location, authorised_values.lib, items.itemcallnumber) AS CALL_NUMBER,
  Concat_Ws('<br />',
    biblio.author,
    (Concat_Ws('<br />',
      biblio.title,
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')))) AS AUTHOR_TITLE,
  Concat_Ws('<br />', (Concat('<img src=""/cgi-bin/koha/svc/barcode?barcode=', '*', Upper(items.barcode), '*', '&type=Code39""></img>')),
    items.barcode) AS BARCODE
FROM
  biblio
  LEFT JOIN ((hold_fill_targets
  LEFT JOIN items ON hold_fill_targets.itemnumber = items.itemnumber)
  LEFT JOIN biblioitems ON items.biblioitemnumber = biblioitems.biblioitemnumber) ON biblio.biblionumber =
    biblioitems.biblionumber
  LEFT JOIN authorised_values ON items.ccode = authorised_values.authorised_value
  INNER JOIN (SELECT
        hold_fill_targets.biblionumber,
        Count(DISTINCT items.itemnumber) AS Count_itemnumber
      FROM
        hold_fill_targets
        JOIN items ON hold_fill_targets.biblionumber = items.biblionumber
      WHERE
        items.onloan IS NULL AND
        (items.notforloan = 0 OR
          items.notforloan IS NULL) AND
        (items.damaged = 0 OR
          items.damaged IS NULL) AND
        (items.itemlost = 0 OR
          items.itemlost IS NULL) AND
        (items.withdrawn = 0 OR
          items.withdrawn IS NULL)
      GROUP BY
        hold_fill_targets.biblionumber) availablecount ON hold_fill_targets.biblionumber = availablecount.biblionumber
  LEFT JOIN (SELECT
        hold_fill_targets.biblionumber,
        Count(DISTINCT items.itemnumber) AS Count_itemnumber,
        Group_Concat(DISTINCT items.holdingbranch) AS Group_Concat_holdingbranch
      FROM
        hold_fill_targets
        JOIN items ON hold_fill_targets.biblionumber = items.biblionumber
      WHERE
        ((items.notforloan = 0 OR
          items.notforloan IS NULL) AND
        (items.damaged = 0 OR
          items.damaged IS NULL) AND
        (items.itemlost = 0 OR
          items.itemlost IS NULL) AND
        (items.withdrawn = 0 OR
          items.withdrawn IS NULL)) OR
        ((items.notforloan = 0 OR
          items.notforloan IS NULL) AND
        (items.damaged = 0 OR
          items.damaged IS NULL) AND
        (items.itemlost = 0 OR
          items.itemlost IS NULL) AND
        (items.withdrawn = 0 OR
          items.withdrawn IS NULL))
      GROUP BY
        hold_fill_targets.biblionumber
      HAVING
        Count(DISTINCT items.itemnumber) = 1 AND
        Group_Concat(DISTINCT items.holdingbranch) LIKE <<Choose your branch|branches>>) localonly ON
    hold_fill_targets.biblionumber = localonly.biblionumber
  LEFT JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber AND items.biblioitemnumber =
    biblio_metadata.biblionumber
WHERE
  authorised_values.category = ""ccode"" AND
  hold_fill_targets.source_branchcode LIKE <<Choose your branch again|branches>>
GROUP BY
  Concat_Ws('<br />', items.location, authorised_values.lib, items.itemcallnumber), Concat_Ws('<br />', biblio.author, (Concat_Ws('<br />', biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')))), If(localonly.Count_itemnumber > 0, ""TOP PRIORITY"", If(availablecount.Count_itemnumber < 3, ""Priority"", ""-"")),
  items.holdingbranch,
  biblio.author,
  biblio.title
ORDER BY
  If(localonly.Count_itemnumber > 0, ""TOP PRIORITY"", If(availablecount.Count_itemnumber < 3, ""Priority"", ""-"")) DESC,
  CALL_NUMBER,
  AUTHOR_TITLE",,,,,,,,
R.003007,"/*
R.003007

----------

Name: GHW - Single patron address label
Created by: George H Williams

----------

Group: -
     -

Created on: 2017-10-19 12:23:06
Modified on: 2017-12-22 17:39:12
Date last run: 2018-01-30 14:43:50

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  CONCAT(
    borrowers.firstname,
    "" "",
    borrowers.surname,
    ""<br />"",
    borrowers.address,
    ""<br />"",
    borrowers.city,
    "", "",
    borrowers.state,
    "" "",
    borrowers.zipcode)  AS SINGLE_ADDRESS_LABEL  
FROM
  borrowers
WHERE
  borrowers.cardnumber LIKE Concat(""%"", <<Enter patron barcode number>>, ""%"")",,,,,,,,
R.003009,"/*
R.003009

----------

Name: GHW - Accountlines by item barcode number (or description or note keyword)
Created by: George H Williams

----------

Group: Fines/Fees
     -

Created on: 2017-10-23 09:30:01
Modified on: 2022-01-27 08:52:40
Date last run: 2022-10-03 14:22:35

----------

Public: 0
Expiry: 300

----------

<div id='reportinfo' class='noprint'>
<p>Shows accountline information for a particular item if the item's barcode number has been stored in the accountlines description or accountlines note fields</p>
<ul><li>Shows all accountlines related to the item barcode number specified</li>
<li>Shows accountlines related to that item regardless as to which item owns the item or is owed the fee</li>
<li>grouped and sorted by patron barcode number and accountline id</li>
<li>links to the patron's fine history</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report was fully updated on January 21, 2022 to make it do a better job of search both the accountlines description and accountline notes at the same time.</p>
<p></p>
<p style=""text-decoration: underline;"">This report can only show the fee history on an item if the barcode number of the item was recorded in the description or note fields of the fee record.  Currently Koha no longer stores this information automatically in the description or note fields.</p>
<p>This report can only show the fines history on an item if the fee is unpaid or was paid less than 25 months ago.</p>
<p>In some version of Koha, the item barcode number was not always stored in the description field.  If the item's barcode number was not stored in the description or note fields, this report cannot recover the data about the fee history.</p>
<p>This report will show any entries in the patron's fee history - fees, credits, notes, writeoffs, etc.  The only requirement is that the fee description or note contains the item barcode number you are searching for.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3009&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat(
    '<a class=""btn btn-default noprint"" href=\""/cgi-bin/koha/members/boraccount.pl?borrowernumber=', 
    borrowers.borrowernumber, 
    '\"" target=""_blank"">Borrower transactions</a>'
  ) AS LINK,
  borrowers.cardnumber as BORROWER_CARDNUMBER,
  CONCAT_WS(
    ' // ', 
    accountlines.description, 
    accountlines.note
  ) as DESCRIP_NOTES,
  accountlines.date,
  Format(accountlines.amount, 2) AS amount
FROM
  accountlines
  JOIN borrowers ON accountlines.borrowernumber = borrowers.borrowernumber
WHERE
  CONCAT_WS(
    ', ', 
    accountlines.description, 
    accountlines.note
  ) LIKE CONCAT(""%"", <<Enter item barcode number or other search terms>>, ""%"")
GROUP BY
  borrowers.cardnumber,
  accountlines.accountlines_id
ORDER BY
  accountlines.date DESC",,,,,,,,
R.003010,"/*
R.003010

----------

Name: GHW - SMS Providers List
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2017-11-01 08:24:07
Modified on: 2018-04-16 11:11:41
Date last run: 2017-11-01 08:24:32

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a list of SMS providers in the system</p>
<ul><li>Lists current providers plus the domain name for e-mail to text services</li>
<li>For all libraries in the system</li>
<li>grouped and sorted by provider name</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3010&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  sms_providers.name,
  sms_providers.domain
FROM
  sms_providers
GROUP BY
  sms_providers.name,
  sms_providers.domain",,,,,,,,
R.003012,"/*
R.003012

----------

Name: GHW - Unneeded restrictions
Created by: George H Williams

----------

Group: Borrowers
     Fix Patrons

Created on: 2017-11-15 16:38:41
Modified on: 2019-08-21 23:52:35
Date last run: 2022-09-03 15:31:28

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Shows patrons with a restriction on their account that my no longer be justified</p>
<ul><li>Shows current restrictions</li>
<li>shows patrons based on the home library you select when running the report</li>
<li>grouped by borrowernumber and borrower_debarment_id</li>
<li>sorted by borrower homebranch and date the restriction was created</li>
<li>links</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>There are thousands of restrictions that were added manually on 2014.03.12 in an effort to clear up some database issues.  None of the 2014.03.12 restrictions have any comments or notes explaining the reason for the restriction.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3012&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', borrowers.borrowernumber, '\"" target=""_blank"">Link to patron</a>') AS LINK_TO_PATRON,
  borrowers.cardnumber,
  borrowers.branchcode,
  borrower_debarments.created,
  borrower_debarments.updated,
  borrower_debarments.expiration,
  borrower_debarments.type,
  borrower_debarments.comment,
  Concat('<a href=\""/cgi-bin/koha/members/mod_debarment.pl?borrowernumber=', borrowers.borrowernumber, '&borrower_debarment_id=', borrower_debarment_id 	, '&action=del"" target=""_blank"">Deelte</a>') AS DEELETE
FROM
  borrowers
  LEFT JOIN accountlines ON accountlines.borrowernumber = borrowers.borrowernumber
  LEFT JOIN issues ON issues.borrowernumber = borrowers.borrowernumber
  JOIN borrower_debarments ON borrower_debarments.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Choose a library|LBRANCH>>
GROUP BY
  borrowers.borrowernumber,
  borrower_debarments.borrower_debarment_id
HAVING
  Sum(accountlines.amountoutstanding) = 0 AND
  Count(issues.issue_id) = 0
ORDER BY
  borrowers.branchcode,
  borrower_debarments.created",,,,,,,,
R.003013,"/*
R.003013

----------

Name: GHW - Unneeded restrictions II
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2017-11-16 08:38:02
Modified on: 2017-11-16 22:09:08
Date last run: 2021-07-20 08:44:47

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/members/boraccount.pl?borrowernumber=', borrowers.borrowernumber,'\"" target=""_blank"">Link to patron</a>') AS LINK_TO_PATRON,
  borrowers.cardnumber,
  borrowers.branchcode,
  borrower_debarments.created,
  borrower_debarments.updated,
  borrower_debarments.expiration,
  borrower_debarments.comment
FROM
  borrowers
  LEFT JOIN accountlines ON accountlines.borrowernumber = borrowers.borrowernumber
  LEFT JOIN issues ON issues.borrowernumber = borrowers.borrowernumber
  INNER JOIN borrower_debarments ON borrower_debarments.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Choose library|LBRANCH>>
GROUP BY
  borrowers.borrowernumber,
  borrower_debarments.borrower_debarment_id,
  borrower_debarments.comment
HAVING
  Sum(accountlines.amountoutstanding) = 0 AND
  Count(issues.issue_id) = 0
ORDER BY
  borrowers.branchcode,
  borrower_debarments.created",,,,,,,,
R.003015,"/*
R.003015

----------

Name: GHW - Hold Contact Method
Created by: George H Williams

----------

Group: Borrowers
     -

Created on: 2017-12-08 18:58:23
Modified on: 2018-04-16 11:11:01
Date last run: 2020-04-30 14:34:26

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a list of patrons based on their holds contact method</p>
<ul><li>Shows current data only</li>
<li>for patrons at the library you specify</li>
<li>grouped by card number</li>
<li>sorted by homebranch and name</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3015&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  borrowers.branchcode,
  borrowers.cardnumber,
  Concat(borrowers.surname, "", "", borrowers.firstname) AS BORROWER_NAME,
  Coalesce(Concat(hold.code, "", "", hold.lib), ""-"") AS METHOD,
  IF(Coalesce(Concat(hold.code, "", "", hold.lib), ""-"") LIKE ""%Book%"", ""Book club"", IF(Coalesce(Concat(hold.code, "", "", hold.lib), ""-"") LIKE ""%Email%"", IF(borrowers.email = """", ""<span style='background-color: red'>---</span>"", borrowers.email), IF(Coalesce(Concat(hold.code, "", "", hold.lib), ""-"") LIKE ""%Home%"", ""Home delivery"", IF(Coalesce(Concat(hold.code, "", "", hold.lib), ""-"") LIKE ""%Post%"", ""Postcard"", IF(Coalesce(Concat(hold.code, "", "", hold.lib), ""-"") LIKE ""%Phone%"", IF(borrowers.phone = """", ""<span style='background-color: red'>---</span>"", borrowers.phone), IF(Coalesce(Concat(hold.code, "", "", hold.lib), ""-"") LIKE ""%Text%"", IF(borrowers.smsalertnumber < 1, ""<span style='background-color: red'>---</span>"", IF(borrowers.smsalertnumber IS NULL, ""<span style='background-color: red'>---</span>"", borrowers.smsalertnumber)), ""-"")))))) AS CONTACT_AT
FROM
  borrowers
  LEFT JOIN (SELECT
        borrower_attributes.borrowernumber,
        borrower_attributes.code,
        authorised_values.lib,
        authorised_values.authorised_value
      FROM
        borrower_attributes
        JOIN borrower_attribute_types ON borrower_attributes.code = borrower_attribute_types.code
        JOIN authorised_values ON borrower_attribute_types.authorised_value_category = authorised_values.category
          AND borrower_attributes.attribute = authorised_values.authorised_value
      WHERE
        borrower_attributes.code = 'HOLD') hold ON borrowers.borrowernumber = hold.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Choose patron home branch|ZBRAN>> AND
  Coalesce(hold.authorised_value, '-') LIKE <<Hold contact method|YHOLDCON>>
GROUP BY
  borrowers.cardnumber
ORDER BY
  borrowers.branchcode,
  BORROWER_NAME",,,,,,,,
R.003016,"/*
R.003016

----------

Name: GHW - Last 50 bibliographic records added
Created by: George H Williams

----------

Group: Catalog Records and Items
     -

Created on: 2017-12-10 15:42:24
Modified on: 2017-12-10 15:42:24
Date last run: 2019-11-04 22:07:37

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  biblio.biblionumber,
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">', ""LINK"", '</a>') AS LINK,
  biblio.author,
  biblio.title
FROM
  biblio
ORDER BY
  biblio.biblionumber DESC
  LIMIT 50",,,,,,,,
R.003018,"/*
R.003018

----------

Name: GHW - YEAREND 1801
Created by: George H Williams

----------

Group: Daily, Monthly, Yearly Stats
     Yearly Stats Suite

Created on: 2017-12-19 16:03:27
Modified on: 2017-12-19 16:03:51
Date last run: 2022-09-01 15:47:03

----------

Public: 0
Expiry: 300

----------

Biblios and items - run at 12:05 a.m. on January 1

----------
*/

","SELECT
  branches.branchcode,
  Coalesce(CURRENT_BIBLIO_COUNT.Count_biblionumber, 0) AS BIBLIO_COUNT,
  Coalesce(CURRENT_ITEM_COUNT.Count_itemnumber, 0) AS ITEM_COUNT
FROM
  branches
  LEFT JOIN (SELECT
        items.homebranch,
        Count(DISTINCT items.itemnumber) AS Count_itemnumber
      FROM
        items
      GROUP BY
        items.homebranch) CURRENT_ITEM_COUNT ON branches.branchcode = CURRENT_ITEM_COUNT.homebranch
  LEFT JOIN (SELECT
        items.homebranch,
        Count(DISTINCT items.biblionumber) AS Count_biblionumber
      FROM
        items
      GROUP BY
        items.homebranch) CURRENT_BIBLIO_COUNT ON branches.branchcode = CURRENT_BIBLIO_COUNT.homebranch",,,,,,,,
R.003019,"/*
R.003019

----------

Name: GHW - Users with failed password login attempts
Created by: George H Williams

----------

Group: Borrowers
     Fix Patrons

Created on: 2017-12-20 13:18:37
Modified on: 2018-05-29 11:17:57
Date last run: 2022-09-01 10:00:56

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Shows users who have attempted to login in to their account but failed.  Patrons with more than 5 failed attempts are locked out.</p>
<ul><li>Shows any users who have failed logging in at least once.</li>
<li>at the library you specify - or with the card number you specify - or both</li>
<li>grouped by library card number</li>
<li>sorted by branchcode, patron's last name, patron's first name, and library card number</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Any user with permission to log into the staff client will have an indicator of ""Staff"" in the ""ACCESS_TYPE"" column.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3019&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  borrowers.cardnumber,
  borrowers.surname,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.login_attempts,
  borrowers.updated_on AS LAST_LOGIN_ATTEMPT,
  If(borrowers.flags > 0, ""Staff"", ""-"") AS ACCESS_TYPE,
  borrowers.email,
  IF(borrowers.login_attempts > 4, ""<span style='color: red;'>LOCKED OUT</span>"", ""-"") AS LOCKED
FROM
  borrowers
WHERE
  borrowers.login_attempts > 0 AND
  borrowers.branchcode LIKE <<Choose patron home branch|LBRANCH>> AND
  borrowers.cardnumber LIKE <<OR -- Enter patron's card number or a % symbol to display all patrons>>
GROUP BY
  borrowers.cardnumber
ORDER BY
  borrowers.branchcode,
  borrowers.surname,
  borrowers.firstname,
  borrowers.cardnumber",,,,,,,,
R.003022,"/*
R.003022

----------

Name: GHW - Paypal report - previous calendar month
Created by: George H Williams

----------

Group: Fines/Fees
     -

Created on: 2017-12-22 16:12:49
Modified on: 2019-12-26 11:46:58
Date last run: 2022-09-23 16:18:06

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a report of payments made to libraries via Paypal in the previous calendar month</p>
<ul><li>Shows payments made in the previous calendar month</li>
<li>At all libraries</li>
<li>grouped by account offsets ID</li>
<li>sorted by library owed the fee, payment date, and fee reference ID</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3022&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>
<p><span style=""color: yellow; background-color: red; font-size: 200%;"">References accountlines.accounttype.  Needs to be updated after January 4, 2020</span></p>

----------
*/

","SELECT
  borrowerinfo.branchcode AS COLLECTED_AT,
  If(
    debits.accounttype = 'F',
    Coalesce(old_issues.branchcode, borrowerinfo.branchcode),
    If(
      debits.accounttype = 'M',
      Coalesce(manualinvoiceinfo.branchcode, borrowerinfo.branchcode),
      If(
        debits.accounttype = 'L',
        Coalesce(items.homebranch, Coalesce(manualinvoiceinfo.branchcode, borrowerinfo.branchcode)),
        borrowerinfo.branchcode
      )
    )
  ) AS COLLECTED_ON_BEHALF_OF /* Test comment */,
  Format(ABS(credits.amount), 2) AS AMT_COLLECTED,
  borrowerinfo.cardnumber AS FROM_PATRON,
  credits.note AS PAYMENT_NOTES,
  credits.date AS PAYMENT_DATE,
  Concat_Ws(""-"", credits.accountlines_id, credits.accountno) AS PAYMENT_REFERENCE,
  If(items.barcode IS NULL, ""DELETED"", Upper(items.barcode)) AS FOR_ITEM,
  If(items.homebranch IS NULL, ""DELETED"", items.homebranch) AS OWNED_BY,
  debits.date AS FEE_DATE,
  Format(ABS(account_offsets.amount), 2) AS FEE_AMOUNT,
  If(
    Format((debits.amount + account_offsets.amount), 2) = 0,
    ""-"", Format((debits.amount + account_offsets.amount), 2)
  ) AS PREVIOUS_PAYMENTS,
  Format(debits.amountoutstanding, 2) AS FEE_STILL_OWED,
  debits.description AS FEE_DESCRIPTION,
  debits.note AS FEE_NOTE,
  Concat_Ws(""-"", debits.accountlines_id, debits.accountno) AS FEE_REFERENCE
FROM
  accountlines credits
  JOIN account_offsets ON account_offsets.credit_id = credits.accountlines_id
  JOIN accountlines debits ON account_offsets.debit_id = debits.accountlines_id
  LEFT JOIN old_issues ON debits.issue_id = old_issues.issue_id
  LEFT JOIN items ON debits.itemnumber = items.itemnumber
  JOIN borrowers borrowerinfo ON borrowerinfo.borrowernumber = credits.borrowernumber
  LEFT JOIN borrowers manualinvoiceinfo ON manualinvoiceinfo.borrowernumber = debits.manager_id
WHERE
  credits.note LIKE ""%Paypal%"" AND
  Month(credits.date) = Month(Now() - INTERVAL 1 MONTH) AND
  Year(credits.date) = Year(Now() - INTERVAL 1 MONTH) AND
  If(
    debits.accounttype = 'F',
    Coalesce(old_issues.branchcode, borrowerinfo.branchcode),
    If(
      debits.accounttype = 'M',
      Coalesce(manualinvoiceinfo.branchcode, borrowerinfo.branchcode),
      If(
        debits.accounttype = 'L',
        Coalesce(items.homebranch, Coalesce(manualinvoiceinfo.branchcode, borrowerinfo.branchcode)),
        borrowerinfo.branchcode
      )
    )
  ) LIKE <<Choose your library|LBRANCH>>
GROUP BY
  account_offsets.id
ORDER BY
  COLLECTED_ON_BEHALF_OF,
  PAYMENT_DATE,
  FEE_REFERENCE",,,,,,,,
R.003023,"/*
R.003023

----------

Name: GHW - Cronjob count
Created by: George H Williams

----------

Group: -
     -

Created on: 2017-12-27 10:35:28
Modified on: 2018-04-16 11:13:30
Date last run: 2018-01-24 14:25:53

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Counts the number of times a specified cronjob has run in the previous 60 days</p>
<ul><li>Counts cronjobs run in the previuos 60 days</li>
<li>system-wide</li>
<li>grouped by date and cronjob name</li>
<li>sorted by date - newest to oldest</li>
<li>Contains links to report 3024 which allows you to see the specific times the cronjob ran on that date</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3023&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Date_Format(action_logs.timestamp, ""%Y-%m-%d"") AS DATE,
  action_logs.info,
  Count(action_logs.action_id) AS COUNT,
  Concat(""<a href='/cgi-bin/koha/reports/guided_reports.pl?reports=3024&phase=Run+this+report&sql_params="", action_logs.info, ""%25&sql_params="", Date_Format(action_logs.timestamp, '%m'), ""%2F"", Date_Format(action_logs.timestamp, '%d'), ""%2F"", Date_Format(action_logs.timestamp, '%Y'), ""&sql_params="", Date_Format(action_logs.timestamp, '%m'), ""%2F"", Date_Format(action_logs.timestamp, '%d'), ""%2F"", Date_Format(action_logs.timestamp, '%Y'), ""' target='_blank'>See when this cronjob ran on this date</a>"") AS LINK
FROM
  action_logs
WHERE
  action_logs.module = 'CRONJOBS' AND
  action_logs.info LIKE <<Choose a cronjob|LCRONJOBS>>
GROUP BY
  Date_Format(action_logs.timestamp, ""%Y.%m.%d""),
  action_logs.info
ORDER BY
  DATE DESC, action_logs.info ASC",,,,,,,,
R.003024,"/*
R.003024

----------

Name: GHW - Cronjobs by name and date range
Created by: George H Williams

----------

Group: -
     -

Created on: 2017-12-27 10:45:27
Modified on: 2018-04-16 11:13:34
Date last run: 2021-07-01 13:32:14

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Shows the time a cronjob ran on the date specified within the previous 60 days</p>
<ul><li>Shows cronojb run times during the date range you specify</li>
<li>shows runtimes for cronjobs system wide</li>
<li>grouped by the actionlog ID for the cronjob</li>
<li>sorted by the date and time the cronjob ran - newest dates to oldest dates</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3024&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Date_Format(action_logs.timestamp, ""%Y-%m-%d"") AS DATE,
  action_logs.info,
  action_logs.action_id,
  DATE_FORMAT(action_logs.timestamp, '%T') as TIME_OF_DAY
FROM
  action_logs
WHERE
  action_logs.module = 'CRONJOBS' AND
  action_logs.info LIKE <<Choose a cronjob|LCRONJOBS>> AND
  action_logs.timestamp BETWEEN <<Between start date|date>> AND (<<end date|date>> + interval 1 day)
GROUP BY
  action_logs.action_id
ORDER BY
  action_logs.timestamp DESC",,,,,,,,
R.003026,"/*
R.003026

----------

Name: GHW - YE Special BONNERSPGS
Created by: George H Williams

----------

Group: Daily, Monthly, Yearly Stats
     Yearly

Created on: 2017-12-31 14:41:04
Modified on: 2017-12-31 14:41:04
Date last run: 2018-02-01 13:59:53

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  deleteditems.barcode,
  deleteditems.homebranch,
  deleteditems.holdingbranch,
  location.lib AS LOCATION,
  itemtypes.description AS ITYPE,
  ccode.lib AS CCODE,
  deleteditems.itemcallnumber,
  Coalesce(biblio.author, deletedbiblio.author) AS AUTHOR,
  Coalesce(biblio.title, deletedbiblio.title) AS TITLE,
  deleteditems.price,
  deleteditems.replacementprice,
  deleteditems.timestamp AS DELETED_ON,
  deleteditems.itemlost,
  deleteditems.itemlost_on,
  deleteditems.withdrawn,
  deleteditems.withdrawn_on
FROM
  deleteditems
  LEFT JOIN biblio ON deleteditems.biblionumber = biblio.biblionumber
  LEFT JOIN deletedbiblio ON deleteditems.biblionumber = deletedbiblio.biblionumber
  LEFT JOIN itemtypes ON deleteditems.itype = itemtypes.itemtype
  LEFT JOIN (SELECT
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
    GROUP BY
      authorised_values.authorised_value,
      authorised_values.lib) ccode ON deleteditems.ccode = ccode.authorised_value
  LEFT JOIN (SELECT
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC'
    GROUP BY
      authorised_values.authorised_value,
      authorised_values.lib) location ON deleteditems.location = location.authorised_value
WHERE
  deleteditems.homebranch LIKE 'BONNERSPGS' AND
  Coalesce(deleteditems.location, ""-"") LIKE '%' AND
  Coalesce(deleteditems.itype, ""-"") LIKE '%' AND
  Coalesce(deleteditems.ccode, ""-"") LIKE '%' AND
  deleteditems.timestamp BETWEEN '2017-01-01' AND ('2017-12-31' + INTERVAL 1 DAY) 
GROUP BY
  deleteditems.itemnumber
ORDER BY
  deleteditems.homebranch,
  LOCATION,
  ITYPE,
  CCODE,
  AUTHOR,
  TITLE,
  deleteditems.itemcallnumber",,,,,,,,
R.003028,"/*
R.003028

----------

Name: GHW - Circulation Stats - Circulation count by flexible dates
Created by: George H Williams

----------

Group: Daily, Monthly, Yearly Stats
     -

Created on: 2018-01-04 09:13:49
Modified on: 2018-04-16 11:13:37
Date last run: 2022-10-01 15:09:44

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Counts circulation (checkouts and renewals) based on flexible date settings</p>
<ul><li>Counts circulation based on the date parameters you set</li>
<li>at the library you choose</li>
<li>grouped and sorted by checkout branch and date of checkout</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Please note that items renewed via the OPAC are counted as renewals at the library where the item was checked out.  Therefore, if you see a circulation count at a library on a day that the library is normally closed, it is almost certainly due to a renewal initiated by the patron via the OPAC.</p>
<p></p>
<p>This report replaces reports 2396, 2397, 2398, 2399, 2400, 2401, and 2402</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3028&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  branches.branchcode,
  checkouts.DATE,
  checkouts.DAY_OF_WEEK,
  Coalesce(checkouts.count, 0) AS CKO_COUNT
FROM
  branches
  LEFT JOIN (SELECT
        statistics.branch,
        Date_Format(statistics.datetime, ""%Y-%m-%d"") AS DATE,
        Date_Format(statistics.datetime, ""%Y"") AS YEAR,
        Date_Format(statistics.datetime, ""%m"") AS MONTH,
        Date_Format(statistics.datetime, ""%d"") AS DATEX,
        Date_Format(statistics.datetime, ""%W"") AS DAY_OF_WEEK,
        Count(*) AS count
      FROM
        statistics
      WHERE
        (statistics.type = 'issue' OR
          statistics.type = 'renew') AND
        Date_Format(statistics.datetime, ""%Y"") LIKE <<Choose checkout year|LYEAR>> AND
        Date_Format(statistics.datetime, ""%m"") LIKE <<Choose checkout month|LMONTH>> AND
        Date_Format(statistics.datetime, ""%d"") LIKE <<Choose checkout date|LDATE>> AND
        Date_Format(statistics.datetime, ""%W"") LIKE <<Choose checkout day|LDAYOFWEEK>>
      GROUP BY
        statistics.branch,
        Date_Format(statistics.datetime, ""%Y-%m-%d"")) checkouts ON branches.branchcode = checkouts.branch
WHERE
  branches.branchcode LIKE <<Choose checkout branch|LBRANCH>>
ORDER BY
  branches.branchcode,
  checkouts.DATE",,,,,,,,
R.003029,"/*
R.003029

----------

Name: GHW - Circulation Stats - Checkin count by flexible dates
Created by: George H Williams

----------

Group: Daily, Monthly, Yearly Stats
     -

Created on: 2018-01-04 09:58:40
Modified on: 2018-04-16 11:13:41
Date last run: 2022-06-02 12:46:48

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Counts checkins based on flexible date settings</p>
<ul><li>Counts checkins based on the date parameters you set</li>
<li>at the library you choose</li>
<li>grouped and sorted by checkin branch and date of checkin</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report replaces reports 2404, 2405, 2406, 2407, 2408, 2409, 2410</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3029&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  branches.branchcode,
  checkins.DATE,
  checkins.DAY_OF_WEEK,
  Coalesce(checkins.count, 0) AS CKI_COUNT
FROM
  branches
  LEFT JOIN (SELECT
        statistics.branch,
        Date_Format(statistics.datetime, ""%Y-%m-%d"") AS DATE,
        Date_Format(statistics.datetime, ""%Y"") AS YEAR,
        Date_Format(statistics.datetime, ""%m"") AS MONTH,
        Date_Format(statistics.datetime, ""%d"") AS DATEX,
        Date_Format(statistics.datetime, ""%W"") AS DAY_OF_WEEK,
        Count(*) AS count
      FROM
        statistics
      WHERE
        statistics.type = 'return' AND
        Date_Format(statistics.datetime, ""%Y"") LIKE <<Choose checkin year|LYEAR>> AND
        Date_Format(statistics.datetime, ""%m"") LIKE <<Choose checkin month|LMONTH>> AND
        Date_Format(statistics.datetime, ""%d"") LIKE <<Choose checkin date|LDATE>> AND
        Date_Format(statistics.datetime, ""%W"") LIKE <<Choose checkin day|LDAYOFWEEK>>
      GROUP BY
        statistics.branch,
        Date_Format(statistics.datetime, ""%Y-%m-%d"")) checkins ON branches.branchcode = checkins.branch
WHERE
  branches.branchcode LIKE <<Choose checkin library|LBRANCH>>
GROUP BY
  branches.branchcode,
  checkins.DATE
ORDER BY
  branches.branchcode,
  checkins.DATE",,,,,,,,
R.003033,"/*
R.003033

----------

Name: GHW - Fixing 856u
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2018-01-08 16:23:36
Modified on: 2018-01-08 16:29:48
Date last run: 2018-05-04 17:41:43

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  CONCAT(""<a href='https://staff.nexpresslibrary.org/cgi-bin/koha/cataloguing/addbiblio.pl?biblionumber="", biblio_metadata.biblionumber,  "" ' target='_blank'>Edit in new window</a>"") AS LINK,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""856""]//subfield[@code=""u""]') AS URI
FROM
  biblio_metadata
WHERE
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""856""]//subfield[@code=""u""]') LIKE ""%overdrive%""
GROUP BY
  biblio_metadata.biblionumber",,,,,,,,
R.003037,"/*
R.003037

----------

Name: Title added
Created by: SABETHA TECH

----------

Group: Acquisitions
     Collection Development

Created on: 2018-01-12 10:51:47
Modified on: 2018-07-02 09:28:06
Date last run: 2022-06-22 21:34:40

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  items.dateaccessioned,
  items.barcode,
  biblio.title,
  biblio.author,
  items.holdingbranch
FROM
  items
  LEFT JOIN biblioitems ON items.biblioitemnumber = biblioitems.biblioitemnumber
  LEFT JOIN biblio ON biblioitems.biblionumber = biblio.biblionumber
WHERE
  items.holdingbranch = 'SABETHA' AND
  biblio.datecreated >= '2017-01-02' AND
  biblio.datecreated <= '2018-01-02' AND
  items.ccode = 'FICTION' AND
  items.itype = 'BOOK' AND
  items.location = 'ADULT'
ORDER BY
  items.dateaccessioned",,,,,,,,
R.003039,"/*
R.003039

----------

Name: GHW - Flexible requests history report
Created by: George H Williams

----------

Group: Holds-Reserves
     -

Created on: 2018-01-16 15:28:12
Modified on: 2018-04-16 11:13:46
Date last run: 2022-09-30 14:02:30

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a screen readable report of current and past request information based on very flexible parameters</p>
<ul><li>Shows the history of any active, filled, and cancelled requests in NExpress</li>
<li>at all pickup libraries or at the pickup library you specify</li>
<li>with the request status and progress that you specify</li>
<li>with the hold suspension status you specify</li>
<li>and with the library card, biblionumber, or item barcode number you specify</li>
<li>grouped by reserve ID number</li>
<li>sorted by the last time the request was updated</li>
<li>contains links to the action logs, the patron record, the bibliographic record, and the item's in transit history</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Contains active links to reports 2784 and 3040</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3039&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  requests.reserve_id,
  Concat(""Status: "", requests.statuss, ""<br /> Progress: "", If(requests.cancellationdate IS NOT NULL, ""Cancelled"", If(requests.found = ""T"", ""In transit"", If(requests.found = ""F"", ""Filled / finished"", If(requests.found = ""W"", ""Waiting for pickup"", ""Still active""))))) AS STATUS,
  Concat(""Patron BC: "", borrowers.cardnumber, ""<br />"", ""Pickup at: "", requests.branchcode) AS PATRON_INFO,
  Concat_Ws(""<br />"",
    Concat(""Requested on: "", requests.reservedate), Concat(""Waiting since: "", requests.waitingdate),
    Concat(""Expires on: "", requests.expirationdate), Concat(""Cancelled on: "", requests.cancellationdate),
    Concat(""Updated on: "", requests.timestamp)) AS DATES,
  Concat_Ws(""<br />"", If(requests.suspend <> 0, ""Suspended"", ""-""), If(requests.suspend = 0, ""-"", If(requests.suspend_until IS NOT NULL, Concat(""until "", Date_Format(requests.suspend_until, ""%Y.%m.%d"")), ""indefinitely""))) AS SUSPENDED,
  requests.biblionumber AS BIBLIO_NUMBER,
  Concat_Ws(""<br />"",
    Concat(""BC: "", Coalesce(Coalesce(items.barcode, ""-""), Coalesce(deleteditems.barcode, ""-""))),
    Concat(""Home: "", Coalesce(Coalesce(items.homebranch, ""-""), Coalesce(deleteditems.homebranch, ""-""))),
    Concat(""Location: "", Coalesce(Coalesce(items.location, ""-""), Coalesce(deleteditems.location, ""-""))),
    Concat(""Type: "", Coalesce(Coalesce(items.itype, ""-""), Coalesce(deleteditems.itype, ""-""))),
    Concat(""Collection: "", Coalesce(Coalesce(items.ccode, ""-""), Coalesce(deleteditems.ccode, ""-""))),
    Concat(""Call#: "", Coalesce(Coalesce(items.itemcallnumber, ""-""), Coalesce(deleteditems.itemcallnumber, ""-""))),
    Concat(""Author: "", Coalesce(Coalesce(biblio.author, ""-""), Coalesce(deletedbiblio.author, ""-""))),
    Concat(""Title: "", Coalesce(Coalesce(biblio.title, ""-""), Coalesce(deletedbiblio.title, ""-"")))) AS ITEM_INFO,
  CONCAT_WS(""<br />"",
    Concat(""Action logs: "", Concat(""<a href='/cgi-bin/koha/reports/guided_reports.pl?reports=3040&phase=Run+this+report&sql_params="", requests.reserve_id,""' target='_blank'>see last 60 days of activity</a>"")),
    Concat(""Link to patron: "", Concat(""<a href='/cgi-bin/koha/circ/circulation.pl?borrowernumber="", requests.borrowernumber,""' target='_blank'>go to the borrower's record</a>"")),
    Concat(""Link to title: "", Concat(""<a href='/cgi-bin/koha/catalogue/detail.pl?biblionumber="", requests.biblionumber,""' target='_blank'>go to the bibliographic record</a>"")),
    Concat(""Link to item: "", Concat(""<a href='/cgi-bin/koha/catalogue/moredetail.pl?itemnumber="", items.itemnumber, ""&biblionumber="", biblio.biblionumber, ""' target='_blank'>go to the item record</a>"")),
    Concat(""Item in transit history: "", Concat(""<a href='/cgi-bin/koha/reports/guided_reports.pl?reports=2784&phase=Run+this+report&sql_params="", items.barcode,""' target='_blank'>see item transit history</a>""))
) AS LINKS
FROM
  borrowers
  JOIN (SELECT
        reserves.reserve_id,
        reserves.borrowernumber,
        reserves.reservedate,
        reserves.biblionumber,
        reserves.branchcode,
        reserves.notificationdate,
        reserves.reminderdate,
        reserves.cancellationdate,
        reserves.reservenotes,
        reserves.priority,
        reserves.found,
        reserves.timestamp,
        reserves.itemnumber,
        reserves.waitingdate,
        reserves.expirationdate,
        reserves.lowestPriority,
        reserves.suspend,
        reserves.suspend_until,
        reserves.itemtype,
        If(reserves.reserve_id IS NOT NULL, ""Active"", ""-"") AS statuss
      FROM
        reserves
      UNION
      SELECT
        old_reserves.reserve_id,
        old_reserves.borrowernumber,
        old_reserves.reservedate,
        old_reserves.biblionumber,
        old_reserves.branchcode,
        old_reserves.notificationdate,
        old_reserves.reminderdate,
        old_reserves.cancellationdate,
        old_reserves.reservenotes,
        old_reserves.priority,
        old_reserves.found,
        old_reserves.timestamp,
        old_reserves.itemnumber,
        old_reserves.waitingdate,
        old_reserves.expirationdate,
        old_reserves.lowestPriority,
        old_reserves.suspend,
        old_reserves.suspend_until,
        old_reserves.itemtype,
        If(old_reserves.cancellationdate IS NOT NULL, ""Cancelled"", ""Filled"") AS statuss
      FROM
        old_reserves) requests ON borrowers.borrowernumber = requests.borrowernumber
  LEFT JOIN items ON requests.itemnumber = items.itemnumber
  LEFT JOIN deleteditems ON requests.itemnumber = deleteditems.itemnumber
  LEFT JOIN biblio ON requests.biblionumber = biblio.biblionumber
  LEFT JOIN deletedbiblio ON requests.biblionumber = deletedbiblio.biblionumber
WHERE
  requests.branchcode LIKE <<Choose pickup library|LBRANCH>> AND
  requests.statuss LIKE <<Choose request status|LHOLDACT>> AND
  If(requests.cancellationdate IS NOT NULL, ""Cancelled"", If(requests.found = ""T"", ""In transit"", If(requests.found = ""F"", ""Filled"", If(requests.found = ""W"", ""Waiting for pickup"", ""Still active"")))) LIKE <<Choose request progress|LHOLDPROG>> AND
  If(requests.suspend <> 0, ""Suspended"", ""-"") LIKE <<Choose suspended status|LHOLDSUS>> AND
  borrowers.cardnumber LIKE Concat(""%"", <<Enter library card number or a % symbol>>, ""%"") AND
  requests.biblionumber LIKE Concat(""%"", <<Enter title biblio number or a % symbol>>, ""%"") AND
  Coalesce(Coalesce(items.barcode, ""-""), Coalesce(deleteditems.barcode, ""-"")) LIKE Concat(""%"", <<Enter item barcode number or a % symbol>>, ""%"")
GROUP BY
  requests.reserve_id
ORDER BY
  requests.timestamp DESC",,,,,,,,
R.003040,"/*
R.003040

----------

Name: GHW - Request action logs by request ID
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-01-16 22:16:46
Modified on: 2018-04-16 11:13:50
Date last run: 2022-09-30 14:06:29

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Shows action log entries for specific requests from the last 60 days</p>
<ul><li>Shows actions that happened within the last 60 days</li>
<li>on the request you specify</li>
<li>grouped and sorted by action log ID</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Data from the action logs is purged once it is 60 days old.  This report cannot show you information about request modifications if those modifications happened more than 60 days ago.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3040&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  action_logs.action_id,
  action_logs.timestamp,
  action_logs.user,
  action_logs.module,
  action_logs.action,
  action_logs.object,
  REPLACE(action_logs.info, "","", "",<br />"") AS DESCRIPTION,
  action_logs.interface,
  CONCAT(""<a href='/cgi-bin/koha/circ/circulation.pl?borrowernumber="", action_logs.user, ""' target='_blank'>See who created/modified/cancelled the request</a>"") AS LINK
FROM
  action_logs
WHERE
  action_logs.module = 'HOLDS' AND
  action_logs.object LIKE Concat(""%"", <<Enter request ID number>>, ""%"")
GROUP BY
  action_logs.action_id
ORDER BY
  action_logs.action_id
  DESC",,,,,,,,
R.003041,"/*
R.003041

----------

Name: GHW - Flexible requests history spreadsheet
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2018-01-17 14:45:13
Modified on: 2018-04-16 11:13:55
Date last run: 2022-08-23 11:33:47

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a spreadsheet style report of current and past request information based on very flexible parameters</p>
<ul><li>Shows the history of any active, filled, and cancelled requests in NExpress</li>
<li>at all pickup libraries or at the pickup library you specify</li>
<li>with the request status and progress that you specify</li>
<li>with the hold suspension status you specify</li>
<li>and with the library card, biblionumber, or item barcode number you specify</li>
<li>grouped by reserve ID number</li>
<li>sorted by the last time the request was updated</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3041&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  requests.reserve_id,
  requests.statuss AS STATUS,
  If(requests.cancellationdate IS NOT NULL, ""Cancelled"", If(requests.found = ""T"", ""In transit"", If(requests.found = ""F"", ""Filled / finished"", If(requests.found = ""W"", ""Waiting for pickup"", ""Still active"")))) AS PROGRESS,
  borrowers.cardnumber AS CARDNUMBER,
  requests.branchcode AS PICKUP_BRANCH,
  requests.reservedate,
  requests.expirationdate,
  requests.cancellationdate,
  requests.timestamp,
  requests.suspend,
  requests.suspend_until,
  requests.biblionumber,
  Coalesce(items.barcode, deleteditems.barcode) AS ITEM_BC,
  Coalesce(items.homebranch, deleteditems.homebranch) AS ITEM_HOME,
  Coalesce(items.location, deleteditems.location) AS LOCATION,
  Coalesce(items.itype, deleteditems.itype) AS ITYPE,
  Coalesce(items.ccode, deleteditems.ccode) AS CCODE,
  Coalesce(items.itemcallnumber, deleteditems.itemcallnumber) AS CALL_NO,
  Coalesce(biblio.author, deletedbiblio.author) AS AUTHOR,
  Coalesce(biblio.title, deletedbiblio.title) AS TITLE
FROM
  borrowers
  JOIN (SELECT
        reserves.reserve_id,
        reserves.borrowernumber,
        reserves.reservedate,
        reserves.biblionumber,
        reserves.branchcode,
        reserves.notificationdate,
        reserves.reminderdate,
        reserves.cancellationdate,
        reserves.reservenotes,
        reserves.priority,
        reserves.found,
        reserves.timestamp,
        reserves.itemnumber,
        reserves.waitingdate,
        reserves.expirationdate,
        reserves.lowestPriority,
        reserves.suspend,
        reserves.suspend_until,
        reserves.itemtype,
        If(reserves.reserve_id IS NOT NULL, ""Active"", ""-"") AS statuss
      FROM
        reserves
      UNION
      SELECT
        old_reserves.reserve_id,
        old_reserves.borrowernumber,
        old_reserves.reservedate,
        old_reserves.biblionumber,
        old_reserves.branchcode,
        old_reserves.notificationdate,
        old_reserves.reminderdate,
        old_reserves.cancellationdate,
        old_reserves.reservenotes,
        old_reserves.priority,
        old_reserves.found,
        old_reserves.timestamp,
        old_reserves.itemnumber,
        old_reserves.waitingdate,
        old_reserves.expirationdate,
        old_reserves.lowestPriority,
        old_reserves.suspend,
        old_reserves.suspend_until,
        old_reserves.itemtype,
        If(old_reserves.cancellationdate IS NOT NULL, ""Cancelled"", ""Filled"") AS statuss
      FROM
        old_reserves) requests ON borrowers.borrowernumber = requests.borrowernumber
  LEFT JOIN items ON requests.itemnumber = items.itemnumber
  LEFT JOIN deleteditems ON requests.itemnumber = deleteditems.itemnumber
  LEFT JOIN biblio ON requests.biblionumber = biblio.biblionumber
  LEFT JOIN deletedbiblio ON requests.biblionumber = deletedbiblio.biblionumber
WHERE
  requests.branchcode LIKE <<Choose pickup library|LBRANCH>> AND
  requests.statuss LIKE <<Choose request status|LHOLDACT>> AND
  If(requests.cancellationdate IS NOT NULL, ""Cancelled"", If(requests.found = ""T"", ""In transit"", If(requests.found = ""F"", ""Filled"", If(requests.found = ""W"", ""Waiting for pickup"", ""Still active"")))) LIKE <<Choose request progress|LHOLDPROG>> AND
  If(requests.suspend <> 0, ""Suspended"", ""-"") LIKE <<Choose suspended status|LHOLDSUS>> AND
  borrowers.cardnumber LIKE Concat(""%"", <<Enter borrower barcode number or a % symbol>>, ""%"") AND
  requests.biblionumber LIKE Concat(""%"", <<Enter title biblio number or a % symbol>>, ""%"") AND
  Coalesce(Coalesce(items.barcode, ""-""), Coalesce(deleteditems.barcode, ""-"")) LIKE Concat(""%"", <<Enter item barcode number or a % symbol>>, ""%"")
GROUP BY
  requests.reserve_id
ORDER BY
  requests.timestamp DESC",,,,,,,,
R.003042,"/*
R.003042

----------

Name: GHW - �
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-01-17 15:41:49
Modified on: 2018-01-19 08:34:14
Date last run: 2018-11-29 17:04:26

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  biblio_metadata.biblionumber,
  CONCAT(""<a href='/cgi-bin/koha/cataloguing/editor.pl#catalog/"", biblio_metadata.biblionumber, ""' target='_blank'>Go to record</a>"") AS LINK
FROM
  biblio_metadata
WHERE
  Hex(biblio_metadata.metadata) LIKE ""%efbfbd%""
ORDER BY
  biblio_metadata.biblionumber
  DESC",,,,,,,,
R.003044,"/*
R.003044

----------

Name: action logs dump
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-01-23 07:35:13
Modified on: 2018-03-29 12:18:30
Date last run: 2019-09-19 23:21:26

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT *
FROM action_logs
ORDER BY 
  action_id
DESC",,,,,,,,
R.003045,"/*
R.003045

----------

Name: GHW - Deleted reports - last 60 days
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2018-01-23 10:00:34
Modified on: 2019-03-28 10:56:34
Date last run: 2022-08-11 11:14:30

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  action_logs.action_id,
  action_logs.timestamp,
  borrowers.userid,
  action_logs.module,
  action_logs.action,
  action_logs.object,
  action_logs.info,
  action_logs.interface
FROM
  action_logs
  LEFT JOIN borrowers
    ON borrowers.borrowernumber = action_logs.user
WHERE
  action_logs.module = 'REPORTS' AND
  action_logs.action LIKE 'DELE%'
GROUP BY
  action_logs.action_id,
  borrowers.userid",,,,,,,,
R.003046,"/*
R.003046

----------

Name: GHW - 245h project
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-01-23 19:42:44
Modified on: 2018-01-23 19:42:44
Date last run: 2018-01-23 19:43:25

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  biblio.biblionumber,
  items.itemnumber,
  items.barcode,
  items.homebranch,
  items.itype,
  ccodes.lib AS CCODE,
  items.itemcallnumber,
  biblio.author,
  Concat(biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')) AS FULL_TITLE,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]') AS MEDIUM
FROM
  biblio
  JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
  JOIN items ON items.biblionumber = biblio.biblionumber
  LEFT JOIN (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'CCODE'
      GROUP BY
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib) ccodes ON items.ccode = ccodes.authorised_value
WHERE
  (biblio.biblionumber <> 0) AND
  (items.itype LIKE ""%MEDIA%"" OR
  items.itype LIKE ""%1"")
GROUP BY
  biblio.biblionumber,
  items.itemnumber
ORDER BY
  items.homebranch,
  items.itype,
  CCODE,
  items.itemcallnumber,
  biblio.author,
  FULL_TITLE",,,,,,,,
R.003047,"/*
R.003047

----------

Name: GHW - GitHub SQL report 001
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-02-01 02:37:30
Modified on: 2021-10-20 09:49:31
Date last run: 2022-10-03 14:26:50

----------

Public: 0
Expiry: 300

----------

Report for uploading SQL to GitHub - part 1

----------
*/

","SELECT
  Concat(
    If(Length(saved_sql.savedsql) > 32766, ""X."", ""R.""), LPad(saved_sql.id, 6, 0)
  ) AS FILE_NAME,
  Concat(
    Concat(""/*"", Char(13), Char(10), ""R."", LPad(saved_sql.id, 6, 0)), 
    Char(13), Char(10), Char(13), Char(10),
    Concat(""----------""), 
    Char(13), Char(10), Char(13), Char(10),
    Concat(""Name: "", Coalesce(saved_sql.report_name, ""-"")), 
    Char(13), Char(10),
    Concat(
      ""Created by: "", 
      If(
        Coalesce(borrowers.borrowernumber, 0) = 0, 
        ""-"", 
        Concat(borrowers.firstname, "" "", borrowers.surname)
      )
    ), 
    Char(13), Char(10), Char(13), Char(10),
    Concat(""----------""), 
    Char(13), Char(10), Char(13), Char(10),
    Concat(""Group: "", Coalesce(reportgroups.lib, ""-"")), 
    Char(13), Char(10),
    Concat(""     "", Coalesce(reportsubgroups.lib, ""-"")), 
    Char(13), Char(10), Char(13), Char(10),
    Concat(""Created on: "", Coalesce(saved_sql.date_created, ""-"")), 
    Char(13), Char(10),
    Concat(""Modified on: "", Coalesce(saved_sql.last_modified, ""-"")), 
    Char(13), Char(10),
    Concat(""Date last run: "", Coalesce(saved_sql.last_run, ""-"")), 
    Char(13), Char(10), Char(13), Char(10),
    Concat(""----------""), 
    Char(13), Char(10), Char(13), Char(10),
    Concat(""Public: "", Coalesce(saved_sql.public, ""-"")), 
    Char(13), Char(10),
    Concat(""Expiry: "", Coalesce(saved_sql.cache_expiry, ""-"")), 
    Char(13), Char(10), Char(13), Char(10),
    Concat(""----------""), 
    Char(13), Char(10), Char(13), Char(10),
    Concat(Coalesce(saved_sql.notes, ""-"")), Char(13), 
    Char(10), Char(13), Char(10),
    Concat(""----------"", Char(13), Char(10), ""*/""), 
    Char(13), Char(10), Char(13), Char(10)
  ) AS CONTENTS,
  SubString(saved_sql.savedsql FROM 1 FOR 30000 ) AS PART_ONE,
  If(Length(saved_sql.savedsql) > 30000, ""||AAAAA||"", """") AS SEP_ONE,
  SubString(saved_sql.savedsql FROM 30001 FOR 30000 ) AS PART_TWO,
  If(Length(saved_sql.savedsql) > 60000, ""||AAAAA||"", """") AS SEP_TWO,
  SubString(saved_sql.savedsql FROM 60001 FOR 30000 ) AS PART_THREE,
  If(Length(saved_sql.savedsql) > 90000, ""||AAAAA||"", """") AS SEP_THREE,
  SubString(saved_sql.savedsql FROM 90001 FOR 30000 ) AS PART_FOUR,
  If(Length(saved_sql.savedsql) > 120000, ""||AAAAA||"", """") AS SEP_FOUR,
  SubString(saved_sql.savedsql FROM 120001 FOR 30000 ) AS PART_FIVE
FROM
  saved_sql
  LEFT JOIN borrowers ON saved_sql.borrowernumber = borrowers.borrowernumber
  LEFT JOIN (SELECT
        authorised_values.id,
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib,
        authorised_values.imageurl,
        authorised_values.lib_opac
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'REPORT_GROUP') reportgroups ON
    saved_sql.report_group = reportgroups.authorised_value
  LEFT JOIN (SELECT
        authorised_values.id,
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib,
        authorised_values.imageurl,
        authorised_values.lib_opac
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'REPORT_SUBGROUP') reportsubgroups ON saved_sql.report_subgroup =
    reportsubgroups.authorised_value
GROUP BY
  saved_sql.id
ORDER BY
  FILE_NAME",,,,,,,,
R.003048,"/*
R.003048

----------

Name: GHW - Flexible items added list
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-02-07 16:01:11
Modified on: 2018-02-07 16:05:35
Date last run: 2020-06-05 14:19:16

----------

Public: 0
Expiry: 300

----------

Allows you to select home library, location, item type, collection code, left anchored call number, date added range, etc.

----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', items.biblionumber, '\"" target=""_blank"">', items.biblionumber, '</a>') AS LINK_TO_TITLE,
  items.biblionumber,
  items.itemnumber,
  Concat(""-"", Coalesce(items.barcode, ""-""), ""-"") AS BARCODE,
  items.homebranch,
  Coalesce(items.location, ""-"") AS LOCATION,
  Coalesce(items.itype, ""-"") AS ITYPE,
  Coalesce(items.ccode, ""-"") AS CCODE,
  items.itemcallnumber,
  biblio.author,
  Concat_Ws("" "",
    biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')) AS FULL_TITLE,
  biblioitems.publicationyear,
  items.dateaccessioned,
  items.datelastborrowed,
  items.datelastseen,
  items.issues,
  items.renewals,
  Sum((Coalesce(items.issues, 0)) + Coalesce(items.renewals, 0)) AS CHECKOUTS_PLUS_RENEWALS,
  If(items.onloan IS NULL, 'No', 'Yes') AS CHECKED_OUT,
  If(Sum(Coalesce(items.damaged, 0) + Coalesce(items.itemlost, 0) + Coalesce(items.withdrawn, 0)) = 0, 'No', 'Yes') AS STATUS_PROBLEMS,
  items.itemnotes,
  items.itemnotes_nonpublic,
  CONCAT('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=',items.biblionumber,'&itemnumber=',items.itemnumber,'#edititem\"" target=""_blank"">Edit item</a>') AS EDIT_ITEM
FROM
  items
  JOIN biblio ON items.biblionumber = biblio.biblionumber
  JOIN biblio_metadata ON items.biblionumber = biblio_metadata.biblionumber
  JOIN biblioitems ON items.biblioitemnumber = biblioitems.biblioitemnumber
WHERE
  items.homebranch LIKE <<Item home library|ZBRAN>> AND
  Coalesce(items.location, ""-"") LIKE <<Item shelving location|LLOC>> AND
  Coalesce(items.itype, ""-"") LIKE <<Item type|LITYPES>> AND
  Coalesce(items.ccode, ""-"") LIKE <<Item collection code|LCCODE>> AND
  Coalesce(items.itemcallnumber, ""-"") LIKE CONCAT(<<Enter first part of call number or a % symbol>>, ""%"") AND
  items.dateaccessioned BETWEEN <<Item was added between|date>> AND <<and|date>> + INTERVAL 1 DAY
GROUP BY
  items.itemnumber
HAVING 
  CHECKOUTS_PLUS_RENEWALS <= <<With X or fewer checkouts|ZNUMBERS>> AND
  CHECKED_OUT LIKE <<Display checked out items|ZYES_NO>> AND
  STATUS_PROBLEMS LIKE <<Display lost, missing, and withdrawn items|ZYES_NO>>
ORDER BY
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title",,,,,,,,
R.003049,"/*
R.003049

----------

Name: GHW - Child accounts with no guarantor information
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-02-08 14:03:22
Modified on: 2018-02-08 14:14:33
Date last run: 2020-02-03 10:35:13

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', borrowers.borrowernumber, '\"" target=""_blank"">Patron record</a>') AS LINK,
  borrowers.cardnumber,
  Concat(borrowers.surname, "", "", borrowers.firstname) AS NAME,
  borrowers.dateofbirth,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  (TimestampDiff(DAY, borrowers.dateofbirth, CurDate())) / 365.25 AS AGE,
  borrowers.borrowernotes,
  messages.message
FROM
  borrowers
  LEFT JOIN (SELECT
        categories.categorycode,
        categories.category_type
      FROM
        categories) categoryx ON borrowers.categorycode = categoryx.categorycode
  LEFT JOIN messages ON borrowers.borrowernumber = messages.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Your library|ZBRAN>> AND
  (borrowers.contactname IS NULL OR
    borrowers.contactname = "" "") AND
  (borrowers.guarantorid < 1 OR
    borrowers.guarantorid IS NULL) AND
  categoryx.category_type = 'C' AND
  (TimestampDiff(DAY, borrowers.dateofbirth, CurDate())) / 365.25 BETWEEN <<Patron's age is between>> AND <<and>>
GROUP BY
  borrowers.cardnumber,
  messages.message_id
ORDER BY
  NAME",,,,,,,,
R.003050,"/*
R.003050

----------

Name: GHW - GitHub SQL report 002
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-02-26 13:53:16
Modified on: 2018-09-06 16:51:56
Date last run: 2022-10-03 13:45:04

----------

Public: 0
Expiry: 300

----------

Report for uploading SQL to GitHub - part 2

----------
*/

","SELECT
  Concat(
    LPad(saved_sql.id, 5, 0),
    ""<br /><br />"",
    Coalesce(saved_sql.report_name, ""-""),
    ""<br /><br />"",
    Concat(Coalesce(groups.lib, ""-""),
    ""<br />"",
    Coalesce(subgroups.lib, ""-"")),
    ""<br /><br />"",
    Concat(""Created by:<br />"", If(borrowers.borrowernumber IS NULL, ""-"", Concat(borrowers.firstname, "" "", borrowers.surname)))
  ) AS NAME,
  Coalesce(saved_sql.notes, ""-"") AS NOTES
FROM
  saved_sql
  LEFT JOIN borrowers ON saved_sql.borrowernumber = borrowers.borrowernumber
  LEFT JOIN (SELECT
        authorised_values.id,
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib,
        authorised_values.imageurl,
        authorised_values.lib_opac
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'REPORT_GROUP') groups ON saved_sql.report_group = groups.authorised_value
  LEFT JOIN (SELECT
        authorised_values.id,
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib,
        authorised_values.imageurl,
        authorised_values.lib_opac
      FROM
        authorised_values) subgroups ON saved_sql.report_subgroup = subgroups.authorised_value
GROUP BY
  saved_sql.id
ORDER BY
  saved_sql.id
LIMIT 10000",,,,,,,,
R.003054,"/*
R.003054

----------

Name: GHW - Videos without links
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-03-02 10:10:47
Modified on: 2022-05-16 08:20:06
Date last run: 2022-10-02 21:51:32

----------

Public: 0
Expiry: 300

----------

zbrq

<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3054"">Click here to download as a csv file</a></p>

----------
*/

","SELECT
  biblio.biblionumber,
  biblio.datecreated,
  biblio.timestamp,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=245]/subfield[@code=""a""]') AS TITLE_A,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=245]/subfield[@code=""n""]') AS TITLE_N,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=245]/subfield[@code=""p""]') AS TITLE_P,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=245]/subfield[@code=""h""]') AS TITLE_H,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=245]/subfield[@code=""b""]') AS TITLE_B,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=245]/subfield[@code=""c""]') AS TITLE_C,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=130]/subfield[@code=""a""]') AS UNTITLE_OA,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=730]/subfield[@code=""a""]') AS UNTITLE_SA,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=300]/subfield[@code=""a""]') AS DESCRIP,
  Group_Concat(DISTINCT items.ccode ORDER BY items.ccode ASC) AS Group_Concat_ccode,
  biblio.frameworkcode,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=306]/subfield[@code=""a""]') AS TIMESS,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=942]/subfield[@code=""e""]') AS BIB_LOC,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=942]/subfield[@code=""c""]') AS BIB_ITYPE,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=942]/subfield[@code=""h""]') AS BIB_CCODE
FROM  biblio
  JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
  JOIN items ON items.biblionumber = biblio.biblionumber
WHERE
  (items.itype LIKE 'NVID%' OR
    items.itype = 'MEDIA')
GROUP BY
  biblio.biblionumber
ORDER BY
  biblio.biblionumber DESC",,,,,,,,
R.003055,"/*
R.003055

----------

Name: GHW - count of items
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-03-02 15:29:41
Modified on: 2018-03-02 15:29:41
Date last run: 2021-07-26 22:36:09

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', items.biblionumber, '\"" target=""_blank"">',
  items.biblionumber, '</a>') AS LINK_TO_TITLE,
  items.biblionumber,
  items.itemnumber,
  Concat(""-"", Coalesce(items.barcode, ""-""), ""-"") AS BARCODE,
  items.homebranch,
  Coalesce(items.location, ""-"") AS LOCATION,
  Coalesce(items.itype, ""-"") AS ITYPE,
  Coalesce(items.ccode, ""-"") AS CCODE,
  items.itemcallnumber,
  biblio.author,
  Concat_Ws("" "", biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')) AS FULL_TITLE,
  biblioitems.publicationyear,
  items.itemnotes,
  items.itemnotes_nonpublic,
  Concat('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=', items.biblionumber, '&itemnumber=',
  items.itemnumber, '#edititem\"" target=""_blank"">Edit item</a>') AS EDIT_ITEM,
  copies_in_system.Count_itemnumber AS TOTAL_COPIES_IN_SYSTEM
FROM
  items
  JOIN biblio ON items.biblionumber = biblio.biblionumber
  JOIN biblio_metadata ON items.biblionumber = biblio_metadata.biblionumber
  JOIN biblioitems ON items.biblioitemnumber = biblioitems.biblioitemnumber
  INNER JOIN (SELECT
        items.biblionumber,
        Count(DISTINCT items.itemnumber) AS Count_itemnumber
      FROM
        items
      GROUP BY
        items.biblionumber) copies_in_system ON items.biblionumber = copies_in_system.biblionumber
WHERE
  Coalesce(items.location, ""-"") LIKE '%' AND
  Coalesce(items.itype, ""-"") LIKE '%' AND
  Coalesce(items.ccode, ""-"") LIKE '%' AND
  copies_in_system.Count_itemnumber >= 5
GROUP BY
  items.itemnumber
ORDER BY
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title",,,,,,,,
R.003060,"/*
R.003060

----------

Name: GHW - ""Report-a-problem"" notes by item barcode
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-03-07 17:06:32
Modified on: 2018-03-08 13:34:05
Date last run: 2018-08-27 15:31:20

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat_Ws(""<br />"",
    Concat(""Borrower BC: "", borrowers.cardnumber, ""<br />""),
    Concat('<a href=\""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', allissues.borrowernumber, '\"" target=""_blank"">Link to patron record</a>')
  ) AS PATRON,
  Concat_Ws(""<br />"",
    Concat(""Item home: "", items.homebranch),
    Concat(""Location: "", items.location),
    Concat(""Item type: "", items.itype),
    Concat(""Collection: "", items.ccode),
    Concat(""Call number: "", items.itemcallnumber),
    Concat(""Author: "", biblio.author),
    Concat(""Title: "", biblio.title),
    Concat(""Item BC: "", allissues.ITEM_BC, ""<br />""),
    Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', items.biblionumber, '\"" target=""_blank"">Link to title</a>')
  ) AS ITEM_INFO,
  Concat_Ws(""<br />"",
    Concat(""Checked out at: "", allissues.branchcode, ""<br />""),
    Concat(""Checked out on: "", allissues.issuedate, ""<br />""),
    Concat(""Due date: "", allissues.IN_OR_OUT)
  ) AS CHECKOUT_INFO,
  Concat_Ws(""<br />"",
    Concat(""Note date: "", allissues.notedate, ""<br />""),
    Concat(""<ins>Note text:</ins><br /><br />"", allissues.note)
  ) AS NOTE_INFO
FROM
    (SELECT
        issues.note,
        issues.borrowernumber,
        issues.notedate,
        items.barcode AS ITEM_BC,
        If(issues.itemnumber <> 0, issues.date_due,
        ""<span style='color: red;'><ins>Item has already been returned</ins></span>"") AS IN_OR_OUT,
        issues.branchcode,
        issues.issuedate,
        issues.itemnumber
      FROM
        issues
        LEFT JOIN items ON issues.itemnumber = items.itemnumber
      WHERE
        issues.note IS NOT NULL
      UNION
      SELECT
        old_issues.note,
        old_issues.borrowernumber,
        old_issues.notedate,
        items.barcode AS ITEM_BC,
        If(old_issues.itemnumber <> 0, ""<span style='color: red;'><ins>Item has already been returned</ins></span>"",
        ""Still checked out"") AS IN_OR_OUT,
        old_issues.branchcode,
        old_issues.issuedate,
        old_issues.itemnumber
      FROM
        old_issues
        LEFT JOIN items ON old_issues.itemnumber = items.itemnumber
      WHERE
        old_issues.note IS NOT NULL) AS allissues
  JOIN borrowers ON allissues.borrowernumber = borrowers.borrowernumber
  LEFT JOIN items ON allissues.itemnumber = items.itemnumber
  INNER JOIN biblio ON items.biblionumber = biblio.biblionumber
WHERE
  items.barcode LIKE <<Enter item barcode number>>
GROUP BY
  allissues.borrowernumber,
  items.itemnumber
ORDER BY
  allissues.notedate DESC",,,,,,,,
R.003062,"/*
R.003062

----------

Name: GHW - Bounced text message helper
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-03-12 11:28:45
Modified on: 2018-04-16 11:14:02
Date last run: 2022-10-03 09:08:23

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a list of patrons based on their SMS text messaging e-mail address and produces a ""Bounced Text"" message that can be quickly cut and pasted into a message on the patron's account.</p>
<ul><li>Shows all borrowers that are using the specified SMS text e-mail address that has bounced in the last 60 days</li>
<li>Shows borrowers at all NExpress branches with that SMS text e-mail address</li>
<li>grouped by barcode number</li>
<li>includes links to the patron record</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>If more than one patron is using the text messaging number you enter on their account, you will receive one result in this report for each patron with that number.</p>
<p></p>
<p>For bounced e-mails, use report 2910.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3062&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  borrowers.smsalertnumber AS TEXT_NUMBER,
  borrowers.cardnumber,
  Concat(""BOUNCED EMAIL<br />An SMS text message sent to this patron's phone number at <strong>("",
  borrowers.smsalertnumber,
  "")</strong> bounced.<br />Please confirm the patron's contact information the next time they use their account.<br />"", CurDate()) AS MESSAGE,
  Concat('<a href=\""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', borrowers.borrowernumber, '\"" target=""_blank"">',
  borrowers.borrowernumber, '</a>') AS 'LINK_TO_PATRON'
FROM
  borrowers
  JOIN message_queue ON message_queue.borrowernumber = borrowers.borrowernumber
WHERE
  message_queue.to_address LIKE CONCAT(""%"", <<Enter the e-mail address from the bounced text message error report>>,""%"")
GROUP BY
  borrowers.borrowernumber",,,,,,,,
R.003064,"/*
R.003064

----------

Name: GHW - Request action logs by borrower number/user ID and date range
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-03-15 15:05:04
Modified on: 2018-03-15 15:21:12
Date last run: 2018-08-08 09:28:50

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  action_logs.action_id,
  action_logs.timestamp,
  action_logs.user,
  action_logs.module,
  action_logs.action,
  action_logs.object,
  Replace(action_logs.info, "","", "",<br />"") AS DESCRIPTION,
  action_logs.interface,
  Concat(""<a href='/cgi-bin/koha/circ/circulation.pl?borrowernumber="", action_logs.user, ""' target='_blank'>See who created/modified/cancelled the request</a>"") AS LINK
FROM
  action_logs
WHERE
  action_logs.module = 'HOLDS' AND
  action_logs.user = <<Enter borrower number / user ID>> AND
  action_logs.timestamp BETWEEN <<Between this date|date>> AND (<<this date|date>> + interval 1 day)
GROUP BY
  action_logs.action_id
HAVING
  DESCRIPTION like ""%225558%""
ORDER BY
  action_logs.action_id DESC",,,,,,,,
R.003065,"/*
R.003065

----------

Name: GHW - Request cancelled note
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-04-02 15:12:43
Modified on: 2018-04-02 15:15:41
Date last run: 2018-04-02 15:15:52

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  CONCAT(""&lt;br /&gt;REQUEST CANCELLED&lt;br /&gt;The request on the following item was cancelled because there are no longer any copies available on the specified bibliographic record:&lt;br /&gt;"", 
    Concat_WS("" "",
      ""Title: &lt;span style='color: #000000;'&gt;"",
      biblio.title,
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
      ""&lt;/span&gt;""),
    Concat(""&lt;br /&gt;Link to bibliographic record in staff client: "",
      Concat(""&lt;a href='/cgi-bin/koha/catalogue/detail.pl?biblionumber="",
        biblio.biblionumber,
        ""' target='_blank'&gt;"",
        biblio.title,
        ""&lt;/a&gt;"")),
      ""&lt;br /&gt;Search for other copies of this title: "",
      Concat(""&lt;a href='/cgi-bin/koha/catalogue/search.pl?idx=ti%2Cphr&q="",
        REPLACE(biblio.title,
        ' ',
        '+'),
      ""' target='_blank'&gt;SEARCH&lt;/a&gt;"")) AS TITLE
FROM
  items
  JOIN biblio ON items.biblionumber = biblio.biblionumber
  JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
WHERE
  items.barcode Like Concat(""%"", <<Enter barcode number>>, ""%"")",,,,,,,,
R.003070,"/*
R.003070

----------

Name: GHW - Z39.50 Backup - ADMINREPORT
Created by: George H Williams

----------

Group: Administrative Reports
     System-admin

Created on: 2018-04-12 15:04:40
Modified on: 2018-09-18 15:12:27
Date last run: 2018-09-18 14:51:37

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat_Ws(""<br />"",
    Concat(""Name: "", z3950servers.servername),
    Concat(""Host name: "", z3950servers.host),
    Concat(""Port: "", z3950servers.port),
    Concat(""Database name: "", z3950servers.db),
    Concat(""Syntax: "",  z3950servers.syntax),
    Concat(""Encoding: "", z3950servers.encoding),
    Concat(""Record type: "", z3950servers.recordtype),
    ""<br />""
  ) AS SERVERS
FROM
  z3950servers
WHERE
  z3950servers.userid = """"
GROUP BY
  z3950servers.recordtype,
  z3950servers.id",,,,,,,,
R.003071,"/*
R.003071

----------

Name: GHW - Restrictions no longer needed
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-04-13 16:53:35
Modified on: 2020-01-09 11:44:09
Date last run: 2022-08-10 12:14:27

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Reports on patrons who have had a restriction added to their account due to an overdue item but the item has been returned and their fees are less than $10.00</p>
<ul><li>Shows patrons who currently have restrictions created by the overdues process, no overdues, and less than $10.00 in fees</li>
<li>at all Next libraries</li>
<li>grouped by borrowernumber</li>
<li>sorted by borrower home branch, borrowers last name, borrowers first name</li>
<li>links directly to the restriction page of the borrower</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3071&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat(""<a href='/cgi-bin/koha/circ/circulation.pl?borrowernumber="", borrowers.borrowernumber, ""#reldebarments' target='_blank'>Go to patron</a>"") AS LINK_TO_BORROWER,
  borrowers.borrowernumber,
  borrowers.cardnumber,
  borrowers.surname,
  borrowers.firstname,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.debarred,
  borrowers.debarredcomment,
  fees.SUM
FROM
  borrowers
  LEFT JOIN (
    SELECT
      issues.borrowernumber,
      issues.itemnumber,
      issues.date_due
    FROM
      issues
    WHERE
      issues.date_due < Now()
    GROUP BY
      issues.borrowernumber,
      issues.itemnumber,
      issues.date_due
  ) overdues
    ON borrowers.borrowernumber = overdues.borrowernumber
  LEFT JOIN (
    SELECT
      accountlines.borrowernumber,
      Group_Concat(accountlines.accounttype) AS Group_Concat_accounttype,
      Sum(accountlines.amountoutstanding) AS SUM
    FROM
      accountlines
    WHERE
      accountlines.amountoutstanding > 0
    GROUP BY
      accountlines.borrowernumber
  ) fees
    ON borrowers.borrowernumber = fees.borrowernumber
WHERE
  borrowers.debarred IS NOT NULL AND
  (borrowers.debarredcomment IS NULL OR
    (borrowers.debarredcomment LIKE ""%overdue%"" AND
      borrowers.debarredcomment LIKE ""%process%"")) AND
  fees.Group_Concat_accounttype NOT LIKE ""L%"" AND
  fees.Group_Concat_accounttype NOT LIKE ""D%"" AND
  fees.Group_Concat_accounttype NOT LIKE ""A%"" AND
  fees.Group_Concat_accounttype NOT LIKE ""P%"" AND
  fees.Group_Concat_accounttype NOT LIKE ""M%"" AND
  fees.Group_Concat_accounttype NOT LIKE ""C%"" AND
  (Char_Length(borrowers.debarredcomment) = 33 OR
    Char_Length(borrowers.debarredcomment) = 54 OR
    (borrowers.debarredcomment IS NULL)) AND
  Coalesce(borrowers.gonenoaddress, 0) < 1 AND
  Coalesce(borrowers.lost, 0) < 1 AND
  fees.SUM <= 10
GROUP BY
  borrowers.borrowernumber
HAVING
  Count(DISTINCT overdues.itemnumber) = 0
ORDER BY
  borrowers.branchcode,
  borrowers.surname,
  borrowers.firstname",,,,,,,,
R.003075,"/*
R.003075

----------

Name: GHW - Re-categorize borrowers ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-04-17 17:38:36
Modified on: 2021-07-26 14:58:23
Date last run: 2021-07-26 14:58:28

----------

Public: 0
Expiry: 300

----------

Special project for 2018.04.20 afternoon

----------
*/

","SELECT
  borrowers.borrowernumber,
  borrowers.cardnumber,
  borrowers.categorycode,
  borrowers.dateofbirth,
  If(Date_Format(From_Days(To_Days(Now()) - To_Days(borrowers.dateofbirth)), '%Y') + 0 BETWEEN 0 AND 11, borrowers.cardnumber, ""-"") AS MINORJ,
  If(Date_Format(From_Days(To_Days(Now()) - To_Days(borrowers.dateofbirth)), '%Y') + 0 = 12, borrowers.cardnumber, ""-"") AS MINORT,
  If(Date_Format(From_Days(To_Days(Now()) - To_Days(borrowers.dateofbirth)), '%Y') + 0 BETWEEN 13 AND 17, borrowers.cardnumber, ""-"") AS MINORY,
  If(Date_Format(From_Days(To_Days(Now()) - To_Days(borrowers.dateofbirth)), '%Y') + 0 BETWEEN 0 AND 17, borrowers.cardnumber, ""-"") AS CHILD,
  Date_Format(From_Days(To_Days(Now()) - To_Days(borrowers.dateofbirth)), '%Y') + 0 AS AGE
FROM
  borrowers
WHERE
  borrowers.branchcode LIKE <<Choose your library|branches>>
GROUP BY
  borrowers.borrowernumber
ORDER BY
  AGE ASC",,,,,,,,
R.003076,"/*
R.003076

----------

Name: GHW - e-mail checkout receipt
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-04-19 09:08:58
Modified on: 2018-04-25 16:19:04
Date last run: 2021-02-12 15:16:34

----------

Public: 0
Expiry: 300

----------

<script>

  $(window).on(""load"", function() {

    $(""#rep_guided_reports_start #yui-main table"").attr(""id"",""receipttable"");

    $(""#rep_guided_reports_start td .hideme"").hide();

      $(""#digireciept"").click(function () {
        var el = document.getElementById(""receipttable"");
        var range = document.createRange();
        range.selectNodeContents(el);
        var sel = window.getSelection();
        sel.removeAllRanges();
        sel.addRange(range);
        document.execCommand('copy');
        window.open(""http://news.nexpresslibrary.org/one-time-digital-receipt/"", ""_blank""); 
      });

});

</script>

<div id=""reportinfo"" class=""hideme"">
<p>Creates a digital receipt that can be copied and pasted into a form for easy mailing to a patron's e-mail address</p>
<ul><li>WHEN</li>
<li>Whose Stuff</li>
<li>grouped by</li>
<li>sorted by</li>
<li>links</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><input type=""button"" id=""digireciept"" style=""margin: 20px; padding: 5px;"" value=""One time e-mail receipt step 2""></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3076&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat_Ws(
    ""<br />"",
    Concat(""<br />Due on: "", Date_Format(issues.date_due, '%m/%d/%Y')),
    Concat(""Call number: "", items.itemcallnumber),
    Concat(""Author / Title: "", If(biblio.author IS NULL, """", Concat(biblio.author, "" / "")), Upper(biblio.title)),
    Concat(""Barcode: "", items.barcode),
    Concat(""Checked out at: "", branches.branchname),
    ""--------------------------------------------------------------------------------""
  ) AS DIGITAL_RECIEPT
FROM
  biblio
  JOIN items ON items.biblionumber = biblio.biblionumber
  LEFT JOIN (SELECT
        authorised_values.authorised_value,
        authorised_values.lib,
        authorised_values.category
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'CCODE') ccodes ON items.ccode = ccodes.authorised_value
  LEFT JOIN (SELECT
        itemtypes.itemtype,
        itemtypes.description
      FROM
        itemtypes) itypes ON items.itype = itypes.itemtype
  LEFT JOIN (SELECT
        authorised_values.authorised_value,
        authorised_values.lib,
        authorised_values.category
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'LOC') locations ON items.location = locations.authorised_value
  JOIN issues ON issues.itemnumber = items.itemnumber
  JOIN branches ON issues.branchcode = branches.branchcode
  JOIN borrowers ON issues.borrowernumber = borrowers.borrowernumber
WHERE
  issues.borrowernumber = <<Enter borrower ID number>>
GROUP BY
  items.biblionumber,
  issues.borrowernumber
ORDER BY
  issues.date_due ASC
LIMIT 1000",,,,,,,,
R.003078,"/*
R.003078

----------

Name: GHW - List of patrons
Created by: George H Williams

----------

Group: Borrowers
     -

Created on: 2018-05-01 22:22:47
Modified on: 2020-12-30 10:25:35
Date last run: 2022-05-18 10:39:51

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a list of patrons with basic contact information</p>
<ul><li>Lists all un-deleted patrons - active and expired</li>
<li>at the library you specify</li>
<li>grouped by borrowernumber</li>
<li>sorted by surname, first name, and date of birth</li>
<li>contains links to the patron record</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3078&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  borrowers.cardnumber,
  Concat(borrowers.surname, "", "", borrowers.firstname, If(borrowers.othernames = """", """", Concat("" ("", borrowers.othernames, "")""))) AS NAME,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.email,
  borrowers.phone,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateofbirth,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  Concat('<a href=\""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', borrowers.borrowernumber, '\"" target=""_blank"">Link to patron</a>') AS LINK_TO_PATRON
FROM
  borrowers
WHERE
  borrowers.branchcode LIKE <<Choose your library|ZBRAN>> AND
  borrowers.categorycode LIKE <<Choose the patron category|LBORROWERCAT>>
GROUP BY
  borrowers.borrowernumber
ORDER BY
  borrowers.branchcode,
  borrowers.surname,
  borrowers.firstname,
  borrowers.dateofbirth",,,,,,,,
R.003081,"/*
R.003081

----------

Name: Weeding
Created by: PHSHS TECH

----------

Group: -
     -

Created on: 2018-06-13 09:35:27
Modified on: 2018-06-13 09:35:27
Date last run: 2022-07-28 14:56:02

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT  items.dateaccessioned,items.issues FROM borrowers LEFT JOIN statistics on (statistics.borrowernumber=borrowers.borrowernumber) LEFT JOIN items on (items.itemnumber = statistics.itemnumber) LEFT JOIN biblioitems on (biblioitems.biblioitemnumber = items.biblioitemnumber) ",,,,,,,,
R.003083,"/*
R.003083

----------

Name: GHW - Hoopla Monthly Maintenence
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-06-18 09:36:26
Modified on: 2020-07-21 17:04:55
Date last run: 2020-10-06 09:31:01

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  items.itemnumber,
  items.biblionumber,
  items.ccode,
  items.homebranch,
  items.itemcallnumber,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""037""]/subfield[@code=""a""]') AS STOCK_NUMBER,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""856""]/subfield[@code=""y""]') AS YX,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""856""]/subfield[@code=""z""]') AS Z
FROM
  items
  INNER JOIN biblio_metadata ON items.biblionumber = biblio_metadata.biblionumber
WHERE
  items.itemcallnumber = 'Hoopla' AND
  items.itemnumber > '2153653'
GROUP BY
  items.itemnumber",,,,,,,,
R.003084,"/*
R.003084

----------

Name: GHW - Priority Holds Report
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-06-18 11:15:38
Modified on: 2022-07-21 19:38:45
Date last run: 2022-10-03 14:06:35

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=""noprint"">
<p>Print holds queue report with scannable barcodes and divided into priorities.</p>
<ul><li>Shows items in the current holds queue</li>
<li>at the location you specify</li>
<li>grouped by specified location, items home branch, call number, author, and title</li>
<li>sorted by request priority and standard NEXT classification.</li>
<li>contains links to the bibliographic records</li>
</ul><br />
<p></p>
<p>Notes:</p>
<p></p>
<p>Highest priority = request is for pickup at this library</p>
<p>High priority = the copy requested is the only copy owned by any Next Search Catalog library</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3084&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT 
  Concat_Ws( 
    '<br />', 
    If( 
      LOCATIONS.lib = PERM_LOCATIONS.lib, 
      LOCATIONS.lib, 
      Concat(PERM_LOCATIONS.lib, "" ("", LOCATIONS.lib, "")"") 
    ), 
    ITEMTYPESS.description, 
    CCODES.lib, 
    items.itemcallnumber, 
    items.copynumber, 
    If( 
      hold_fill_targets.source_branchcode = priority.branchcode, 
      ""(Highest priority)"", 
      If( 
        hold_fill_targets.item_level_request = 1, 
        ""(Highest priority)"", 
        If( 
          priority.Count_itemnumber = 1, 
          ""High priority"", 
          """" 
        ) 
      ) 
    ), 
    Concat('Accessioned date: ', items.dateaccessioned), 
    (Concat( 
      '<br />', 
      '<a class=""btn btn-default noprint"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', 
      biblio.biblionumber, 
      '\"" target=""_blank"">Go to biblio</a>' 
      ) 
    ) 
  ) AS CALL_NUMBER, 
  Concat_Ws( 
    '<br />', 
    biblio.author, 
    Concat_Ws( 
      ' ', 
      biblio.title, 
      '<br />', 
      IF( 
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]') = '', 
        '', 
        Concat( 
          ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'), 
          '<br />' 
        ) 
      ), 
      IF( 
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]') = '', 
        '', 
        Concat( 
          ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), 
          '<br />' 
        ) 
      ), 
      IF( 
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]') = '', 
        '', 
        Concat( 
          ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'), 
          '<br />' 
        ) 
      ), 
      IF( 
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]') = '', 
        '', 
        Concat( 
          ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), 
          '<br />' 
        ) 
      ) 
    ) 
  ) AS AUTHOR_TITLE, 
  Concat_Ws( 
    '<br />', 
    Concat( 
      '<img src=""/cgi-bin/koha/svc/barcode?barcode=', 
      '*', 
      Upper(items.barcode), 
      '*', 
      '&type=Code39""></img>' 
    ), 
    items.barcode 
  ) AS BARCODE 
FROM 
  biblio LEFT JOIN 
  ((hold_fill_targets LEFT JOIN 
  items ON hold_fill_targets.itemnumber = items.itemnumber) LEFT JOIN 
  biblio_metadata ON items.biblionumber = biblio_metadata.biblionumber) ON 
      biblio.biblionumber = biblio_metadata.biblionumber LEFT JOIN 
  ( 
    SELECT 
      authorised_values.category, 
      authorised_values.authorised_value, 
      authorised_values.lib 
    FROM 
      authorised_values 
    WHERE 
      authorised_values.category = 'CCODE' 
  ) CCODES 
  ON CCODES.authorised_value = 
    items.ccode LEFT JOIN 
  ( 
    SELECT 
      authorised_values.category, 
      authorised_values.authorised_value, 
      authorised_values.lib 
    FROM 
      authorised_values 
    WHERE 
      authorised_values.category = 'LOC' 
  ) PERM_LOCATIONS 
  ON PERM_LOCATIONS.authorised_value = items.permanent_location LEFT JOIN 
  ( 
    SELECT 
      authorised_values.category, 
      authorised_values.authorised_value, 
      authorised_values.lib 
    FROM 
      authorised_values 
    WHERE 
      authorised_values.category = 'LOC' 
  ) LOCATIONS 
  ON LOCATIONS.authorised_value = items.location LEFT JOIN 
  ( 
    SELECT 
      itemtypes.itemtype, 
      itemtypes.description 
    FROM 
      itemtypes 
  ) ITEMTYPESS 
  ON ITEMTYPESS.itemtype = items.itype JOIN 
  ( 
    SELECT 
      hold_fill_targets.reserve_id, 
      reserves.branchcode, 
      icounts.Count_itemnumber 
    FROM 
      hold_fill_targets JOIN 
      reserves ON reserves.reserve_id = hold_fill_targets.reserve_id LEFT JOIN 
      ( 
        SELECT 
          items.biblionumber, 
          Count(DISTINCT items.itemnumber) AS Count_itemnumber 
        FROM 
          items 
        WHERE 
          (items.notforloan IS NOT NULL OR 
            items.notforloan <> 0) AND 
          (items.damaged IS NOT NULL OR 
            items.damaged <> 0) AND 
          (items.itemlost IS NOT NULL OR 
            items.itemlost <> 0) AND 
          (items.withdrawn IS NOT NULL OR 
            items.withdrawn <> 0) AND 
          items.onloan IS NULL 
        GROUP BY 
          items.biblionumber 
    ) icounts 
    ON icounts.biblionumber = hold_fill_targets.biblionumber 
  ) priority 
  ON priority.reserve_id = hold_fill_targets.reserve_id 
WHERE 
  hold_fill_targets.source_branchcode LIKE <<Choose your library|ZBRAN>> 
GROUP BY 
  hold_fill_targets.itemnumber 
ORDER BY 
  If( 
    hold_fill_targets.source_branchcode = priority.branchcode, 
    ""1"", 
    If( 
      hold_fill_targets.item_level_request = 1, 
      ""1"", 
      If( 
        priority.Count_itemnumber = 1, 
        ""2"", 
        ""3"" 
      ) 
    ) 
  ), 
  items.homebranch, 
  PERM_LOCATIONS.lib, 
  ITEMTYPESS.description, 
  CCODES.lib, 
  items.itemcallnumber, 
  biblio.author, 
  biblio.title, 
  items.barcode",,,,,,,,
R.003085,"/*
R.003085

----------

Name: GHW - Patron attributes Report (master)
Created by: George H Williams

----------

Group: Borrowers
     Patron attributes

Created on: 2018-06-28 15:09:42
Modified on: 2019-07-24 17:47:43
Date last run: 2019-08-22 13:33:18

----------

Public: 0
Expiry: 300

----------

Cannot be exported to csv (too large)

----------
*/

","SELECT
  Concat(""<a href='/cgi-bin/koha/circ/circulation.pl?borrowernumber="", borrowers.borrowernumber, ""' target='_blank'>Patron</a>"") AS LINK_TO_PATRON,
  borrowers.cardnumber,
  Concat_Ws("""", If(borrowers.surname = """", ""-"", borrowers.surname), "" / "", If(borrowers.firstname = """", ""-"", borrowers.firstname), If(borrowers.othernames = """", "" "", Concat("" - ("", borrowers.othernames, "")""))) AS NAME,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.email,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateofbirth,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  Coalesce(otherinfoone.attribute, ""~"") AS OTHER_IDENTIFIER_ONE,
  Coalesce(otherinfotwo.attribute, ""~"") AS OTHER_IDENTIFIER_TWO,
  Coalesce(registrationbranch.attribute, ""~"") AS REGISTRATION_BRANCH,
  Coalesce(collectionagency.lib, ""~"") AS COLLECTION_AGENCY,
  Coalesce(expired_account.lib, ""~"") AS EXPIRATION_FLAGS,
  Coalesce(holdscontact.lib, ""~"") AS HOLDS_CONTACT,
  Coalesce(location.lib, ""~"") AS SPECIAL_LOCATION,
  Coalesce(internet_permission.lib, ""~"") AS INTERNET_PERMISSION,
  Coalesce(movie_permissionx.lib, ""~"") AS FILM_PERMISSION,
  Coalesce(newsletter_permission.lib, ""~"") AS NEWSLETTER_PERMISSION
FROM
  borrowers
  LEFT JOIN (SELECT
        borrower_attributes.borrowernumber,
        borrower_attributes.attribute
      FROM
        borrower_attributes
      WHERE
        borrower_attributes.code = 'ALTID'
      GROUP BY
        borrower_attributes.borrowernumber,
        borrower_attributes.code) otherinfoone ON borrowers.borrowernumber = otherinfoone.borrowernumber
  LEFT JOIN (SELECT
        borrower_attributes.borrowernumber,
        borrower_attributes.attribute
      FROM
        borrower_attributes
      WHERE
        borrower_attributes.code = 'LICENSE'
      GROUP BY
        borrower_attributes.borrowernumber,
        borrower_attributes.code) otherinfotwo ON borrowers.borrowernumber = otherinfotwo.borrowernumber
  LEFT JOIN (SELECT
        borrower_attributes.borrowernumber,
        borrower_attributes.attribute
      FROM
        borrower_attributes
      WHERE
        borrower_attributes.code = 'REGBRANCH'
      GROUP BY
        borrower_attributes.borrowernumber,
        borrower_attributes.code) registrationbranch ON borrowers.borrowernumber = registrationbranch.borrowernumber
  LEFT JOIN (SELECT
        borrower_attributes.borrowernumber,
        authorised_values.lib,
        borrower_attributes.attribute
      FROM
        borrower_attributes
        INNER JOIN authorised_values ON borrower_attributes.attribute = authorised_values.authorised_value
      WHERE
        borrower_attributes.code = 'CAOTTAWA' AND
        authorised_values.category = 'COLLAGEN'
      GROUP BY
        borrower_attributes.borrowernumber,
        borrower_attributes.attribute,
        borrower_attributes.code) collectionagency ON borrowers.borrowernumber = collectionagency.borrowernumber
  LEFT JOIN (SELECT
        borrower_attributes.borrowernumber,
        authorised_values.lib,
        borrower_attributes.attribute
      FROM
        borrower_attributes
        INNER JOIN authorised_values ON borrower_attributes.attribute = authorised_values.authorised_value
      WHERE
        borrower_attributes.code = 'EXPIRED' AND
        authorised_values.category = 'EXPIRED'
      GROUP BY
        borrower_attributes.borrowernumber,
        borrower_attributes.attribute,
        borrower_attributes.code) expired_account ON borrowers.borrowernumber = expired_account.borrowernumber
  LEFT JOIN (SELECT
        borrower_attributes.borrowernumber,
        authorised_values.lib,
        borrower_attributes.attribute
      FROM
        borrower_attributes
        INNER JOIN authorised_values ON borrower_attributes.attribute = authorised_values.authorised_value
      WHERE
        borrower_attributes.code = 'HOLD' AND
        authorised_values.category = 'HoldsContact'
      GROUP BY
        borrower_attributes.borrowernumber,
        borrower_attributes.attribute,
        borrower_attributes.code) holdscontact ON borrowers.borrowernumber = holdscontact.borrowernumber
  LEFT JOIN (SELECT
        borrower_attributes.borrowernumber,
        authorised_values.lib,
        borrower_attributes.attribute
      FROM
        borrower_attributes
        INNER JOIN authorised_values ON borrower_attributes.attribute = authorised_values.authorised_value
      WHERE
        borrower_attributes.code = 'Location' AND
        authorised_values.category = 'SPECLOC'
      GROUP BY
        borrower_attributes.borrowernumber,
        borrower_attributes.attribute,
        borrower_attributes.code) location ON borrowers.borrowernumber = location.borrowernumber
  LEFT JOIN (SELECT
        borrower_attributes.borrowernumber,
        authorised_values.lib,
        borrower_attributes.attribute
      FROM
        borrower_attributes
        INNER JOIN authorised_values ON borrower_attributes.attribute = authorised_values.authorised_value
      WHERE
        borrower_attributes.code = 'INTERNET' AND
        authorised_values.category = 'InternetPolicy'
      GROUP BY
        borrower_attributes.borrowernumber,
        authorised_values.lib,
        borrower_attributes.attribute) internet_permission ON
    borrowers.borrowernumber = internet_permission.borrowernumber
  LEFT JOIN (SELECT
        borrower_attributes.borrowernumber,
        authorised_values.lib,
        borrower_attributes.attribute
      FROM
        borrower_attributes
        INNER JOIN authorised_values ON borrower_attributes.attribute = authorised_values.authorised_value
      WHERE
        borrower_attributes.code = 'MOVIE' AND
        authorised_values.category = 'FILMPERM'
      GROUP BY
        borrower_attributes.borrowernumber,
        borrower_attributes.attribute) movie_permissionx ON borrowers.borrowernumber = movie_permissionx.borrowernumber
  LEFT JOIN (SELECT
        borrower_attributes.borrowernumber,
        authorised_values.lib,
        borrower_attributes.attribute
      FROM
        borrower_attributes
        INNER JOIN authorised_values ON borrower_attributes.attribute = authorised_values.authorised_value
      WHERE
        borrower_attributes.code = 'NEWSLETTER' AND
        authorised_values.category = 'EmailNews'
      GROUP BY
        borrower_attributes.borrowernumber,
        borrower_attributes.attribute) newsletter_permission ON
    borrowers.borrowernumber = newsletter_permission.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Choose your library|ZBRAN>>  AND
  borrowers.categorycode LIKE <<Choose a borrower category|LBORROWERCAT>> AND
  Coalesce(otherinfoone.attribute, ""~"") LIKE CONCAT(""%"", <<Enter part of 'Other identifier 1' or a % symbol>>, ""%"") AND
  Coalesce(otherinfotwo.attribute, ""~"") LIKE CONCAT(""%"", <<Enter part of 'Other identifier 2' or a % symbol>>, ""%"") AND
  Coalesce(registrationbranch.attribute, ""~"") LIKE CONCAT(""%"", <<Enter part of 'Registration branch' or a % symbol>>, ""%"") AND
  Coalesce(collectionagency.attribute, ""~"") LIKE <<Select collection agency attribute|LCOLLAGEN>> AND
  Coalesce(expired_account.attribute, ""~"") LIKE <<Select collection agency attribute|LEXPIRED>> AND
  Coalesce(holdscontact.attribute, ""~"") LIKE <<Select holds contact attribute|LHOLDSCON>> AND
  Coalesce(location.attribute, ""~"") LIKE <<Select special locations attribute|LSPECLOC>> AND 
  Coalesce(internet_permission.attribute, ""~"") LIKE <<Select internet policy attribute|LINTPOLICY>> AND
  Coalesce(movie_permissionx.attribute, ""~"") LIKE <<Select film permission attribute|LFILMPERM>> AND
  Coalesce(newsletter_permission.attribute, ""~"") LIKE <<Select newsletter permission attribute|LNEWSPERM>>
GROUP BY
  borrowers.email,
  borrowers.dateofbirth,
  borrowers.borrowernumber,
  borrowers.othernames
ORDER BY
  borrowers.surname,
  borrowers.firstname",,,,,,,,
R.003086,"/*
R.003086

----------

Name: GHW - Patron attributes - Newsletter permissions
Created by: George H Williams

----------

Group: Borrowers
     Patron attributes

Created on: 2018-06-28 18:09:20
Modified on: 2020-05-08 15:20:19
Date last run: 2022-10-03 13:44:05

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a list of patrons with contact information based on their ""Newsletter permission"" attributes</p>
<ul><li>Shows current patrons</li>
<li>with the home library and newsletter permission you specify</li>
<li>grouped by borrower number and attribute</li>
<li>sorted by patron last name/patron first name</li>
<li>contains links to the patron's account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Replaces report 2887 (GHW - Patrons with Newsletter permission flag).</p>
<p></p>
<p>This report can be used to determine which patrons at your library have agreed to let you use their e-mail address from the catalog for the purposes of sending them an e-mail newsletter.</p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3086&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat(
    ""<a href='/cgi-bin/koha/circ/circulation.pl?borrowernumber="", 
    borrowers.borrowernumber, 
    ""' target='_blank'>Patron</a>""
  ) AS LINK_TO_PATRON,
  borrowers.cardnumber,
  If(
    Coalesce(newsletter_permission.lib, ""~"") = ""YES"", 
    Concat_Ws(
      """", 
      If(borrowers.surname = """", ""-"", borrowers.surname), 
      "" / "", 
      If(borrowers.firstname = """", ""-"", borrowers.firstname), 
      If(borrowers.othernames = """", "" "", Concat("" - ("", borrowers.othernames, "")"")
      )
    ), ""Permission not given""
  ) AS NAME,
  If(
    Coalesce(newsletter_permission.lib, ""~"") = ""YES"", 
    Concat(borrowers.address, 
    ""<br />"", 
    borrowers.address2, 
    ""<br />"", 
    borrowers.city, 
    "", "",
    borrowers.state, 
    "" "", 
    borrowers.zipcode), 
    ""Permission not given""
  ) as ADDRESS,
  If(
    Coalesce(newsletter_permission.lib, ""~"") = ""YES"", 
    borrowers.email, 
    ""Permission not given""
  ) AS email,
  borrowers.branchcode,
  borrowers.categorycode,
  If(
    Coalesce(newsletter_permission.lib, ""~"") = ""YES"", 
    borrowers.dateofbirth, 
    ""Permission not given""
  ) AS dateofbirth,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  Coalesce(newsletter_permission.lib, ""~"") AS NEWSLETTER_PERMISSION
FROM
  borrowers LEFT JOIN
  (SELECT
      borrower_attributes.borrowernumber,
      authorised_values.lib,
      borrower_attributes.attribute
    FROM
      borrower_attributes JOIN
      authorised_values ON borrower_attributes.attribute = authorised_values.authorised_value
    WHERE
      borrower_attributes.code = 'NEWSLETTER' AND
      authorised_values.category = 'EmailNews'
    GROUP BY
      borrower_attributes.borrowernumber,
      borrower_attributes.attribute) newsletter_permission ON borrowers.borrowernumber = newsletter_permission.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Choose your library|ZBRAN>> AND
  borrowers.categorycode LIKE <<Choose a borrower category|LBORROWERCAT>> AND
  Coalesce(newsletter_permission.attribute, ""~"") LIKE <<Select newsletter permission attribute|LNEWSPERM>>
GROUP BY
  Coalesce(newsletter_permission.lib, ""~""),
  If(borrowers.email LIKE ""%"", ""X"", ""Y""),
  borrowers.borrowernumber
ORDER BY
  borrowers.surname,
  borrowers.firstname",,,,,,,,
R.003088,"/*
R.003088

----------

Name: GHW - Patron attributes - Internet permissions
Created by: George H Williams

----------

Group: Borrowers
     Patron attributes

Created on: 2018-06-29 08:32:01
Modified on: 2022-03-03 13:44:14
Date last run: 2022-03-08 14:23:44

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a list of patrons with contact information based on their ""Internet permission"" attributes</p>
<ul><li>Shows current patrons</li>
<li>with the home library and internet permission you specify</li>
<li>grouped by borrower number and attribute</li>
<li>sorted by patron last name/patron first name</li>
<li>contains links to the patron's account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report can be used to determine which patrons at your library have an internet permission attribute set on their account.</p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3088&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat(""<a href='/cgi-bin/koha/circ/circulation.pl?borrowernumber="", borrowers.borrowernumber, ""' target='_blank'>Patron</a>"") AS LINK_TO_PATRON,
  borrowers.cardnumber,
  Concat_Ws("""", If(borrowers.surname = """", ""-"", borrowers.surname), "" / "", If(borrowers.firstname = """", ""-"", borrowers.firstname), If(borrowers.othernames = """", "" "", Concat("" - ("", borrowers.othernames, "")""))) AS NAME,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.email,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateofbirth,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  Coalesce(internet_permission.lib, ""~"") AS INTERNET_PERMISSION
FROM
  borrowers
  LEFT JOIN (SELECT
        borrower_attributes.borrowernumber,
        authorised_values.lib,
        borrower_attributes.attribute
      FROM
        borrower_attributes
        JOIN authorised_values ON borrower_attributes.attribute = authorised_values.authorised_value
      WHERE
        borrower_attributes.code = 'INTERNET' AND
        authorised_values.category = 'InternetPolicy'
      GROUP BY
        borrower_attributes.borrowernumber,
        authorised_values.lib,
        borrower_attributes.attribute) internet_permission ON
    borrowers.borrowernumber = internet_permission.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Choose your library|LBRANCH>> AND
  borrowers.categorycode LIKE <<Choose a borrower category|LBORROWERCAT>> AND
  Coalesce(internet_permission.attribute, ""~"") LIKE <<Select internet policy attribute|LINTPOLICY>>
GROUP BY
  borrowers.borrowernumber,
  Coalesce(internet_permission.lib, ""~"")
ORDER BY
  borrowers.surname,
  borrowers.firstname",,,,,,,,
R.003089,"/*
R.003089

----------

Name: GHW - Patron attributes - Special locations
Created by: George H Williams

----------

Group: Borrowers
     Patron attributes

Created on: 2018-06-29 08:33:47
Modified on: 2019-07-24 17:47:09
Date last run: 2022-08-31 12:05:26

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a list of patrons with contact information based on their ""Special location"" attributes</p>
<ul><li>Shows current patrons</li>
<li>with the home library and special location you specify</li>
<li>grouped by borrower number and attribute</li>
<li>sorted by patron last name/patron first name</li>
<li>contains links to the patron's account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report can be used to determine which patrons at your library have a special location attribute set on their account.</p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3089&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat(""<a href='/cgi-bin/koha/circ/circulation.pl?borrowernumber="", borrowers.borrowernumber, ""' target='_blank'>Patron</a>"") AS LINK_TO_PATRON,
  borrowers.cardnumber,
  Concat_Ws("""", If(borrowers.surname = """", ""-"", borrowers.surname), "" / "", If(borrowers.firstname = """", ""-"", borrowers.firstname), If(borrowers.othernames = """", "" "", Concat("" - ("", borrowers.othernames, "")""))) AS NAME,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.email,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateofbirth,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  Coalesce(location.lib, ""~"") AS SPECIAL_LOCATION
FROM
  borrowers
  LEFT JOIN (SELECT
        borrower_attributes.borrowernumber,
        authorised_values.lib,
        borrower_attributes.attribute
      FROM
        borrower_attributes
        JOIN authorised_values ON borrower_attributes.attribute = authorised_values.authorised_value
      WHERE
        borrower_attributes.code = 'Location' AND
        authorised_values.category = 'SPECLOC'
      GROUP BY
        borrower_attributes.borrowernumber,
        borrower_attributes.attribute,
        borrower_attributes.code) location ON borrowers.borrowernumber = location.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Choose your library|LBRANCH>> AND
  borrowers.categorycode LIKE <<Choose a borrower category|LBORROWERCAT>> AND
  Coalesce(location.attribute, ""~"") LIKE <<Select special locations attribute|LSPECLOC>>
GROUP BY
  borrowers.email,
  borrowers.dateofbirth,
  borrowers.borrowernumber,
  borrowers.othernames
ORDER BY
  borrowers.branchcode,
  borrowers.surname,
  borrowers.firstname",,,,,,,,
R.003090,"/*
R.003090

----------

Name: GHW - Patron attributes - Holds contact
Created by: George H Williams

----------

Group: Borrowers
     Patron attributes

Created on: 2018-06-29 08:54:23
Modified on: 2022-04-06 08:54:54
Date last run: 2022-08-12 15:03:20

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a list of patrons with contact information based on their ""Hold contact"" attributes</p>
<ul><li>Shows current patrons</li>
<li>with the home library and hold contact method you specify</li>
<li>grouped by borrower number and attribute</li>
<li>sorted by patron last name/patron first name</li>
<li>contains links to the patron's account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report can be used to determine which patrons at your library have a hold contract attribute set.</p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3090&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat(
    ""<a href='/cgi-bin/koha/circ/circulation.pl?borrowernumber="", 
    borrowers.borrowernumber, 
    ""' target='_blank'>Patron</a>""
  ) AS LINK_TO_PATRON,
  borrowers.cardnumber,
  Concat_Ws("""", 
    If(
      borrowers.surname = """", 
      ""-"", 
      borrowers.surname
    ), 
    "" / "", 
    If(
      borrowers.firstname = """", 
      ""-"", 
      borrowers.firstname
    ), 
    If(
      borrowers.othernames = """", 
      "" "", 
      Concat("" - ("", borrowers.othernames, "")"")
    )
  ) AS NAME,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.email,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateofbirth,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  Coalesce(holdscontact.lib, ""~"") AS HOLDS_CONTACT
FROM
  borrowers
  LEFT JOIN 
    (SELECT
      borrower_attributes.borrowernumber,
      authorised_values.lib,
      borrower_attributes.attribute
    FROM
      borrower_attributes
    JOIN authorised_values ON borrower_attributes.attribute = authorised_values.authorised_value
    WHERE
      borrower_attributes.code = 'HOLD' AND
      authorised_values.category = 'HoldsContact'
    GROUP BY
      borrower_attributes.borrowernumber,
      borrower_attributes.attribute,
      borrower_attributes.code
    ) holdscontact 
  ON borrowers.borrowernumber = holdscontact.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Choose your library|ZBRAN>> AND
  borrowers.categorycode LIKE <<Choose a borrower category|LBORROWERCAT>> AND
  Coalesce(holdscontact.attribute, ""~"") LIKE <<Select holds contact attribute|LHOLDSCON>>
GROUP BY
  borrowers.borrowernumber,
  Coalesce(holdscontact.lib, ""~"")
ORDER BY
  borrowers.surname,
  borrowers.firstname",,,,,,,,
R.003091,"/*
R.003091

----------

Name: GHW - Patron attributes - Account expired
Created by: George H Williams

----------

Group: Borrowers
     Patron attributes

Created on: 2018-06-29 08:57:11
Modified on: 2021-07-29 09:14:12
Date last run: 2022-09-19 09:42:38

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a list of patrons with contact information based on their ""Account expired"" attributes</p>
<ul><li>Shows current patrons</li>
<li>with the home library and account expired attribute you specify</li>
<li>grouped by borrower number and attribute</li>
<li>sorted by patron last name/patron first name</li>
<li>contains links to the patron's account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report can be used to determine which patrons at your library have a account expired attribute set.</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#PP05 #patron_purge</p>
</div>

----------
*/

","SELECT
  Concat(
    ""<a href='/cgi-bin/koha/circ/circulation.pl?borrowernumber="",
    borrowers.borrowernumber, 
    ""' target='_blank'>Borrower</a>""
  ) AS LINK_TO_BORROWER,
  borrowers.cardnumber,
  Concat_Ws("""", 
    If(borrowers.surname = """", ""-"", borrowers.surname), 
    "" / "",
    If(borrowers.firstname = """", ""-"", borrowers.firstname),
    If(borrowers.othernames = """", "" "", Concat("" - ("", borrowers.othernames, "")""))
  ) AS NAME,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.email,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateofbirth,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  Coalesce(expired_account.attribute, ""~"") AS ATTRIBUTE_VALUE,
  Coalesce(expired_account.lib, ""~"") AS EXPIRATION_FLAGS
FROM
  borrowers LEFT JOIN
  (SELECT
     borrower_attributes.borrowernumber,
     authorised_values.lib,
     borrower_attributes.attribute
   FROM
     borrower_attributes JOIN
     authorised_values ON borrower_attributes.attribute =
         authorised_values.authorised_value
   WHERE
     borrower_attributes.code = 'EXPIRED' AND
     authorised_values.category = 'EXPIRED'
   GROUP BY
     borrower_attributes.borrowernumber,
     borrower_attributes.attribute,
     borrower_attributes.code) expired_account ON borrowers.borrowernumber =
      expired_account.borrowernumber
WHERE
  borrowers.branchcode LIKE '%' AND
  borrowers.categorycode LIKE '%' AND
  Coalesce(expired_account.attribute, ""~"") REGEXP <<Select expiration attribute|LEXPIRED>>
GROUP BY
  borrowers.borrowernumber
ORDER BY
  borrowers.dateexpiry,
  borrowers.surname,
  borrowers.firstname",,,,,,,,
R.003092,"/*
R.003092

----------

Name: GHW - Patron attributes - Collection agency
Created by: George H Williams

----------

Group: Borrowers
     Patron attributes

Created on: 2018-06-29 09:12:59
Modified on: 2019-07-24 17:46:44
Date last run: 2021-11-03 19:43:21

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a list of patrons with contact information based on their ""Collection agency"" attributes</p>
<ul><li>Shows current patrons</li>
<li>with the home library and collection agency attribute you specify</li>
<li>grouped by borrower number and attribute</li>
<li>sorted by patron last name/patron first name</li>
<li>contains links to the patron's account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report can be used to determine which patrons at your library have a collection agency attribute set.</p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3092&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat(""<a href='/cgi-bin/koha/circ/circulation.pl?borrowernumber="", borrowers.borrowernumber, ""' target='_blank'>Patron</a>"") AS LINK_TO_PATRON,
  borrowers.cardnumber,
  Concat_Ws("""", If(borrowers.surname = """", ""-"", borrowers.surname), "" / "", If(borrowers.firstname = """", ""-"", borrowers.firstname), If(borrowers.othernames = """", "" "", Concat("" - ("", borrowers.othernames, "")""))) AS NAME,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.email,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateofbirth,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  Coalesce(collectionagency.lib, ""~"") AS COLLECTION_AGENCY
FROM
  borrowers
  LEFT JOIN (SELECT
        borrower_attributes.borrowernumber,
        authorised_values.lib,
        borrower_attributes.attribute
      FROM
        borrower_attributes
        JOIN authorised_values ON borrower_attributes.attribute = authorised_values.authorised_value
      WHERE
        borrower_attributes.code = 'CAOTTAWA' AND
        authorised_values.category = 'COLLAGEN'
      GROUP BY
        borrower_attributes.borrowernumber,
        borrower_attributes.attribute,
        borrower_attributes.code) collectionagency ON borrowers.borrowernumber = collectionagency.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Choose your library|ZBRAN>> AND
  borrowers.categorycode LIKE <<Choose a borrower category|LBORROWERCAT>> AND
  Coalesce(collectionagency.attribute, ""~"") LIKE <<Select collection agency attribute|LCOLLAGEN>>
GROUP BY
  borrowers.email,
  borrowers.dateofbirth,
  borrowers.borrowernumber,
  borrowers.othernames
ORDER BY
  borrowers.surname,
  borrowers.firstname",,,,,,,,
R.003093,"/*
R.003093

----------

Name: GHW - Patron attributes - Other attributes 1 / Other attirbutes 2 / Registration library
Created by: George H Williams

----------

Group: Borrowers
     Patron attributes

Created on: 2018-06-29 09:17:52
Modified on: 2019-07-24 17:46:36
Date last run: 2021-02-25 09:48:35

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a list of patrons with contact information based on the ""Other attributes 1,"" ""Other attributes 2,"" and ""Registration library"" attributes</p>
<ul><li>Shows current patrons</li>
<li>with the home library you specify</li>
<li>grouped by borrower number and attribute</li>
<li>sorted by patron last name/patron first name</li>
<li>contains links to the patron's account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report can be used to determine which patrons at your library have any of these attributes set.</p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3093&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat(""<a href='/cgi-bin/koha/circ/circulation.pl?borrowernumber="", borrowers.borrowernumber, ""' target='_blank'>Patron</a>"") AS LINK_TO_PATRON,
  borrowers.cardnumber,
  Concat_Ws("""", If(borrowers.surname = """", ""-"", borrowers.surname), "" / "", If(borrowers.firstname = """", ""-"", borrowers.firstname), If(borrowers.othernames = """", "" "", Concat("" - ("", borrowers.othernames, "")""))) AS NAME,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.email,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateofbirth,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  Coalesce(otherinfoone.attribute, ""~"") AS OTHER_IDENTIFIER_ONE,
  Coalesce(otherinfotwo.attribute, ""~"") AS OTHER_IDENTIFIER_TWO,
  Coalesce(registrationbranch.attribute, ""~"") AS REGISTRATION_BRANCH
FROM
  borrowers
  LEFT JOIN (SELECT
        borrower_attributes.borrowernumber,
        borrower_attributes.attribute
      FROM
        borrower_attributes
      WHERE
        borrower_attributes.code = 'ALTID'
      GROUP BY
        borrower_attributes.borrowernumber,
        borrower_attributes.code) otherinfoone ON borrowers.borrowernumber = otherinfoone.borrowernumber
  LEFT JOIN (SELECT
        borrower_attributes.borrowernumber,
        borrower_attributes.attribute
      FROM
        borrower_attributes
      WHERE
        borrower_attributes.code = 'LICENSE'
      GROUP BY
        borrower_attributes.borrowernumber,
        borrower_attributes.code) otherinfotwo ON borrowers.borrowernumber = otherinfotwo.borrowernumber
  LEFT JOIN (SELECT
        borrower_attributes.borrowernumber,
        borrower_attributes.attribute
      FROM
        borrower_attributes
      WHERE
        borrower_attributes.code = 'REGBRANCH'
      GROUP BY
        borrower_attributes.borrowernumber,
        borrower_attributes.code) registrationbranch ON borrowers.borrowernumber = registrationbranch.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Choose your library|ZBRAN>> AND
  borrowers.categorycode LIKE <<Choose a borrower category|LBORROWERCAT>> AND
  Coalesce(otherinfoone.attribute, ""~"") LIKE Concat(""%"", <<Enter part of 'Other identifier 1' or a % symbol>>, ""%"") AND
  Coalesce(otherinfotwo.attribute, ""~"") LIKE Concat(""%"", <<Enter part of 'Other identifier 2' or a % symbol>>, ""%"") AND
  Coalesce(registrationbranch.attribute, ""~"") LIKE Concat(""%"", <<Enter part of 'Registration branch' or a % symbol>>, ""%"")
GROUP BY
  borrowers.email,
  borrowers.dateofbirth,
  borrowers.borrowernumber,
  borrowers.othernames
ORDER BY
  borrowers.surname,
  borrowers.firstname",,,,,,,,
R.003098,"/*
R.003098

----------

Name: GHW - Hoopla 001
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-07-02 15:37:18
Modified on: 2020-10-06 10:57:46
Date last run: 2020-10-06 10:57:49

----------

Public: 0
Expiry: 300

----------

Delete items and associated biblios by the 5th of each month

----------
*/

","SELECT
  items.itemnumber
FROM
  items
WHERE
  items.itemnumber > '2425208' AND
  items.itemcallnumber = 'Hoopla' AND
  (items.ccode = 'DLAUDIO' OR
    items.ccode = 'DLBOOK' OR
    items.ccode = 'DLMUSIC')
GROUP BY
  items.itemnumber",,,,,,,,
R.003099,"/*
R.003099

----------

Name: GHW - Hoopla 002
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-07-02 15:38:36
Modified on: 2018-10-03 14:23:35
Date last run: 2020-10-06 09:22:58

----------

Public: 0
Expiry: 300

----------

Run after #2 to download data for comparison

----------
*/

","SELECT
  items.itemnumber,
  items.biblionumber,
  items.ccode,
  items.homebranch,
  items.itemcallnumber,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""037""]/subfield[@code=""a""]') AS STOCK_NUMBER,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""856""]/subfield[@code=""y""]') AS YX,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""856""]/subfield[@code=""z""]') AS Z
FROM
  items
  JOIN biblio_metadata ON items.biblionumber = biblio_metadata.biblionumber
WHERE
  items.itemcallnumber = 'Hoopla'
GROUP BY
  STOCK_NUMBER",,,,,,,,
R.003100,"/*
R.003100

----------

Name: GHW - Last borrower informatin to be deleted
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-07-02 17:18:28
Modified on: 2018-07-20 11:28:44
Date last run: 2022-08-24 17:36:48

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Shows id numbers from rows in items_last_borrower table that should be deleted.</p>
<ul><li>Shows items_last_borrowed id numbers where the item is not lost/damaged/withdrawn and the item was returned more than 13 months ago.</li>
<li>on items at all libraries</li>
<li>grouped by id number</li>
<li>sorted by id number</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3100&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  items_last_borrower.id AS ITEMS_LAST_BORROWER_ID
FROM
  items_last_borrower
  JOIN items ON items_last_borrower.itemnumber = items.itemnumber
WHERE
  items_last_borrower.created_on < (Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 7 DAY) + INTERVAL 1 WEEK) - INTERVAL 13 MONTH AND
  Coalesce(items.damaged, ""0"") = 0 AND
  Coalesce(items.itemlost, ""0"") = 0 AND
  Coalesce(items.withdrawn, ""0"") = 0
GROUP BY
  items_last_borrower.id
ORDER BY
  items_last_borrower.created_on",,,,,,,,
R.003101,"/*
R.003101

----------

Name: GHW - Report Names
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-07-02 21:00:53
Modified on: 2018-07-03 08:21:11
Date last run: 2019-12-26 12:22:19

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  rg.lib AS GGROUP,
  rsg.lib AS SUB_GROUP,
  Concat(""---<br />### Number: "", saved_sql.id, ""<br />## Name: "", saved_sql.report_name, '<br /><br />', Replace(saved_sql.notes, '\r\n', CONCAT(Char(13),Char(10)))) AS INFO
FROM
  saved_sql
  LEFT JOIN (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'report_group'
      GROUP BY
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib) rg ON saved_sql.report_group = rg.authorised_value
  LEFT JOIN (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'report_subgroup'
      GROUP BY
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib) rsg ON saved_sql.report_subgroup = rsg.authorised_value
GROUP BY
  rg.lib,
  rsg.lib,
  saved_sql.id
ORDER BY
  GGROUP,
  SUB_GROUP,
  saved_sql.id",,,,,,,,
R.003103,"/*
R.003103

----------

Name: GHW - Details on a specific biblio
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-07-15 14:41:03
Modified on: 2019-01-25 16:50:19
Date last run: 2019-07-14 22:56:01

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  biblio.biblionumber,
  biblio.frameworkcode,
  biblio.author,
  biblio.title,
  biblio.unititle,
  biblio.notes,
  biblio.serial,
  biblio.seriestitle,
  biblio.copyrightdate,
  biblio.timestamp,
  biblio.datecreated,
  biblio.abstract,
  Group_Concat(items.itype) AS ITYPES
FROM
  biblio
LEFT JOIN items on (biblio.biblionumber = items.biblionumber)
WHERE biblio.biblionumber = <<Enter biblio number>>
GROUP BY
  biblio.biblionumber
ORDER BY
 biblio.biblionumber
  DESC
",,,,,,,,
R.003111,"/*
R.003111

----------

Name: GHW - S
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-08-08 18:12:23
Modified on: 2018-08-08 18:12:23
Date last run: 2018-09-06 21:44:47

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.cardnumber,
  borrowers.surname,
  borrowers.firstname,
  borrowers.title,
  borrowers.othernames,
  borrowers.initials,
  borrowers.streetnumber,
  borrowers.streettype,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.country,
  borrowers.email,
  borrowers.phone,
  borrowers.mobile,
  borrowers.fax,
  borrowers.emailpro,
  borrowers.phonepro,
  borrowers.B_streetnumber,
  borrowers.B_streettype,
  borrowers.B_address,
  borrowers.B_address2,
  borrowers.B_city,
  borrowers.B_state,
  borrowers.B_zipcode,
  borrowers.B_country,
  borrowers.B_email,
  borrowers.B_phone,
  borrowers.dateofbirth,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  borrowers.date_renewed,
  borrowers.gonenoaddress,
  borrowers.lost,
  borrowers.debarred,
  borrowers.debarredcomment,
  borrowers.contactname,
  borrowers.contactfirstname,
  borrowers.contacttitle,
  borrowers.guarantorid,
  borrowers.borrowernotes,
  borrowers.relationship,
  borrowers.ethnicity,
  borrowers.ethnotes,
  borrowers.sex,
  borrowers.password,
  borrowers.flags,
  borrowers.userid,
  borrowers.opacnote,
  borrowers.contactnote,
  borrowers.sort1,
  borrowers.sort2,
  borrowers.altcontactfirstname,
  borrowers.altcontactsurname,
  borrowers.altcontactaddress1,
  borrowers.altcontactaddress2,
  borrowers.altcontactaddress3,
  borrowers.altcontactstate,
  borrowers.altcontactzipcode,
  borrowers.altcontactcountry,
  borrowers.altcontactphone,
  borrowers.smsalertnumber,
  borrowers.sms_provider_id,
  borrowers.privacy,
  borrowers.privacy_guarantor_checkouts,
  borrowers.checkprevcheckout,
  borrowers.updated_on,
  borrowers.lastseen,
  borrowers.lang,
  borrowers.login_attempts,
  borrowers.overdrive_auth_token
FROM
  borrowers
WHERE
  borrowers.branchcode LIKE ""PH%""
GROUP BY
  borrowers.borrowernumber",,,,,,,,
R.003112,"/*
R.003112

----------

Name: GHW - T
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-08-13 00:35:23
Modified on: 2018-08-13 21:59:55
Date last run: 2018-08-13 22:02:13

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat(""<a href='/cgi-bin/koha/circ/circulation.pl?borrowernumber="", borrowers.borrowernumber,
  ""' target='_blank'>Patron</a>"") AS LINK_TO_PATRON,
  borrowers.borrowernumber,
  borrowers.cardnumber,
  Concat_Ws("""", If(borrowers.surname = """", ""-"", borrowers.surname), "" / "", If(borrowers.firstname = """", ""-"",
  borrowers.firstname), If(borrowers.othernames = """", "" "", Concat("" - ("", borrowers.othernames, "")""))) AS NAME,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.email,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateofbirth,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  Coalesce(school_teacher.lib, ""~"") AS TEACHER_ATTRIBUTE
FROM
  borrowers
  LEFT JOIN (SELECT
        borrower_attributes.borrowernumber,
        authorised_values.lib,
        borrower_attributes.attribute
      FROM
        borrower_attributes
        INNER JOIN authorised_values ON borrower_attributes.attribute = authorised_values.authorised_value
      WHERE
        borrower_attributes.code = 'TEACHER' AND
        authorised_values.category = 'TEACHER'
      GROUP BY
        borrower_attributes.borrowernumber,
        borrower_attributes.attribute) school_teacher ON borrowers.borrowernumber = school_teacher.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Choose your library|LBRANCH>> AND
  borrowers.categorycode LIKE <<Choose a borrower category|LBORROWERCAT>> AND
  Coalesce(school_teacher.attribute, ""~"") LIKE <<Select teacher attribute|TEACHER>>
GROUP BY
  borrowers.email,
  borrowers.dateofbirth,
  borrowers.borrowernumber,
  borrowers.othernames
ORDER BY
  borrowers.surname,
  borrowers.firstname",,,,,,,,
R.003113,"/*
R.003113

----------

Name: GHW - Deleted item dashboard
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-08-13 15:03:41
Modified on: 2019-03-19 13:56:19
Date last run: 2022-10-03 14:21:08

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Basic information about an item that has been deleted</p>
<ul><li>Shows items that are currently in the deleteditems table.  Item data is stored in the deleteditems table for 13 months after an item is deleted.</li>
<li>shows items with the barcode numbers you specify</li>
<li>grouped by itemnumber</li>
<li>sorted by homebranch, item type, collection code, call number, author, and title</li>
<li>Contains links to the items bibliographic record (if the bibliographic record has not been deleted) and links to a fines/fees report that can search by item barcode</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3113&phase=Run%20this%20report&limit=400""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat_Ws(
    '<br />',
    Concat('At the time of its deletion on:  <ins><strong>', deleteditems.timestamp, ""<br /></strong></ins> this item's information was as follows:<br />""),
    Concat('Item homebranch: ', deleteditems.homebranch),
    Concat('Current branch: ', deleteditems.holdingbranch),
    Concat('Shelving location: ', deleteditems.location),
    Concat('Item type: ', deleteditems.itype),
    Concat('Collection code: ', ccodes.lib),
    Concat('Call#: ', deleteditems.itemcallnumber),
    Concat('Author: ', Coalesce(biblio.author, deletedbiblio.author)),
    Concat('Title: ', Coalesce(biblio.title, deletedbiblio.title)),
    Concat('Item barcode: ', deleteditems.barcode),
    Concat('Item id number: ', deleteditems.itemnumber),
    Concat(""<br />Damaged status: "",
      If(
        deleteditems.damaged = 0,
        ""-"",
        If(
          deleteditems.damaged IS NULL,
          ""-"",
          damagedi.lib
        )
      )
    ),
    Concat(""Lost status: "",
      If(
        deleteditems.itemlost = 0,
        ""-"",
        If(
          deleteditems.itemlost IS NULL,
          ""-"",
          Concat(losti.lib, "" on "", deleteditems.itemlost_on)
        )
      )
    ),
    Concat(""Withdrawn status: "",
      If(
        deleteditems.withdrawn = 0,
        ""-"",
        If(
          deleteditems.withdrawn IS NULL,
          ""- "",
          Concat(deletedwithdrawni.lib, "" on "", deleteditems.withdrawn_on)
        )
      )
    ),
    If(biblio.biblionumber IS NULL,
      ""<br />-- Bibliographic record has been deleted --"",
      Concat(
        ""<br /><a href='/cgi-bin/koha/catalogue/detail.pl?biblionumber="",
        biblio.biblionumber,
        ""' target='_blank'>go to the bibliographic record</a>""
      )
    ),
    Concat(
      ""<br /><a href='/cgi-bin/koha/reports/guided_reports.pl?phase=Run+this+report&reports=3009&sql_params="",
      REPLACE(
        REPLACE(
          REPLACE(
            REPLACE(
              REPLACE(
                REPLACE(
                  REPLACE(
                    deleteditems.barcode,
                    CHAR(43), ""%2B""
                  ),
                  CHAR(47),""%2F""
                ),
                CHAR(32), ""%20""
              ),
              CHAR(45), ""%2D""
            ),
            CHAR(36), ""%24""
          ),
          CHAR(37), ""%25""
        ),
        CHAR(46), ""%2E""
      ),
      ""&limit=50' target='_blank'>See all fine and fees history for this item barcode number</a>""
    )
  ) AS INFO
FROM
  deleteditems
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
    GROUP BY
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
  ) ccodes
    ON deleteditems.ccode = ccodes.authorised_value
  LEFT JOIN biblio
    ON deleteditems.biblionumber = biblio.biblionumber
  LEFT JOIN deletedbiblio
    ON deleteditems.biblionumber = deletedbiblio.biblionumber
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'DAMAGED'
  ) damagedi
    ON damagedi.authorised_value = deleteditems.damaged
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOST'
  ) losti
    ON losti.authorised_value = deleteditems.itemlost
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'WITHDRAWN'
  ) deletedwithdrawni
    ON deletedwithdrawni.authorised_value = deleteditems.withdrawn
WHERE
  deleteditems.barcode LIKE Concat(""%"", <<Enter a deleted item barcode number, a partial barcode nuber or a % symbol>>, ""%"")
GROUP BY
  deleteditems.itemnumber
ORDER BY
  deleteditems.homebranch,
  deleteditems.itype,
  ccodes.lib,
  deleteditems.itemcallnumber,
  Coalesce(biblio.author, deletedbiblio.author),
  Coalesce(biblio.title, deletedbiblio.title)",,,,,,,,
R.003116,"/*
R.003116

----------

Name: GHW -Report-a-problem notes by patron barcode number
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-08-24 17:48:05
Modified on: 2018-08-24 17:48:05
Date last run: 2022-09-26 13:06:00

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat_Ws(""<br />"",
    Concat(""Borrower BC: "", borrowers.cardnumber, ""<br />""),
    Concat('<a href=\""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', allissues.borrowernumber, '\"" target=""_blank"">Link to patron record</a>')) AS PATRON,
  Concat_Ws(""<br />"",
    Concat(""Item home: "", items.homebranch),
    Concat(""Location: "", items.location),
    Concat(""Item type: "", items.itype),
    Concat(""Collection: "", items.ccode),
    Concat(""Call number: "", items.itemcallnumber),
    Concat(""Author: "", biblio.author),
    Concat(""Title: "", biblio.title),
    Concat(""Item BC: "", allissues.ITEM_BC, ""<br />""),
    Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', items.biblionumber, '\"" target=""_blank"">Link to title</a>')) AS ITEM_INFO,
  Concat_Ws(""<br />"",
    Concat(""Checked out at: "", allissues.branchcode, ""<br />""),
    Concat(""Checked out on: "", allissues.issuedate, ""<br />""),
    Concat(""Due date: "", allissues.IN_OR_OUT)) AS CHECKOUT_INFO,
  Concat_Ws(""<br />"",
    Concat(""Note date: "", allissues.notedate, ""<br />""),
    Concat(""<ins>Note text:</ins><br /><br />"", allissues.note)) AS NOTE_INFO
FROM
    (SELECT
        issues.note,
        issues.borrowernumber,
        issues.notedate,
        items.barcode AS ITEM_BC,
        If(issues.itemnumber <> 0, issues.date_due, ""<span style='color: red;'><ins>Item has already been returned</ins></span>"") AS IN_OR_OUT,
        issues.branchcode,
        issues.issuedate,
        issues.itemnumber
      FROM
        issues
        LEFT JOIN items ON issues.itemnumber = items.itemnumber
      WHERE
        issues.note IS NOT NULL
      UNION
      SELECT
        old_issues.note,
        old_issues.borrowernumber,
        old_issues.notedate,
        items.barcode AS ITEM_BC,
        If(old_issues.itemnumber <> 0, ""<span style='color: red;'><ins>Item has already been returned</ins></span>"", ""Still checked out"") AS IN_OR_OUT,
        old_issues.branchcode,
        old_issues.issuedate,
        old_issues.itemnumber
      FROM
        old_issues
        LEFT JOIN items ON old_issues.itemnumber = items.itemnumber
      WHERE
        old_issues.note IS NOT NULL) AS allissues
  JOIN borrowers ON allissues.borrowernumber = borrowers.borrowernumber
  LEFT JOIN items ON allissues.itemnumber = items.itemnumber
  INNER JOIN biblio ON items.biblionumber = biblio.biblionumber
WHERE
  borrowers.cardnumber LIKE <<Enter patron's barcode number>>
GROUP BY
  allissues.borrowernumber,
  items.itemnumber
ORDER BY
  allissues.notedate DESC",,,,,,,,
R.003120,"/*
R.003120

----------

Name: GHW - Z39.50 targets
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-09-15 11:22:32
Modified on: 2018-09-25 10:42:59
Date last run: 2018-10-22 00:04:21

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates basic Z39.50 list (makes it easy to share with other people)</p>
<ul><li>Shows current Z39.50 list used by Next Search Catalog</li>
<li>does not include Z39.50 targets that require a username/password for access</li>
<li>grouped by server ID number</li>
<li>sorted by server type and server name</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Good report for sharing Z39.50 data with other libraries.</p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3120&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3120"">Click here to download as a csv file</a></p>
</div>

----------
*/

","SELECT
  z3950servers.servername AS SERVER_NAME,
  z3950servers.host AS HOSTNAME,
  z3950servers.port AS PORT,
  z3950servers.db AS `DATABASE`,
  z3950servers.syntax,
  z3950servers.encoding,
  z3950servers.recordtype AS RECORD_TYPE
FROM
  z3950servers
WHERE
  z3950servers.userid LIKE """"
GROUP BY
  z3950servers.id
ORDER BY
  RECORD_TYPE DESC,
  SERVER_NAME",,,,,,,,
R.003121,"/*
R.003121

----------

Name: GHW - ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-09-18 09:43:36
Modified on: 2018-12-09 21:10:37
Date last run: 2018-12-09 21:11:51

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  CONCAT_WS(""<br />"", Concat(""The following item has been missing in transit for more than 7 days:<br />""),
  Concat(""Home Lib: "", items.homebranch),
  Concat(""Location: "", items.location),
  Concat(""Itemtype: "",  items.itype),
  Concat(""CCode: "", authorised_values.lib),
  Concat(""Call#: "", items.itemcallnumber),
  Concat(""Author: "", biblio.author),
  Concat(""Title: "", biblio.title),
  Concat(""Bcode: "", items.barcode),
  Concat(""Home Lib: "", items.homebranch),
  Concat(""Shipped from: "", branchtransfers.frombranch),
  Concat(""Shipped to: "", branchtransfers.tobranch),
  Concat(""Shipped on:  "", branchtransfers.datesent),
  Concat(""Last seen: "", items.datelastseen, ""<br />""),
  Concat(""Could you please check the shelves at your library for this item?<br /><br />.page."")) AS LETTER_CONTENT
FROM
  (items
  JOIN branchtransfers ON items.itemnumber = branchtransfers.itemnumber)
  JOIN biblio ON items.biblionumber = biblio.biblionumber
  LEFT JOIN authorised_values ON items.ccode = authorised_values.authorised_value
WHERE
  authorised_values.category = ""ccode"" AND
  branchtransfers.datearrived IS NULL AND
  ((items.homebranch = @brn := <<Choose your library|branches>> COLLATE utf8mb4_unicode_ci) OR
  (branchtransfers.frombranch = @brn) OR
  (branchtransfers.tobranch = @brn))
GROUP BY
  items.barcode
ORDER BY
  items.homebranch,
  items.location,
  items.itype,
  authorised_values.lib,
  items.itemcallnumber,
  biblio.author,
  biblio.title,
  items.barcode",,,,,,,,
R.003123,"/*
R.003123

----------

Name: GHW - Checkout count by index term
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-09-19 10:13:02
Modified on: 2018-12-08 23:14:03
Date last run: 2019-07-02 11:42:26

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Counts checkouts and renewals at a library based on an index term (marc field 655$a)</p>
<ul><li>Shows circulation in the previous 24 months (will not include current month or partial months)</li>
<li>checked out at the library you specify</li>
<li>grouped and sorted by year, month, and owning library</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>The search will be conducted based on the term or terms you enter.  For example, if you enter ""Fiction"" you will see all results where at least one 655$a contains the word ""Fiction"" - i.e. Fiction, Fantasy fiction, Legal fiction, Horror fiction, Romance fiction, etc.  If you put in ""Fantasy fiction"" you will only see results where at least one 655$a contains the phrase ""Fantasy fiction"" in that order with the space between the two words.  The search is not case sensitive so ""legal"" and ""Legal"" will return the same results.</p>
<p></p>
<p>Also note that any home branch code that ends with ""-deleted"" indicates a title that checked out in the month specified but has been deleted from the catalog within the last 13 months.</p>
<p></p>
<p>To check a word or phrase to see how many titles in the catalog contain that word or phrase in the 655$a, run report 3124 (<a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3124&phase=Run%20this%20report""  target=""_blank"">click here to run report 3124 in a new window.</a>)</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3123&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  statistics.branch AS CKO_BRANCH,
  Year(statistics.datetime) AS YEAR,
  Date_Format(statistics.datetime, '%m') AS MONTH,
  items.homebranch AS HOMEBRANCH,
  Count(DISTINCT statistics.itemnumber) AS ISSUE_RENEW
FROM
  statistics
  LEFT JOIN items ON statistics.itemnumber = items.itemnumber
  LEFT JOIN biblio_metadata ON items.biblionumber = biblio_metadata.biblionumber
WHERE
  statistics.datetime > AddDate(Last_Day(SubDate(Now(), INTERVAL 25 MONTH)), 1) AND
  statistics.datetime < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) AND
  (statistics.type = 'issue' OR
    statistics.type = 'renew') AND
  (ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""655""]/subfield[@code=""a""]') LIKE @subj := CONCAT(""%"", <<Enter part of an index term (Marc 655 subfield a) or a % symbol>>, ""%"") COLLATE utf8mb4_unicode_ci) AND
  (statistics.branch LIKE @brn := <<Enter checkout branch|ZBRAN>> COLLATE utf8mb4_unicode_ci)
GROUP BY
  statistics.branch,
  Year(statistics.datetime),
  Date_Format(statistics.datetime, '%m'),
  items.homebranch
UNION
SELECT
  statistics.branch AS CKO_BRANCH,
  Year(statistics.datetime) AS YEAR,
  Date_Format(statistics.datetime, '%m') AS MONTH,
  Concat(deleteditems.homebranch, ""-deleted item"") AS HOMEBRANCH,
  Count(DISTINCT statistics.itemnumber) AS ISSUE_RENEW
FROM
  statistics
  LEFT JOIN deleteditems ON statistics.itemnumber = deleteditems.itemnumber
  LEFT JOIN deletedbiblio_metadata ON deleteditems.biblionumber = deletedbiblio_metadata.biblionumber
WHERE
  statistics.datetime > AddDate(Last_Day(SubDate(Now(), INTERVAL 25 MONTH)), 1) AND
  statistics.datetime < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) AND
  (statistics.type = 'issue' OR
    statistics.type = 'renew') AND
  (ExtractValue(deletedbiblio_metadata.metadata, '//datafield[@tag=""655""]/subfield[@code=""a""]') LIKE @subj) AND
  (statistics.branch LIKE @brn)
GROUP BY
  statistics.branch,
  Year(statistics.datetime),
  Date_Format(statistics.datetime, '%m'),
  deleteditems.homebranch
UNION
SELECT
  statistics.branch AS CKO_BRANCH,
  Year(statistics.datetime) AS YEAR,
  Date_Format(statistics.datetime, '%m') AS MONTH,
  Concat(deleteditems.homebranch, ""-deleted item"") AS HOMEBRANCH,
  Count(DISTINCT statistics.itemnumber) AS ISSUE_RENEW
FROM
  statistics
  LEFT JOIN deleteditems ON statistics.itemnumber = deleteditems.itemnumber
  LEFT JOIN biblio_metadata ON deleteditems.biblionumber = biblio_metadata.biblionumber
WHERE
  statistics.datetime > AddDate(Last_Day(SubDate(Now(), INTERVAL 25 MONTH)), 1) AND
  statistics.datetime < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) AND
  (statistics.type = 'issue' OR
    statistics.type = 'renew') AND
  (ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""655""]/subfield[@code=""a""]') LIKE @subj) AND
  (statistics.branch LIKE @brn)
GROUP BY
  statistics.branch,
  Year(statistics.datetime),
  Date_Format(statistics.datetime, '%m'),
  deleteditems.homebranch
ORDER BY
  YEAR,
  MONTH,
  HOMEBRANCH",,,,,,,,
R.003124,"/*
R.003124

----------

Name: GHW - Genre Terms count
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-09-19 11:36:49
Modified on: 2018-09-25 10:03:36
Date last run: 2021-04-12 14:54:56

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Shows a count of how many bibliographic records contain a specified index term in their bibliographic records (Marc 655$a).</p>
<ul><li>Shows terms and their counts currently in the catalog.</li>
<li>At all libraries</li>
<li>grouped and sorted by index term</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Enter an index term or a partial index term and this report will show you how many records contain that term.  Best to use for partial terms (i.e. for ""Erotic stories,"" type in ""erot"" to get a list of all terms containing the characters ""erot"" in that order).</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3124&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""655""]/subfield[@code=""a""]') AS INDEX_TERM,
  Count(DISTINCT biblio_metadata.biblionumber) AS BIBLIO_COUNT
FROM
  biblio_metadata
WHERE
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""655""]/subfield[@code=""a""]') LIKE Concat(""%"", <<Enter part of an index term (Marc 655 subfield a) or a % symbol>>, ""%"")
GROUP BY
  INDEX_TERM",,,,,,,,
R.003125,"/*
R.003125

----------

Name: GHW - Circulation desk transactions on a specified date
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-09-26 11:42:19
Modified on: 2021-10-26 12:23:30
Date last run: 2022-07-25 11:49:32

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>List of transactions at the circulation desk at the library you specify</p>
<ul><li>Shows transactions on the date you specify</li>
<li>shows transactions that occurred at the library you specify</li>
<li>grouped and sorted by library, time the transaction occurred, and the item number</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report cannot be used to show any transactions more than 25 months old.</p>
<p>Shelving location information was not stored in the transaction logs until we upgraded to Koha 17.11 on 2018.07.28.</p>
<p></p>
<p class=""updated"">Report changed to show item permanent location in addition to current location at time of circulation.</p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3125&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  statistics.branch AS TRANSACTION_BRANCH,
  If(statistics.type = ""issue"", ""checkout"", statistics.type) AS STATISTIC_TYPE,
  statistics.datetime,
  Upper(Coalesce(items.barcode, deleteditems.barcode)) AS ITEM_BC,
  permlocs.lib AS PERMANENT_LOCATION,
  locations.lib AS SHELVING_LOCATION,
  itemtypes.description AS ITYPE,
  ccodes.lib AS CCODE,
  Coalesce(items.itemcallnumber, deleteditems.itemcallnumber) AS CALL_NUMBER,
  biblio.author,
  biblio.title AS `TITLE (245$a only)`,
  If(deleteditems.barcode IS NOT NULL, 
    ""Item has been deleted"", 
    If(statistics.type = ""payment"", 
      ""No item data for payments"", 
      If(statistics.type = ""writeoff"", 
        ""No item data for writeoffs"", 
        If(statistics.type = ""return"", 
          ""Shelving loction not recorded for returns"", 
          ""-""
        )
      )
    )) AS NOTES
FROM
  statistics LEFT JOIN
  items ON statistics.itemnumber = items.itemnumber LEFT JOIN
  deleteditems ON statistics.itemnumber = deleteditems.itemnumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'loc') locations ON statistics.location =
      locations.authorised_value LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itemtypes ON statistics.itemtype = itemtypes.itemtype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode') ccodes ON statistics.ccode =
      ccodes.authorised_value LEFT JOIN
  biblio ON items.biblionumber = biblio.biblionumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'loc') permlocs ON permlocs.authorised_value = items.permanent_location
WHERE
  statistics.branch like <<Choose the circulating library|branches>> AND
  statistics.datetime LIKE Concat(<<Choose a date|date>>, ""%"") AND
  If(
    statistics.type = ""renew"",
    ""renew-issue"",
    If(
      statistics.type = ""issue"",
      ""issue-renew"", statistics.type
    )
  ) LIKE <<Choose a transaction type|LSTATTYPE>>
GROUP BY
  statistics.branch,
  statistics.datetime,
  permlocs.lib,
  statistics.itemnumber
ORDER BY
  TRANSACTION_BRANCH,
  statistics.datetime,
  statistics.itemnumber",,,,,,,,
R.003126,"/*
R.003126

----------

Name: GHW - ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-09-26 17:24:42
Modified on: 2018-09-26 17:50:24
Date last run: 2018-10-07 14:38:31

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat(
    If(items.location IS NULL, ""Blank shelving location / "", """"),
    If(items.itype = ""XXX"", ""Unclassified itype / "", """"),
    If(items.ccode IS NULL, ""Blank collection code / "", """"),
    If(items.ccode = ""XXX"", ""Unclassified collection code / "", """"),
    If(items.barcode LIKE ""WAC%"", """", If(LENGTH(items.barcode) < 13, ""Short barcode / "", """")),
    If(items.barcode IS NULL, ""Blank barcode /"", """")
  ) AS PROBLEM,
  Concat('<a href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=',  biblio.biblionumber,  '&itemnumber=',  items.itemnumber, '"" target=""_blank"">Edit this item</a>') AS EDIT_ITEM,
  biblio.biblionumber,
  items.itemnumber,
  items.barcode,
  items.homebranch,
  locations.lib AS SHELVING_LOCATION,
  Concat(itemtypes.description, "" ("", items.itype, "")"") AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber,
  biblio.author,
  Concat_Ws("" "", biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""c""]')) AS FULL_TITLE,
  items.dateaccessioned
FROM
  biblio
  JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
  JOIN items ON items.biblionumber = biblio.biblionumber
  LEFT JOIN (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'CCODE'
      GROUP BY
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib) ccodes ON items.ccode = ccodes.authorised_value
  JOIN biblioitems ON biblioitems.biblionumber = biblio.biblionumber AND
    items.biblioitemnumber = biblioitems.biblioitemnumber
  INNER JOIN itemtypes ON items.itype = itemtypes.itemtype
  LEFT JOIN (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'LOC') locations ON items.location = locations.authorised_value
WHERE
  items.itype <> 'ILL' AND
  items.dateaccessioned < (<<Choose all items added before|date>> + interval 1 day) AND
  items.notforloan = 0 AND
  items.homebranch LIKE <<Choose your library|ZBRAN>> AND
  Concat(
    If(items.location IS NULL, ""BLLOC / "", """"),
    If(items.itype = ""XXX"", ""XTYPE / "", """"),
    If(items.ccode IS NULL, ""BLCCODE / "", """"),
    If(items.ccode = ""XXX"", ""XCCODE / "", """"),
    If(items.barcode LIKE ""WAC%"", """", If(LENGTH(items.barcode) < 13, ""SBC / "", """")),
    If(items.barcode IS NULL, ""BLBC / "", """")
  ) LIKE <<Enter type of problem|LPMONTH>>
GROUP BY
  biblio.biblionumber,
  items.itemnumber,
  locations.lib,
  items.dateaccessioned,
  items.itype
ORDER BY
  items.homebranch,
  items.itype,
  CCODE,
  items.itemcallnumber,
  biblio.author,
  FULL_TITLE",,,,,,,,
R.003127,"/*
R.003127

----------

Name: GHW - Audiobooks without links
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-10-04 22:35:11
Modified on: 2022-05-16 08:19:55
Date last run: 2022-10-02 21:46:20

----------

Public: 0
Expiry: 300

----------

zbrq

<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3127"">Click here to download as a csv file</a></p>

----------
*/

","SELECT
  biblio.biblionumber,
  biblio.datecreated,
  biblio.timestamp,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=245]/subfield[@code=""a""]') AS TITLE_A,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=245]/subfield[@code=""n""]') AS TITLE_N,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=245]/subfield[@code=""p""]') AS TITLE_P,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=245]/subfield[@code=""h""]') AS TITLE_H,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=245]/subfield[@code=""b""]') AS TITLE_B,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=245]/subfield[@code=""c""]') AS TITLE_C,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=130]/subfield[@code=""a""]') AS UNTITLE_OA,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=730]/subfield[@code=""a""]') AS UNTITLE_SA,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=300]/subfield[@code=""a""]') AS DESCRIP,
  Group_Concat(DISTINCT items.ccode ORDER BY items.ccode ASC) AS Group_Concat_ccode,
  biblio.frameworkcode,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=306]/subfield[@code=""a""]') AS TIMESS,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=942]/subfield[@code=""e""]') AS BIB_LOC,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=942]/subfield[@code=""c""]') AS BIB_ITYPE,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=942]/subfield[@code=""h""]') AS BIB_CCODE
FROM
  biblio
  JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
  JOIN items ON items.biblionumber = biblio.biblionumber
WHERE
  items.itype LIKE 'N_AB%'
GROUP BY
  biblio.biblionumber
ORDER BY
  biblio.biblionumber DESC",,,,,,,,
R.003128,"/*
R.003128

----------

Name: GHW - Checkout and renewal count by item type and shelving location - previous calendar month
Created by: George H Williams

----------

Group: Statistics
     End of month statistics

Created on: 2018-10-09 17:27:16
Modified on: 2022-02-10 10:15:53
Date last run: 2022-10-03 10:40:05

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Last month's checkouts by library, item type, and location</p>
<ul><li>Shows check-outs and renewals in the previous month by item type and shelving location</li>
<li>at the library you specify</li>
<li>grouped and sorted by checkout branch and shelving location</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Checkouts without a checkout branch location will show as being checked out at NEKLS</p>
<p>Checkouts without an item type will be counted as BOOK</p>
<p></p>
<p>Partially replaces report 1930</p>
<p></p>
<p></p>
<p class=""updated"">SHELVING_LOCATION is based on the shelving location of the item at the time it was checked out *Unless the item had a ""Recently returned"" shelving location.*  This report falls back to the items' ""Permanent shelving location"" whenever the statistics data shows that the item's shelving location was ""Recently returned.""</p>
<p></p>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3128&reportname=GHW%20-%20Checkout%20and%20renewal%20count%20by%20item%20type%20and%20shelving%20location%20-%20previous%20calendar%20month&sql_params=%25&param_name=Choose%20check-out%20library%7CLBRANCH"">Click here to download for all libraries as a csv file</a></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3128&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  branch_itype.branchname,
  branch_itype.description,
  Coalesce(SUM(statistics_all.CKO_REN), 0) AS CKO_REN_ALL,
  Coalesce(SUM(statistics_adult.CKO_REN), 0) AS CKO_REN_ADULT,
  Coalesce(SUM(statistics_ya.CKO_REN), 0) AS CKO_REN_YA,
  Coalesce(SUM(statistics_child.CKO_REN), 0) AS CKO_REN_CHILD,
  Coalesce(SUM(statistics_other.CKO_REN), 0) AS CKO_REN_OTHER
FROM
  (SELECT
      branches.branchname,
      itemtypes.description,
      branches.branchcode,
      itemtypes.itemtype
    FROM
      branches,
      itemtypes
    WHERE
      branches.branchcode Like <<Choose check-out library|ZBRAN>>) branch_itype LEFT JOIN
  (SELECT
      Coalesce(statistics.branch, ""NEKLS"") AS branch,
      Coalesce(statistics.itemtype, ""BOOK"") AS itemtype,
      Count(*) AS CKO_REN
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH)
    GROUP BY
      Coalesce(statistics.branch, ""NEKLS""),
      Coalesce(statistics.itemtype, ""BOOK"")
    ORDER BY
      branch,
      itemtype
  ) statistics_all ON statistics_all.branch = branch_itype.branchcode AND
      statistics_all.itemtype = branch_itype.itemtype LEFT JOIN
  (
    SELECT
      Coalesce(statistics.branch, ""NEKLS"") AS branch,
      Coalesce(statistics.itemtype, ""BOOK"") AS itemtype,
      Count(*) AS CKO_REN
    FROM
      statistics LEFT JOIN
      items ON items.itemnumber = statistics.itemnumber
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      If(
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"")
      ) LIKE ""%ADULT%""
    GROUP BY
      Coalesce(statistics.branch, ""NEKLS""),
      Coalesce(statistics.itemtype, ""BOOK"")
  ) statistics_adult ON
      statistics_adult.branch = branch_itype.branchcode AND
      statistics_adult.itemtype = branch_itype.itemtype LEFT JOIN
  (
    SELECT
      Coalesce(statistics.branch, ""NEKLS"") AS branch,
      Coalesce(statistics.itemtype, ""BOOK"") AS itemtype,
      Count(*) AS CKO_REN
    FROM
      statistics LEFT JOIN
      items ON items.itemnumber = statistics.itemnumber
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      If(
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"")
      ) LIKE ""%YA%""
    GROUP BY
      Coalesce(statistics.branch, ""NEKLS""),
      Coalesce(statistics.itemtype, ""BOOK"")
  ) statistics_ya ON
      statistics_ya.branch = branch_itype.branchcode AND
      statistics_ya.itemtype = branch_itype.itemtype LEFT JOIN
  (
    SELECT
      Coalesce(statistics.branch, ""NEKLS"") AS branch,
      Coalesce(statistics.itemtype, ""BOOK"") AS itemtype,
      Count(*) AS CKO_REN
    FROM
      statistics LEFT JOIN
      items ON items.itemnumber = statistics.itemnumber
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      If(
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"")
      ) LIKE ""%CHILD%""
    GROUP BY
      Coalesce(statistics.branch, ""NEKLS""),
      Coalesce(statistics.itemtype, ""BOOK"")
  ) statistics_child ON
      statistics_child.branch = branch_itype.branchcode AND
      statistics_child.itemtype = branch_itype.itemtype LEFT JOIN
  (
    SELECT
      Coalesce(statistics.branch, ""NEKLS"") AS branch,
      Coalesce(statistics.itemtype, ""BOOK"") AS itemtype,
      Count(*) AS CKO_REN
    FROM
      statistics LEFT JOIN
      items ON items.itemnumber = statistics.itemnumber
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      If(
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"")
      ) NOT LIKE ""%ADULT%"" AND
      If(
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"")
      ) NOT LIKE ""%YA%"" AND 
      If(
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"")
      ) NOT LIKE ""%CHILD%""
    GROUP BY
      Coalesce(statistics.branch, ""NEKLS""),
      Coalesce(statistics.itemtype, ""BOOK"")
  ) statistics_other ON statistics_other.branch = branch_itype.branchcode AND
      statistics_other.itemtype = branch_itype.itemtype
GROUP BY
  branch_itype.branchname,
  branch_itype.description",,,,,,,,
R.003129,"/*
R.003129

----------

Name: Days out-ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-10-16 16:13:35
Modified on: 2018-10-16 16:13:35
Date last run: 2018-10-16 16:13:38

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  old_issues.branchcode,
  Cast(old_issues.returndate as date) AS CKI,
  Cast(old_issues.issuedate as date) AS CKO,
  DATEDIFF(DATE_FORMAT(old_issues.returndate, ""%Y-%m-%d""),
  DATE_FORMAT(old_issues.issuedate, ""%Y-%m-%d"")) AS DAYSOUT 
FROM
  old_issues
WHERE
  Month(old_issues.returndate) = 09 AND
  Year(old_issues.returndate) = 2018
ORDER BY
  old_issues.branchcode,
  CKI",,,,,,,,
R.003130,"/*
R.003130

----------

Name: GHW - Lynda count - built for RHASTINGS
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-10-17 13:35:05
Modified on: 2019-06-04 12:02:17
Date last run: 2019-06-04 12:02:21

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a count of Lynda.com users at each library</p>
<ul><li>Shows count of users based on the most recent report from Lynda.com</li>
<li>Shows users at all member libraries</li>
<li>grouped by and sorted by library name</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<ol>
  <li>Open Google spreadsheet titled ""<a href=""https://docs.google.com/spreadsheets/d/1z2Gc4Dc4_cr0NarxBPT92O3CDpAumiqLj4HoYRWlLqU/edit?usp=sharing"" target=""_blank"">Lynda.com report helper</a>""</li>
  <li>Copy all of the barcode numbers from the Lynda.com report into column A of the Google sheet</li>
  <li>Copy all of the cells from column B of the Google sheet that contain barcode numbers</li>
  <li>Edit this report</li> 
  <li>Paste the copied cells from the Google sheet between the comment lines of this report</li>
  <li>Click the ""Update SQL"" button</li>
  <li>Once updated, click the ""Run report"" button</li>
</ol>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3130&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3130"">Click here to download as a csv file</a></p>
</div>

----------
*/

","SELECT
  branches.branchname,
  Coalesce(lyndaborrowers.Count_borrowernumber, ""-"") AS LYNDA_USERS_COUNT
FROM
  branches
  LEFT JOIN (SELECT
        borrowers.branchcode,
        Count(borrowers.borrowernumber) AS Count_borrowernumber
      FROM
        borrowers
      WHERE

/* Remove old data between commented blocks, then paste new data from the Google sheet below this line */
(borrowers.cardnumber = 'PLEA0001190498') OR
(borrowers.cardnumber = 'PLEA0001330000') OR
(borrowers.cardnumber = 'PLEA0000657529') OR
(borrowers.cardnumber = 'plea000121798c') OR
(borrowers.cardnumber = 'plea0001263839') OR
(borrowers.cardnumber = '1003030012080') OR
(borrowers.cardnumber = '1003009019508') OR
(borrowers.cardnumber = '1003030010079') OR
(borrowers.cardnumber = '2CZ9000006359') OR
(borrowers.cardnumber = 'PLEA0001234914') OR
(borrowers.cardnumber = '1003008009000') OR
(borrowers.cardnumber = '1003008043569') OR
(borrowers.cardnumber = 'PLEA0000609032') OR
(borrowers.cardnumber = '1003009023781') OR
(borrowers.cardnumber = '1003009001443') OR
(borrowers.cardnumber = 'PLEA000120300X') OR
(borrowers.cardnumber = '1003008052988') OR
(borrowers.cardnumber = 'RFEUERBACHER') OR
(borrowers.cardnumber = '1003008032059') OR
(borrowers.cardnumber = '1003008025927') OR
(borrowers.cardnumber = 'PLEA0001322221') OR
(borrowers.cardnumber = 'FROSTX020') OR
(borrowers.cardnumber = '1003030009175') OR
(borrowers.cardnumber = '1003006010235') OR
(borrowers.cardnumber = 'PLEA0001180846') OR
(borrowers.cardnumber = '1003008043731') OR
(borrowers.cardnumber = '1003008006760') OR
(borrowers.cardnumber = '1003025013818') OR
(borrowers.cardnumber = '1003008042948') OR
(borrowers.cardnumber = '1003011003420') OR
(borrowers.cardnumber = 'PLEA0001319300') OR
(borrowers.cardnumber = 'PLEA0001328020') OR
(borrowers.cardnumber = 'PLEA0001299502') OR
(borrowers.cardnumber = '26605300175201') OR
(borrowers.cardnumber = 'PLEA0001329523') OR
(borrowers.cardnumber = 'PLEA0001288844') OR
(borrowers.cardnumber = 'PLEA0001332873') OR
(borrowers.cardnumber = '1003008027715') OR
(borrowers.cardnumber = 'PLEA0001175020') OR
(borrowers.cardnumber = '1003030008377') OR
(borrowers.cardnumber = '1003008057672') OR
(borrowers.cardnumber = 'PLEA0001300631') OR
(borrowers.cardnumber = '1003011002747') OR
(borrowers.cardnumber = '2CZ9100017476+') OR
(borrowers.cardnumber = '1003009022569') OR
(borrowers.cardnumber = '1003009016591') OR
(borrowers.cardnumber = '1003008009633') OR
(borrowers.cardnumber = '1003008052468') OR
(borrowers.cardnumber = '2CZ9100017449+') OR
(borrowers.cardnumber = 'PLEA0001318476') OR
(borrowers.cardnumber = '1003008038452') OR
(borrowers.cardnumber = '1003011000002') OR
(borrowers.cardnumber = 'PLEA000118297C') OR
(borrowers.cardnumber = '1003030000108') OR
(borrowers.cardnumber = 'PLEA0001316884') OR
(borrowers.cardnumber = 'PLEA0001185122') OR
(borrowers.cardnumber = '1003030000003') OR
(borrowers.cardnumber = '1003008048388') OR
(borrowers.cardnumber = '1003008021710') OR
(borrowers.cardnumber = 'PLEA0001230976') OR
(borrowers.cardnumber = '1003012004502') OR
(borrowers.cardnumber = '1003008056060') OR
(borrowers.cardnumber = '1003008042784') OR
(borrowers.cardnumber = '1003019004367') OR
(borrowers.cardnumber = '1003008030353') OR
/* Remove old data between commented blocks, then paste new data from the Google sheet above this line */

        (borrowers.cardnumber = 'placeholder data')

      GROUP BY
        borrowers.branchcode) lyndaborrowers ON branches.branchcode = lyndaborrowers.branchcode
GROUP BY
  branches.branchname
ORDER BY
  branches.branchname
LIMIT
  100
",,,,,,,,
R.003132,"/*
R.003132

----------

Name: SDR
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-10-21 12:30:56
Modified on: 2018-10-21 12:30:56
Date last run: 2019-07-03 10:19:25

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  items.biblionumber,
  items.homebranch,
  items.itype,
  Concat_Ws('<br />', items.location, authorised_values.lib, items.itemcallnumber) AS CALL_NUMBER,
  biblio.author,
  biblio.title,
  items.itemnotes,
  items.itemnotes_nonpublic,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""526""]//subfield[@code=""a""]') AS PROGRAM,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""526""]//subfield[@code=""b""]') AS INTEREST_LEVEL,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""526""]//subfield[@code=""c""]') AS READING_LEVEL,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""526""]//subfield[@code=""d""]') AS POINTS,
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber,
  '\"" target=""_blank"">Go to staff client</a>') AS LINK_TO_STAFF,
  Concat('<a href=\""https://nextkansas.org/cgi-bin/koha/opac-detail.pl?biblionumber=', biblio.biblionumber,
  '\"" target=""_blank"">Go to OPAC</a>') AS LINK_TO_OPAC
FROM
  items
  JOIN biblio ON items.biblionumber = biblio.biblionumber
  JOIN authorised_values ON items.ccode = authorised_values.authorised_value
  JOIN biblio_metadata ON items.biblionumber = biblio_metadata.biblionumber
WHERE
  authorised_values.category = ""CCODE""
GROUP BY
  items.biblionumber,
  items.itemnumber
ORDER BY
  PROGRAM,
  INTEREST_LEVEL,
  READING_LEVEL,
  POINTS",,,,,,,,
R.003135,"/*
R.003135

----------

Name: GHW Bad guarantor information - ADMINREPORT
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2018-11-05 14:12:57
Modified on: 2019-01-29 09:08:18
Date last run: 2020-07-27 13:36:55

----------

Public: 0
Expiry: 300

----------

Remove content from columns E-H then re-import/overwrite.

----------
*/

","SELECT
  borrowers.cardnumber,
  borrowers.surname,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.contactname,
  borrowers.contactfirstname,
  borrowers.contacttitle,
  borrowers.guarantorid
FROM
  borrowers
WHERE
  (borrowers.dateofbirth <= CurDate() - INTERVAL 18 YEAR or borrowers.dateofbirth IS NULL) AND
  (borrowers.guarantorid is not null OR
  borrowers.guarantorid <> """" OR
  borrowers.contactname <> """" OR
  borrowers.contactfirstname <> """" OR
  borrowers.contacttitle <> """")
GROUP BY
  borrowers.borrowernumber",,,,,,,,
R.003136,"/*
R.003136

----------

Name: GHW - videogames without links
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-11-11 22:16:08
Modified on: 2022-05-16 08:18:42
Date last run: 2022-10-02 21:45:38

----------

Public: 0
Expiry: 300

----------

zbrq

<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3136"">Click here to download as a csv file</a></p>

----------
*/

","SELECT
  biblio.biblionumber,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=024]/subfield[@code=""a""]') AS UPC,
  biblio.datecreated,
  biblio.timestamp,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=245]/subfield[@code=""a""]') AS TITLE_A,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=245]/subfield[@code=""n""]') AS TITLE_N,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=245]/subfield[@code=""p""]') AS TITLE_P,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=245]/subfield[@code=""h""]') AS TITLE_H,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=245]/subfield[@code=""b""]') AS TITLE_B,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=245]/subfield[@code=""c""]') AS TITLE_C,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=130]/subfield[@code=""a""]') AS UNTITLE_OA,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=730]/subfield[@code=""a""]') AS UNTITLE_SA,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=300]/subfield[@code=""a""]') AS DESCRIP,
  Group_Concat(DISTINCT items.ccode ORDER BY items.ccode ASC) AS Group_Concat_ccode,
  biblio.frameworkcode,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=306]/subfield[@code=""a""]') AS TIMESS,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=942]/subfield[@code=""e""]') AS BIB_LOC,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=942]/subfield[@code=""c""]') AS BIB_ITYPE,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=942]/subfield[@code=""h""]') AS BIB_CCODE
FROM
  biblio
  JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
  JOIN items ON items.biblionumber = biblio.biblionumber
WHERE
  (items.itype = 'GAME')
GROUP BY
  biblio.biblionumber
ORDER BY
  biblio.biblionumber DESC",,,,,,,,
R.003137,"/*
R.003137

----------

Name: Indicators ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-11-28 10:05:20
Modified on: 2018-11-28 17:17:25
Date last run: 2018-11-28 17:17:27

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  biblio_metadata.biblionumber AS biblionumber1,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/@ind2') AS SECOND_IND,
  REGEXP_REPLACE(Concat_Ws("" "", ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""a""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]')), '[[:space:]]+', ' ')
  AS FULL_TITLE
FROM
  biblio_metadata
WHERE
  (biblio_metadata.biblionumber > 959565 AND
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/@ind2') <> 2 AND
  REGEXP_REPLACE(Concat_Ws("" "", ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""a""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]')), '[[:space:]]+', ' ')
  LIKE ""A %"") OR
  (biblio_metadata.biblionumber > 959565 AND
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/@ind2') <> 3 AND
  REGEXP_REPLACE(Concat_Ws("" "", ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""a""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]')), '[[:space:]]+', ' ')
  LIKE ""An %"") OR
  (biblio_metadata.biblionumber > 959565 AND
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/@ind2') <> 4 AND
  REGEXP_REPLACE(Concat_Ws("" "", ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""a""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]')), '[[:space:]]+', ' ')
  LIKE ""The %"")
GROUP BY
  biblio_metadata.biblionumber
ORDER BY
  FULL_TITLE",,,,,,,,
R.003139,"/*
R.003139

----------

Name: GHW - Monthly Item count by library and collection code
Created by: George H Williams

----------

Group: Statistics
     -

Created on: 2018-12-07 21:59:03
Modified on: 2021-07-26 22:45:23
Date last run: 2022-08-05 15:56:32

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Gives a count of how many items are at the selected library based on collection code and Adult/Juvenile/YA permanent shelving locations.</p>
<ul><li>Shows count at the time the report is run</li>
<li>for all items system-wide</li>
<li>grouped and sorted by item home library and collection code</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Non-standard shelving locations are counted as ""Adult"" locations.</p>
<p>Items with blank collection codes are counted as ""(Unclassified).""</p>
<p></p>
<p>Updated 2021.07.23 to include counts from the previous month on deletions and additions.</p>
<p>This report cannot track changes made to existing records over time.  Therefore, if staff change the home library, location, or collection code of an item, those changes will not be reflected in the additions or deletions columns.  This means that the numbers may look inconsistent from month to month if changes are made to item records.</p>
<p class= ""notetags"" style=""display: none;"">#itemcount, item count collection code ccode #master #monthlystats #deletesoon</p>
</div>

----------
*/

","SELECT
  branchccodes.branchname,
  branchccodes.lib AS ""COLLECTION CODE"",
  itemss.Count_itemnumber AS ""TOTAL ITEMS"",
  adultitems.Count_itemnumber AS ""ADULT ITEMS"",
  juvenileitems.Count_itemnumber AS ""JUVENILE ITEMS"",
  yaitems.Count_itemnumber AS ""YOUNG ADULT ITEMS"",
  items_added.Count_itemnumber AS ""TOTAL ADDED LM"",
  adult_added.Count_itemnumber AS ""ADULT ADDED LM"",
  juvenile_added.Count_itemnumber AS ""JUVENILE ADDED LM"",
  ya_added.Count_itemnumber AS ""YOUNG ADULT ADDED LM"",
  items_deleted.Count_itemnumber AS ""TOTAL DELETED LM"",
  adult_deleted.Count_itemnumber AS ""ADULT DELETED LM"",
  juvenile_deleted.Count_itemnumber AS ""JUVENILE DELETED LM"",
  ya_deleted.Count_itemnumber AS ""YOUNG ADULT DELETED LM""
FROM
  (SELECT
      branches.branchcode,
      authorised_values.authorised_value,
      authorised_values.lib,
      branches.branchname
    FROM
      branches,
      authorised_values
    WHERE
      authorised_values.category = 'CCODE') branchccodes LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode) AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) itemss ON itemss.homebranch =
      branchccodes.branchcode AND
      itemss.ccode = branchccodes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode) AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      (items.permanent_location LIKE '%ADULT%' OR
        items.permanent_location = 'CART' OR
        items.permanent_location = 'CATALOGING' OR
        items.permanent_location = 'PROC' OR
        items.permanent_location IS NULL)
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) adultitems ON
      adultitems.homebranch = branchccodes.branchcode AND
      adultitems.ccode = branchccodes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode) AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      items.permanent_location LIKE ""%CHILD%""
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) juvenileitems ON
      juvenileitems.homebranch = branchccodes.branchcode AND
      juvenileitems.ccode = branchccodes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode) AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      items.permanent_location LIKE ""%YA%""
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) yaitems ON
      yaitems.homebranch = branchccodes.branchcode AND
      yaitems.ccode = branchccodes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", If(items.ccode = """", ""XXX"", items.ccode))
      AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH)
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", If(items.ccode = """", ""XXX"", items.ccode)))
  items_added ON items_added.homebranch = branchccodes.branchcode AND
      items_added.ccode = branchccodes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", If(items.ccode = """", ""XXX"", items.ccode))
      AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      (items.permanent_location LIKE '%ADULT%' OR
        items.permanent_location = 'CART' OR
        items.permanent_location = 'CATALOGING' OR
        items.permanent_location = 'PROC' OR
        items.permanent_location IS NULL OR
        items.permanent_location = """")
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", If(items.ccode = """", ""XXX"", items.ccode)))
  adult_added ON adult_added.homebranch = branchccodes.branchcode AND
      adult_added.ccode = branchccodes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode) AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      items.permanent_location LIKE ""%CHILD%""
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) juvenile_added ON
      juvenile_added.homebranch = branchccodes.branchcode AND
      juvenile_added.ccode = branchccodes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode) AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      items.permanent_location LIKE ""%YA%""
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) ya_added ON
      ya_added.homebranch = branchccodes.branchcode AND
      ya_added.ccode = branchccodes.authorised_value LEFT JOIN
  (SELECT
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode)) AS ccode,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 MONTH)
    GROUP BY
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode))) items_deleted ON items_deleted.homebranch =
      branchccodes.branchcode AND
      items_deleted.ccode = branchccodes.authorised_value LEFT JOIN
  (SELECT
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode)) AS ccode,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND
      (deleteditems.permanent_location LIKE '%ADULT%' OR
        deleteditems.permanent_location = 'CART' OR
        deleteditems.permanent_location = 'CATALOGING' OR
        deleteditems.permanent_location = 'PROC' OR
        deleteditems.permanent_location IS NULL OR
        deleteditems.permanent_location = """")
    GROUP BY
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode))) adult_deleted ON adult_deleted.homebranch =
      branchccodes.branchcode AND
      adult_deleted.ccode = branchccodes.authorised_value LEFT JOIN
  (SELECT
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode)) AS ccode,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND
      deleteditems.permanent_location LIKE '%CHILD%'
    GROUP BY
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode))) juvenile_deleted ON juvenile_deleted.homebranch =
      branchccodes.branchcode AND
      juvenile_deleted.ccode = branchccodes.authorised_value LEFT JOIN
  (SELECT
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode)) AS ccode,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND
      deleteditems.permanent_location LIKE '%YA%'
    GROUP BY
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode))) ya_deleted ON ya_deleted.homebranch =
      branchccodes.branchcode AND
      ya_deleted.ccode = branchccodes.authorised_value
GROUP BY
  branchccodes.branchcode,
  branchccodes.authorised_value
ORDER BY
  branchccodes.branchname,
  branchccodes.lib",,,,,,,,
R.003140,"/*
R.003140

----------

Name: Borrowers with non-existent guarantor
Created by: Bywater bwssupport

----------

Group: -
     -

Created on: 2018-12-10 14:27:52
Modified on: 2018-12-10 15:32:07
Date last run: 2021-04-22 15:09:48

----------

Public: 0
Expiry: 300

----------



----------
*/

","select b1.surname, b1.firstname,b1.cardnumber,b1.guarantorid , b1.contactname AS guarantor_surname, b1.contactfirstname AS guarantor_firstname, b3.borrowernumber
FROM borrowers b1 
LEFT JOIN borrowers b2 ON b1.guarantorid=b2.borrowernumber 
LEFT JOIN borrowers b3 On b1.contactname=b3.surname AND b1.contactfirstname = b3.firstname
WHERE b1.guarantorid IS NOT NULL AND b1.guarantorid != 0 AND b2.borrowernumber IS NULL
ORDER BY
  b1.cardnumber",,,,,,,,
R.003141,"/*
R.003141

----------

Name: GHW - Circulation last month by collection code - ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-12-10 22:51:22
Modified on: 2018-12-10 22:51:22
Date last run: 2018-12-10 22:53:27

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branchcodes.branchcode,
  branchcodes.lib,
  statisticsall.COUNT AS TOTAL_CIRC,
  adultstats.COUNT AS ADULT_CIRC,
  juvenilestats.COUNT AS JUVENILE_CIRC,
  yastats.COUNT AS YOUNG_ADULT_CIRC
FROM
  (SELECT
      branches.branchcode,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      branches,
      authorised_values
    WHERE
      authorised_values.category = 'CCODE' AND
      branches.branchcode = <<Choose your library branch|branches>>) branchcodes
  LEFT JOIN (SELECT
      statistics.branch,
      statistics.ccode,
      COUNT(*) AS COUNT
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH)
    GROUP BY
      statistics.branch,
      statistics.ccode) statisticsall ON statisticsall.branch = branchcodes.branchcode AND
    statisticsall.ccode = branchcodes.authorised_value
  LEFT JOIN (SELECT
      statistics.branch,
      statistics.ccode,
      COUNT(*) AS COUNT
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      (statistics.location = 'ADULT' OR
        statistics.location = 'LVPLADULT' OR
        statistics.location = 'CART' OR
        statistics.location = 'CATALOGING' OR
        statistics.location = 'PROC' OR
        statistics.location IS NULL)
    GROUP BY
      statistics.branch,
      statistics.ccode) adultstats ON adultstats.branch = branchcodes.branchcode AND
    adultstats.ccode = branchcodes.authorised_value
  LEFT JOIN (SELECT
      statistics.branch,
      statistics.ccode,
      COUNT(*) AS COUNT
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      (statistics.location = 'CHILDRENS' OR
        statistics.location = 'LVPLCHILD')
    GROUP BY
      statistics.branch,
      statistics.ccode) juvenilestats ON juvenilestats.branch = branchcodes.branchcode AND
    juvenilestats.ccode = branchcodes.authorised_value
  LEFT JOIN (SELECT
      statistics.branch,
      statistics.ccode,
      COUNT(*) AS COUNT
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      (statistics.location = 'YOUNGADULT' OR
        statistics.location = 'LVPLYA')
    GROUP BY
      statistics.branch,
      statistics.ccode) yastats ON yastats.branch = branchcodes.branchcode AND
    yastats.ccode = branchcodes.authorised_value
ORDER BY
  branchcodes.branchcode,
  branchcodes.lib",,,,,,,,
R.003143,"/*
R.003143

----------

Name: GHW -Overdues report replacement
Created by: George H Williams

----------

Group: Circulation
     Overdues

Created on: 2018-12-15 20:07:44
Modified on: 2018-12-15 20:08:35
Date last run: 2021-06-08 10:03:25

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Replacement for built-in for Overdue reports</p>
<ul><li>Shows overdues during the date range you specify</li>
<li>At the checkout library/the item home library/or patron home library you specify</li>
<li>sorted by date due and patron name, </li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3143&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  issues.date_due,
  Concat_Ws("", "", borrowers.surname, borrowers.firstname, borrowers.cardnumber) AS NAME,
  Concat_Ws("", "", guarantor.surname, guarantor.firstname, borrowers.relationship) AS GUARANTOR,
  borrowers.phone,
  borrowers.email,
  borrowers.branchcode,
  issues.issuedate,
  items.barcode,
  items.homebranch,
  items.holdingbranch,
  biblio.title,
  biblio.author,
  items.itemcallnumber,
  items.replacementprice
FROM
  issues
  LEFT JOIN borrowers ON issues.borrowernumber = borrowers.borrowernumber
  LEFT JOIN items ON issues.itemnumber = items.itemnumber
  LEFT JOIN biblioitems ON biblioitems.biblioitemnumber = items.biblioitemnumber
  LEFT JOIN biblio ON biblio.biblionumber = items.biblionumber
  LEFT JOIN borrowers guarantor ON guarantor.borrowernumber = borrowers.guarantorid
WHERE (date_due BETWEEN <<Between START DATE|date>> AND (<<and END DATE|date>> + interval 1 day)) AND
  (borrowers.cardnumber LIKE Concat(""%"",<<Enter a patron barcode number or a % symbol>>,""%"")) AND
  (borrowers.categorycode LIKE <<Enter patron category|LBORROWERCAT>>) AND
  (items.itype LIKE <<Enter item type|LITYPES>>) AND
  (items.homebranch LIKE <<Enter item home branch|LBRANCH>>) AND
  (items.holdingbranch LIKE <<Enter item check-out branch|LBRANCH>>) AND
  (borrowers.branchcode LIKE <<Enter patron home branch|LBRANCH>>)
ORDER BY
  issues.date_due,
  borrowers.surname,
  borrowers.firstname",,,,,,,,
R.003145,"/*
R.003145

----------

Name: GHW - ADMINREPORT - Adult patrons with guarantors
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-12-17 15:12:26
Modified on: 2020-07-27 16:21:31
Date last run: 2020-07-27 16:21:33

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Adult patrons with lingering guarantor problems</p>
<ul><li>Shows patrons who still have guarantor information connected to their accounts even though they are now adults</li>
<li>Shows patrons at all libraries</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3145&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3145"">Click here to download as a csv file</a></p>
</div>

----------
*/

","SELECT
  borrowers.cardnumber,
  borrowers.surname,
  borrowers.firstname,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.contactname,
  borrowers.contactfirstname,
  borrowers.contacttitle,
  borrowers.relationship,
  borrower_relationships.guarantor_id
FROM
  borrowers LEFT JOIN
  borrower_relationships ON borrower_relationships.guarantee_id =
      borrowers.borrowernumber
WHERE
  (borrowers.dateofbirth <= CurDate() - INTERVAL 18 YEAR OR
      borrowers.dateofbirth IS NULL) AND
  borrower_relationships.guarantor_id IS NOT NULL
GROUP BY
  borrower_relationships.guarantor_id,
  borrowers.borrowernumber",,,,,,,,
R.003146,"/*
R.003146

----------

Name: GHW - Date snippets - ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-12-17 15:53:14
Modified on: 2018-12-17 15:53:42
Date last run: 2021-08-02 14:30:42

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  @1 := 'YESTERDAY'  AS DESCRIPTION,
  @2 := 'CurDate() - INTERVAL 1 DAY' AS `""SQL""`,
  CurDate() - INTERVAL 1 DAY
UNION
SELECT
  @1 := 'TODAY',
  @2 := 'CurDate()',
  CurDate()
UNION
SELECT
  @1 := 'TOMORROW',
  @2 := 'CurDate() + INTERVAL 1 DAY',
  CurDate() + INTERVAL 1 DAY
UNION
SELECT
  @1 := 'FIRST_DATE_LAST_YEAR',
  @2 := 'MakeDate(Year(Now()), 1) - INTERVAL 1 YEAR',
  MakeDate(Year(Now()), 1) - INTERVAL 1 YEAR
UNION
SELECT
  @1 := 'FIRST_DATE_THIS_YEAR',
  @2 := 'MakeDate(Year(Now()), 1)',
  MakeDate(Year(Now()), 1)
UNION
SELECT
  @1 := 'FIRST_DATE_NEXT_YEAR',
  @2 := 'MakeDate(Year(Now()), 1) + INTERVAL 1 YEAR',
  MakeDate(Year(Now()), 1) + INTERVAL 1 YEAR
UNION
SELECT
  @1 := 'FIRST_DATE_LAST_M',
  @2 := 'AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)',
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)
UNION
SELECT
  @1 := 'FIRST_DATE_THIS_M',
  @2 := 'AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1)',
  AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1)
UNION
SELECT
  @1 := 'FIRST_DATE_NEXT_M',
  @2 := 'AddDate(Last_Day(SubDate(Now(), INTERVAL -1 MONTH)), 1)',
  AddDate(Last_Day(SubDate(Now(), INTERVAL -1 MONTH)), 1)
UNION
SELECT
  @1 := 'Y_LAST_Y',
  @2 := 'Year(Now() - INTERVAL 1 YEAR)',
  Year(Now() - INTERVAL 1 YEAR)
UNION
SELECT
  @1 := 'Y_THIS_Y',
  @2 := 'Year(Now())',
  Year(Now())
UNION
SELECT
  @1 := 'Y_NEXT_Y',
  @2 := 'Year(Now() + INTERVAL 1 YEAR)',
  Year(Now() + INTERVAL 1 YEAR)
UNION
SELECT
  @1 := 'Y_LAST_M',
  @2 := 'Year(Now() - INTERVAL 1 MONTH)',
  Year(Now() - INTERVAL 1 MONTH)
UNION
SELECT
  @1 := 'Y_THIS_M',
  @2 := 'Year(Now())',
  Year(Now())
UNION
SELECT
  @1 := 'Y_NEXT_M',
  @2 := 'Year(Now() + INTERVAL 1 MONTH)',
  Year(Now() + INTERVAL 1 MONTH)
UNION
SELECT
  @1 := 'M_LAST_M',
  @2 := 'Month(Now() - INTERVAL 1 MONTH)',
  Month(Now() - INTERVAL 1 MONTH)
UNION
SELECT
  @1 := 'M_THIS_M',
  @2 := 'Month(Now())',
  Month(Now())
UNION
SELECT
  @1 := 'M_NEXT_M',
  @2 := 'Month(Now() + INTERVAL 1 MONTH)',
  Month(Now() + INTERVAL 1 MONTH)
UNION
SELECT
  @1 := 'D_1_YEAR_AGO',
  @2 := 'CurDate() - INTERVAL 1 YEAR',
  CurDate() - INTERVAL 1 YEAR
UNION
SELECT
  @1 := 'D_TODAY',
  @2 := 'CurDate()',
  CurDate()
UNION
SELECT
  @1 := 'D_1_YEAR_FROM_NOW',
  @2 := 'CurDate() + INTERVAL 1 YEAR',
  CurDate() + INTERVAL 1 YEAR
UNION
SELECT
  @1 := 'D_TWO_SUNDAYS_AGO',
  @2 := 'Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY) - INTERVAL 1 WEEK',
  Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY) - INTERVAL 1 WEEK
UNION
SELECT
  @1 := 'D_LAST_SUNDAY',
  @2 := 'Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY)',
  Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY)
UNION
SELECT
  @1 := 'D_THIS_SUNDAY',
  @2 := 'Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) - 1 DAY)',
  Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) - 1 DAY)
UNION
SELECT
  @1 := 'D_NEXT_SUNDAY',
  @2 := 'Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) - 1 DAY) + INTERVAL 1 WEEK',
  Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) - 1 DAY) + INTERVAL 1 WEEK
LIMIT 50
",,,,,,,,
R.003147,"/*
R.003147

----------

Name: GHW - Monthly action log count - ADMINREPORT
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2018-12-18 15:56:02
Modified on: 2019-02-05 15:11:44
Date last run: 2019-02-05 15:11:47

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Date(action_logs.timestamp) AS DATE,
  Count(action_logs.action_id) AS LOGGED_EVENTS
FROM
  action_logs
WHERE
  Year(action_logs.timestamp) = Year(Now() - INTERVAL 2 MONTH) AND
  Month(action_logs.timestamp) = Month(Now() - INTERVAL 2 MONTH)
GROUP BY
  Date(action_logs.timestamp)",,,,,,,,
R.003148,"/*
R.003148

----------

Name: GHW - 7 New Additions - ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-12-19 13:18:23
Modified on: 2018-12-19 13:45:31
Date last run: 2019-01-29 22:02:31

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat(""Recently added book: "", biblio.title, ""<br /><br />Summary:<br /><br />"",
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""520""]//subfield[@code=""a""]'),
  ""<br /><br />Find this title in our catalog at<br /><br />https://nextkansas.org//cgi-bin/koha/opac-detail.pl?biblionumber="", biblio.biblionumber) AS POST
FROM
  biblio
  INNER JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
  INNER JOIN items ON items.biblionumber = biblio.biblionumber
WHERE
  biblio.timestamp >= Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY) - INTERVAL 1 WEEK AND
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""520""]//subfield[@code=""a""]') <> """"
GROUP BY
  Concat(""Recently added book: "", biblio.title, ""<br /><br />Summary:<br /><br />"",
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""520""]//subfield[@code=""a""]'),
  ""<br /><br />Find this title in our catalog at<br /><br />https://nextkansas.org//cgi-bin/koha/opac-detail.pl?biblionumber="", biblio.biblionumber),
  biblio.biblionumber
HAVING
  Group_Concat(items.itype) LIKE ""%BOOK%"" AND
  Group_Concat(items.notforloan) LIKE ""%0%"" AND
  Group_Concat(items.location) LIKE ""ADULT%""
LIMIT 1
UNION
SELECT
  Concat(""Recently added book: "", biblio.title, ""<br /><br />Summary:<br /><br />"",
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""520""]//subfield[@code=""a""]'),
  ""<br /><br />Find this title in our catalog at<br /><br />https://nextkansas.org//cgi-bin/koha/opac-detail.pl?biblionumber="", biblio.biblionumber) AS POST
FROM
  biblio
  INNER JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
  INNER JOIN items ON items.biblionumber = biblio.biblionumber
WHERE
  biblio.timestamp >= Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY) - INTERVAL 1 WEEK AND
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""520""]//subfield[@code=""a""]') <> """"
GROUP BY
  Concat(""Recently added children's video: "", biblio.title, ""<br /><br />Summary:<br /><br />"",
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""520""]//subfield[@code=""a""]'),
  ""<br /><br />Find this title in our catalog at<br /><br />https://nextkansas.org//cgi-bin/koha/opac-detail.pl?biblionumber="", biblio.biblionumber),
  biblio.biblionumber
HAVING
  Group_Concat(items.itype) LIKE ""%MEDIA%"" AND
  Group_Concat(items.notforloan) LIKE ""%0%"" AND
  Group_Concat(items.location) LIKE ""CHILD%""
LIMIT 1",,,,,,,,
R.003150,"/*
R.003150

----------

Name: GHW - Hootsuite scheduled post generator - 7 new titles
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2018-12-27 12:02:59
Modified on: 2022-05-03 16:37:50
Date last run: 2022-05-03 16:37:52

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a list of titles to create scheduled media posts with</p>
<ul><li>Shows the 7 most recent acquisitions in specified areas of the collection</li>
<li>At all Next libraries</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3150&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  adult_book.NEWSTUFF AS TEXT_TO_PASTE_TO_HOOTSUITE
FROM
  (
    SELECT
      Concat(
        ""Recently added fiction:<br /><br />"",
        Upper(
          Replace(
            Replace(
              Replace(
                Replace(
                  biblio.title, 
                  "" /"", 
                  """"
                ), 
                "" :"", 
                """"
              ), 
              "" ;"", 
              """"
            ), 
            ""."", 
            """"
          )
        ),
        ""<br /><br />https://nextkansas.org/cgi-bin/koha/opac-detail.pl?biblionumber="", 
        biblio.biblionumber
      ) AS NEWSTUFF,
      biblio.biblionumber
    FROM
      biblio JOIN
      items ON items.biblionumber = biblio.biblionumber
    WHERE
      items.barcode <> """" AND
      (items.itype = ""BOOK"" OR
        items.itype = ""PBBKNEW"") AND
      items.location = 'ADULT' AND
      items.ccode = 'FICTION' AND
      (items.notforloan = 0 OR
        items.notforloan IS NULL) AND
      (items.damaged = 0 OR
        items.damaged IS NULL) AND
      (items.itemlost = 0 OR
        items.itemlost IS NULL) AND
      (items.withdrawn = 0 OR
        items.withdrawn IS NULL)
    ORDER BY
      biblio.biblionumber DESC
    LIMIT 1
  ) adult_book
UNION
SELECT
  adult_movie.NEWSTUFF
FROM
  (
    SELECT
      Concat(""Recently added DVD:<br /><br />"",
        Upper(
          Replace(
            Replace(
              Replace(
                Replace(
                  biblio.title, 
                  "" /"", 
                  """"
                ), 
                "" :"", 
                """"
              ), 
              "" ;"", 
              """"
            ), 
            ""."", 
            """"
          )
        ),
        ""<br /><br />https://nextkansas.org/cgi-bin/koha/opac-detail.pl?biblionumber="", 
        biblio.biblionumber
      ) AS NEWSTUFF,
      biblio.biblionumber
    FROM
      biblio JOIN
      items ON items.biblionumber = biblio.biblionumber
    WHERE
      items.barcode <> """" AND
      items.itype LIKE ""NVID%"" AND
      items.location = 'ADULT' AND
      items.ccode = 'VID_D' AND
      (items.notforloan = 0 OR
        items.notforloan IS NULL) AND
      (items.damaged = 0 OR
        items.damaged IS NULL) AND
      (items.itemlost = 0 OR
        items.itemlost IS NULL) AND
      (items.withdrawn = 0 OR
        items.withdrawn IS NULL)
    ORDER BY
      biblio.biblionumber DESC
    LIMIT 1
  ) adult_movie
UNION
SELECT
  child_book.NEWSTUFF
FROM
  (
    SELECT
      Concat(
        ""Recently added children's fiction:<br /><br />"",
        Upper(
          Replace(
            Replace(
              Replace(
                Replace(
                  biblio.title, 
                  "" /"", 
                  """"
                ), 
                "" :"", 
                """"
              ), 
              "" ;"", 
              """"
            ), 
            ""."", 
            """"
          )
        ),
        ""<br /><br />https://nextkansas.org/cgi-bin/koha/opac-detail.pl?biblionumber="", 
        biblio.biblionumber
      ) AS NEWSTUFF,
      biblio.biblionumber
    FROM
      biblio JOIN
      items ON items.biblionumber = biblio.biblionumber
    WHERE
      items.barcode <> """" AND
      (items.itype = ""BOOK"" OR
        items.itype = ""PBBKNEW"") AND
      items.location = 'CHILDRENS' AND
      items.ccode = 'FICTION' AND
      (items.notforloan = 0 OR
        items.notforloan IS NULL) AND
      (items.damaged = 0 OR
        items.damaged IS NULL) AND
      (items.itemlost = 0 OR
        items.itemlost IS NULL) AND
      (items.withdrawn = 0 OR
        items.withdrawn IS NULL)
    ORDER BY
      biblio.biblionumber DESC
    LIMIT 1
  ) child_book
UNION
SELECT
  child_movie.NEWSTUFF
FROM
  (
    SELECT
      Concat(
        ""Recently added children's DVD:<br /><br />"",
        Upper(
          Replace(
            Replace(
              Replace(
                Replace(
                  biblio.title, 
                  "" /"", 
                  """"
                ), 
                "" :"", 
                """"
              ), 
              "" ;"", 
              """"
            ), 
            ""."", 
            """"
          )
        ),
        ""<br /><br />https://nextkansas.org/cgi-bin/koha/opac-detail.pl?biblionumber="", 
        biblio.biblionumber
      ) AS NEWSTUFF,
      biblio.biblionumber
    FROM
      biblio JOIN
      items ON items.biblionumber = biblio.biblionumber
    WHERE
      items.barcode <> """" AND
      items.itype LIKE ""NVID%"" AND
      items.location = 'CHILDRENS' AND
      items.ccode = 'VID_D' AND
      (items.notforloan = 0 OR
        items.notforloan IS NULL) AND
      (items.damaged = 0 OR
        items.damaged IS NULL) AND
      (items.itemlost = 0 OR
        items.itemlost IS NULL) AND
      (items.withdrawn = 0 OR
        items.withdrawn IS NULL)
    ORDER BY
      biblio.biblionumber DESC
    LIMIT 1
  ) child_movie
UNION
SELECT
  ya_book.NEWSTUFF
FROM
  (
    SELECT
      Concat(
        ""Recently added young adult fiction:<br /><br />"",
        Upper(
          Replace(
            Replace(
              Replace(
                Replace(
                  biblio.title, 
                  "" /"", 
                  """"
                ), 
                "" :"", 
                """"
              ), 
              "" ;"", 
              """"
            ), 
            ""."", 
            """"
          )
        ),
        ""<br /><br />https://nextkansas.org/cgi-bin/koha/opac-detail.pl?biblionumber="", 
        biblio.biblionumber
      ) AS NEWSTUFF,
      biblio.biblionumber
    FROM
      biblio JOIN
      items ON items.biblionumber = biblio.biblionumber
    WHERE
      items.barcode <> """" AND
      (items.itype = ""BOOK"" OR
        items.itype = 'NEWBOOK') AND
      items.location = 'YOUNGADULT' AND
      items.ccode = 'FICTION' AND
      (items.notforloan = 0 OR
        items.notforloan IS NULL) AND
      (items.damaged = 0 OR
        items.damaged IS NULL) AND
      (items.itemlost = 0 OR
        items.itemlost IS NULL) AND
      (items.withdrawn = 0 OR
        items.withdrawn IS NULL)
    ORDER BY
      biblio.biblionumber DESC
    LIMIT 1
  ) ya_book
UNION
SELECT
  adult_audio.NEWSTUFF
FROM
  (
    SELECT
      Concat(""Recently added audiobook:<br /><br />"",
        Upper(
          Replace(
            Replace(
              Replace(
                Replace(
                  biblio.title, 
                  "" /"", 
                  """"
                ), 
                "" :"", 
                """"
              ), 
              "" ;"", 
              """"
            ), 
            ""."", 
            """"
          )
        ),
        ""<br /><br />https://nextkansas.org/cgi-bin/koha/opac-detail.pl?biblionumber="", 
        biblio.biblionumber
      ) AS NEWSTUFF,
     biblio.biblionumber
    FROM
      biblio JOIN
      items ON items.biblionumber = biblio.biblionumber
    WHERE
      items.barcode <> """" AND
      items.itype LIKE ""N_AB%"" AND
      items.location = 'ADULT' AND
      items.ccode = 'BOOKONCD' AND
      (items.notforloan = 0 OR
        items.notforloan IS NULL) AND
      (items.damaged = 0 OR
        items.damaged IS NULL) AND
      (items.itemlost = 0 OR
        items.itemlost IS NULL) AND
      (items.withdrawn = 0 OR
        items.withdrawn IS NULL)
    ORDER BY
      biblio.biblionumber DESC
    LIMIT 1) adult_audio
UNION
SELECT
  child_audio.NEWSTUFF
FROM
  (
    SELECT
      Concat(
        ""Recently added children's audiobook:<br /><br />"",
        Upper(
          Replace(
            Replace(
              Replace(
                Replace(
                  biblio.title, 
                  "" /"", 
                  """"
                ), 
                "" :"", 
                """"
              ), 
              "" ;"", 
              """"
            ), 
            ""."", 
            """"
          )
        ),
        ""<br /><br />https://nextkansas.org/cgi-bin/koha/opac-detail.pl?biblionumber="", 
        biblio.biblionumber
      ) AS NEWSTUFF,
      biblio.biblionumber
    FROM
      biblio JOIN
      items ON items.biblionumber = biblio.biblionumber
    WHERE
      items.barcode <> """" AND
      items.itype LIKE ""N_AB%"" AND
      items.location = 'CHILDRENS' AND
      items.ccode = 'BOOKONCD' AND
      (items.notforloan = 0 OR
        items.notforloan IS NULL) AND
      (items.damaged = 0 OR
        items.damaged IS NULL) AND
      (items.itemlost = 0 OR
        items.itemlost IS NULL) AND
      (items.withdrawn = 0 OR
        items.withdrawn IS NULL)
    ORDER BY
      biblio.biblionumber DESC
    LIMIT 1) child_audio
LIMIT 7",,,,,,,,
R.003151,"/*
R.003151

----------

Name: GHW - Mapping Helper
Created by: George H Williams

----------

Group: -
     -

Created on: 2018-12-27 18:03:14
Modified on: 2018-12-27 18:05:53
Date last run: 2020-01-20 22:07:23

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.address,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.sex AS GENDERS,
  ROUND((DateDiff(CurDate(), borrowers.dateofbirth) / 365.25)) AS AGES
FROM
  borrowers
WHERE
  borrowers.branchcode LIKE <<Choose a library|LBRANCH>> AND
  borrowers.city LIKE Concat(<<Enter a city name or a % symbol>>, ""%"") AND
  borrowers.state LIKE Concat(<<Enter a state name or a % symbol>>, ""%"") AND
  borrowers.zipcode LIKE Concat(<<Enter a zip code or a % symbol>>, ""%"")
GROUP BY
  borrowers.borrowernumber
ORDER BY
  borrowers.state,
  borrowers.city,
  borrowers.zipcode,
  borrowers.address,
  AGES DESC",,,,,,,,
R.003153,"/*
R.003153

----------

Name: Items not loaded in Highland migration due to duplicate barcodes
Created by: Bywater bwssupport

----------

Group: -
     -

Created on: 2019-01-12 11:24:13
Modified on: 2019-01-12 11:24:13
Date last run: 2019-02-09 10:27:33

----------

Public: 0
Expiry: 300

----------



----------
*/

","select biblionumber,title from biblio where datecreated='2019-01-12' and biblionumber not in (select biblionumber from items)",,,,,,,,
R.003159,"/*
R.003159

----------

Name: GHW - Checkout and renewal count by collection code and shelving location - previous calendar month
Created by: George H Williams

----------

Group: Statistics
     End of month statistics

Created on: 2019-01-27 20:45:59
Modified on: 2022-02-10 10:26:09
Date last run: 2022-10-03 12:21:08

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Last month's checkouts by library, collection code, and location</p>
<ul><li>Shows check-outs and renewals in the previous month by collection code and shelving location</li>
<li>at the library you specify</li>
<li>grouped and sorted by checkout branch and shelving location</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Checkouts without a checkout branch location will show as being checked out at NEKLS</p>
<p>Checkouts without a collection code will be counted as (Unclassified)</p>
<p></p>
<p>Partially replaces report 1929</p>
<p></p>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3159&reportname=GHW%20-%20Checkout%20and%20renewal%20count%20by%20collection%20code%20and%20shelving%20location%20-%20previous%20calendar%20month&sql_params=%25&param_name=Choose%20your%20library%7CLBRANCH"">Click here to download for all libraries as a csv file</a></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3159&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT 
  branchccodes.branchname, 
  branchccodes.lib, 
  Coalesce(SUM(all_lm.CKO_RENEW), ""0"") AS CKO_RENW_ALL, 
  Coalesce(SUM(adult_lm.CKO_RENEW), ""0"") AS CKO_RENEW_ADULT, 
  Coalesce(SUM(ya_lm.CKO_RENEW), ""0"") AS CKO_RENEW_YA, 
  Coalesce(SUM(childrens_lm.CKO_RENEW), ""0"") AS CKO_RENEW_CHILDRENS, 
  Coalesce(SUM(other_lm.CKO_RENEW), ""0"") AS CKO_RENEW_OTHER 
FROM 
  (SELECT 
      branches.branchcode, 
      authorised_values.authorised_value, 
      authorised_values.lib, 
      branches.branchname 
    FROM 
      branches, 
      authorised_values 
    WHERE 
      authorised_values.category = 'CCODE' AND 
      branches.branchcode LIKE <<Choose your library|ZBRAN>>
    ORDER BY 
      branches.branchcode, 
      authorised_values.lib) branchccodes LEFT JOIN 
  ( 
    SELECT 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch, 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) AS CCODE, 
      Count(*) AS CKO_RENEW 
    FROM 
      statistics 
    WHERE 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') 
    GROUP BY 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch), 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) 
  ) all_lm ON all_lm.branch = branchccodes.branchcode AND 
      all_lm.CCODE = branchccodes.authorised_value LEFT JOIN 
  ( 
    SELECT 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch, 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) AS CCODE, 
      Count(*) AS CKO_RENEW 
    FROM 
      statistics LEFT JOIN 
      items ON items.itemnumber = statistics.itemnumber 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      If( 
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"") 
      ) LIKE ""%ADULT%"" 
    GROUP BY 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch), 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) 
  ) adult_lm ON adult_lm.branch = branchccodes.branchcode AND 
      adult_lm.CCODE = branchccodes.authorised_value LEFT JOIN 
  ( 
    SELECT 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch, 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) AS CCODE, 
      Count(*) AS CKO_RENEW 
    FROM 
      statistics LEFT JOIN 
      items ON items.itemnumber = statistics.itemnumber 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      If( 
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"") 
      ) LIKE ""%YA%"" 
    GROUP BY 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch), 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) 
  ) ya_lm ON ya_lm.branch = branchccodes.branchcode AND 
      ya_lm.CCODE = branchccodes.authorised_value LEFT JOIN 
  ( 
    SELECT 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch, 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) AS CCODE, 
      Count(*) AS CKO_RENEW 
    FROM 
      statistics LEFT JOIN 
      items ON items.itemnumber = statistics.itemnumber 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      If( 
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"") 
      ) LIKE ""%CHILD%"" 
    GROUP BY 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch), 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) 
  ) childrens_lm ON childrens_lm.branch = branchccodes.branchcode AND 
      childrens_lm.CCODE = branchccodes.authorised_value LEFT JOIN 
  ( 
    SELECT 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch, 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) AS CCODE, 
      Count(*) AS CKO_RENEW 
    FROM 
      statistics LEFT JOIN 
      items ON items.itemnumber = statistics.itemnumber 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      If( 
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"") 
      ) NOT LIKE ""%ADULT%"" AND 
      If( 
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location,""PROC"") 
      ) NOT LIKE ""%YA%"" AND 
      If( 
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"") 
      ) NOT LIKE ""%CHILD%"" 
    GROUP BY 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch), 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) 
) other_lm ON other_lm.branch = branchccodes.branchcode AND 
      other_lm.CCODE = branchccodes.authorised_value 
GROUP BY 
  branchccodes.branchname, 
  branchccodes.lib 
ORDER BY 
  branchccodes.branchname, 
  branchccodes.lib",,,,,,,,
R.003160,"/*
R.003160

----------

Name: GHW - Materials added in the previous calendar month
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-01-27 22:47:48
Modified on: 2020-12-02 15:10:38
Date last run: 2022-08-18 11:58:28

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a list of items added in the previous calendar month</p>
<ul><li>Only shows items added in the previous calendar month</li>
<li>at the library you specify</li>
<li>grouped by biblio number and item number</li>
<li>sorted by home branch, shelving location, item type, collection code, call number, author, and title</li>
<li>contains links to the item's bibliographic record</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Partially replaces report 536</p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3160&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">', items.biblionumber, '</a>') AS LINK_TO_TITLE,
  Concat(""-"", Coalesce(items.barcode, ""-""), ""-"") AS BARCODE,
  items.homebranch,
  plocations.lib AS PERMANENT_LOCATION,
  locations.lib AS LOCATION,
  itemtypes.description AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber,
  biblio.author,
  Concat_Ws("" "", 
    biblio.title, 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')
  ) AS FULL_TITLE,
  items.dateaccessioned,
  items.price,
  items.replacementprice,
  items.timestamp
FROM
  items JOIN
  biblio ON biblio.biblionumber = items.biblionumber JOIN
  biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
  LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE') ccodes ON ccodes.authorised_value =
      items.ccode LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') locations ON
      locations.authorised_value = items.location LEFT JOIN
  itemtypes ON itemtypes.itemtype = items.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') plocations ON
      plocations.authorised_value = items.permanent_location
WHERE
  items.homebranch = <<Choose your library|LBRANCH>> AND
  Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
  Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH)
GROUP BY
  plocations.lib,
  items.biblionumber,
  items.itemnumber
ORDER BY
  items.homebranch,
  PERMANENT_LOCATION,
  ITYPE,
  CCODE,
  items.itemcallnumber,
  biblio.author,
  FULL_TITLE",,,,,,,,
R.003161,"/*
R.003161

----------

Name: GHW - Patrons added in the previous calendar month
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-01-27 23:01:25
Modified on: 2019-01-28 01:30:09
Date last run: 2022-09-21 13:39:10

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a list of new patrons to review for input errors</p>
<ul><li>Shows patrons added in the previous calendar month</li>
<li>at the library you specify</li>
<li>grouped by borrowernumber</li>
<li>sorted by the patron's last name and first name</li>
<li>contains links to the edit patron screen for each patron</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Partially replaces report 555</p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3161&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat(
    '<a href=\""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=',
    borrowers.borrowernumber,
    '\"" target=""_blank"">edit patron</a>'
  ) AS ""edit patron"",
  borrowers.cardnumber,
  borrowers.surname,
  borrowers.firstname,
  borrowers.address,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.email,
  borrowers.phone,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateenrolled
FROM
  borrowers
WHERE
  borrowers.branchcode LIKE <<Choose the patron home library|LBRANCH>> AND
  Year(borrowers.dateenrolled) = Year(Now() - INTERVAL 1 MONTH) AND
  Month(borrowers.dateenrolled) = Month(Now() - INTERVAL 1 MONTH)
GROUP BY
  borrowers.borrowernumber
ORDER BY
  borrowers.surname,
  borrowers.firstname,
  borrowers.branchcode,
  borrowers.categorycode",,,,,,,,
R.003162,"/*
R.003162

----------

Name: GHW - Paypal report - date range
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-01-28 12:16:43
Modified on: 2019-12-26 11:47:05
Date last run: 2022-08-16 15:12:49

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a report of payments made to libraries via Paypal in a date range</p>
<ul><li>Shows payments made in the date range you specify</li>
<li>At all libraries</li>
<li>grouped by account offsets ID</li>
<li>sorted by library owed the fee, payment date, and fee reference ID</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Due to changes in the database during the upgrade in July of 2018, this report will not work for any fees collected before July 8, 2018</p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3162&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

<p><span style=""color: yellow; background-color: red; font-size: 200%;"">References accountlines.accounttype.  Needs to be updated after January 4, 2020</span></p>

----------
*/

","SELECT
  borrowerinfo.branchcode AS COLLECTED_AT,
  If(
    debits.accounttype = 'F',
    Coalesce(old_issues.branchcode, borrowerinfo.branchcode),
    If(
      debits.accounttype = 'M',
      Coalesce(manualinvoiceinfo.branchcode, borrowerinfo.branchcode),
      If(
        debits.accounttype = 'L',
        Coalesce(items.homebranch, Coalesce(manualinvoiceinfo.branchcode, borrowerinfo.branchcode)),
        borrowerinfo.branchcode
      )
    )
  ) AS COLLECTED_ON_BEHALF_OF,
  Format(ABS(credits.amount), 2) AS AMT_COLLECTED,
  borrowerinfo.cardnumber AS FROM_PATRON,
  credits.note AS PAYMENT_NOTES,
  credits.date AS PAYMENT_DATE,
  Concat_Ws(""-"", credits.accountlines_id, credits.accountno) AS PAYMENT_REFERENCE,
  If(items.barcode IS NULL, ""DELETED"", Upper(items.barcode)) AS FOR_ITEM,
  If(items.homebranch IS NULL, ""DELETED"", items.homebranch) AS OWNED_BY,
  debits.date AS FEE_DATE,
  Format(ABS(account_offsets.amount), 2) AS FEE_AMOUNT,
  If(
    Format((debits.amount + account_offsets.amount), 2) = 0,
    ""-"", Format((debits.amount + account_offsets.amount), 2)
  ) AS PREVIOUS_PAYMENTS,
  Format(debits.amountoutstanding, 2) AS FEE_STILL_OWED,
  debits.description AS FEE_DESCRIPTION,
  debits.note AS FEE_NOTE,
  Concat_Ws(""-"", debits.accountlines_id, debits.accountno) AS FEE_REFERENCE
FROM
  accountlines credits
  JOIN account_offsets ON account_offsets.credit_id = credits.accountlines_id
  JOIN accountlines debits ON account_offsets.debit_id = debits.accountlines_id
  LEFT JOIN old_issues ON debits.issue_id = old_issues.issue_id
  LEFT JOIN items ON debits.itemnumber = items.itemnumber
  JOIN borrowers borrowerinfo ON borrowerinfo.borrowernumber = credits.borrowernumber
  LEFT JOIN borrowers manualinvoiceinfo ON manualinvoiceinfo.borrowernumber = debits.manager_id
WHERE
  (credits.note LIKE ""%Paypal%"" AND
  credits.date BETWEEN <<The start of the day on|date>> AND (<<the end of the day on|date>> + interval 1 day)) AND
  If(
    debits.accounttype = 'F',
    Coalesce(old_issues.branchcode, borrowerinfo.branchcode),
    If(
      debits.accounttype = 'M',
      Coalesce(manualinvoiceinfo.branchcode, borrowerinfo.branchcode),
      If(
        debits.accounttype = 'L',
        Coalesce(items.homebranch, Coalesce(manualinvoiceinfo.branchcode, borrowerinfo.branchcode)),
        borrowerinfo.branchcode
      )
    )
  ) LIKE <<Choose your library|LBRANCH>>
GROUP BY
  account_offsets.id
ORDER BY
  COLLECTED_ON_BEHALF_OF,
  PAYMENT_DATE,
  FEE_REFERENCE",,,,,,,,
R.003163,"/*
R.003163

----------

Name: GHW - Locked accounts by borrowernumber
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-01-29 09:32:51
Modified on: 2019-06-05 18:22:44
Date last run: 2022-10-02 15:06:50

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Shows number of login attempts on a specific account.</p>
<ul><li>Shows current data</li>
<li>for the library card number you specify</li>
<li>grouped by library card number</li>
<li>sorted by patron's last name and card number</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>For the full instruction sheet for unlocking a patron's account after it has been locked due to too many login attempts, <a href=""http://guides.nekls.org/assets/users/_gwilliams/account.lockout.pdf"" target=""_blank"">click here</a></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3163&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>


----------
*/

","SELECT
  borrowers.cardnumber,
  borrowers.surname,
  If(borrowers.login_attempts > 4,
    Concat(
      ""<span style='color: red;'>This account is locked because of "",
      borrowers.login_attempts,
      "" unsuccessful login attempts.<br />The patron's password must be reset/updated before they can log in.</span>""),
    ""This account is not locked."") AS LOCKED,
  borrowers.login_attempts,
  borrowers.updated_on AS LAST_LOGIN_ATTEMPT
FROM
  borrowers
WHERE
  borrowers.borrowernumber LIKE <<Enter a borrowernumber or a % symbol>>
GROUP BY
  borrowers.cardnumber,
  borrowers.borrowernumber
ORDER BY
  borrowers.surname,
  borrowers.cardnumber  ",,,,,,,,
R.003164,"/*
R.003164

----------

Name: GHW - Hootsuite scheduled post generator - single title by barcode number
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2019-01-31 09:29:30
Modified on: 2019-01-31 09:32:23
Date last run: 2019-03-28 09:49:15

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates an easily scheduled media post for a new title</p>
<ul><li>Shows a title or titles based on the barcode number you specify</li>
<li>At all Next libraries</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3164&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat(
    ""Recently added:<br /><br />"",
    Upper(Replace(Replace(Replace(Replace(biblio.title, "" /"", """"),  "" :"", """"), "" ;"", """"), ""."", """")),
    ""<br /><br />https://nextkansas.org/cgi-bin/koha/opac-detail.pl?biblionumber="",
    biblio.biblionumber
  ) AS NEWSTUFF
FROM
  biblio
  JOIN items ON items.biblionumber = biblio.biblionumber
WHERE
  items.barcode LIKE Concat(""%"", <<Enter item barcode number or a % symbol>>, ""%"") AND
  (items.notforloan = 0 OR
    items.notforloan IS NULL) AND
  (items.damaged = 0 OR
    items.damaged IS NULL) AND
  (items.itemlost = 0 OR
    items.itemlost IS NULL) AND
  (items.withdrawn = 0 OR
    items.withdrawn IS NULL)",,,,,,,,
R.003165,"/*
R.003165

----------

Name: 1930 report for 2019
Created by: BASEHOR DIRECTOR

----------

Group: Circulation
     -

Created on: 2019-02-01 09:25:45
Modified on: 2022-03-09 15:24:56
Date last run: 2022-03-09 15:24:59

----------

Public: 0
Expiry: 300

----------

No longer works - run report 3646 instead

----------
*/

","SELECT
  ""No longer works - see report notes"" AS description",,,,,,,,
R.003166,"/*
R.003166

----------

Name: GHW - Bullseye search
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-02-08 14:26:15
Modified on: 2019-02-11 23:18:52
Date last run: 2022-01-14 16:54:20

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  IF(
    Trim(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),""."",""""),"","",""""),""'"",""""),""/"",""""),"":"",""""),"";"",""""),""["",""""),""]"",""""),""("",""""),"")"","""")) <> """",
    Concat(
      '<a href=\""/cgi-bin/koha/catalogue/search.pl?idx=au&q=',
      Replace(Replace(Replace(biblio.author, ""."", """"), "","", """"), ""'"", """"),
      '&op=and&idx=ti&q=',
      Trim(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(biblio.title,""."",""""),""?"",""""),"","",""""),""'"",""""),""/"",""""),"":"",""""),"";"",""""),""&"",""""),"" "",""+"")),
      '&op=and&idx=kw&q=',
      Trim(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),""."",""""),"","",""""),""'"",""""),""/"",""""),"":"",""""),"";"",""""),""["",""""),""]"",""""),""("",""""),"")"","""")),
      '&sort_by=title_az\"" target=""_blank"">Search the catalog</a>'
    ),
    Concat(
      '<a href=\""/cgi-bin/koha/catalogue/search.pl?idx=au&q=',
      Replace(Replace(Replace(biblio.author, ""."", """"), "","", """"), ""'"", """"),
      '&op=and&idx=ti&q=',
      Trim(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(biblio.title,""."",""""),""?"",""""),"","",""""),""'"",""""),""/"",""""),"":"",""""),"";"",""""),""&"",""""),"" "",""+"")),
      '&op=not&idx=kw%2Cphr&q=sound+recording&op=not&idx=kw%2Cphr&q=videorecording&sort_by=title_az\"" target=""_blank"">Search the catalog</a>'
    )
  ) AS BULLSEYE_SEARCH,
  Replace(Replace(Replace(biblio.author, ""."", """"), "","", """"), ""'"", """") AS AUTHOR,
  Trim(Replace(Replace(Replace(Replace(Replace(Replace(biblio.title, ""."", """"), "","", """"), ""'"", """"), ""/"", """"), "":"", """"),"";"", """")) AS TITLE,
  Trim(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'), ""."", """"), "","", """"), ""'"", """"), ""/"", """"), "":"", """"), "";"", """"), ""["", """"), ""]"", """"), ""("", """"), "")"", """")) AS GMD,
  Count(biblio.biblionumber) AS Count_biblionumber,
  Group_Concat(biblio_metadata.biblionumber) AS Group_Concat_biblionumber
FROM
  biblio
  JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
WHERE
  Replace(Replace(Replace(biblio.author, ""."", """"), "","", """"), ""'"", """") LIKE Concat(<<searchterm>>, ""%"")
GROUP BY
  Replace(Replace(Replace(biblio.author, ""."", """"), "","", """"), ""'"", """"),
  Trim(Replace(Replace(Replace(Replace(Replace(Replace(biblio.title, ""."", """"), "","", """"), ""'"", """"), ""/"", """"), "":"", """"),
  "";"", """")),
  Trim(Replace(Replace(Replace(Replace(Replace(Replace(ExtractValue(biblio_metadata.metadata,
  '//datafield[@tag=""245""]/subfield[@code=""h""]'), ""."", """"), "","", """"), ""'"", """"), ""/"", """"), "":"", """"), "";"", """"))
HAVING
  Count(biblio.biblionumber) > 1 AND
  GMD NOT LIKE ""%Hoopla%""",,,,,,,,
R.003167,"/*
R.003167

----------

Name: GHW - Insightly groups from library information
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2019-02-09 17:12:02
Modified on: 2019-02-09 17:21:22
Date last run: 2019-02-09 17:21:25

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat("""") AS RecordId,
  branches.branchname AS OrganizationName,
  branches.branchaddress1 AS BillingAddressStreet,
  branches.branchcity AS BillingAddressCity,
  branches.branchstate AS BillingAddressState,
  LEFT(branches.branchzip, 5) AS BillingAddressPostalCode,
  Concat(""United States"") AS BillingAddressCountry,
  branches.branchaddress2 AS ShippingAddressStreet,
  If(branches.branchaddress2 = """", """", branches.branchcity) AS ShippingAddressCity,
  If(branches.branchaddress2 = """", """", branches.branchstate) AS ShippingAddressState,
  If(branches.branchaddress2 = """", """", Concat(""United States"")) AS ShippingAddressCountry,
  If(branches.branchaddress2 = """", """", LEFT(branches.branchzip, 5)) AS ShippingAddressPostalCode,
  branches.branchphone AS Phone,
  branches.branchfax AS Fax,
  branches.branchurl AS Website,
  Concat("""") AS EmailDomain,
  Concat("""") AS ImportantDate1Name,
  Concat("""") AS ImportantDate1,
  Concat("""") AS ImportantDate2Name,
  Concat("""") AS ImportantDate2,
  Concat("""") AS ImportantDate3Name,
  Concat("""") AS ImportantDate3,
  Concat(""NextSearchCatalog"") AS Tag1,
  Concat("""") AS Tag2,
  Concat("""") AS Tag3,
  Concat("""") AS Tag4,
  Concat("""") AS Tag5,
  Concat("""") AS Tag6,
  Concat("""") AS Tag7,
  Concat("""") AS Tag8,
  Concat("""") AS Tag9,
  Concat("""") AS DateOfLastActivity,
  Concat("""") AS DateOfNextActivity,
  Concat("""") AS ""KLOW Member"",
  Concat("""") AS Library,
  Concat("""") AS Type,
  Concat("""") AS Vendor,
  Concat("""") AS Government,
  Concat("""") AS Agency
FROM
  branches",,,,,,,,
R.003168,"/*
R.003168

----------

Name: GHW - Narrow down
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2019-02-11 23:05:21
Modified on: 2019-02-11 23:05:21
Date last run: 2019-02-15 21:53:41

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat(
     '<a href=\""/cgi-bin/koha/reports/guided_reports.pl?reports=3166&phase=Run+this+report&m_name=searchterm&sql_params=',
    Replace(Left(Replace(Replace(Replace(biblio.author, ""."", """"), "","", """"), ""'"", """"), 3), "" "",""+""),
    '"" target=""_blank"">Run targeted search</a>'
  ) AS ASEARCH,
  Left(Replace(Replace(Replace(biblio.author, ""."", """"), "","", """"), ""'"", """"), 3) AS author,
  Count(Replace(Replace(Replace(biblio.author, ""."", """"), "","", """"), ""'"", """")) AS AUTHOR_COUNT
FROM
  biblio
WHERE
  Left(Replace(Replace(Replace(biblio.author, ""."", """"), "","", """"), ""'"", """"), 3) LIKE ""A%""
GROUP BY
  Left(Replace(Replace(Replace(biblio.author, ""."", """"), "","", """"), ""'"", """"), 3)",,,,,,,,
R.003169,"/*
R.003169

----------

Name: GHW - ADMINREPORT - ISBN / UPC followup
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2019-02-12 12:23:57
Modified on: 2019-02-12 15:42:50
Date last run: 2019-03-07 22:34:08

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat(
    ""Information needed for "",
    UPPER(biblio.title),
    ""<br /><br />Hello at "",
    items.homebranch,
    "",<br /> <br />There is a problem with an item/biblio at your library.  The details are as follow:<br />"",
    Concat_Ws('<br />',
      Concat('Item homebranch: ', items.homebranch),
      Concat('Current branch: ', items.holdingbranch),
      Concat('Shelving location: ', items.location),
      Concat('Item type: ', items.itype),
      Concat('Collection code: ', ccodes.lib),
      Concat('Call#: ', items.itemcallnumber),
      Concat('Author: ', biblio.author),
      Concat(
        'Title: ',
        Concat_Ws(' ',
          '<span style=""text-transform: uppercase"">',
          biblio.title,
          ExtractValue(biblio_metadata.metadata,'//datafield[@tag=""245""]/subfield[@code=""b""]'),
          ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
          ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
          '</span>'
        )
      ),
      Concat('Barcode: ', items.barcode)
    ),
    ""<br /><br />Could you send me the ISBN from your copy of this item?<br /><br />Could you send me the UPC number from your copy of this item?<br /><br />Could you send me more information about your copy of this item?<br /><br />George""
  ) AS MESSAGE
FROM
  items
  JOIN biblio ON items.biblionumber = biblio.biblionumber
  JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber AND
    items.biblionumber = biblio_metadata.biblionumber
  LEFT JOIN (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
    GROUP BY
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib) ccodes ON items.ccode = ccodes.authorised_value
WHERE
  items.barcode LIKE Concat(""%"", <<Enter item barcode>>, ""%"")
GROUP BY
  items.itemnumber
ORDER BY
  items.homebranch,
  items.location,
  items.itype,
  ccodes.lib,
  items.itemcallnumber,
  biblio.author,
  biblio.title,
  items.barcode",,,,,,,,
R.003170,"/*
R.003170

----------

Name: GHW - ADMINREPORT - Biblio/Item/Call number ITYPE confusion
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2019-02-12 15:43:52
Modified on: 2019-03-07 22:50:19
Date last run: 2019-09-26 18:33:48

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat(
    ""Bibliographic record / item record confusion - "",
    UPPER(biblio.title),
    ""<br /><br />Hello at "",
    items.homebranch,
    "",<br /> <br />There is a problem with an item/biblio at your library.  The details are as follow:<br />"",
    Concat_Ws('<br />',
      Concat('Item homebranch: ', items.homebranch),
      Concat('Current branch: ', items.holdingbranch),
      Concat('Shelving location: ', items.location),
      Concat('Item type: ', items.itype),
      Concat('Collection code: ', ccodes.lib),
      Concat('Call#: ', items.itemcallnumber),
      Concat('Author: ', biblio.author),
      Concat(
        'Title: ',
        Concat_Ws(' ',
          '<span style=""text-transform: uppercase"">',
          biblio.title,
          ExtractValue(biblio_metadata.metadata,'//datafield[@tag=""245""]/subfield[@code=""b""]'),
          ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
          ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
          '</span>'
        )
      ),
      Concat('Barcode: ', items.barcode)
    ),
    ""<br /><br />The issue here is that<br /><br />"",
    ""the item type on the bibliographic record is "", ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""h""]'), ""<br /><br />"",
    ""the collection code on the bibliographic record is "", ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""c""]'), ""<br /><br />"",
    ""the description on the bibliographic (300$a) record is "", ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""300""]/subfield[@code=""a""]'), ""<br /><br />"",

    ""the item type on your item is "", ccodes.lib, ""<br /><br />"",
    ""the collection code on your item is "", items.itype, ""<br /><br />"",
    ""the call number on this item is "", ccodes.lib, ""<br /><br />"",
    "" but <br /><br />"",
    "" so the description for this title and item in the catalog is going to be confusing to patrons because of this discrepancy.<br /><br />Could you take a look at your item and see if this item belongs on a different bibliographic record or if the bibliographic record or the item record needs to be updated or if this item just belongs on a different bibliographic record altogether?<br /><br />Thanks,<br /><br />George""
  ) AS MESSAGE
FROM
  items
  JOIN biblio ON items.biblionumber = biblio.biblionumber
  JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber AND
    items.biblionumber = biblio_metadata.biblionumber
  LEFT JOIN (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
    GROUP BY
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib) ccodes ON items.ccode = ccodes.authorised_value
WHERE
  items.barcode LIKE Concat(""%"", <<barcode number>>, ""%"")
GROUP BY
  items.itemnumber
ORDER BY
  items.homebranch,
  items.location,
  items.itype,
  ccodes.lib,
  items.itemcallnumber,
  biblio.author,
  biblio.title,
  items.barcode",,,,,,,,
R.003171,"/*
R.003171

----------

Name: GHW - Closure report 1 - items checked out at a library with due dates during a specified date range
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-02-15 11:10:48
Modified on: 2020-03-04 13:51:17
Date last run: 2020-06-16 12:18:16

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Report to get items.itemnumber data for items due in the date range specified</p>
<ul><li>Shows itemnumbers for items due on the dates you specify</li>
<li>at the library you specify</li>
<li>grouped by branchcode and itemnumber</li>
<li>sorted by branchcode and date due</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Procedure for NEKLS staff when a library contacts us about an unplanned closure:<br /></p>
<ol>
  <li>Run this report for the library that's closing unexpectedly and select the date range that they will be closed</li><br />
  <li>Download the report as a CSV file</li><br />
  <li>Open a support request with ByWater Solutions and attach the csv file to the support request</li><br />
  <li>Ask ByWater to change the due dates on all of the itemnumbers included in the text file to the date the library will re-open (or a day or two after they reopen)</li><br />
  <li>Let the library know that you have asked ByWater to update the due dates on the items that are due during their closure</li><br />
  <li>Follow up with the library and with ByWater if there are any problems or issues</li><br />
</ol>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3171&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  issues.branchcode,
  issues.itemnumber,
  issues.date_due
FROM
  issues
WHERE
  issues.date_due BETWEEN <<Between the start of the day on date1|date>>  AND (<<the end of the day on date2|date>> + interval 1 day) AND
  issues.branchcode LIKE <<Select library|ZBRAN>>
GROUP BY
  issues.branchcode,
  issues.itemnumber
ORDER BY
  issues.branchcode,
  issues.date_due",,,,,,,,
R.003173,"/*
R.003173

----------

Name: GHW - Branch notes - ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-02-24 20:54:06
Modified on: 2019-02-24 20:54:06
Date last run: 2019-04-04 20:39:53

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat(
    ""Per "",
    branches.branchname,
    "" schedule on website on 2019.02.24.  - GHW""
  ) AS Note
FROM
  branches",,,,,,,,
R.003181,"/*
R.003181

----------

Name: GHW - Checkouts and renewals by title and item type
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-03-04 16:13:12
Modified on: 2019-03-04 16:16:57
Date last run: 2022-02-06 20:29:08

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Gives a circulation count by title and item type</p>
<ul><li>Shows items checkedout in the previous calendar month</li>
<li>at the library you specify</li>
<li>grouped and sorted by library, year, month, itemtype and title</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3181&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  statistics.branch,
  Year(statistics.datetime) AS YEAR,
  Month(statistics.datetime) AS MONTH,
  itemtypes.description AS ITYPE,
  Coalesce(biblio.title, biblio1.title) AS TITLE,
  Count(*) AS CKO_RENEW_COUNT
FROM
  statistics
  LEFT JOIN items ON items.itemnumber = statistics.itemnumber
  LEFT JOIN deleteditems ON deleteditems.itemnumber = statistics.itemnumber
  LEFT JOIN biblio ON items.biblionumber = biblio.biblionumber
  LEFT JOIN biblio biblio1 ON biblio1.biblionumber = deleteditems.biblionumber
  INNER JOIN itemtypes ON itemtypes.itemtype = statistics.itemtype
WHERE
  statistics.branch LIKE <<Select your library|ZBRAN>> AND
  statistics.itemtype LIKE <<Select Item type|itemtypes>> AND
  Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
  Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
  (statistics.type = 'ISSUE' OR
    statistics.type = 'RENEW')
GROUP BY
  statistics.branch,
  Year(statistics.datetime),
  Month(statistics.datetime),
  itemtypes.description,
  Coalesce(biblio.title, biblio1.title)
ORDER BY
  statistics.branch,
  YEAR,
  MONTH,
  ITYPE,
  TITLE",,,,,,,,
R.003184,"/*
R.003184

----------

Name: GHW - Monthly 620 Net borrows
Created by: George H Williams

----------

Group: Statistics
     Last month's statistics - Next-wide

Created on: 2019-03-12 00:46:57
Modified on: 2022-03-11 17:12:55
Date last run: 2022-03-11 17:15:02

----------

Public: 0
Expiry: 300

----------

<p style=""display: none;"">MNTHLY</p>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3184"">Click here to download as a csv file</a></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3184&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>

----------
*/

","SELECT
  branches.branchname AS ""Library"",
  Coalesce(not_ours_at_ours.COUNTS, 0) AS ""Other Next library materials checked out at our library"",
  Coalesce(ours_at_other_libraries.COUNTS, 0) AS ""Our materials checked out at other Next libraries"",
  Coalesce(not_ours_at_ours.COUNTS, 0) -  Coalesce(ours_at_other_libraries.COUNTS, 0) AS NET,
  If(Coalesce(not_ours_at_ours.COUNTS, 0) -  Coalesce(ours_at_other_libraries.COUNTS, 0) > 0, ""We borrowerd more than we lent"", """") AS ""Net borrower"",  
  If(Coalesce(not_ours_at_ours.COUNTS, 0) -  Coalesce(ours_at_other_libraries.COUNTS, 0) < 0, ""We lent more than we borrowed"", """") AS ""Net lender"",
  Concat(Format(Coalesce(not_ours_at_ours.COUNTS, 0) / Coalesce(ours_at_other_libraries.COUNTS, 0), 2), "" : 1"") AS ""Borrowed to lent ratio""
FROM
  branches LEFT JOIN
  (SELECT
      statistics.branch,
      Count(*) AS COUNTS
    FROM
      statistics LEFT JOIN
      items ON items.itemnumber = statistics.itemnumber LEFT JOIN
      deleteditems ON deleteditems.itemnumber = statistics.itemnumber
    WHERE
      (statistics.type = 'issue' OR
          statistics.type = 'renew') AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      statistics.branch NOT LIKE 
        If(
          Coalesce(items.homebranch, deleteditems.homebranch) LIKE ""DONI%"", 
          ""DONI%"", 
          If(
            Coalesce(items.homebranch, deleteditems.homebranch) LIKE ""PH%"", 
            ""PH%"", 
            Coalesce(items.homebranch, deleteditems.homebranch)
          )
        )
    GROUP BY
      statistics.branch) not_ours_at_ours ON not_ours_at_ours.branch =
      branches.branchcode LEFT JOIN
  (SELECT
      Coalesce(items.homebranch, deleteditems.homebranch) AS branch,
      Count(*) AS COUNTS
    FROM
      statistics LEFT JOIN
      items ON items.itemnumber = statistics.itemnumber LEFT JOIN
      deleteditems ON deleteditems.itemnumber = statistics.itemnumber
    WHERE
      (statistics.type = 'issue' OR
          statistics.type = 'renew') AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      Coalesce(items.homebranch, deleteditems.homebranch) NOT LIKE  
        If(
          statistics.branch LIKE ""DONI%"", 
          ""DONI%"", 
          If(
            statistics.branch LIKE ""PH%"", 
            ""PH%"", 
            statistics.branch
          )
        )
    GROUP BY
      Coalesce(items.homebranch, deleteditems.homebranch))
  ours_at_other_libraries ON ours_at_other_libraries.branch =
      branches.branchcode",,,,,,,,
R.003186,"/*
R.003186

----------

Name: GHW - generates 1 patron name based on the patron's ID number
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-03-20 17:44:30
Modified on: 2019-03-27 16:45:48
Date last run: 2022-10-03 14:26:41

----------

Public: 1
Expiry: 1

----------

<div id=reportinfo>
<p>Returns 1 patron name based based on the specified borrowernumber</p>
<ul><li>Shows a current patron name</li>
<li>based on the borrowernumber you enter</li>
<li>grouped and sorted by the borrower's name</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>The purpose of this report is to provide JSON output in order to put the patron's name on the ""Hold filled"" checkin message pop-up.</p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3186&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Group_Concat(borrowers.surname, "", "", borrowers.firstname, "" - "") AS BORROWER_NAME
FROM
  borrowers
WHERE
  borrowers.borrowernumber = <<borrowernumber>>",,,,,,,,
R.003187,"/*
R.003187

----------

Name: GHW - report to structure block information on patron pages
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-03-25 14:32:50
Modified on: 2019-04-03 16:15:45
Date last run: 2022-10-03 14:26:36

----------

Public: 0
Expiry: 1

----------

<div id=reportinfo>
<p>Returns the phrase ""loginblock"" when a patron ID is entered that has been unsuccessfully logged in more than the 'FailedLoginAttempts' system preference allows</p>
<ul><li>Shows current blocks</li>
<li>for the patron is number you enter</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Designed to output a class that can be added to a page via JSON</p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3187&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  If(borrowers.login_attempts > 4, ""loginblock"", """") AS CLASS
FROM
  borrowers,
  (
    SELECT
      systempreferences.variable,
      systempreferences.value,
      systempreferences.options,
      systempreferences.explanation,
      systempreferences.type
    FROM
      systempreferences
    WHERE
      systempreferences.variable = 'FailedLoginAttempts'
  ) FAILEDLOGIN
WHERE
  borrowers.login_attempts >= FAILEDLOGIN.value AND
  borrowers.borrowernumber = <<enter borrower id>>",,,,,,,,
R.003190,"/*
R.003190

----------

Name: GHW - Deletion problem
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-03-29 10:28:46
Modified on: 2019-03-29 11:45:17
Date last run: 2019-04-03 21:07:04

----------

Public: 0
Expiry: 300

----------

First draft.

----------
*/

","SELECT
  Concat(
    ""nexthelp@nekls.org<br /><br />Item deleted at your library that was not owned by your library<br /><br />"",
    "",<br /><br />We have some libraries noticing lately that their items are being deleted without their knowledge, so I'm trying to track what's going on.  It doesn't appear to happen often - about 5-10 items a month - but it's upsetting some libraries.<br /><br />So, on "",
    Date_Format(action_logs.timestamp, ""%Y.%m.%d""),
    "" at "",
    Date_Format(action_logs.timestamp, ""%l:%i %p""),
    "" staff at "",
    borrowers.branchcode,
    "" (logged in as "",
    borrowers.userid,
    "") deleted an item owned by "",
    deleteditems.homebranch,
    "".<br /><br />Specifically, "",
    borrowers.userid,
    "" deleted the following item:<br /><br />Item homebranch: "",
    Coalesce(deleteditems.homebranch, "" ""),
    ""<br />Shelving location: "",
    Coalesce(deleteditems.location, "" ""),
    ""<br />Item type: "",
    Coalesce(deleteditems.itype, "" ""),
    ""<br />Collection code: "",
    Coalesce(CCODES.lib, "" ""),
    ""<br />Call number: "",
    Coalesce(deleteditems.itemcallnumber, "" ""),
    ""<br />Author: "",
    Coalesce(biblio.author, deletedbiblio.author, "" ""),
    ""<br />Title: "",
    Coalesce(biblio.title, deletedbiblio.title, "" ""),
    ""<br />Barcode number: "",
    Coalesce(deleteditems.barcode, "" ""),
    If(Coalesce(LOST.lib, ""-"") LIKE ""-"", """", Concat(""<br /><br />Lost status at time of deletion: "", Coalesce(LOST.lib, ""-""))),
    If(Coalesce(WITHDRAWN.lib, """") LIKE """", """", Concat(""<br /><br />Withdrawn status at time of deletion: "", Coalesce(WITHDRAWN.lib, """"))),
    IF(Coalesce(DAMAGED.lib, """") LIKE """", """", CONCAT(""<br /><br />Damaged status at time of deletion: "", Coalesce(DAMAGED.lib, """"))),
    ""<br /><br />Do you have any idea why you might have deleted this item that was not owned by your library?  Did you contact "",
    deleteditems.homebranch,
    "" before you deleted the item?<br /><br />Please let us know,<br /><br />George""
  ) AS INFO
FROM
  action_logs
  LEFT JOIN borrowers
    ON borrowers.borrowernumber = action_logs.user
  LEFT JOIN deleteditems
    ON deleteditems.itemnumber = action_logs.object
  LEFT JOIN biblio
    ON biblio.biblionumber = deleteditems.biblionumber
  LEFT JOIN deletedbiblio
    ON deletedbiblio.biblionumber = deleteditems.biblionumber
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
  ) CCODES
    ON CCODES.authorised_value = deleteditems.ccode
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOST'
  ) LOST
    ON LOST.authorised_value = deleteditems.itemlost
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'WITHDRAWN'
  ) WITHDRAWN
    ON WITHDRAWN.authorised_value = deleteditems.withdrawn
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'DAMAGE'
  ) DAMAGED
    ON DAMAGED.authorised_value = deleteditems.damaged
WHERE
  action_logs.module = 'CATALOGUING' AND
  action_logs.action LIKE 'DEL%' AND
  action_logs.info = 'item' AND
  If(borrowers.branchcode LIKE ""DONI%"", ""DONI"", If(borrowers.branchcode LIKE ""PH%"", ""PH"", borrowers.branchcode))
    <>
  If(borrowers.branchcode LIKE ""DONI%"", ""DONI"", If(deleteditems.homebranch LIKE ""PH%"", ""PH"", deleteditems.homebranch)) AND
  deleteditems.homebranch <> 'digital'
GROUP BY
  action_logs.action_id,
  deleteditems.itemnumber,
  biblio.biblionumber",,,,,,,,
R.003192,"/*
R.003192

----------

Name: GHW - Patrons with more than 20 unfilled requests
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-03-31 16:43:47
Modified on: 2019-03-31 16:49:33
Date last run: 2022-08-23 15:09:46

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat(""patron"") AS PATRON,
  Count(reserves.reserve_id) AS ACTIVE_UNFILLED_THIS_PATRON,
  Concat(Format(((Count(reserves.reserve_id) / unfilledholds.Count_reserve_id) * 100), 5), ""%"") AS SYSTEM_WIDE_PERCENTAGE,
  unfilledholds.Count_reserve_id AS ACTIVE_UNFILLED_TOTAL,
  borrowerswrequests.Count_borrowernumber AS TOTAL_BORROWERS_WITH_REQUESTS
FROM
  reserves
  JOIN borrowers
    ON reserves.borrowernumber = borrowers.borrowernumber,
  (
    SELECT
      Count(DISTINCT reserves.reserve_id) AS Count_reserve_id
    FROM
      reserves
      JOIN borrowers
        ON reserves.borrowernumber = borrowers.borrowernumber
    WHERE
      borrowers.categorycode <> ""ILL"" AND
      borrowers.categorycode <> ""ASSOCIATE"" AND
      borrowers.categorycode <> ""STAFF"" AND
      reserves.found IS NULL AND
      reserves.suspend = 0
    ORDER BY
      Count_reserve_id DESC
  ) unfilledholds,
  (
    SELECT
      Count(DISTINCT reserves.borrowernumber) AS Count_borrowernumber
    FROM
      reserves
      JOIN borrowers
        ON reserves.borrowernumber = borrowers.borrowernumber
    WHERE
      borrowers.categorycode <> ""ILL"" AND
      borrowers.categorycode <> ""ASSOCIATE"" AND
      borrowers.categorycode <> ""STAFF"" AND
      reserves.found IS NULL AND
      reserves.suspend = 0
  ) borrowerswrequests
WHERE
  borrowers.categorycode <> ""ILL"" AND
  borrowers.categorycode <> ""ASSOCIATE"" AND
  borrowers.categorycode <> ""STAFF"" AND
  reserves.found IS NULL AND
  reserves.suspend = 0
GROUP BY
  reserves.borrowernumber,
  borrowerswrequests.Count_borrowernumber
HAVING
  Count(reserves.reserve_id) > 20
ORDER BY
  ACTIVE_UNFILLED_THIS_PATRON DESC",,,,,,,,
R.003193,"/*
R.003193

----------

Name: GHW - Bibliographic records scheduled for auto-deletion
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-04-08 23:53:17
Modified on: 2019-04-10 09:01:50
Date last run: 2020-11-10 15:57:41

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>List of bibliographic records that will be deleted on Sunday morning.</p>
<ul><li>Shows bibliographic records that currently meet the criteria for deletion</li>
<li>at all locations</li>
<li>grouped by biblionumber</li>
<li>sorted by author and title</li>
<li>contains links to the bibliographic records</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""https://will1410.github.io/next.training/cronjobs/cronjobs.html#empty-bibliographic-record-deletion""  target=""_blank"">Click here</a> for more information</p>
<p></p>
<p>Replaces reports 1061 and 2356</p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?phase=Run+this+report&reports=3193&limit=500""  target=""_blank"">Click here to run in a new window</a></p>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3193"">Click here to download as a csv file</a></p>
</div>

----------
*/

","SELECT
  Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) - 1 DAY) + INTERVAL 1 WEEK AS SCHEDULED_DELETION,
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">LINK</a>') AS LINK,
  biblio.biblionumber,
  biblio.author,
  biblio.title,
  biblio.datecreated,
  lastdeletes.Max_timestamp AS LAST_DELETED_ON,
  borrowers.branchcode AS LAST_DELETED_AT
FROM
  biblio
  LEFT JOIN items
    ON biblio.biblionumber = items.biblionumber
  JOIN biblioitems
    ON biblio.biblionumber = biblioitems.biblionumber
  LEFT JOIN (
    SELECT
      deleteditems.itemnumber,
      deleteditems.biblionumber,
      Max(deleteditems.timestamp) AS Max_timestamp
    FROM
      deleteditems
    GROUP BY
      deleteditems.biblionumber
  ) lastdeletes
    ON lastdeletes.biblionumber = biblio.biblionumber
  LEFT JOIN action_logs
    ON action_logs.object = lastdeletes.itemnumber
  LEFT JOIN borrowers
    ON borrowers.borrowernumber = action_logs.user
WHERE
  items.itemnumber IS NULL AND
  biblioitems.url IS NULL AND
  biblio.datecreated < Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY) AND
  action_logs.action LIKE 'del%'
GROUP BY
  biblio.biblionumber
ORDER BY
  biblio.author,
  biblio.title
  ASC",,,,,,,,
R.003194,"/*
R.003194

----------

Name: GHW - JSON report for in transit locations
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-04-12 15:39:09
Modified on: 2019-04-12 16:35:48
Date last run: 2022-10-03 14:26:41

----------

Public: 0
Expiry: 1

----------



----------
*/

","SELECT
  CONCAT(""<h1>KLE code:  "", branches.branchnotes, ""</h1>"") AS SHIP_TO
FROM
  branches
WHERE
  branches.branchcode LIKE Concat(<<branchcode>>, ""%"")",,,,,,,,
R.003195,"/*
R.003195

----------

Name: GHW - JSON report for in transit locations
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-04-15 14:47:23
Modified on: 2019-06-19 13:27:35
Date last run: 2022-10-03 14:26:24

----------

Public: 0
Expiry: 1

----------



----------
*/

","SELECT
  CONCAT(""<h1>KLE code:  "", branches.branchnotes, ""</h1>"") AS SHIP_TO
FROM
  branches
WHERE
  branches.branchname LIKE Concat(""%"", <<branchname>>, ""%"")",,,,,,,,
R.003197,"/*
R.003197

----------

Name: GHW - Overdue notice delivery history
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-04-23 15:54:55
Modified on: 2019-04-23 17:38:24
Date last run: 2020-12-31 16:33:45

----------

Public: 0
Expiry: 300

----------

A work-in-progress<br />

ODUE1 - goes to most patrons XX days after an item is overdue - XX is set on a library-by-library basis<br />
ODUE2 - goes to most patron 35 days after an item is due - warns patrons that they will be billed for the cost of the item in 10 days<br />
ODUE3 - goes to most patrons 45 days after an item is due - warns them that they are being billed for the cost of the item<br />

ODUE1_ILL - goes to ILL partners XX days after an item is overdue - XX is set on a library-by-library basis<br />
ODUE2_ILL - goes to ILL partners 35 days after an item is overdue<br />
ODUE3_ILL - goes to ILL partners 45 days after an item is overdue<br />

ODUE1_SPEC - goes to non-billed patrons XX days after an item is overdue - XX is set on a library-by-library basis<br />
ODUE2_SPEC - goes to non-billed patrons 35 days after an item is overdue<br />
ODUE3_SPEC - goes to non-billed patrons 45 days after an item is overdue<br />

----------
*/

","SELECT
  Date_Format(message_queue.time_queued, ""%Y.%m.%d - %W"") AS DAY_SENT,
  message_queue.subject,
  message_queue.letter_code AS NOTICE_CODE,
  message_queue.message_transport_type AS DELIVERY_TYPE,
  Count(message_queue.message_id) AS COUNT
FROM
  message_queue
WHERE
  message_queue.subject LIKE Concat(""%"", <<Choose your library|LBRNAME>>,""%"") AND
  message_queue.letter_code LIKE ""OD%"" AND
  message_queue.message_transport_type LIKE <<Choose delivery type|ZTRANSPORT>> AND
  message_queue.status = 'sent'
GROUP BY
  Date_Format(message_queue.time_queued, ""%Y.%m.%d - %W""),
  message_queue.subject,
  message_queue.letter_code,
  message_queue.message_transport_type
ORDER BY
  DAY_SENT DESC,
  message_queue.subject,
  DELIVERY_TYPE",,,,,,,,
R.003199,"/*
R.003199

----------

Name: GHW - Lookup payment details by receipt number
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-05-06 16:00:50
Modified on: 2019-05-06 16:11:32
Date last run: 2022-07-20 13:55:06

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Look up payment and writeoff details by Next Search Catalog receipt number.</p>
<ul><li>Shows payments and writeoffs still logged in the database</li>
<li>grouped by borrowernumber and receipt number</li>
<li>contains a link to the corresponding details page in the patron's fines/fees record</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Details on payments and writeoffs made prior to the addition of the accounts offsets table in 2018 will not include details about which outstanding fees were reconciled by a specific payment.</p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3199&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/members/accountline-details.pl?accountlines_id=', accountlines.accountlines_id, '\"" target=""_blank"">LINK</a>') AS LINK_TO_DETAILS,
  accountlines.borrowernumber,
  borrowers.cardnumber,
  borrowers.surname,
  borrowers.firstname,
  borrowers.branchcode
FROM
  accountlines
  JOIN borrowers
    ON accountlines.borrowernumber = borrowers.borrowernumber
WHERE
  accountlines.accountlines_id = <<Enter Next Search Catalog receipt number>>
GROUP BY
  accountlines.borrowernumber,
  accountlines.accountlines_id",,,,,,,,
R.003200,"/*
R.003200

----------

Name: GHW - Ours/not ours
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-05-07 14:47:46
Modified on: 2019-05-07 16:08:41
Date last run: 2022-04-08 11:58:07

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Counts checkouts and renewals at a library during the previous calendar month based on whether the items circulated were owned by that library or owned by a different library</p>
<ul><li>Counts circulation and renewals in the previous calendar month</li>
<li>at all libraries</li>
<li>grouped and sorted by checkout branchcode</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Items that appear in the statistics table without a checkout branch are counted as NEKLS checkouts.</p>
<p>Items where the owning library cannot be determined will be counted as being owned by NEKLS.</p>
<p>All items owned by Doniphan County Library District are considered Doniphan County Library District items at all of their libraries - i.e. a DONITROY item checked out at DONIELWD counts as a DONIELWD item.</p>
<p>All items owned by Prairie Hills School District are considered Prairie Hills School District items at all of their libraries - i.e. a PHWAC item checked out at PHSHS counts as a PHSHS item.</p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3200&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3200"">Click here to download as a csv file</a></p>
</div>

----------
*/

","SELECT
  branch.branchcode,
  ours_at_ours.CKO_RENEW AS OUR_STUFF_AT_THIS_LIB,
  notours_at_ours.CKO_RENEW AS SOMEONE_ELSES_STUFF_AT_THIS_LIB,
  total.CKO_RENEW AS TOTAL_AT_THIS_LIB
FROM
  (
    SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches
  ) branch
  LEFT JOIN (
    SELECT
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS CKO_BRANCH,
      Count(*) AS CKO_RENEW
    FROM
      statistics
      LEFT JOIN items
        ON items.itemnumber = statistics.itemnumber
      LEFT JOIN deleteditems
        ON deleteditems.itemnumber = statistics.itemnumber
    WHERE
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      If(
        Coalesce(items.homebranch, deleteditems.homebranch) LIKE ""DONI%"",
        ""DONI%"",
        If(
          Coalesce(items.homebranch, deleteditems.homebranch) LIKE ""PH%"",
          ""PH%"",
          If(
            Coalesce(items.homebranch, deleteditems.homebranch) IS NULL,
            ""NEKLS"",
            Coalesce(items.homebranch, deleteditems.homebranch)
          )
        )
      ) = If(
        statistics.branch IS NULL,
        ""NEKLS"",
        If(
          statistics.branch LIKE ""DONI%"",
          ""DONI%"",
          If(
            statistics.branch LIKE ""PH%"",
            ""PH%"",
            statistics.branch
          )
        )
      )
    GROUP BY
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch)
  ) ours_at_ours
    ON ours_at_ours.CKO_BRANCH = branch.branchcode
  LEFT JOIN (
    SELECT
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS CKO_BRANCH,
      Count(*) AS CKO_RENEW
    FROM
      statistics
      LEFT JOIN items
        ON items.itemnumber = statistics.itemnumber
      LEFT JOIN deleteditems
        ON deleteditems.itemnumber = statistics.itemnumber
    WHERE
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      If(
        Coalesce(items.homebranch, deleteditems.homebranch) LIKE ""DONI%"",
        ""DONI%"",
        If(
          Coalesce(items.homebranch, deleteditems.homebranch) LIKE ""PH%"",
          ""PH%"",
          If(
            Coalesce(items.homebranch, deleteditems.homebranch) IS NULL,
            ""NEKLS"",
            Coalesce(items.homebranch, deleteditems.homebranch)
          )
        )
      ) <> If(
        statistics.branch IS NULL,
        ""NEKLS"",
        If(
          statistics.branch LIKE ""DONI%"",
          ""DONI%"",
          If(
            statistics.branch LIKE ""PH%"",
            ""PH%"",
            statistics.branch
          )
        )
      )
    GROUP BY
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch)
  ) notours_at_ours
    ON notours_at_ours.CKO_BRANCH = branch.branchcode
  LEFT JOIN (
    SELECT
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS CKO_BRANCH,
      Count(*) AS CKO_RENEW
    FROM
      statistics
    WHERE
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      (statistics.type = 'issue' OR
        statistics.type = 'renew')
    GROUP BY
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch)
  ) total
    ON total.CKO_BRANCH = branch.branchcode
GROUP BY
  branch.branchcode
ORDER BY
  branch.branchcode",,,,,,,,
R.003201,"/*
R.003201

----------

Name: GHW - Whose stuff checked out at our library
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-05-07 16:10:27
Modified on: 2019-05-07 16:45:02
Date last run: 2020-03-14 01:03:44

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  If(someone_elses_stuff_our_lib.CKO_BRANCH IS NULL, ""-"", someone_elses_stuff_our_lib.CKO_BRANCH) AS CKO_BRANCH,
  cko_branch.branchcode AS OWNING_LIB,
  someone_elses_stuff_our_lib.CKO_RENEW AS CKO_RENEW_COUNT
FROM
  (
    SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches
  ) cko_branch
  LEFT JOIN (
    SELECT
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS CKO_BRANCH,
      Count(*) AS CKO_RENEW,
      If(Coalesce(items.homebranch, deleteditems.homebranch) IS NULL, ""NEKLS"", Coalesce(items.homebranch, deleteditems.homebranch)) AS OWNING_BRANCH
    FROM
      statistics
      LEFT JOIN items
        ON items.itemnumber = statistics.itemnumber
      LEFT JOIN deleteditems
        ON deleteditems.itemnumber = statistics.itemnumber
    WHERE
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) = <<Select your library|branches>>
    GROUP BY
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch),
      If(Coalesce(items.homebranch, deleteditems.homebranch) IS NULL, ""NEKLS"", Coalesce(items.homebranch, deleteditems.homebranch))
  ) someone_elses_stuff_our_lib
    ON someone_elses_stuff_our_lib.OWNING_BRANCH = cko_branch.branchcode
GROUP BY
  cko_branch.branchcode,
  someone_elses_stuff_our_lib.CKO_BRANCH
ORDER BY
  OWNING_LIB",,,,,,,,
R.003202,"/*
R.003202

----------

Name: GHW - Where did our stuff check out last month
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-05-07 16:43:41
Modified on: 2019-05-07 16:45:06
Date last run: 2019-05-27 21:38:44

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  cko_branch.branchcode AS CKO_LIB,
  our_stuff_somewhere_else.OWNING_BRANCH AS OWNING_LIB,
  our_stuff_somewhere_else.CKO_RENEW AS CKO_RENEW_COUNT
FROM
  (
    SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches
  ) cko_branch
  LEFT JOIN (
    SELECT
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS CKO_BRANCH,
      Count(*) AS CKO_RENEW,
      If(Coalesce(items.homebranch, deleteditems.homebranch) IS NULL, ""NEKLS"", Coalesce(items.homebranch, deleteditems.homebranch)) AS OWNING_BRANCH
    FROM
      statistics
      LEFT JOIN items
        ON items.itemnumber = statistics.itemnumber
      LEFT JOIN deleteditems
        ON deleteditems.itemnumber = statistics.itemnumber
    WHERE
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      If(Coalesce(items.homebranch, deleteditems.homebranch) IS NULL, ""NEKLS"", Coalesce(items.homebranch, deleteditems.homebranch)) = <<Select your library|branches>>
    GROUP BY
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch)
  ) our_stuff_somewhere_else
    ON our_stuff_somewhere_else.CKO_BRANCH = cko_branch.branchcode
GROUP BY
  cko_branch.branchcode,
  our_stuff_somewhere_else.OWNING_BRANCH
ORDER BY
  CKO_LIB",,,,,,,,
R.003205,"/*
R.003205

----------

Name: McNaughton
Created by: HCC DIRECTOR

----------

Group: Circulation
     -

Created on: 2019-05-22 13:44:28
Modified on: 2019-05-22 13:44:28
Date last run: 2019-05-22 13:44:33

----------

Public: 0
Expiry: 29

----------



----------
*/

","SELECT  items.barcode,items.issues,items.reserves,items.ccode FROM borrowers LEFT JOIN statistics on (statistics.borrowernumber=borrowers.borrowernumber) LEFT JOIN items on (items.itemnumber = statistics.itemnumber) LEFT JOIN biblioitems on (biblioitems.biblioitemnumber = items.biblioitemnumber)   WHERE items.itype='BOOK'",,,,,,,,
R.003206,"/*
R.003206

----------

Name: GHW -X
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-05-22 23:43:09
Modified on: 2019-05-23 00:18:13
Date last run: 2019-11-08 21:52:08

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branchccodes.branchcode,
  branchccodes.lib,
  all_lm.CKO_RENEW AS CKO_RENW_ALL,
  adult_lm.CKO_RENEW AS CKO_RENEW_ADULT,
  ya_lm.CKO_RENEW AS CKO_RENEW_YA,
  childrens_lm.CKO_RENEW AS CKO_RENEW_CHILDRENS,
  other_lm.CKO_RENEW AS CKO_RENEW_OTHER
FROM
  (
    SELECT
      branches.branchcode,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      branches,
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
    ORDER BY
      branches.branchcode,
      authorised_values.lib
  ) branchccodes
  LEFT JOIN (
    SELECT
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch,
      Count(*) AS CKO_RENEW,
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) AS CCODE
    FROM
      statistics
    WHERE
      (Month(statistics.datetime) = @month := <<Choose month|Month>> COLLATE utf8mb4_unicode_ci) AND
      (Year(statistics.datetime) = @year := <<Choose year|Year>> COLLATE utf8mb4_unicode_ci) AND
      (statistics.type = 'issue' OR
        statistics.type = 'renew')
    GROUP BY
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch),
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode)
  ) all_lm
    ON all_lm.branch = branchccodes.branchcode AND
      all_lm.CCODE = branchccodes.authorised_value
  LEFT JOIN (
    SELECT
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch,
      Count(*) AS CKO_RENEW,
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) AS CCODE
    FROM
      statistics
    WHERE
      Month(statistics.datetime) = 04 AND
      Year(statistics.datetime) = 2019 AND
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      If(
        statistics.location IS NULL,
        ""PROC"",
        If(
          statistics.location = ""LVPLADULT"",
          ""ADULT"",
          If(
            statistics.location = ""LVPLCHILD"",
            ""CHILDRENS"",
            If(
              statistics.location = ""LVPLYA"",
              ""YOUNGADULT"",
              statistics.location
            )
          )
        )
      ) = 'ADULT'
    GROUP BY
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch),
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode)
  ) adult_lm
    ON adult_lm.branch = branchccodes.branchcode AND
      adult_lm.CCODE = branchccodes.authorised_value
  LEFT JOIN (
    SELECT
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch,
      Count(*) AS CKO_RENEW,
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) AS CCODE
    FROM
      statistics
    WHERE
      Month(statistics.datetime) = @month AND
      Year(statistics.datetime) = @year AND
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      If(
        statistics.location IS NULL,
        ""PROC"",
        If(
          statistics.location = ""LVPLADULT"",
          ""ADULT"",
          If(
            statistics.location = ""LVPLCHILD"",
            ""CHILDRENS"",
            If(
              statistics.location = ""LVPLYA"",
              ""YOUNGADULT"",
              statistics.location
            )
          )
        )
      ) = 'YOUNGADULT'
    GROUP BY
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch),
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode)
  ) ya_lm
    ON ya_lm.branch = branchccodes.branchcode AND
      ya_lm.CCODE = branchccodes.authorised_value
  LEFT JOIN (
    SELECT
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch,
      Count(*) AS CKO_RENEW,
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) AS CCODE
    FROM
      statistics
    WHERE
      Month(statistics.datetime) = @month AND
      Year(statistics.datetime) = @year AND
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      If(
        statistics.location IS NULL,
        ""PROC"",
        If(
          statistics.location = ""LVPLADULT"",
          ""ADULT"",
          If(
            statistics.location = ""LVPLCHILD"",
            ""CHILDRENS"",
            If(
              statistics.location = ""LVPLYA"",
              ""YOUNGADULT"",
              statistics.location
            )
          )
        )
      ) = 'CHILDRENS'
    GROUP BY
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch),
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode)
  ) childrens_lm
    ON childrens_lm.branch = branchccodes.branchcode AND
      childrens_lm.CCODE = branchccodes.authorised_value
  LEFT JOIN (
    SELECT
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch,
      Count(*) AS CKO_RENEW,
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) AS CCODE
    FROM
      statistics
    WHERE
    Month(statistics.datetime) = @month AND
    Year(statistics.datetime) = @year AND
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      (If(
        statistics.location IS NULL,
        ""PROC"",
        If(
          statistics.location = ""LVPLADULT"",
          ""ADULT"",
          If(
            statistics.location = ""LVPLCHILD"",
            ""CHILDRENS"",
            If(
              statistics.location = ""LVPLYA"",
              ""YOUNGADULT"",
              statistics.location
            )
          )
        )
      ) = 'CART' OR
        If(
          statistics.location IS NULL,
          ""PROC"",
          If(
            statistics.location = ""LVPLADULT"",
            ""ADULT"",
            If(
              statistics.location = ""LVPLCHILD"",
              ""CHILDRENS"",
              If(
                statistics.location = ""LVPLYA"",
                ""YOUNGADULT"",
                statistics.location
              )
            )
          )
        ) = 'CATALOGING' OR
        If(
          statistics.location IS NULL,
          ""PROC"",
          If(
            statistics.location = ""LVPLADULT"",
            ""ADULT"",
            If(
              statistics.location = ""LVPLCHILD"",
              ""CHILDRENS"",
              If(
                statistics.location = ""LVPLYA"",
                ""YOUNGADULT"",
                statistics.location
              )
            )
          )
        ) = 'PROC')
    GROUP BY
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch),
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode)
  ) other_lm
    ON other_lm.branch = branchccodes.branchcode AND
      other_lm.CCODE = branchccodes.authorised_value
WHERE
  branchccodes.branchcode LIKE <<Choose your library|LBRANCH>>
ORDER BY
  branchccodes.branchcode,
  branchccodes.lib",,,,,,,,
R.003208,"/*
R.003208

----------

Name: GHW - Policy map report
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-05-29 16:21:54
Modified on: 2019-09-24 14:21:50
Date last run: 2022-07-22 16:14:21

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Creates borrower address report for use in Policy Map</p>
<ul><li>Shows current patron addresses</li>
<li>at the library you select</li>
<li>grouped by borrowernumber</li>
<li>sorted by address</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<ul>
  <li>Patrons with an un-mappable address (PO Box, no address, no city, no state) will not appear in the results</li>
  <li>Patron data may not map correctly if parts of the address are spelled incorrectly</li>
  <li>YEAR_LASTSEEN is the year from the last_updated field in the borrowers table - this data has only been available since June of 2019, so it will not start being reliable or valuable until June of 2020</li>
  <li>YEAR_LASTSEEN is updated whenever the patron account is used for checking out materials, renewing materials,  or logging into a SIP enabled system (such as Hoopla, PC Reservation, Libki, or Cybrarian - to name a few)</li>
  <li>STATUS = Active means that the patron has checked out or renewed materials within the previous 12 months</li>
  <li>STATUS = Inactive means that the patron has not checked out or renewed any materials in the previous 12 months</li>
</ul>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3208&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Trim(If(Coalesce(borrowers.address, borrowers.address2) LIKE ""PO%"", borrowers.address2, borrowers.address)) AS address,
  Trim(If(Coalesce(borrowers.address) LIKE ""PO%"", borrowers.address, borrowers.address2)) AS address2,
  borrowers.city,
  borrowers.state,
  If(Trim(borrowers.zipcode) LIKE ""_____-____"", Trim(borrowers.zipcode), (If(Trim(borrowers.zipcode) LIKE ""_____"", Trim(borrowers.zipcode), """"))) AS zipcode,
  Year(borrowers.dateenrolled) AS YEAR_ENROLLED,
  Year(borrowers.dateexpiry) AS YEAR_EXPIRED,
  If(Year(borrowers.lastseen) = 0, """", Year(borrowers.lastseen)) AS YEAR_LASTSEEN,
  borrowers.sex,
  borrowers.categorycode,
  Floor((DateDiff(CurDate(), borrowers.dateofbirth) / 365.25)) AS AGE,
  borrowers.branchcode AS HOMEBRANCH,
  If(Floor((DateDiff(CurDate(), borrowers.dateofbirth) / 365.25)) > 17, ""Adult"", ""Minor"") AS AGE_GROUP,
  If(usecount.Count_datetime > 0, ""Active"", ""Inactive"") AS STATUS
FROM
  borrowers
  LEFT JOIN (
    SELECT
      statistics.borrowernumber,
      Count(statistics.datetime) AS Count_datetime
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      statistics.datetime BETWEEN CurDate() - INTERVAL 1 YEAR AND CurDate() + INTERVAL 1 DAY
    GROUP BY
      statistics.borrowernumber
  ) usecount
    ON usecount.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.categorycode <> 'ILL' AND
  borrowers.categorycode <> 'STAFF' AND
  borrowers.categorycode <> 'INHOUSE' AND
  borrowers.branchcode LIKE <<Choose your library|ZBRAN>> AND
  If(Trim(If(Coalesce(borrowers.address, borrowers.address2) LIKE ""PO%"", borrowers.address2, borrowers.address)) = """", ""X"", (If(borrowers.city = """", ""Y"", (If(borrowers.state = """", ""Z"", ""A""))))) = 'A'
GROUP BY
  If(Floor((DateDiff(CurDate(), borrowers.dateofbirth) / 365.25)) > 17, ""Adult"", ""Minor""),
  If(usecount.Count_datetime > 0, ""Active"", ""Inactive""),
  borrowers.borrowernumber
ORDER BY
  If(Trim(If(Coalesce(borrowers.address, borrowers.address2) LIKE ""PO%"", borrowers.address2, borrowers.address)) = """", ""X"", (If(borrowers.city = """", ""Y"", (If(borrowers.state = """", ""Z"", ""A""))))),
  borrowers.state,
  borrowers.city,
  address,
  address2,
  zipcode,
  HOMEBRANCH,
  borrowers.categorycode",,,,,,,,
R.003209,"/*
R.003209

----------

Name: GHW - Rotating collections - Report 1
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-06-10 11:43:41
Modified on: 2019-06-10 14:57:45
Date last run: 2019-06-10 15:06:34

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Identifies all ""Rotating collection"" groups</p>
<ul><li>Shows all current groups</li>
<li>grouped and sorted by collection ID</li>
<li>links to the print and edit reports for ""Rotating collections""</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3209&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat_WS(
    ""<br />"",
    Concat(""Title: "", collections.colTitle),
    Concat(""Description: "", collections.colDesc)
  ) AS COLLECTION,
  Concat('<a href=\""/cgi-bin/koha/reports/guided_reports.pl?phase=Run+this+report&reports=3210&sql_params=', collections.colId, 'param_name=Enter+collection+ID+number&limit=500"" target=""_blank"">Run report to print</a>') AS PRINT,
  Concat('<a href=\""/cgi-bin/koha/reports/guided_reports.pl?phase=Run+this+report&reports=3211&sql_params=', collections.colId, 'param_name=Enter+collection+ID+number&limit=500"" target=""_blank"">Run report to batch edit</a>') AS EDIT
FROM
  collections
GROUP BY
  collections.colId
ORDER BY
  collections.colId
DESC
  ",,,,,,,,
R.003210,"/*
R.003210

----------

Name: GHW - Rotating collections - Report 2
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-06-10 14:10:55
Modified on: 2019-06-10 15:03:08
Date last run: 2019-07-31 22:34:09

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a list of all items in a specified ""Rotating collection"" in a printable format</p>
<ul><li>Shows all items currently in the collection you select</li>
<li>grouped by collection id, biblionumber, and item number</li>
<li>sorted by the standard Next classification pattern</li>
<li>links</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3210&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  CONCAT_WS(
    ""<br />"",
    CONCAT_WS(
      ""<br />"",
      items.homebranch,
      Concat(itemtypes.description, "" ("", items.itype, "")""),
      ccodes.lib,
      items.itemcallnumber,
      biblio.author,
      Concat_Ws(
        "" "",
        biblio.title,
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]')
      )
    ),
    CONCAT_WS(
      "" "",
      IF(Coalesce(nfl.lib, "" "") = "" "", """", ""<br /><big><b>Not for loan</b></big>""),
      IF(Coalesce(damageds.lib, "" "") = "" "", """", ""<br /><big><b>Damaged</b></big>""),
      IF(Coalesce(losts.lib, "" "") = "" "", """", ""<br /><big><b>Lost or missing</b></big>""),
      IF(Coalesce(withdrawns.lib, "" "") = "" "", """", ""<br /><big><b>Withdrawn</b></big>""),
      IF(Coalesce(items.onloan, """") <> """", ""<br /><big><b>CHECKED OUT</b></big>"", """")
    ),
    ""<br />"",
    Concat_Ws('<br />', (Concat('<img src=""/cgi-bin/koha/svc/barcode?barcode=', '*', Upper(items.barcode), '*', '&type=Code39""></img>')), items.barcode)
  ) AS ITEMS_IN_COLLECTION
FROM
  biblio
  JOIN biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber
  JOIN items
    ON items.biblionumber = biblio.biblionumber
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
    GROUP BY
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
  ) ccodes
    ON items.ccode = ccodes.authorised_value
  JOIN biblioitems
    ON biblioitems.biblionumber = biblio.biblionumber AND
      items.biblioitemnumber = biblioitems.biblioitemnumber
  INNER JOIN itemtypes
    ON items.itype = itemtypes.itemtype
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'NOT_LOAN'
  ) nfl
    ON nfl.authorised_value = items.notforloan
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'DAMAGED'
  ) damageds
    ON damageds.authorised_value = items.damaged
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOST'
  ) losts
    ON losts.authorised_value = items.itemlost
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'WITHDRAWN'
  ) withdrawns
    ON withdrawns.authorised_value = items.withdrawn
  JOIN collections_tracking
    ON collections_tracking.itemnumber = items.itemnumber
  JOIN collections
    ON collections.colId = collections_tracking.colId
WHERE
  collections.colId = <<Enter collection ID number>>
GROUP BY
  collections.colId,
  biblio.biblionumber,
  items.itemnumber
ORDER BY
  items.homebranch,
  items.itype,
  ccodes.lib,
  items.itemcallnumber,
  biblio.author,
  biblio.title",,,,,,,,
R.003211,"/*
R.003211

----------

Name: GHW - Rotating collections - Report 3
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-06-10 14:24:32
Modified on: 2019-06-10 15:05:06
Date last run: 2019-06-10 15:06:37

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Items in a specific ""Rotating collections"" group for editing</p>
<ul><li>Shows all items in the group you specify</li>
<li>grouped by collection id, biblionumber, and item number</li>
<li>sorted by the standard Next classification pattern</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Once you no longer need a group, all items must be removed from the group before it can be deleted.  If you accidentally delete a group before removing the items from the group, contact Nexthelp@nekls.org for assistance.</p>
<p></p>
<p id=""rquickopen""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3211&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  CONCAT(""Collection: "", collections.colTitle, ""<br />ID: "", collections.colId) AS COLLECTION,
  CONCAT_WS(
    ""<br />"", 
    CONCAT_WS(
      ""<br />"",
      items.homebranch,
      Concat(itemtypes.description, "" ("", items.itype, "")""),
      ccodes.lib,
      items.itemcallnumber,
      biblio.author,
      Concat_Ws(
        "" "",
        biblio.title,
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]')
      )
    ),
    CONCAT_WS(
      "" "",
      IF(Coalesce(nfl.lib, "" "") = "" "", """", ""<br /><big><b>Not for loan</b></big>""),
      IF(Coalesce(damageds.lib, "" "") = "" "", """", ""<br /><big><b>Damaged</b></big>""),
      IF(Coalesce(losts.lib, "" "") = "" "", """", ""<br /><big><b>Lost or missing</b></big>""),
      IF(Coalesce(withdrawns.lib, "" "") = "" "", """", ""<br /><big><b>Withdrawn</b></big>""),
      IF(Coalesce(items.onloan, """") <> """", ""<br /><big><b>CHECKED OUT</b></big>"", """")
    ),
    ""<br />"",
    Concat_Ws('<br />', (Concat('<img src=""/cgi-bin/koha/svc/barcode?barcode=', '*', Upper(items.barcode), '*', '&type=Code39""></img>')), items.barcode)
  ) AS ITEMS_IN_COLLECTION,
  items.itemnumber
FROM
  biblio
  JOIN biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber
  JOIN items
    ON items.biblionumber = biblio.biblionumber
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
    GROUP BY
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
  ) ccodes
    ON items.ccode = ccodes.authorised_value
  JOIN biblioitems
    ON biblioitems.biblionumber = biblio.biblionumber AND
      items.biblioitemnumber = biblioitems.biblioitemnumber
  INNER JOIN itemtypes
    ON items.itype = itemtypes.itemtype
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'NOT_LOAN'
  ) nfl
    ON nfl.authorised_value = items.notforloan
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'DAMAGED'
  ) damageds
    ON damageds.authorised_value = items.damaged
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOST'
  ) losts
    ON losts.authorised_value = items.itemlost
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'WITHDRAWN'
  ) withdrawns
    ON withdrawns.authorised_value = items.withdrawn
  JOIN collections_tracking
    ON collections_tracking.itemnumber = items.itemnumber
  JOIN collections
    ON collections.colId = collections_tracking.colId
WHERE
  collections.colId = <<Enter collection ID number>>
GROUP BY
  collections.colId,
  biblio.biblionumber,
  items.itemnumber
ORDER BY
  items.homebranch,
  items.itype,
  ccodes.lib,
  items.itemcallnumber,
  biblio.author,
  biblio.title",,,,,,,,
R.003212,"/*
R.003212

----------

Name: GHW - Rotating collections - Report 4 ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-06-10 14:42:31
Modified on: 2019-06-10 14:53:44
Date last run: 2019-06-10 14:44:56

----------

Public: 0
Expiry: 300

----------

List of problematic URLs

----------
*/

","SELECT
  Concat(""https://staff.nextkansas.org/cgi-bin/koha/rotating_collections/addItems.pl?colId="", collections_tracking.colId, ""&barcode="", items.barcode, ""&removeItem=1&action=addItem"") AS URLS
FROM
  collections_tracking
  JOIN items
    ON items.itemnumber = collections_tracking.itemnumber
WHERE
  collections_tracking.colId = <<Enter collection ID number>>",,,,,,,,
R.003217,"/*
R.003217

----------

Name: GHW - Duplicate card helper
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-07-12 00:20:17
Modified on: 2019-07-22 11:39:15
Date last run: 2022-02-08 11:53:20

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat('&lt;br /&gt;POSSIBLE DUPLICATE PATRON&lt;br /&gt;There are two patrons with this name and birth date.  This account (', pat1.cardnumber, ' - ',  pat1.branchcode, ') and another with card number  &lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', pat2.borrowernumber, '"" target=""_blank""&gt;', pat2.cardnumber, ' - ',  pat2.branchcode, '.&lt;/a&gt;&lt;br /&gt;Please check with the patron to determine which account is the active account and', ' d', 'elete the inactive account.&lt;br /&gt;GHW - NEKLS&lt;br /&gt;') AS CARDONE,
  Concat('&lt;br /&gt;POSSIBLE DUPLICATE PATRON&lt;br /&gt;There are two patrons with this name and birth date.  This account (', pat2.cardnumber, ' - ',  pat2.branchcode, ') and another with card number  &lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', pat1.borrowernumber, '"" target=""_blank""&gt;', pat1.cardnumber, ' - ',  pat1.branchcode, '.&lt;/a&gt;&lt;br /&gt;Please check with the patron to determine which account is the active account and', ' d', 'elete the inactive account.&lt;br /&gt;GHW - NEKLS&lt;br /&gt;') AS CARDTWO
FROM
  borrowers pat1,
  borrowers pat2
WHERE
  pat1.cardnumber = <<Card one>> AND
  pat2.cardnumber = <<Card two>>",,,,,,,,
R.003218,"/*
R.003218

----------

Name: GHW - VIDEO Problem item/record
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-07-14 23:26:46
Modified on: 2019-07-15 17:32:40
Date last run: 2020-08-25 16:02:03

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT Concat_Ws(""<br />"",
  ""nexthelp@nekls.org<br />"",
  branches.branchemail,
  Concat(""<br />DVD/BLU-RAY/TV SERIES Item record/bibliogrphic record problem - "", items.biblionumber, ""<br /><br />Hello at "", items.homebranch, "",<br />""),
  ""There is an item owned by your library and the details for the item record are problematic.  The details are as follow:<br />"",
  Concat(""Barcode: "", items.barcode),
  Concat(""Homebranch: "", items.homebranch),
  Concat(""Location: "", Coalesce(locs.lib, ""-"")),
  Concat(""Item type: "", Coalesce(Concat(itemtypes.description, "" ("", items.itype, "")""), ""-"")),
  Concat(""Collection code: "", ccodes.lib),
  Concat(""Call number: "", Coalesce(items.itemcallnumber, ""-"")),
  Concat(""Author: "", biblio.author),
  Concat(""Title: "", Concat_Ws("" "",
    biblio.title,
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""c""]'))
  ),
  ""<br /><br />The problems with this item are:<br />"", ""<ul>"",
  Concat(""<li>The item type on your item ("", itemtypes.description, "") doesn't match the item types of the other items on this bibliographic record.</li><br />""),
  Concat(""<li>The item type on your item ("", itemtypes.description, "") is for a physical item, but the bibliographic record you've attached your item to is for an electronic edition.</li><br />""),
  Concat(""<li>The item type on your item ("", itemtypes.description, "") doesn't match many of the descriptive elements on this bibliographic record.</li><br />""),
  Concat(""<li>The collection code on your item ("", ccodes.lib, "") isn't one of the collection codes that normally go with the item type on this item ("", itemtypes.description, "").</li><br />""),
  Concat(
    ""<li>The collection code ("",
    ccodes.lib,
    "") and item type ("",
    itemtypes.description,
    "") on your item doesn't match the description of the item in the 300 field of the bibliographic record:"",
    Concat(
      ""<br />300$a: "",
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""300""]/subfield[@code=""a""]'),
      ""<br />300$b: "",
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""300""]/subfield[@code=""b""]'),
      ""<br />300$c: "",
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""300""]/subfield[@code=""c""]')
    ),
    ""</li><br />""
  ),
  ""</ul>"", 
  Concat(""<br />Could you take a look at this item and u"",""pdate the item record if necessary.  If you need any help with this issue, please respond with the item barcode number from this item, the UPC code from the the item, plus the full title of the item as it appears on the cover or on the disc itself.  Also, if you need help, if you could actually take a photo of the cover of this item and send that in, although not necessary, that would be a big help too.<br /><br />Thanks,"")
) AS INFO
FROM biblio
JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
JOIN items ON items.biblionumber = biblio.biblionumber
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'CCODE'
   GROUP BY authorised_values.category,
            authorised_values.authorised_value,
            authorised_values.lib ) ccodes ON items.ccode = ccodes.authorised_value
JOIN biblioitems ON biblioitems.biblionumber = biblio.biblionumber
AND items.biblioitemnumber = biblioitems.biblioitemnumber
JOIN itemtypes ON items.itype = itemtypes.itemtype
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'NOT_LOAN' ) nfl ON nfl.authorised_value = items.notforloan
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'DAMAGED' ) damageds ON damageds.authorised_value = items.damaged
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'LOST' ) losts ON losts.authorised_value = items.itemlost
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'WITHDRAWN' ) withdrawns ON withdrawns.authorised_value = items.withdrawn
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'LOC' ) locs ON locs.authorised_value = items.location
INNER JOIN branches ON branches.branchcode = items.homebranch
WHERE items.barcode = <<Enter item barcode>>
GROUP BY
  biblio.biblionumber,
  items.itemnumber,
  locs.lib,
  branches.branchemail
ORDER BY
  items.homebranch,
  items.location,
  items.itype,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title",,,,,,,,
R.003219,"/*
R.003219

----------

Name: GHW - VIDEOGAME item/bibliographic record problem
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-07-15 11:02:28
Modified on: 2019-07-15 17:25:00
Date last run: 2020-10-07 09:19:39

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT Concat_Ws(""<br />"",
  ""nexthelp@nekls.org<br />"",
  branches.branchemail,
  Concat(""<br />VIDEOGAME Item record/bibliogrphic record problem - "", items.biblionumber, ""<br /><br />Hello at "", items.homebranch, "",<br />""),
  ""There is an item owned by your library and the details for the item record are problematic.  The details are as follow:<br />"",
  Concat(""Barcode: "", items.barcode),
  Concat(""Homebranch: "", items.homebranch),
  Concat(""Location: "", Coalesce(locs.lib, ""-"")),
  Concat(""Item type: "", Coalesce(Concat(itemtypes.description, "" ("", items.itype, "")""), ""-"")),
  Concat(""Collection code: "", ccodes.lib),
  Concat(""Call number: "", Coalesce(items.itemcallnumber, ""-"")),
  Concat(""Author: "", biblio.author),
  Concat(""Title: "", Concat_Ws("" "",
    biblio.title,
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""c""]'))
  ),
  ""<br /><br />The problems with this item are:<br />"", ""<ul>"",
  Concat(""<li>The item type on your item ("", itemtypes.description, "") doesn't match the item types of the other items on this bibliographic record.</li><br />""),
  Concat(""<li>The item type on your item ("", itemtypes.description, "") is for a physical item, but the bibliographic record you've attached your item to is for an electronic edition.</li><br />""),
  Concat(""<li>The item type on your item ("", itemtypes.description, "") doesn't match many of the descriptive elements on this bibliographic record.</li><br />""),
  Concat(""<li>The collection code on your item ("", ccodes.lib, "") doesn't match many of the descriptive elements on this bibliographic record.</li><br />""),
  Concat(""<li>The collection code on your item ("", ccodes.lib, "") isn't one of the collection codes that normally go with the item type on this item ("", itemtypes.description, "").</li><br />""),
  Concat(
    ""<li>The collection code ("",
    ccodes.lib,
    "") on your item doesn't match the system requirements for this item listed in the 538 field of the bibliographic record:"",
    Concat(
      ""<br />538$a: "",
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""538""]/subfield[@code=""a""]')
    ),
    ""</li><br />""
  ),
                              
  Concat(
    ""<li>The collection code ("",
    ccodes.lib,
    "") on your item doesn't match the edition statement for this item listed in the 250 field of the bibliographic record:"",
    Concat(
      ""<br />250$a: "",
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""250""]/subfield[@code=""a""]')
    ),
    ""</li><br />""
  ),
                              
  Concat(
    ""<li>The collection code ("",
    ccodes.lib,
    "") and item type ("",
    itemtypes.description,
    "") on your item doesn't match the description of the item in the 300 field of the bibliographic record:"",
    Concat(
      ""<br />300$a: "",
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""300""]/subfield[@code=""a""]'),
      ""<br />300$b: "",
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""300""]/subfield[@code=""b""]'),
      ""<br />300$c: "",
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""300""]/subfield[@code=""c""]')
    ),
    ""</li><br />""
  ),
  ""</ul>"", 
  Concat(""<br />Could you take a look at this item and bring the record up to date as needed.  If, for example, the item record is incorrect, you could just modify the record.  Or, if this item belongs on a different bibliographic record, could you move it to a different record or import a better bibliographic record and attach this item to that record?  If you need any help with this issue, please respond with the item barcode number from this item, the UPC code from the the item, plus the full title of the item as it appears on the cover or on the video game itself.  Also, if you need help, if you could actually take a photo of the cover of this item and send that in, although not necessary, that would be a big help too.<br /><br />Thanks,"")
) AS INFO
FROM biblio
JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
JOIN items ON items.biblionumber = biblio.biblionumber
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'CCODE'
   GROUP BY authorised_values.category,
            authorised_values.authorised_value,
            authorised_values.lib ) ccodes ON items.ccode = ccodes.authorised_value
JOIN biblioitems ON biblioitems.biblionumber = biblio.biblionumber
AND items.biblioitemnumber = biblioitems.biblioitemnumber
JOIN itemtypes ON items.itype = itemtypes.itemtype
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'NOT_LOAN' ) nfl ON nfl.authorised_value = items.notforloan
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'DAMAGED' ) damageds ON damageds.authorised_value = items.damaged
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'LOST' ) losts ON losts.authorised_value = items.itemlost
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'WITHDRAWN' ) withdrawns ON withdrawns.authorised_value = items.withdrawn
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'LOC' ) locs ON locs.authorised_value = items.location
INNER JOIN branches ON branches.branchcode = items.homebranch
WHERE items.barcode = <<Enter item barcode>>
GROUP BY
  biblio.biblionumber,
  items.itemnumber,
  locs.lib,
  branches.branchemail
ORDER BY
  items.homebranch,
  items.location,
  items.itype,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title",,,,,,,,
R.003220,"/*
R.003220

----------

Name: GHW - AUDIOBOOK item/bibliographic record problem
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-07-15 22:41:45
Modified on: 2019-07-15 22:52:01
Date last run: 2021-12-26 19:30:14

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT Concat_Ws(""<br />"",
  ""nexthelp@nekls.org<br />"",
  branches.branchemail,
  Concat(""<br />AUDIOBOOK Item record/bibliogrphic record problem - "", items.biblionumber, ""<br /><br />Hello at "", items.homebranch, "",<br />""),
  ""There is an item owned by your library and the details for the item record are problematic.  The details are as follow:<br />"",
  Concat(""Barcode: "", items.barcode),
  Concat(""Homebranch: "", items.homebranch),
  Concat(""Location: "", Coalesce(locs.lib, ""-"")),
  Concat(""Item type: "", Coalesce(Concat(itemtypes.description, "" ("", items.itype, "")""), ""-"")),
  Concat(""Collection code: "", ccodes.lib),
  Concat(""Call number: "", Coalesce(items.itemcallnumber, ""-"")),
  Concat(""Author: "", biblio.author),
  Concat(""Title: "", Concat_Ws("" "",
    biblio.title,
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""c""]'))
  ),
  ""<br /><br />The problems with this item are:<br />"", ""<ul>"",
  Concat(""<li>The item type on your item ("", itemtypes.description, "") doesn't match the item types of the other items on this bibliographic record.</li><br />""),
  Concat(""<li>The item type on your item ("", itemtypes.description, "") is for a physical item, but the bibliographic record you've attached your item to is for an electronic edition.</li><br />""),
  Concat(""<li>The item type on your item ("", itemtypes.description, "") doesn't match many of the descriptive elements on this bibliographic record.</li><br />""),
  Concat(""<li>The collection code on your item ("", ccodes.lib, "") doesn't match many of the descriptive elements on this bibliographic record.</li><br />""),
  Concat(""<li>The collection code on your item ("", ccodes.lib, "") isn't one of the collection codes that normally go with the item type on this item ("", itemtypes.description, "").</li><br />""),
  Concat(
    ""<li>The collection code ("",
    ccodes.lib,
    "") on your item doesn't match the system requirements for this item listed in the 538 field of the bibliographic record:"",
    Concat(
      ""<br />538$a: "",
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""538""]/subfield[@code=""a""]')
    ),
    ""</li><br />""
  ),
                              
  Concat(
    ""<li>The collection code ("",
    ccodes.lib,
    "") on your item doesn't match the edition statement for this item listed in the 250 field of the bibliographic record:"",
    Concat(
      ""<br />250$a: "",
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""250""]/subfield[@code=""a""]')
    ),
    ""</li><br />""
  ),
                              
  Concat(
    ""<li>The collection code ("",
    ccodes.lib,
    "") and item type ("",
    itemtypes.description,
    "") on your item doesn't match the description of the item in the 300 field of the bibliographic record:"",
    Concat(
      ""<br />300$a: "",
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""300""]/subfield[@code=""a""]'),
      ""<br />300$b: "",
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""300""]/subfield[@code=""b""]'),
      ""<br />300$c: "",
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""300""]/subfield[@code=""c""]')
    ),
    ""</li><br />""
  ),
  ""</ul>"", 
  Concat(""<br />Could you take a look at this item and bring the record up to date as needed.  If, for example, the item record is incorrect, you could just modify the record.  Or, if this item belongs on a different bibliographic record, could you move it to a different record or import a better bibliographic record and attach this item to that record?  If you need any help with this issue, please respond with the item barcode number from this item, the UPC code from the the item, plus the full title of the item as it appears on the cover or on the video game itself.  Also, if you need help, if you could actually take a photo of the cover of this item and send that in, although not necessary, that would be a big help too.<br /><br />Thanks,"")
) AS INFO
FROM biblio
JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
JOIN items ON items.biblionumber = biblio.biblionumber
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'CCODE'
   GROUP BY authorised_values.category,
            authorised_values.authorised_value,
            authorised_values.lib ) ccodes ON items.ccode = ccodes.authorised_value
JOIN biblioitems ON biblioitems.biblionumber = biblio.biblionumber
AND items.biblioitemnumber = biblioitems.biblioitemnumber
JOIN itemtypes ON items.itype = itemtypes.itemtype
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'NOT_LOAN' ) nfl ON nfl.authorised_value = items.notforloan
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'DAMAGED' ) damageds ON damageds.authorised_value = items.damaged
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'LOST' ) losts ON losts.authorised_value = items.itemlost
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'WITHDRAWN' ) withdrawns ON withdrawns.authorised_value = items.withdrawn
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'LOC' ) locs ON locs.authorised_value = items.location
INNER JOIN branches ON branches.branchcode = items.homebranch
WHERE items.barcode = <<Enter item barcode>>
GROUP BY
  biblio.biblionumber,
  items.itemnumber,
  locs.lib,
  branches.branchemail
ORDER BY
  items.homebranch,
  items.location,
  items.itype,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title",,,,,,,,
R.003224,"/*
R.003224

----------

Name: GHW - List / virtualshelf report 001 - Display public lists by title
Created by: George H Williams

----------

Group: Lists Module
     -

Created on: 2019-07-17 09:09:08
Modified on: 2019-11-07 14:29:23
Date last run: 2022-03-29 14:05:06

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class='noprint'>
<p>Generates a list of public lists then allows you to run further reports on the results</p>
<ul><li>Displays current public lists.</li>
<li>displays all public lists with search terms you specify (enter a % to display all lists)</li>
<li>grouped by date created, list name, list number</li>
<li>sorted by list name</li>
<li>links to the Staff client and OPAC pages for the list; links to reports:
<ul>
<li>3228 (Display list titles with links to bibliographic records)</li>
<li>3227 (Display list titles with call numbers at a specific library)</li>
<li>3226 (Display author/title information for a list - for printing)</li>
<li>3279 (Export list to spreadsheet()</li>
</ul>
</li><br />
</ul>
<p><ins>Notes:</ins></p>
<p></p>
<p>This report is the master report for public lists.</p>
<p></p>
<p>Replaces the following reports:</p>
<ul>
<li>2810 - GHW - Public lists with items</li>
<li>2811 - GHW - List of lists</li>
<li>3020 - GHW - List of lists</li>
</ul>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3224&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat_Ws('<br />',
    Concat(
      '<a href=\""/cgi-bin/koha/virtualshelves/shelves.pl?op=view&shelfnumber=',
      virtualshelves.shelfnumber,
      ' \"" target=""_blank"">Staff</a><br />'),
    Concat(
      '<a href=\""https://nextkansas.org/cgi-bin/koha/opac-shelves.pl?op=view&shelfnumber=',
      virtualshelves.shelfnumber,
      ' \"" target=""_blank"">OPAC</a>')
  ) AS LINKS,
  Concat_Ws('<br />',
    Concat('List name: ', virtualshelves.shelfname),
    Concat('List ID#: ', virtualshelves.shelfnumber),
    Concat('Title count: ', Count(virtualshelfcontents.biblionumber))
  ) AS LIST_INFO,
  virtualshelves.created_on,
    Concat(
      '<a href=\""/cgi-bin/koha/reports/guided_reports.pl?phase=Run+this+report&reports=3228&sql_params=',
      virtualshelves.shelfnumber,
      '&param_name=Enter+list+number&limit=1000 \"" target=""_blank"">Run report 3228<br />Display list titles with links to bibliographic records</a>'
    ) AS LINKS_TO_TITLES,
    Concat(
      '<a href=\""/cgi-bin/koha/reports/guided_reports.pl?phase=Run+this+report&reports=3227&sql_params=%25&sql_params=',
      virtualshelves.shelfnumber,
      '&param_name=Choose+your+branch%7CLBRANCH&param_name=Enter+a+list+ID+number&limit=1000 \"" target=""_blank"">Run report 3227<br />Display list titles with call numbers at a specific library</a>'
    ) AS CALL_NUMBER_REPORT,
    Concat(
      '<a href=\""/cgi-bin/koha/reports/guided_reports.pl?phase=Run+this+report&reports=3226&sql_params=',
      virtualshelves.shelfnumber,
      '&param_name=Enter+list+ID+number&limit=1000 \"" target=""_blank"">Run report 3226<br />Display author/title information for a list - for printing</a>'
    ) AS REPORT_TO_PRINT,
    Concat(
      '<a href=\""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3279&sql_params=',
      virtualshelves.shelfnumber,
      '&sql_params=%25&param_name=Enter%20list%20number&param_name=Choose%20your%20library%7CLBRANCH \"" target=""_blank"">Download report 3279<br />Export list to spreadsheet</a>'
    ) AS EXPORT_TO_SPREADSHEET
FROM
  virtualshelves
  JOIN virtualshelfcontents
    ON virtualshelfcontents.shelfnumber = virtualshelves.shelfnumber
WHERE
  virtualshelves.category = '2'AND
  virtualshelves.shelfname LIKE Concat(""%"", <<Enter part of a list name or a % symbol>>, ""%"")
GROUP BY
  virtualshelves.created_on,
  virtualshelves.shelfname,
  virtualshelves.shelfnumber
ORDER BY
  virtualshelves.shelfname",,,,,,,,
R.003225,"/*
R.003225

----------

Name: GHW - List / virtualshelf report 002 - Display all lists (public or private) owned by a patron
Created by: George H Williams

----------

Group: Lists Module
     -

Created on: 2019-07-17 09:09:24
Modified on: 2019-11-07 14:34:56
Date last run: 2022-03-29 14:06:56

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class='noprint'>
<p>Generates a report of all lists owned by the borrower you specify and allows you to run further reports on those lists</p>
<ul><li>Displays lists currently in the system - public or private</li>
<li>displays lists created by the borrower you specify</li>
<li>grouped by date created, list name, and list id number</li>
<li>sorted by list name</li>
<li>links to the Staff client and OPAC pages for the list; links to reports:
<ul>
<li>3228 (Display list titles with links to bibliographic records)</li>
<li>3227 (Display list titles with call numbers at a specific library)</li>
<li>3226 (Display author/title information for a list - for printing)</li>
<li>3279 (Export list to spreadsheet()</li>
</ul>
</li><br />
</ul>
<p><ins>Notes:</ins></p>
<p></p>
<p>This report is the master report for private lists.</p>
<p></p>
<p>Allows staff to run reports on private lists provided they have the patron's library card number.</p>
<p></p>
<p>Replaces the following reports:</p>
<ul>
<li>2810 - GHW - Public lists with items</li>
<li>3020 - GHW - List of lists</li>
</ul>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3225&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  IF(
    virtualshelves.category = 1,
    ""Private list"",
    Concat_Ws('<br />',
      Concat(
        '<a href=\""/cgi-bin/koha/virtualshelves/shelves.pl?op=view&shelfnumber=',
        virtualshelves.shelfnumber,
        ' \"" target=""_blank"">Staff</a>'),
      Concat(
        '<a href=\""https://nextkansas.org/cgi-bin/koha/opac-shelves.pl?op=view&shelfnumber=',
        virtualshelves.shelfnumber,
        ' \"" target=""_blank"">OPAC</a>')
    )
  ) AS LINK,
  Concat_Ws('<br />',
    Concat('List name: ', virtualshelves.shelfname),
    Concat('List ID#: ', virtualshelves.shelfnumber),
    Concat('Title count: ', Count(virtualshelfcontents.biblionumber))
  ) AS LIST_INFO,
  virtualshelves.created_on,
    Concat(
      '<a href=\""/cgi-bin/koha/reports/guided_reports.pl?phase=Run+this+report&reports=3228&sql_params=',
      virtualshelves.shelfnumber,
      '&param_name=Enter+list+number&limit=1000 \"" target=""_blank"">Run report 3228<br />Display list titles with links to bibliographic records</a>'
    ) AS LINKS_TO_TITLES,
    Concat(
      '<a href=\""/cgi-bin/koha/reports/guided_reports.pl?phase=Run+this+report&reports=3227&sql_params=%25&sql_params=',
      virtualshelves.shelfnumber,
      '&param_name=Choose+your+branch%7CLBRANCH&param_name=Enter+a+list+ID+number&limit=1000 \"" target=""_blank"">Run report 3227<br />Display list titles with call numbers at a specific library</a>'
    ) AS CALL_NUMBER_REPORT,
    Concat(
      '<a href=\""/cgi-bin/koha/reports/guided_reports.pl?phase=Run+this+report&reports=3226&sql_params=',
      virtualshelves.shelfnumber,
      '&param_name=Enter+list+ID+number&limit=1000 \"" target=""_blank"">Run report 3226<br />Display author/title information for a list - for printing</a>'
    ) AS REPORT_TO_PRINT,
    Concat(
      '<a href=\""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3279&sql_params=',
      virtualshelves.shelfnumber,
      '&sql_params=%25&param_name=Enter%20list%20number&param_name=Choose%20your%20library%7CLBRANCH \"" target=""_blank"">Download report 3279<br />Export list to spreadsheet</a>'
    ) AS EXPORT_TO_SPREADSHEET
FROM
  virtualshelves
  JOIN virtualshelfcontents
    ON virtualshelfcontents.shelfnumber = virtualshelves.shelfnumber
  JOIN borrowers
    ON virtualshelves.owner = borrowers.borrowernumber
WHERE
  borrowers.cardnumber LIKE <<Enter patron barcode number>>
GROUP BY
  virtualshelves.created_on,
  virtualshelves.shelfname,
  virtualshelves.shelfnumber
ORDER BY
  virtualshelves.shelfname",,,,,,,,
R.003226,"/*
R.003226

----------

Name: GHW - List / virtualshelf report 003 - Display author/title information for a list - for printing
Created by: George H Williams

----------

Group: Lists Module
     -

Created on: 2019-07-17 09:09:51
Modified on: 2019-11-05 10:52:52
Date last run: 2022-03-29 14:07:50

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class='noprint'>
<p>Creates a simple printable list of titles and authors from a list</p>
<ul><li>Displays titles and authors currently on a list</li>
<li>you need to specify the list number (see below for more informaiton)</li>
<li>grouped by biblio number</li>
<li>sorted by author and title</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>To determine the list id number, look at the URL for the list and take the number off of the end of the URL.  For example, the list at<br />
https://staff.nextkansas.org/cgi-bin/koha/virtualshelves/shelves.pl?op=view&shelfnumber=6003<br />
would be list number 6003.</p>
<p></p>
<p>Can be accessed by running reports 3224 or 3225 and clicking on the link in the ""LINKS_TO_TITLES"" column</p>
<p></p>
<p>Replaces report:</p>
<ul>
<li>1746 - Shelf List from a Private List</li>
<li>3021 - GHW - Print a list - variant</li>
<li>3063 - GHW - Print list by ID number</li>
</ul>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3226&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat(""<span style='font-size: 125%;'><span style='float: left'><ins>Title:</ins> "", Coalesce(biblio.title, '--'), ""</span><span style='float: right'><ins>Author:</ins> "", Coalesce(biblio.author, '--'), ""</span></span>"") AS TITLE_AUTHOR
FROM
  virtualshelfcontents
  LEFT JOIN biblio ON virtualshelfcontents.biblionumber = biblio.biblionumber
WHERE
  virtualshelfcontents.shelfnumber = <<Enter list ID number>>
GROUP BY
  biblio.biblionumber
ORDER BY
  biblio.author,
  biblio.title",,,,,,,,
R.003227,"/*
R.003227

----------

Name: GHW - List / virtualshelf report 004 - Display list titles with call numbers at a specific library
Created by: George H Williams

----------

Group: Lists Module
     -

Created on: 2019-07-17 09:10:07
Modified on: 2019-11-05 10:52:50
Date last run: 2022-03-29 14:05:28

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class='noprint'>
<p>Generates a printable shelf list with call numbers at a specific branch based on a list</p>
<ul><li>Displays titles currently on the list you specify</li>
<li>at the library you specify</li>
<li>grouped by title and list id number</li>
<li>sorted by standard Next Search Catalog classification, author, and title</li>
<li>links to the actual list</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>To determine the list id number, look at the URL for the list and take the number off of the end of the URL. For example, the list at<br />
https://staff.nextkansas.org/cgi-bin/koha/virtualshelves/shelves.pl?op=view&shelfnumber=6003<br />
would be list number 6003.</p>
<p></p>
<p>Can be accessed by running reports 3224 or 3225 and clicking on the link in the ""CALL_NUMBER_REPORT"" column</p>
<p></p>
<p>Replaces the following reports:</p>
<ul>
<li>1746 - Shelf List from a Private List</li>
<li>2049 - Printed list of books from a list</li>
</ul>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3227&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>



----------
*/

","SELECT
  IF(
    virtualshelves.category = 1,
    ""Private list"",
    Concat(
      '<a href=\""/cgi-bin/koha/virtualshelves/shelves.pl?op=view&shelfnumber=',
      virtualshelves.shelfnumber,
      ' \"" target=""_blank"">Link</a>'
    )
  ) AS LINK,
  Concat(
    ""Name: "",
    virtualshelves.shelfname,
    ""<br /><br />Number: "",
    virtualshelves.shelfnumber
  ) AS LIST_NAME_NUMBER,
  Coalesce(
    Concat_Ws("" "",
      Concat_Ws(
        """",
        IF(
          Length(biblio.title) > 40,
          Concat(Left(biblio.title, 40), "". . . ""),
          biblio.title
        ),
        ""<br />"",
        If(
          ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]') = """",
          """",
          Concat(ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'), ""<br />"")
        ),
        If(
          ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]') = """",
          """",
          Concat(ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ""<br />"")
        ),
        If(
          ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]') = """",
          """",
          Concat(ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'), ""<br />"")
        ),
        If(
          ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]') = """",
          """",
          If(
            LENGTH(ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]')) > 40,
            Concat(LEFT(ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), 40), "" . . .<br />""),
            Concat(ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), ""<br />"")
          )
        ),
        biblio.author
      )
    ),
    ""Title deleted""
  ) AS TITLE_INFO,
  GROUP_CONCAT(
    Concat_Ws("""",
      itemss.homebranch,
      "" / "",
      If(itemss.location IS NULL, """", Concat(itemss.location, "" / "")),
      itemss.itype,
      "" / "",
      If(itemss.ccode IS NULL, """", Concat(itemss.ccode, "" / "")), itemss.itemcallnumber)
      ORDER BY
        itemss.homebranch,
        itemss.location,
        itemss.itype,
        itemss.ccode,
        itemss.itemcallnumber
      SEPARATOR ""<br />""
    ) AS CLASSIFICATION
FROM
  virtualshelves
  JOIN virtualshelfcontents
    ON virtualshelfcontents.shelfnumber = virtualshelves.shelfnumber
  JOIN biblio
    ON virtualshelfcontents.biblionumber = biblio.biblionumber
  LEFT JOIN biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber
  JOIN (
    SELECT
      items.biblionumber,
      items.homebranch,
      locs.lib AS location,
      items.itype,
      ccodes.lib AS ccode,
      items.itemcallnumber
    FROM
      items
      LEFT JOIN (
        SELECT
          authorised_values.category,
          authorised_values.authorised_value,
          authorised_values.lib
        FROM
          authorised_values
        WHERE
          authorised_values.category = 'ccode'
      ) ccodes
        ON ccodes.authorised_value = items.ccode
      LEFT JOIN (
        SELECT
          authorised_values.category,
          authorised_values.authorised_value,
          authorised_values.lib
        FROM
          authorised_values
        WHERE
          authorised_values.category = 'loc'
      ) locs
        ON locs.authorised_value = items.location
    WHERE
      items.homebranch LIKE <<Choose your branch|LBRANCH>>
  ) itemss
    ON itemss.biblionumber = biblio.biblionumber
WHERE
  virtualshelves.shelfnumber = <<Enter a list ID number>>
GROUP BY
  TITLE_INFO,
  virtualshelves.shelfnumber
ORDER BY
  CLASSIFICATION,
  biblio.author,
  biblio.title",,,,,,,,
R.003228,"/*
R.003228

----------

Name: GHW - List / virtualshelf report 005 - Display list titles with links to bibliographic records
Created by: George H Williams

----------

Group: Lists Module
     -

Created on: 2019-07-17 16:43:43
Modified on: 2020-11-10 16:56:06
Date last run: 2022-03-29 14:07:32

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class='noprint'>
<p>Shows the titles on a list with just the author and title and links to the title's bibliographic record</p>
<ul><li>Displays titles currently on a list</li>
<li>only displays the list you specify</li>
<li>grouped by biblionumber</li>
<li>sorted by author and title</li>
<li>links to the title</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>To determine the list id number, look at the URL for the list and take the number off of the end of the URL. For example, the list at
https://staff.nextkansas.org/cgi-bin/koha/virtualshelves/shelves.pl?op=view&shelfnumber=6003
would be list number 6003.</p>
<p></p>
<p>Can be accessed by running reports 3224 or 3225 and clicking on the link in the ""REPORT_TO_PRINT"" column</p>
<p></p>
<p>Replaces the following reports:</p>
<ul>
<li>3003 - List information</li>
</ul>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3228&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  biblio.author,
  biblio.title,
  Concat('<a class=""btn btn-default"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">Go to title</a>') AS BUTTON
FROM
  biblio
  JOIN virtualshelfcontents
    ON biblio.biblionumber = virtualshelfcontents.biblionumber
WHERE
  virtualshelfcontents.shelfnumber LIKE <<Enter list number>>
GROUP BY
  biblio.biblionumber
ORDER BY
  biblio.author,
  biblio.title",,,,,,,,
R.003229,"/*
R.003229

----------

Name: GHW - Reserves - short expiration report
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-07-18 15:24:51
Modified on: 2019-10-02 15:45:52
Date last run: 2019-10-02 15:46:09

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  reserves.reserve_id,
  reserves.borrowernumber,
  reserves.reservedate,
  reserves.biblionumber,
  reserves.branchcode,
  reserves.notificationdate,
  reserves.reminderdate,
  reserves.cancellationdate,
  reserves.reservenotes,
  reserves.priority,
  reserves.found,
  reserves.timestamp,
  reserves.itemnumber,
  reserves.waitingdate,
  reserves.expirationdate,
  reserves.lowestPriority,
  reserves.suspend,
  reserves.suspend_until,
  reserves.itemtype,
  DateDiff(reserves.expirationdate, reserves.reservedate)
FROM
  reserves
WHERE
  DateDiff(reserves.expirationdate, reserves.reservedate) < 365",,,,,,,,
R.003231,"/*
R.003231

----------

Name: GHW - Borrower messages
Created by: George H Williams

----------

Group: Borrowers
     -

Created on: 2019-07-22 09:28:39
Modified on: 2019-12-26 16:58:06
Date last run: 2022-03-28 16:19:19

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Shows messages on a specific patron's account</p>
<ul><li>Shows current messages</li>
<li>For the patron you specify</li>
<li>grouped by message ID</li>
<li>sorted by patron home library, patron last name, patron card number, and branchcode of the library that created the message</li>
<li>links to the patron check-out page and includes a delete link for each individual message</li>
</ul><br />
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3231&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat_Ws('<br />',
    Concat('Card: ', patron.cardnumber),
    Concat('Last name: ', patron.surname),
    Concat('<a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', patron.borrowernumber, '"" target=""_blank"">Open patron in new window</a>')
  ) AS PATRON,
  Concat_Ws('<br />',
    Concat('Created by: ', If(messages.manager_id IS NULL, '-', staff.userid)),
    Concat('At: ', messages.branchcode),
    Concat('On: ', messages.message_date)
  ) AS INFO,
  messages.message,
  Concat(
    '<a href=""/cgi-bin/koha/circ/del_message.pl?message_id=',
    messages.message_id,
    '&borrowernumber=',
    patron.borrowernumber,
    '"" target=""_blank"">Remove this message</a>'
  ) AS REMOVE
FROM borrowers patron
JOIN messages ON messages.borrowernumber = patron.borrowernumber
  LEFT JOIN borrowers staff ON messages.manager_id = staff.borrowernumber
WHERE
  messages.branchcode LIKE <<Choose your library|LBRANCH>> AND
  patron.cardnumber LIKE Concat('%', <<Enter patron barcode number or a % symbol>>, '%')
GROUP BY
  messages.message_id
ORDER BY
  patron.branchcode,
  patron.surname,
  patron.cardnumber,
  messages.branchcode",,,,,,,,
R.003232,"/*
R.003232

----------

Name: GHW - Multi card duplicate helper
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-07-22 12:01:08
Modified on: 2019-07-22 13:49:24
Date last run: 2022-02-08 11:43:25

----------

Public: 0
Expiry: 300

----------

Add to select as necessary

Add 
borrowers patX

for X cards

Add 

patX.cardnumber = <<Card X>>

for X cards

----------
*/

","SELECT

  Concat(
    '&lt;br /&gt;DUPLICATE ACCOUNTS&lt;br /&gt;<br />This patron appears to have multiple accounts.&lt;br /&gt;<br />This account (',
    pat1.cardnumber,
    ' - ',
    pat1.branchcode,
    '), and the following accounts:&lt;ul&gt;<br />',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat1.borrowernumber,
    '"" target=""_blank""&gt;',
    pat1.cardnumber,
    ' - ',
    pat1.branchcode,
    '&lt;/a&gt;&lt;/li&gt;<br />',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat2.borrowernumber,
    '"" target=""_blank""&gt;',
    pat2.cardnumber,
    ' - ',
    pat2.branchcode,
    '&lt;/a&gt;&lt;/li&gt;<br />',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat3.borrowernumber,
    '"" target=""_blank""&gt;',
    pat3.cardnumber,
    ' - ',
    pat3.branchcode,
    '&lt;/a&gt;&lt;/li&gt;<br />',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat4.borrowernumber,
    '"" target=""_blank""&gt;',
    pat4.cardnumber,
    ' - ',
    pat4.branchcode,
    '&lt;/a&gt;&lt;/li&gt;<br />',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat5.borrowernumber,
    '"" target=""_blank""&gt;',
    pat5.cardnumber,
    ' - ',
    pat5.branchcode,
    '&lt;/a&gt;&lt;/li&gt;<br />',

    '&lt;/ul&gt;',
    'Please check with the patron to determine which account is the active account and', ' d', 'elete all of the inactive accounts.&lt;br /&gt;<br />',
    'These accounts appear similar because&lt;ul&gt;<br />',
    '&lt;li&gt;These accounts have the same/similar names&lt;/li&gt;<br />',
    '&lt;li&gt;These accounts have the same/similar birthdates&lt;/li&gt;<br />',
    '&lt;li&gt;These accounts have the same/similar contact information&lt;/li&gt;<br />',
    '&lt;li&gt;These accounts have the same/similar addresses&lt;/li&gt;<br />',
    '&lt;li&gt;These accounts have the same/similar phone numbers&lt;/li&gt;<br />',
    '&lt;li&gt;These accounts have the same/similar email addresses&lt;/li&gt;<br />',
    '&lt;br /&gt; PER Next Search Catalog policy, with few exceptions, each patron should only have one account.&lt;br /&gt;<br />GHW - NEKLS&lt;br /&gt;<br />'
  ) AS CARDONE,

  Concat(
    '&lt;br /&gt;DUPLICATE ACCOUNTS&lt;br /&gt;This patron appears to have multiple accounts.&lt;br /&gt;This account (',
    pat1.cardnumber,
    ' - ',
    pat1.branchcode,
    '), and the following accounts:&lt;ul&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat1.borrowernumber,
    '"" target=""_blank""&gt;',
    pat1.cardnumber,
    ' - ',
    pat1.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat2.borrowernumber,
    '"" target=""_blank""&gt;',
    pat2.cardnumber,
    ' - ',
    pat2.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat3.borrowernumber,
    '"" target=""_blank""&gt;',
    pat3.cardnumber,
    ' - ',
    pat3.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat4.borrowernumber,
    '"" target=""_blank""&gt;',
    pat4.cardnumber,
    ' - ',
    pat4.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat5.borrowernumber,
    '"" target=""_blank""&gt;',
    pat5.cardnumber,
    ' - ',
    pat5.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;/ul&gt;',
    'Please check with the patron to determine which account is the active account and', ' d', 'elete all of the inactive accounts.&lt;br /&gt;',
    'These accounts appear similar because&lt;ul&gt;',
    '&lt;li&gt;These accounts have the same/similar names&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar birthdates&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar contact information&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar addresses&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar phone numbers&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar email addresses&lt;/li&gt;',
    '&lt;br /&gt; PER Next Search Catalog policy, with few exceptions, each patron should only have one account.&lt;br /&gt;GHW - NEKLS&lt;br /&gt;'
  ) AS CARDTWO,

  Concat(
    '&lt;br /&gt;DUPLICATE ACCOUNTS&lt;br /&gt;This patron appears to have multiple accounts.&lt;br /&gt;This account (',
    pat1.cardnumber,
    ' - ',
    pat1.branchcode,
    '), and the following accounts:&lt;ul&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat1.borrowernumber,
    '"" target=""_blank""&gt;',
    pat1.cardnumber,
    ' - ',
    pat1.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat2.borrowernumber,
    '"" target=""_blank""&gt;',
    pat2.cardnumber,
    ' - ',
    pat2.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat3.borrowernumber,
    '"" target=""_blank""&gt;',
    pat3.cardnumber,
    ' - ',
    pat3.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat4.borrowernumber,
    '"" target=""_blank""&gt;',
    pat4.cardnumber,
    ' - ',
    pat4.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat5.borrowernumber,
    '"" target=""_blank""&gt;',
    pat5.cardnumber,
    ' - ',
    pat5.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;/ul&gt;',
    'Please check with the patron to determine which account is the active account and', ' d', 'elete all of the inactive accounts.&lt;br /&gt;',
    'These accounts appear similar because&lt;ul&gt;',
    '&lt;li&gt;These accounts have the same/similar names&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar birthdates&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar contact information&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar addresses&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar phone numbers&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar email addresses&lt;/li&gt;',
    '&lt;br /&gt; PER Next Search Catalog policy, with few exceptions, each patron should only have one account.&lt;br /&gt;GHW - NEKLS&lt;br /&gt;'
  ) AS CARDTHREE,

  Concat(
    '&lt;br /&gt;DUPLICATE ACCOUNTS&lt;br /&gt;This patron appears to have multiple accounts.&lt;br /&gt;This account (',
    pat1.cardnumber,
    ' - ',
    pat1.branchcode,
    '), and the following accounts:&lt;ul&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat1.borrowernumber,
    '"" target=""_blank""&gt;',
    pat1.cardnumber,
    ' - ',
    pat1.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat2.borrowernumber,
    '"" target=""_blank""&gt;',
    pat2.cardnumber,
    ' - ',
    pat2.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat3.borrowernumber,
    '"" target=""_blank""&gt;',
    pat3.cardnumber,
    ' - ',
    pat3.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat4.borrowernumber,
    '"" target=""_blank""&gt;',
    pat4.cardnumber,
    ' - ',
    pat4.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat5.borrowernumber,
    '"" target=""_blank""&gt;',
    pat5.cardnumber,
    ' - ',
    pat5.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;/ul&gt;',
    'Please check with the patron to determine which account is the active account and', ' d', 'elete all of the inactive accounts.&lt;br /&gt;',
    'These accounts appear similar because&lt;ul&gt;',
    '&lt;li&gt;These accounts have the same/similar names&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar birthdates&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar contact information&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar addresses&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar phone numbers&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar email addresses&lt;/li&gt;',
    '&lt;br /&gt; PER Next Search Catalog policy, with few exceptions, each patron should only have one account.&lt;br /&gt;GHW - NEKLS&lt;br /&gt;'
  ) AS CARDFOUR,

  Concat(
    '&lt;br /&gt;DUPLICATE ACCOUNTS&lt;br /&gt;This patron appears to have multiple accounts.&lt;br /&gt;This account (',
    pat1.cardnumber,
    ' - ',
    pat1.branchcode,
    '), and the following accounts:&lt;ul&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat1.borrowernumber,
    '"" target=""_blank""&gt;',
    pat1.cardnumber,
    ' - ',
    pat1.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat2.borrowernumber,
    '"" target=""_blank""&gt;',
    pat2.cardnumber,
    ' - ',
    pat2.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat3.borrowernumber,
    '"" target=""_blank""&gt;',
    pat3.cardnumber,
    ' - ',
    pat3.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat4.borrowernumber,
    '"" target=""_blank""&gt;',
    pat4.cardnumber,
    ' - ',
    pat4.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat5.borrowernumber,
    '"" target=""_blank""&gt;',
    pat5.cardnumber,
    ' - ',
    pat5.branchcode,
    '&lt;/a&gt;&lt;/li&gt;',

    '&lt;/ul&gt;',
    'Please check with the patron to determine which account is the active account and', ' d', 'elete all of the inactive accounts.&lt;br /&gt;',
    'These accounts appear similar because&lt;ul&gt;',
    '&lt;li&gt;These accounts have the same/similar names&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar birthdates&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar contact information&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar addresses&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar phone numbers&lt;/li&gt;',
    '&lt;li&gt;These accounts have the same/similar email addresses&lt;/li&gt;',
    '&lt;br /&gt; PER Next Search Catalog policy, with few exceptions, each patron should only have one account.&lt;br /&gt;GHW - NEKLS&lt;br /&gt;'
  ) AS CARDFIVE


FROM
  borrowers pat1,
  borrowers pat2,
  borrowers pat3,
  borrowers pat4,
  borrowers pat5

WHERE
  pat1.cardnumber = <<Card 1>> AND
  pat2.cardnumber = <<Card 2>> AND
  pat3.cardnumber = <<Card 3>> AND
  pat4.cardnumber = <<Card 4>> AND
  pat5.cardnumber = <<Card 5>>
",,,,,,,,
R.003233,"/*
R.003233

----------

Name: GHW - Multi card duplicate helper - alternate
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-07-22 14:07:34
Modified on: 2019-07-23 08:41:03
Date last run: 2021-11-02 10:46:53

----------

Public: 0
Expiry: 300

----------

Set for 10

----------
*/

","SELECT

  Concat(
    '&lt;br /&gt;MULTIPLE ACCOUNTS&lt;br /&gt;<br />This patron appears to have multiple accounts.&lt;br /&gt;<br /><br />',
    
    'This account (', pat1.cardnumber, ' - ', pat1.branchcode, '), and the following other accounts:<br />',
    'This account (', pat2.cardnumber, ' - ', pat2.branchcode, '), and the following other accounts:<br />',
    'This account (', pat3.cardnumber, ' - ', pat3.branchcode, '), and the following other accounts:<br />',
    'This account (', pat4.cardnumber, ' - ', pat4.branchcode, '), and the following other accounts:<br />',
    'This account (', pat5.cardnumber, ' - ', pat5.branchcode, '), and the following other accounts:<br />',
    'This account (', pat6.cardnumber, ' - ', pat6.branchcode, '), and the following other accounts:<br />',
    'This account (', pat7.cardnumber, ' - ', pat7.branchcode, '), and the following other accounts:<br />',
    'This account (', pat8.cardnumber, ' - ', pat8.branchcode, '), and the following other accounts:<br />',
    'This account (', pat9.cardnumber, ' - ', pat9.branchcode, '), and the following other accounts:<br />',
    'This account (', pat10.cardnumber, ' - ', pat10.branchcode, '), and the following other accounts:<br />',
    
    '<br /><br />&lt;ul&gt;<br /><br />',

    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', pat1.borrowernumber, '"" target=""_blank""&gt;', pat1.cardnumber, ' - ', pat1.branchcode, '&lt;/a&gt;&lt;/li&gt;<br />',
    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', pat2.borrowernumber, '"" target=""_blank""&gt;', pat2.cardnumber, ' - ', pat2.branchcode, '&lt;/a&gt;&lt;/li&gt;<br />',
    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', pat3.borrowernumber, '"" target=""_blank""&gt;', pat3.cardnumber, ' - ', pat3.branchcode, '&lt;/a&gt;&lt;/li&gt;<br />',
    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', pat4.borrowernumber, '"" target=""_blank""&gt;', pat4.cardnumber, ' - ', pat4.branchcode, '&lt;/a&gt;&lt;/li&gt;<br />',
    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', pat5.borrowernumber, '"" target=""_blank""&gt;', pat5.cardnumber, ' - ', pat5.branchcode, '&lt;/a&gt;&lt;/li&gt;<br />',
    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', pat6.borrowernumber, '"" target=""_blank""&gt;', pat6.cardnumber, ' - ', pat6.branchcode, '&lt;/a&gt;&lt;/li&gt;<br />',
    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', pat7.borrowernumber, '"" target=""_blank""&gt;', pat7.cardnumber, ' - ', pat7.branchcode, '&lt;/a&gt;&lt;/li&gt;<br />',
    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', pat8.borrowernumber, '"" target=""_blank""&gt;', pat8.cardnumber, ' - ', pat8.branchcode, '&lt;/a&gt;&lt;/li&gt;<br />',
    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', pat9.borrowernumber, '"" target=""_blank""&gt;', pat9.cardnumber, ' - ', pat9.branchcode, '&lt;/a&gt;&lt;/li&gt;<br />',
    '&lt;li&gt;&lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', pat10.borrowernumber, '"" target=""_blank""&gt;', pat10.cardnumber, ' - ', pat10.branchcode, '&lt;/a&gt;&lt;/li&gt;<br />',

    '<br /><br />&lt;/ul&gt;<br /><br />',
    'Please check with the patron to determine which account is the active account and', ' d',
    'elete all of the inactive accounts.&lt;br /&gt;<br />',
    'These accounts appear similar because<br />',
    '<br /><br />&lt;ul&gt;<br /><br />',
    '&lt;li&gt;These accounts have the same/similar names&lt;/li&gt;<br />',
    '&lt;li&gt;These accounts have the same/similar birthdates&lt;/li&gt;<br />',
    '&lt;li&gt;These accounts have the same/similar contact information&lt;/li&gt;<br />',
    '&lt;li&gt;These accounts have the same/similar addresses&lt;/li&gt;<br />',
    '&lt;li&gt;These accounts have the same/similar phone numbers&lt;/li&gt;<br />',
    '&lt;li&gt;These accounts have the same/similar email addresses&lt;/li&gt;<br />',
    '<br /><br />&lt;/ul&gt;<br /><br />',
    '<br /><br />When updating accounts, please be sure to add middle initials and middle names as necessary to make it easier for staff to identify individual patrons.<br /><br />',
    '&lt;br /&gt; PER Next Search Catalog policy, with few exceptions, each patron should only have one account.&lt;br /&gt;<br />GHW - NEKLS&lt;br /&gt;<br />'
  ) AS INFOBLOCK

FROM
  borrowers pat1,
  borrowers pat2,
  borrowers pat3,
  borrowers pat4,
  borrowers pat5,
  borrowers pat6,
  borrowers pat7,
  borrowers pat8,
  borrowers pat9,
  borrowers pat10

WHERE
  pat1.cardnumber = <<Card 1>> AND
  pat2.cardnumber = <<Card 2>> AND
  pat3.cardnumber = <<Card 3>> AND
  pat4.cardnumber = <<Card 4>> AND
  pat5.cardnumber = <<Card 5>> AND
  pat6.cardnumber = <<Card 6>> AND
  pat7.cardnumber = <<Card 7>> AND
  pat8.cardnumber = <<Card 8>> AND
  pat9.cardnumber = <<Card 9>> AND
  pat10.cardnumber = <<Card 10>>",,,,,,,,
R.003234,"/*
R.003234

----------

Name: GHW - Patron count by extended attribute
Created by: George H Williams

----------

Group: Borrowers
     Patron attributes

Created on: 2019-07-24 13:40:33
Modified on: 2019-07-25 08:30:25
Date last run: 2021-09-10 12:59:24

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a count of patrons with extended attributes at your library</p>
<ul><li>Counts current patrons with attributes</li>
<li>at the library you specify</li>
<li>allows you to specify a minimum patron count for displaying an attribute count (i.e. only show attributes assigned to at least X patrons)</li>
<li>grouped and sorted by patron home branch, attribute category, and attribute</li>
<li>contains links to report 3235 which will list all of the patrons at your library with the attribute specified</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Patrons can have multiple extended attributes on their accounts.  Similarly, patrons may not have any extended attributes on their accounts.  A total count of patrons from all of the rows of this report will not indicate an accurate count of total patrons at your library.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3234&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  columncreator.branchcode AS LIBRARY,
  Concat_Ws(' // ', columncreator.CAT_DESC, columncreator.AV_DESC) AS EXTENDED_ATTRIBUTE,
  Count(borrowerss.borrowernumber) AS PATRON_COUNT,
  Concat('<a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3235&phase=Run+this+report&param_name=Choose+your+library%7CLBRANCH&sql_params=', columncreator.branchcode, '&param_name=Choose+attribute+type%7CQ_BORROWER_ATTRIBUTES_A&sql_params=', columncreator.CAT_CODE, '&param_name=Enter+attribute+value+or+a+%25+symbol&sql_params=', IF(columncreator.AV_CODE = 'X', '%', columncreator.AV_CODE), ' "" target=""_blank"">Go to detailed report</a>') AS LINK_TO_DETAILED_REPORT
FROM
  (
    SELECT
      branches.branchcode,
      attributess.CAT_DESC,
      attributess.CAT_CODE,
      attributess.AV_DESC,
      attributess.AV_CODE
    FROM
      branches,
      (
        SELECT
          borrower_attribute_types.code AS CAT_CODE,
          borrower_attribute_types.description AS CAT_DESC,
          If(authorised_values.authorised_value IS NULL, 'X', authorised_values.authorised_value) AS AV_CODE,
          authorised_values.lib AS AV_DESC
        FROM
          borrower_attribute_types
          LEFT JOIN authorised_values
            ON authorised_values.category = borrower_attribute_types.authorised_value_category
      ) attributess
    ORDER BY
      branches.branchcode
  ) columncreator
  LEFT JOIN (
    SELECT
      borrowers.branchcode,
      borrower_attributes.code,
      borrower_attributes.borrowernumber,
      If(borrower_attribute_types.authorised_value_category = '', 'X', borrower_attributes.attribute) AS attribute,
      borrower_attribute_types.authorised_value_category
    FROM
      borrowers
      INNER JOIN borrower_attributes
        ON borrower_attributes.borrowernumber = borrowers.borrowernumber
      LEFT JOIN borrower_attribute_types
        ON borrower_attributes.code = borrower_attribute_types.code
    ORDER BY
      borrowers.branchcode,
      borrower_attributes.code,
      borrower_attributes.attribute,
      borrower_attributes.borrowernumber
  ) borrowerss
    ON borrowerss.branchcode = columncreator.branchcode AND
      borrowerss.code = columncreator.CAT_CODE AND
      borrowerss.attribute = columncreator.AV_CODE
WHERE
  columncreator.branchcode LIKE <<Choose your library|ZBRAN>> AND
  columncreator.CAT_CODE LIKE <<Extended attribute category|Q_BORROWER_ATTRIBUTES_A>>
GROUP BY
  columncreator.branchcode,
  columncreator.CAT_CODE,
  columncreator.AV_CODE
HAVING
  PATRON_COUNT >= <<View rows with at least X patrons|YNUMBER>>
ORDER BY
  LIBRARY,
  EXTENDED_ATTRIBUTE",,,,,,,,
R.003235,"/*
R.003235

----------

Name: GHW - Patrons at a specific library with a specific attribute
Created by: George H Williams

----------

Group: Borrowers
     Patron attributes

Created on: 2019-07-24 14:19:18
Modified on: 2019-07-25 10:43:22
Date last run: 2022-09-01 17:20:12

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Lists all patrons at your library with the extended attribute category and attribute you specify</p>
<ul><li>Lists current patrons with the attribute information you specify</li>
<li>at the library you specify</li>
<li>grouped and sorted by patron home library, patron attribute category, and patron attribute</li>
<li>links to the patron's account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Designed to work in conjunction with report 3234.</p>
<p></p>
<p>Patrons can have multiple extended attributes on their accounts.  Similarly, patrons may not have any extended attributes on their accounts.  If this report is configured to report on multiple attributes at one time, it is possible that some patrons will show up on this list multiple times.</p>
<p></p>
<p>For more detailed information than this report provides use the following reports:</p>
<ul>
<li>3086 - GHW - Patron attributes - Newsletter permissions </li>
<li>3087 - GHW - Patron attributes - Movie permissions </li>
<li>3088 - GHW - Patron attributes - Internet permissions</li>
<li>3089 - GHW - Patron attributes - Special locations </li>
<li>3090 - GHW - Patron attributes - Holds contact</li>
<li>3091 - GHW - Patron attributes - Account expired</li>
<li>3092 - GHW - Patron attributes - Collection agency</li>
<li>3093 - GHW - Patron attributes - Other attributes 1 / Other attributes 2 / Registration library</li>
</ul>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3235&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat('<a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', borrowers.borrowernumber, '"" target=""_blank"">Go to patron account</a>') AS LINK,
  borrowers.branchcode,
  borrowers.cardnumber,
  Concat_Ws('', borrowers.surname, ' / ', borrowers.firstname, If(borrowers.othernames = '', '', Concat_Ws('', ' (', borrowers.othernames, ')'))) AS NAME,
  categories.description AS PATRON_CATEGORY,
  borrower_attribute_types.description AS ATTRIBUTE_TYPE,
  If(authorised_values.lib IS NULL, borrower_attributes.attribute, authorised_values.lib) AS ATTRIBUTE_TEXT,
  borrower_attributes.attribute
FROM
  borrower_attributes
  JOIN borrowers
    ON borrower_attributes.borrowernumber = borrowers.borrowernumber
  JOIN borrower_attribute_types
    ON borrower_attributes.code = borrower_attribute_types.code
  LEFT JOIN authorised_values
    ON authorised_values.category = borrower_attribute_types.authorised_value_category AND
      authorised_values.authorised_value = borrower_attributes.attribute
  JOIN categories
    ON borrowers.categorycode = categories.categorycode
WHERE
  borrowers.branchcode LIKE <<Choose your library|LBRANCH>> AND
  borrower_attributes.code LIKE <<Choose attribute type|Q_BORROWER_ATTRIBUTES_A>> AND
  borrower_attributes.attribute LIKE <<Enter attribute value or a % symbol>>
ORDER BY
  borrowers.branchcode,
  NAME,
  borrowers.cardnumber",,,,,,,,
R.003237,"/*
R.003237

----------

Name: GHW - ADMINREPORT - Frosty
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-07-29 16:56:30
Modified on: 2019-07-29 16:56:30
Date last run: 2020-04-30 14:32:32

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.borrowernumber,
  borrowers.cardnumber,
  borrowers.surname,
  borrowers.firstname,
  borrowers.title,
  borrowers.othernames,
  borrowers.initials,
  borrowers.streetnumber,
  borrowers.streettype,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.country,
  borrowers.email,
  borrowers.phone,
  borrowers.mobile,
  borrowers.fax,
  borrowers.emailpro,
  borrowers.phonepro,
  borrowers.B_streetnumber,
  borrowers.B_streettype,
  borrowers.B_address,
  borrowers.B_address2,
  borrowers.B_city,
  borrowers.B_state,
  borrowers.B_zipcode,
  borrowers.B_country,
  borrowers.B_email,
  borrowers.B_phone,
  borrowers.dateofbirth,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  borrowers.date_renewed,
  borrowers.gonenoaddress,
  borrowers.lost,
  borrowers.debarred,
  borrowers.contactname,
  borrowers.contactfirstname,
  borrowers.contacttitle,
  borrowers.guarantorid,
  borrowers.relationship,
  borrowers.ethnicity,
  borrowers.ethnotes,
  borrowers.sex,
  borrowers.sort1,
  borrowers.sort2,
  borrowers.altcontactfirstname,
  borrowers.altcontactsurname,
  borrowers.altcontactaddress1,
  borrowers.altcontactaddress2,
  borrowers.altcontactaddress3,
  borrowers.altcontactstate,
  borrowers.altcontactzipcode,
  borrowers.altcontactcountry,
  borrowers.altcontactphone
FROM
  borrowers
WHERE
  borrowers.surname = 'FROSTY'
ORDER BY
  borrowers.borrowernumber",,,,,,,,
R.003238,"/*
R.003238

----------

Name: aa
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-07-31 22:07:50
Modified on: 2019-07-31 22:07:50
Date last run: 2019-10-31 00:38:51

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
    CONCAT( p.firstname, ' ', p.surname, ' (', p.branchcode, ')' ) AS 'patron (homebranch)',
    CONCAT( 
        '<img src=""/cgi-bin/koha/svc/barcode?barcode=',
         cardnumber, 
        '&type=',
        <<Barcode type>>,
        '""></img>') AS cardnumber,
    cardnumber AS 'cardnumber text' 
FROM
    borrowers p",,,,,,,,
R.003239,"/*
R.003239

----------

Name: GHW - Items declared lost by check out library and date
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-08-01 11:31:03
Modified on: 2020-02-22 20:06:38
Date last run: 2021-03-31 18:02:22

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a list of automatically created lost item fees and late fees that have been written off automatically</p>
<ul><li>Shows fees added or modified during the date range you specify</li>
<li>at the library you specify</li>
<li>grouped by issue id number and account offset id number</li>
<li>sorted by item lost date, item barcode number, account offset type</li>
<li>contains links to the patron's fee history</li>
</ul><br />
<p></p>
<p>Replaces report 888</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3239&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  old_issues.branchcode AS CHECK_OUT_BRANCH,
  Upper(items.barcode) AS ITEM_BC,
  items.itemlost_on AS LOST_ON_DATE,
  accountlines.description,
  account_offsets.type,
  Format(account_offsets.amount, 2) AS amount,
  Concat('<a href=""/cgi-bin/koha/members/boraccount.pl?borrowernumber=', old_issues.borrowernumber, '"" target=""_blank"">Go to patron account</a>') AS LINK
FROM
  old_issues
  JOIN items
    ON old_issues.itemnumber = items.itemnumber
  JOIN accountlines
    ON accountlines.issue_id = old_issues.issue_id
  JOIN account_offsets
    ON account_offsets.debit_id = accountlines.accountlines_id
WHERE
  old_issues.branchcode Like <<Choose your library|ZBRAN>> AND
  items.itemlost = 2 AND
  (items.itemlost_on BETWEEN <<Start date|date>> AND (<<End date|date>> + interval 1 day))AND
  (account_offsets.type = 'Lost item' OR
    account_offsets.type = 'Forgiven')
GROUP BY
  old_issues.issue_id,
  account_offsets.id
ORDER BY
  items.itemlost_on DESC,
  barcode DESC,
  account_offsets.type DESC",,,,,,,,
R.003240,"/*
R.003240

----------

Name: 23390
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-08-01 14:31:38
Modified on: 2019-08-02 14:24:20
Date last run: 2019-08-02 14:24:26

----------

Public: 0
Expiry: 300

----------

SELECT cardnumber
FROM borrowers WHERE cardnumber LIKE '%9'

----------
*/

","SELECT
  borrowers.cardnumber,
  Concat(""Patron"") AS surname,
  Concat(""Deleted"") AS firstname,
  Concat("""") AS title,
  Concat("""") AS othernames,
  Concat("""") AS initials,
  Concat("""") AS streetnumber,
  Concat("""") AS streettype,
  Concat("""") AS address,
  Concat("""") AS address2,
  borrowers.city,
  borrowers.state,
  LEFT(borrowers.zipcode, 5) as zipcode,
  Concat("""") AS country,
  Concat("""") AS email,
  Concat("""") AS phone,
  Concat("""") AS mobile,
  Concat("""") AS fax,
  Concat("""") AS emailpro,
  Concat("""") AS phonepro,
  Concat("""") AS B_streetnumber,
  Concat("""") AS B_streettype,
  Concat("""") AS B_address,
  Concat("""") AS B_address2,
  Concat("""") AS B_city,
  Concat("""") AS B_state,
  Concat("""") AS B_zipcode,
  Concat("""") AS B_country,
  Concat("""") AS B_email,
  Concat("""") AS B_phone,
  Concat(""01/01/1900"") AS dateofbirth,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  Concat("""") AS date_renewed,
  Concat("""") AS gonenoaddress,
  Concat("""") AS lost,
  Concat("""") AS debarred,
  Concat("""") AS debarredcomment,
  Concat("""") AS contactname,
  Concat("""") AS contactfirstname,
  Concat("""") AS contacttitle,
  Concat("""") AS guarantorid,
  Concat(""Patron deleted in batch deletion process after the account had been expired for more than 3 years - only non-identifying information (card number; city; state; zipcode; homebranch; categorycode; dateenrolled) is left intact on this record in the deleted_borrowers table"") AS borrowernotes,
  Concat("""") AS relationship,
  Concat("""") AS ethnicity,
  Concat("""") AS ethnotes,
  borrowers.sex,
  Concat(""deleted"") AS password,
  Concat("""") AS flags,
  Concat("""") AS opacnote,
  Concat("""") AS contactnote,
  Concat("""") AS sort1,
  Concat("""") AS sort2,
  Concat("""") AS altcontactfirstname,
  Concat("""") AS altcontactsurname,
  Concat("""") AS altcontactaddress1,
  Concat("""") AS altcontactaddress2,
  Concat("""") AS altcontactaddress3,
  Concat("""") AS altcontactstate,
  Concat("""") AS altcontactzipcode,
  Concat("""") AS altcontactcountry,
  Concat("""") AS altcontactphone,
  Concat("""") AS smsalertnumber,
  Concat("""") AS sms_provider_id
FROM
  borrowers
WHERE
  borrowers.dateexpiry < ""1900-12-31""",,,,,,,,
R.003241,"/*
R.003241

----------

Name: GHW - Patron Purge 101
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-08-02 23:01:21
Modified on: 2021-11-10 09:22:44
Date last run: 2022-10-03 09:04:29

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Part 1 of the patron purge process - part 1 - change extended attribute to 1 ("" Account expired for more than 2 years - scheduled for deletion when expired for 3 years"") on all results</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#PP01 #patron_purge</p>
</div>

----------
*/

","SELECT
  Concat(
    '<a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', 
    borrowers.borrowernumber, 
    '"" target=""_blank"">Link to patron</a>'
  ) AS LINK_TO_PATRON,
  borrowers.borrowernumber,
  borrowers.cardnumber,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  If(
    Day(Now()) >= 15, 
    Date_Format(Now() + INTERVAL 15 MONTH, '%Y-%m-15'),
    Date_Format(Now() + INTERVAL 14 MONTH, '%Y-%m-15')
  ) AS PROJECTED_DELETION,
  Coalesce(accountlinesx.DUE_SUM, 0) AS AMT_DUE,
  Coalesce(issuesx.ICOUNT, 0) AS CHECKOUTS,
  Coalesce(guaranteesx.GCOUNT, 0) AS GUARANTEES,
  Coalesce(requestsx.Count_reserve_id, 0) AS REQUESTS,
  Coalesce(expired_attribute.attribute, 0) AS ATTRIBUTE_VALUE,
  expired_attribute.lib AS ATTRIBUTE
FROM
  borrowers LEFT JOIN
  (SELECT
      accountlines.borrowernumber,
      Format(Sum(accountlines.amountoutstanding), 2) AS DUE_SUM
    FROM
      accountlines
    GROUP BY
      accountlines.borrowernumber) accountlinesx ON borrowers.borrowernumber =
      accountlinesx.borrowernumber LEFT JOIN
  (SELECT
      issues.borrowernumber,
      Count(issues.issue_id) AS ICOUNT
    FROM
      issues
    GROUP BY
      issues.borrowernumber) issuesx ON borrowers.borrowernumber =
      issuesx.borrowernumber LEFT JOIN
  (SELECT
      reserves.borrowernumber,
      Count(reserves.reserve_id) AS Count_reserve_id
    FROM
      reserves
    GROUP BY
      reserves.borrowernumber) requestsx ON borrowers.borrowernumber =
      requestsx.borrowernumber LEFT JOIN
  (SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute,
      authorised_values.lib,
      authorised_values.category
    FROM
      borrower_attributes JOIN
      authorised_values ON borrower_attributes.attribute =
          authorised_values.authorised_value
    WHERE
      borrower_attributes.code = 'expired' AND
      authorised_values.category = 'expired') expired_attribute ON
      borrowers.borrowernumber = expired_attribute.borrowernumber LEFT JOIN
  (SELECT
      borrower_relationships.guarantor_id,
      Count(borrower_relationships.guarantee_id) AS GCOUNT
    FROM
      borrower_relationships
    GROUP BY
      borrower_relationships.guarantor_id) guaranteesx ON
      guaranteesx.guarantor_id = borrowers.borrowernumber
WHERE
  borrowers.dateexpiry BETWEEN CurDate() - INTERVAL 1095 DAY AND CurDate() - INTERVAL 730.5 DAY AND
  borrowers.branchcode LIKE '%' AND
  Coalesce(borrowers.othernames, ""0"") NOT LIKE ""%SIP%"" AND
  borrowers.categorycode <> 'STAFF' AND
  borrowers.categorycode <> 'ILL' AND
  borrowers.categorycode <> 'HOOPLA' AND
  Coalesce(accountlinesx.DUE_SUM, 0) = 0 AND
  Coalesce(issuesx.ICOUNT, 0) = 0 AND
  Coalesce(guaranteesx.GCOUNT, 0) = 0 AND
  Coalesce(requestsx.Count_reserve_id, 0) = 0 AND
  Coalesce(expired_attribute.attribute, 0) <> 1
GROUP BY
  borrowers.borrowernumber
ORDER BY
  borrowers.dateexpiry,
  borrowers.branchcode,
  borrowers.surname,
  borrowers.firstname,
  borrowers.borrowernumber",,,,,,,,
R.003242,"/*
R.003242

----------

Name: GHW - Patron Purge 102
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-08-02 23:13:23
Modified on: 2021-11-10 09:23:58
Date last run: 2022-10-03 09:04:29

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Part 2 of the patron purge process - part 2 - change extended attribute to 2 (""Account expired for more than 2 years - cannot be deleted due to fines/fees/ouverdues/etc."")</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#PP02 #patron_purge</p>
</div>

----------
*/

","SELECT
  Concat(
    '<a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', 
    borrowers.borrowernumber, 
    '"" target=""_blank"">Link to patron</a>'
  ) AS LINK_TO_PATRON,
  borrowers.borrowernumber,
  borrowers.cardnumber,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  If(
    Day(Now()) >= 15, 
    Date_Format(Now() + INTERVAL 15 MONTH, '%Y-%m-15'),
    Date_Format(Now() + INTERVAL 14 MONTH, '%Y-%m-15')
  ) AS PROJECTED_DELETION,
  Coalesce(accountlinesx.DUE_SUM, 0) AS AMT_DUE,
  Coalesce(issuesx.ICOUNT, 0) AS CHECKOUTS,
  Coalesce(guaranteesx.GCOUNT, 0) AS GUARANTEES,
  Coalesce(requestsx.Count_reserve_id, 0) AS REQUESTS,
  Coalesce(expired_attribute.attribute, 0) AS ATTRIBUTE_VALUE,
  expired_attribute.lib AS ATTRIBUTE
FROM
  borrowers LEFT JOIN
  (SELECT
      accountlines.borrowernumber,
      Format(Sum(accountlines.amountoutstanding), 2) AS DUE_SUM
    FROM
      accountlines
    GROUP BY
      accountlines.borrowernumber) accountlinesx ON borrowers.borrowernumber =
      accountlinesx.borrowernumber LEFT JOIN
  (SELECT
      issues.borrowernumber,
      Count(issues.issue_id) AS ICOUNT
    FROM
      issues
    GROUP BY
      issues.borrowernumber) issuesx ON borrowers.borrowernumber =
      issuesx.borrowernumber LEFT JOIN
  (SELECT
      reserves.borrowernumber,
      Count(reserves.reserve_id) AS Count_reserve_id
    FROM
      reserves
    GROUP BY
      reserves.borrowernumber) requestsx ON borrowers.borrowernumber =
      requestsx.borrowernumber LEFT JOIN
  (SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute,
      authorised_values.lib,
      authorised_values.category
    FROM
      borrower_attributes JOIN
      authorised_values ON borrower_attributes.attribute =
          authorised_values.authorised_value
    WHERE
      borrower_attributes.code = 'expired' AND
      authorised_values.category = 'expired') expired_attribute ON
      borrowers.borrowernumber = expired_attribute.borrowernumber LEFT JOIN
  (SELECT
      borrower_relationships.guarantor_id,
      Count(borrower_relationships.guarantee_id) AS GCOUNT
    FROM
      borrower_relationships
    GROUP BY
      borrower_relationships.guarantor_id) guaranteesx ON
      guaranteesx.guarantor_id = borrowers.borrowernumber
WHERE
  borrowers.dateexpiry BETWEEN CurDate() - INTERVAL 1095 DAY AND CurDate() -
  INTERVAL 730.5 DAY AND
  borrowers.branchcode LIKE '%' AND
  Coalesce(borrowers.othernames, ""0"") NOT LIKE ""%SIP%"" AND
  borrowers.categorycode <> 'STAFF' AND
  borrowers.categorycode <> 'ILL' AND
  borrowers.categorycode <> 'HOOPLA' AND
  (Coalesce(accountlinesx.DUE_SUM, 0) <> 0 OR
      Coalesce(issuesx.ICOUNT, 0) <> 0 OR
      Coalesce(guaranteesx.GCOUNT, 0) <> 0 OR
      Coalesce(requestsx.Count_reserve_id, 0) <> 0) AND
  Coalesce(expired_attribute.attribute, 0) <> 2
GROUP BY
  borrowers.borrowernumber
ORDER BY
  borrowers.dateexpiry,
  borrowers.branchcode,
  borrowers.surname,
  borrowers.firstname,
  borrowers.borrowernumber",,,,,,,,
R.003243,"/*
R.003243

----------

Name: GHW - Patron Purge 103
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-08-02 23:23:38
Modified on: 2021-11-10 09:34:01
Date last run: 2022-10-03 09:04:29

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Part 3 of the patron purge process - part 3 - change extended attribute to 5-16 (""Account expired for more than 3 years - scheduled to be auto-deleted on mm.dd"") as appropriate based on PROJECTED_DELETION date</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#PP03 #patron_purge</p>
</div>

----------
*/

","SELECT
  Concat(
    '<a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    borrowers.borrowernumber, 
    '"" target=""_blank"">Link to patron</a>'
  ) AS
  LINK_TO_PATRON,
  borrowers.borrowernumber,
  borrowers.cardnumber,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  If(
    Day(Now()) >= 15, 
    Date_Format(Now() + INTERVAL 3 MONTH, '%Y-%m-15'),
    Date_Format(Now() + INTERVAL 2 MONTH, '%Y-%m-15')
  ) AS PROJECTED_DELETION,
  Coalesce(accountlinesx.DUE_SUM, 0) AS AMT_DUE,
  Coalesce(issuesx.ICOUNT, 0) AS CHECKOUTS,
  Coalesce(guaranteesx.GCOUNT, 0) AS GUARANTEES,
  Coalesce(requestsx.Count_reserve_id, 0) AS REQUESTS,
  expired_attribute.lib AS ATTRIBUTE,
  Coalesce(expired_attribute.attribute, 0) AS ATTRIBUTE_VALUE,
  expired_attribute.code AS ATTRIBUTE
FROM
  borrowers LEFT JOIN
  (SELECT
      accountlines.borrowernumber,
      Format(Sum(accountlines.amountoutstanding), 2) AS DUE_SUM
    FROM
      accountlines
    GROUP BY
      accountlines.borrowernumber) accountlinesx ON borrowers.borrowernumber =
      accountlinesx.borrowernumber LEFT JOIN
  (SELECT
      issues.borrowernumber,
      Count(issues.issue_id) AS ICOUNT
    FROM
      issues
    GROUP BY
      issues.borrowernumber) issuesx ON borrowers.borrowernumber =
      issuesx.borrowernumber LEFT JOIN
  (SELECT
      reserves.borrowernumber,
      Count(reserves.reserve_id) AS Count_reserve_id
    FROM
      reserves
    GROUP BY
      reserves.borrowernumber) requestsx ON borrowers.borrowernumber =
      requestsx.borrowernumber LEFT JOIN
  (SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute,
      authorised_values.lib,
      authorised_values.category
    FROM
      borrower_attributes JOIN
      authorised_values ON borrower_attributes.attribute =
          authorised_values.authorised_value
    WHERE
      borrower_attributes.code = 'expired' AND
      authorised_values.category = 'expired') expired_attribute ON
      borrowers.borrowernumber = expired_attribute.borrowernumber LEFT JOIN
  (SELECT
      borrower_relationships.guarantor_id,
      Count(borrower_relationships.guarantee_id) AS GCOUNT
    FROM
      borrower_relationships
    GROUP BY
      borrower_relationships.guarantor_id) guaranteesx ON
      guaranteesx.guarantor_id = borrowers.borrowernumber
WHERE
  borrowers.dateexpiry < CurDate() - INTERVAL 3 YEAR AND
  borrowers.branchcode LIKE '%' AND
  Coalesce(borrowers.othernames, ""0"") NOT LIKE ""%SIP%"" AND
  borrowers.categorycode <> 'STAFF' AND
  borrowers.categorycode <> 'ILL' AND
  borrowers.categorycode <> 'HOOPLA' AND
  Coalesce(accountlinesx.DUE_SUM, 0) = 0 AND
  Coalesce(issuesx.ICOUNT, 0) = 0 AND
  Coalesce(guaranteesx.GCOUNT, 0) = 0 AND
  Coalesce(requestsx.Count_reserve_id, 0) = 0 AND
  (Coalesce(expired_attribute.attribute, 0) < 5 OR
    expired_attribute.attribute IS NULL)
GROUP BY
  borrowers.borrowernumber
ORDER BY
  borrowers.dateexpiry,
  borrowers.branchcode,
  borrowers.surname,
  borrowers.firstname,
  borrowers.borrowernumber",,,,,,,,
R.003244,"/*
R.003244

----------

Name: GHW - Patron Purge 104
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-08-02 23:34:40
Modified on: 2021-11-10 09:34:24
Date last run: 2022-10-03 09:04:29

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Part 4 of the patron purge process - part 4 - change extended attribute to 4 (""Account expired for more than 3 years - can't be auto-deleted due to problems with the account "")</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#PP04 #patron_purge</p>
</div>

----------
*/

","SELECT
  Concat(
    '<a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', 
    borrowers.borrowernumber, 
    '"" target=""_blank"">Link to patron</a>'
  ) AS LINK_TO_PATRON,
  borrowers.borrowernumber,
  borrowers.cardnumber,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  If(
    Day(Now()) >= 15, 
    Date_Format(Now() + INTERVAL 3 MONTH, '%Y-%m-15'),
    Date_Format(Now() + INTERVAL 2 MONTH, '%Y-%m-15')
  ) AS PROJECTED_DELETION,
  Coalesce(accountlinesx.DUE_SUM, 0) AS AMT_DUE,
  Coalesce(issuesx.ICOUNT, 0) AS CHECKOUTS,
  Coalesce(guaranteesx.GCOUNT, 0) AS GUARANTEES,
  Coalesce(requestsx.Count_reserve_id, 0) AS REQUESTS,
  Coalesce(expired_attribute.attribute, 0) AS ATTRIBUTE_VALUE,
  expired_attribute.lib AS ATTRIBUTE
FROM
  borrowers LEFT JOIN
  (SELECT
      borrower_relationships.guarantor_id,
      Count(borrower_relationships.guarantee_id) AS GCOUNT
    FROM
      borrower_relationships
    GROUP BY
      borrower_relationships.guarantor_id) guaranteesx ON guaranteesx.guarantor_id =
      borrowers.borrowernumber LEFT JOIN
  (SELECT
      accountlines.borrowernumber,
      Format(Sum(accountlines.amountoutstanding), 2) AS DUE_SUM
    FROM
      accountlines
    GROUP BY
      accountlines.borrowernumber) accountlinesx ON borrowers.borrowernumber =
      accountlinesx.borrowernumber LEFT JOIN
  (SELECT
      issues.borrowernumber,
      Count(issues.issue_id) AS ICOUNT
    FROM
      issues
    GROUP BY
      issues.borrowernumber) issuesx ON borrowers.borrowernumber =
      issuesx.borrowernumber LEFT JOIN
  (SELECT
      reserves.borrowernumber,
      Count(reserves.reserve_id) AS Count_reserve_id
    FROM
      reserves
    GROUP BY
      reserves.borrowernumber) requestsx ON borrowers.borrowernumber =
      requestsx.borrowernumber LEFT JOIN
  (SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute,
      authorised_values.lib,
      authorised_values.category
    FROM
      borrower_attributes JOIN
      authorised_values ON borrower_attributes.attribute =
          authorised_values.authorised_value
    WHERE
      borrower_attributes.code = 'expired' AND
      authorised_values.category = 'expired') expired_attribute ON
      borrowers.borrowernumber = expired_attribute.borrowernumber
WHERE
  borrowers.dateexpiry < CurDate() - INTERVAL 3 YEAR AND
  borrowers.branchcode LIKE '%' AND
  Coalesce(borrowers.othernames, ""0"") NOT LIKE ""%SIP%"" AND
  borrowers.categorycode <> 'STAFF' AND
  borrowers.categorycode <> 'ILL' AND
  borrowers.categorycode <> 'HOOPLA'  AND
  Coalesce(expired_attribute.attribute, 0) <> 4 AND
  (Coalesce(accountlinesx.DUE_SUM, 0) <> 0 OR
      Coalesce(issuesx.ICOUNT, 0) <> 0 OR
      Coalesce(guaranteesx.GCOUNT, 0) > 0 OR
      Coalesce(requestsx.Count_reserve_id, 0) <> 0)
GROUP BY
  borrowers.borrowernumber
ORDER BY
  borrowers.dateexpiry,
  borrowers.branchcode,
  borrowers.surname,
  borrowers.firstname,
  borrowers.borrowernumber",,,,,,,,
R.003245,"/*
R.003245

----------

Name: GHW Transactions with replacement price ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-08-08 14:32:54
Modified on: 2019-08-08 14:40:51
Date last run: 2019-08-08 14:41:11

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  statistics.branch AS TRANSACTION_BRANCH,
  If(statistics.type = ""issue"", ""checkout"", statistics.type) AS STATISTIC_TYPE,
  statistics.datetime,
  Upper(Coalesce(items.barcode, deleteditems.barcode)) AS ITEM_BC,
  locations.lib AS SHELVING_LOCATION,
  itemtypes.description AS ITYPE,
  ccodes.lib AS CCODE,
  Coalesce(items.itemcallnumber, deleteditems.itemcallnumber) AS CALL_NUMBER,
  biblio.author,
  biblio.title AS `TITLE (245$a only)`,
  items.replacementprice,
  If(deleteditems.barcode IS NOT NULL, ""Item has been deleted"", If(statistics.type = ""payment"", ""No item data for payments"", If(statistics.type = ""writeoff"", ""No item data for writeoffs"", If(statistics.type = ""return"", ""Shelving loction not recorded for returns"", ""-"")))) AS NOTES
FROM
  statistics
  LEFT JOIN items
    ON statistics.itemnumber = items.itemnumber
  LEFT JOIN deleteditems
    ON statistics.itemnumber = deleteditems.itemnumber
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'loc'
  ) locations
    ON statistics.location = locations.authorised_value
  LEFT JOIN (
    SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes
  ) itemtypes
    ON statistics.itemtype = itemtypes.itemtype
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode'
  ) ccodes
    ON statistics.ccode = ccodes.authorised_value
  LEFT JOIN biblio
    ON items.biblionumber = biblio.biblionumber
WHERE
  statistics.branch LIKE <<Choose the circulating library|branches>> AND
  statistics.datetime BETWEEN <<Start date|date>> AND <<end date|date>> + INTERVAL 1 DAY AND
  If(statistics.type = ""renew"", ""renew-issue"", If(statistics.type = ""issue"", ""issue-renew"", statistics.type)) LIKE <<Choose a transaction type|LSTATTYPE>>
GROUP BY
  statistics.branch,
  statistics.datetime,
  items.replacementprice,
  statistics.itemnumber
ORDER BY
  TRANSACTION_BRANCH,
  statistics.datetime,
  statistics.itemnumber",,,,,,,,
R.003246,"/*
R.003246

----------

Name: GHW ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-08-08 14:50:46
Modified on: 2019-08-08 14:50:46
Date last run: 2019-08-13 14:31:37

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branchesitypes.branchname,
  branchesitypes.description,
  Sum(itemsdeleteditems.replacementprice) AS Sum_replacementprice
FROM
  (
    SELECT
      branches.branchcode,
      branches.branchname,
      itemtypes.itemtype,
      itemtypes.description
    FROM
      branches,
      itemtypes
  ) branchesitypes
  LEFT JOIN statistics
    ON statistics.branch = branchesitypes.branchcode AND
      statistics.itemtype = branchesitypes.itemtype
  INNER JOIN (
    SELECT
      items.itemnumber,
      items.replacementprice
    FROM
      items
    UNION
    SELECT
      deleteditems.itemnumber,
      deleteditems.replacementprice
    FROM
      deleteditems
  ) itemsdeleteditems
    ON itemsdeleteditems.itemnumber = statistics.itemnumber
WHERE
  branchesitypes.branchcode LIKE ""TONGANOXIE"" AND
  Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
  Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
  (statistics.type = 'issue' OR
    statistics.type = 'renew')
GROUP BY
  branchesitypes.branchname,
  branchesitypes.description",,,,,,,,
R.003247,"/*
R.003247

----------

Name: GHW - value of items checked out in the previous calendar month
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-08-08 15:26:19
Modified on: 2019-08-13 15:03:47
Date last run: 2022-05-02 11:20:49

----------

Public: 0
Expiry: 300

----------

<div id=""reportinfo"" class=""noPrint"">
<p>Generates total value of all items checked out during the  previous calendar month at the library you specify</p>
<ul><li>Shows value of items checkered out during the previous calendar month</li>
<li>at the library you specify (no matter which library owned the item)</li>
<li>grouped by replacement price, check-out branch, item type, item number, date and time of checkout, library name, and item type description.</li>
<li>sorted by checkout library and item type description</li>
<li>links</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<ul>
<li>Summarizes the replacement cost of every item checked out, every time it was checked out at the specified library during the previous calendar month.  If, for example, a $10.00 MOVIE checks out 5 times at one library last month, those checkouts will contribute $50.00 to the total in the column for ""MOVIE"" at that library for last month.</li>
<li>This report relies on the accuracy of the data in the 952$v field.  If, for example, the 952$v field has accidentally been sent to $999,999.99 for an item, each time that item checks out in a month, the total value for the VALUE_OF_ALL_ITEMS_CHECKED_OUT column will increase by slightly less than one million dollars.  Similarly, if the 952$v is left blank, no value will be recorded.</li>
<li>This report only looks at check-outs - it does not record data for renewals.</li>
</ul>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3247&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  branchsitypes.branchname AS CHECK_OUT_LIBRARY,
  branchsitypes.description AS ITEM_TYPE,
  Sum(statsitmes.replacementprice) AS VALUE_OF_ALL_ITEMS_CHECKED_OUT
FROM
  (
    SELECT
      branches.branchcode,
      branches.branchname,
      itemtypes.itemtype,
      itemtypes.description
    FROM
      branches,
      itemtypes
  ) branchsitypes
  LEFT JOIN (
    SELECT
      items.replacementprice,
      statistics.branch,
      statistics.itemtype,
      Coalesce(items.itemnumber, deleteditems.itemnumber) AS itemnumber,
      statistics.datetime
    FROM
      statistics
      LEFT JOIN items
        ON items.itemnumber = statistics.itemnumber
      LEFT JOIN deleteditems
        ON deleteditems.itemnumber = statistics.itemnumber
    WHERE
      Month(statistics.datetime) = Month(Curdate() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Curdate() - INTERVAL 1 MONTH) AND
      statistics.type = 'issue'
    GROUP BY
      items.replacementprice,
      statistics.branch,
      statistics.itemtype,
      statistics.datetime
  ) statsitmes
    ON statsitmes.branch = branchsitypes.branchcode AND
      statsitmes.itemtype = branchsitypes.itemtype
WHERE
  branchsitypes.branchcode LIKE <<Choose your library|ZBRAN>>
GROUP BY
  branchsitypes.branchname,
  branchsitypes.description",,,,,,,,
R.003248,"/*
R.003248

----------

Name: GHW - value of items checked out in the month you specify
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-08-12 22:47:17
Modified on: 2019-08-13 15:05:54
Date last run: 2022-09-08 14:02:29

----------

Public: 0
Expiry: 300

----------

<div id=""reportinfo"" class=""noPrint"">
<p>Generates total value of all items checked out during the calendar month you specify at the library you specify</p>
<ul><li>Shows value of items checkered out during the month you specify</li>
<li>at the library you specify (no matter which library owned the item)</li>
<li>grouped by replacement price, check-out branch, item type, item number, date and time of checkout, library name, and item type description.</li>
<li>sorted by checkout library and item type description</li>
<li>links</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<ul>
<li>Summarizes the replacement cost of every item checked out, every time it was checked out at the specified library during the month specified.  If, for example, a $10.00 MOVIE checks out 5 times at one library during June of 2018, those checkouts will contribute $50.00 to the total in the column for ""MOVIE"" at that library for June 2018.</li>
<li>This report relies on the accuracy of the data in the 952$v field.  If, for example, the 952$v field has accidentally been sent to $999,999.99 for an item, each time that item checks out in a month, the total value for the VALUE_OF_ALL_ITEMS_CHECKED_OUT column will increase by slightly less than one million dollars.  Similarly, if the 952$v is left blank, no value will be recorded.</li>
<li>This report only looks at check-outs - it does not record data for renewals.</li>
<li>Data in the statistics table is only kept for the previous 25 months.  This report will not be able to report on dates more than 25 months ago.</li>
<li>The further back in time you look, the less reliable the data will be.  It's best to run this report on the first of each month to capture data for the preceding month and then store that data locally rather than to rely on data stored in the ever-changing production environment.</li>
</ul>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3248&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  branchsitypes.branchname AS CHECK_OUT_LIBRARY,
  branchsitypes.description AS ITEM_TYPE,
  Sum(statsitmes.replacementprice) AS VALUE_OF_ALL_ITEMS_CHECKED_OUT
FROM
  (
    SELECT
      branches.branchcode,
      branches.branchname,
      itemtypes.itemtype,
      itemtypes.description
    FROM
      branches,
      itemtypes
  ) branchsitypes
  LEFT JOIN (
    SELECT
      items.replacementprice,
      statistics.branch,
      statistics.itemtype,
      Coalesce(items.itemnumber, deleteditems.itemnumber) AS itemnumber,
      statistics.datetime
    FROM
      statistics
      LEFT JOIN items
        ON items.itemnumber = statistics.itemnumber
      LEFT JOIN deleteditems
        ON deleteditems.itemnumber = statistics.itemnumber
    WHERE
      (Month(statistics.datetime) = <<Choose month|Month>> AND
      Year(statistics.datetime) = <<Choose year|Year>>) AND
      statistics.type = 'issue'
    GROUP BY
      items.replacementprice,
      statistics.branch,
      statistics.itemtype,
      statistics.datetime
  ) statsitmes
    ON statsitmes.branch = branchsitypes.branchcode AND
      statsitmes.itemtype = branchsitypes.itemtype
WHERE
  branchsitypes.branchcode LIKE <<Choose your library|ZBRAN>>
GROUP BY
  branchsitypes.branchname,
  branchsitypes.description",,,,,,,,
R.003249,"/*
R.003249

----------

Name: GHW - SQL date expressions
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-08-12 23:18:20
Modified on: 2019-09-10 18:45:57
Date last run: 2021-03-16 19:31:32

----------

Public: 0
Expiry: 300

----------

<a href=""/cgi-bin/koha/reports/guided_reports.pl?phase=Run+this+report&reports=3249&limit=10000""  target=""_blank"">Click here to run in a new window</a></p>

----------
*/

","SELECT
  ""YESTERDAY"" AS DESCRIPTION,
  ""CurDate() - INTERVAL 1 DAY"" AS EXPRESSION,
  CurDate() - INTERVAL 1 DAY AS RESULT
UNION
SELECT
  ""TODAY"",
  ""CurDate()"",
  CurDate()
UNION
SELECT
  ""TOMORROW"",
  ""CurDate() + INTERVAL 1 DAY"",
  CurDate() + INTERVAL 1 DAY
UNION
SELECT
  ""FIRST_DATE_LAST_YEAR"",
  ""MakeDate(Year(Now()), 1) - INTERVAL 1 YEAR"",
  MakeDate(Year(Now()), 1) - INTERVAL 1 YEAR
UNION
SELECT
  ""FIRST_DATE_THIS_YEAR"",
  ""MakeDate(Year(Now()), 1)"",
  MakeDate(Year(Now()), 1)
UNION
SELECT
  ""FIRST_DATE_NEXT_YEAR"",
  ""MakeDate(Year(Now()), 1) + INTERVAL 1 YEAR"",
  MakeDate(Year(Now()), 1) + INTERVAL 1 YEAR
UNION
SELECT
  ""FIRST_DATE_LAST_M"",
  ""AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)"",
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)
UNION
SELECT
  ""FIRST_DATE_THIS_M"",
  ""AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1)"",
  AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1)
UNION
SELECT
  ""FIRST_DATE_NEXT_M"",
  ""AddDate(Last_Day(SubDate(Now(), INTERVAL -1 MONTH)), 1)"",
  AddDate(Last_Day(SubDate(Now(), INTERVAL -1 MONTH)), 1)
UNION
SELECT
  ""Y_LAST_Y"",
  ""Year(Now() - INTERVAL 1 YEAR)"",
  Year(Now() - INTERVAL 1 YEAR)
UNION
SELECT
  ""Y_THIS_Y"",
  ""Year(Now())"",
  Year(Now())
UNION
SELECT
  ""Y_NEXT_Y"",
  ""Year(Now() + INTERVAL 1 YEAR)"",
  Year(Now() + INTERVAL 1 YEAR)
UNION
SELECT
  ""Y_LAST_M"",
  ""Year(Now() - INTERVAL 1 MONTH)"",
  Year(Now() - INTERVAL 1 MONTH)
UNION
SELECT
  ""Y_THIS_M"",
  ""Year(Now())"",
  Year(Now())
UNION
SELECT
  ""Y_NEXT_M"",
  ""Year(Now() + INTERVAL 1 MONTH)"",
  Year(Now() + INTERVAL 1 MONTH)
UNION
SELECT
  ""M_LAST_M"",
  ""Month(Now() - INTERVAL 1 MONTH)"",
  Month(Now() - INTERVAL 1 MONTH)
UNION
SELECT
  ""M_THIS_M"",
  ""Month(Now())"",
  Month(Now())
UNION
SELECT
  ""M_NEXT_M"",
  ""Month(Now() + INTERVAL 1 MONTH)"",
  Month(Now() + INTERVAL 1 MONTH)
UNION
SELECT
  ""D_1_YEAR_AGO"",
  ""CurDate() - INTERVAL 1 YEAR"",
  CurDate() - INTERVAL 1 YEAR
UNION
SELECT
  ""D_TODAY"",
  ""CurDate()"",
  CurDate()
UNION
SELECT
  ""D_1_YEAR_FROM_NOW"",
  ""CurDate() + INTERVAL 1 YEAR"",
  CurDate() + INTERVAL 1 YEAR
UNION
SELECT
  ""D_THREE_SUNDAYS_AGO"",
  ""Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY) - INTERVAL 2 WEEK"",
  Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY) - INTERVAL 2 WEEK
UNION
SELECT
  ""D_TWO_SUNDAYS_AGO"",
  ""Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY) - INTERVAL 1 WEEK"",
  Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY) - INTERVAL 1 WEEK
UNION
SELECT
  ""D_LAST_SUNDAY"",
  ""Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY)"",
  Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY)
UNION
SELECT
  ""D_THIS_SUNDAY"",
  ""Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) - 1 DAY)"",
  Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) - 1 DAY)
UNION
SELECT
  ""D_NEXT_SUNDAY"",
  ""Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) - 1 DAY) + INTERVAL 1 WEEK"",
  Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) - 1 DAY) + INTERVAL 1 WEEK",,,,,,,,
R.003250,"/*
R.003250

----------

Name: GHW - Damage display
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-08-14 15:38:39
Modified on: 2021-01-12 23:47:22
Date last run: 2022-10-03 14:26:45

----------

Public: 0
Expiry: 1

----------

Required for new ""Damaged item"" pop-up on checkin page.

----------
*/

","SELECT
  Concat(
    '""><h2>Damaged item message</h2><h3 id=""damageditem"" class=""problem"">Item ',
    items.barcode,
    ' marked with DAMAGED status of ""',
    damageds.lib,
    '"" on ',
    IF(items.damaged_on is null, 'unknown date', Date_Format(items.damaged_on, '%Y-%m-%d')),
    '.</h3><p>DAMAGED statuses must be removed manually - they are not removed by the checkin process.</p>'
  ) AS MESSAGE,
  If(items.damaged > 0, 'block', 'none') AS DISPLAY,
  damageds.lib
FROM
  items
  JOIN (
    SELECT
      authorised_values.id,
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.imageurl,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'DAMAGED'
  ) damageds
    ON damageds.authorised_value = items.damaged
WHERE
  items.barcode = <<Enter item barcode number>>",,,,,,,,
R.003251,"/*
R.003251

----------

Name: GHW - Holds Queue
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-08-16 14:59:53
Modified on: 2021-02-08 14:35:58
Date last run: 2022-10-03 12:33:56

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=""noPrint"">
<p>Print holds queue report</p>
<ul><li>Shows items in the current holds queue</li>
<li>at the location you specify</li>
<li>grouped by specified location, items home branch, call number, author, and title</li>
<li>contains links to the bibliographic records</li>
</ul><br />
</div>

----------
*/

","SELECT
  Concat_Ws('<br />', 
    Concat('Current: ', hold_fill_targets.source_branchcode),
    Concat('Owned by: ', items.homebranch), 
    Concat('Last seen: ', items.datelastseen),
    (Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">Go to biblio</a>'))
  ) AS INFO,
  Concat_Ws('<br />', 
    If(LOCATIONS.lib = PERM_LOCATIONS.lib, LOCATIONS.lib, Concat(PERM_LOCATIONS.lib, "" ("", LOCATIONS.lib, "")"")), 
    ITEMTYPESS.description,
    CCODES.lib, 
    items.itemcallnumber, 
    items.copynumber
  ) AS CALL_NUMBER,
  Concat_Ws('<br />', 
    biblio.author, 
    (Concat_Ws('<br />', 
      biblio.title, 
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'))
    )
  ) AS AUTHOR_TITLE,
  Upper(items.barcode) AS BARCODE
FROM
  biblio LEFT JOIN
  ((hold_fill_targets LEFT JOIN
  items ON hold_fill_targets.itemnumber = items.itemnumber) LEFT JOIN
  biblio_metadata ON items.biblionumber = biblio_metadata.biblionumber) ON
      biblio.biblionumber = biblio_metadata.biblionumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE') CCODES ON CCODES.authorised_value =
      items.ccode LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') PERM_LOCATIONS ON
      PERM_LOCATIONS.authorised_value = items.permanent_location LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') LOCATIONS ON
      LOCATIONS.authorised_value = items.location LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) ITEMTYPESS ON ITEMTYPESS.itemtype = items.itype
WHERE
  hold_fill_targets.source_branchcode LIKE <<Select your branch|LBRANCH>>
GROUP BY
  hold_fill_targets.itemnumber
ORDER BY
  items.homebranch,
  If(LOCATIONS.lib = PERM_LOCATIONS.lib, LOCATIONS.lib, Concat(PERM_LOCATIONS.lib, "" ("", LOCATIONS.lib, "")"")),
  ITEMTYPESS.description,
  CCODES.lib,
  items.itemcallnumber,
  biblio.author,
  biblio.title,
  items.barcode",,,,,,,,
R.003254,"/*
R.003254

----------

Name: Report testing - ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-08-18 22:03:31
Modified on: 2019-11-14 22:13:42
Date last run: 2019-11-14 22:20:40

----------

Public: 0
Expiry: 300

----------

Testing closure report for Mana

----------
*/

","SELECT 
  special_holidays.branchcode AS BRANCH, 
  special_holidays.title AS TITLE, 
  special_holidays.description AS DESCRIPTION, 
  Str_To_Date( 
    Concat( 
      special_holidays.month, '/', special_holidays.day, '/', special_holidays.year 
    ), 
    '%m/%d/%Y' 
  ) AS UPCOMING_DATE, 
  Date_Format( 
    Str_To_Date( 
      Concat(special_holidays.month, '/', special_holidays.day, '/', special_holidays.year), 
      '%m/%d/%Y' 
    ), 
    '%W' 
  ) AS DAY_OF_WEEK, 
  IF(special_holidays.year IS NULL, ""X"", Concat(special_holidays.year, "" only"" )) AS REPEATS 
FROM 
  special_holidays 
WHERE 
    (special_holidays.branchcode LIKE @brn:=<<Enter your branch|branches>> COLLATE utf8mb4_unicode_ci) 
  AND 
    Str_To_Date( 
      Concat(special_holidays.month, '/', special_holidays.day, '/', special_holidays.year), '%m/%d/%Y' 
    ) > Now() - INTERVAL 1 DAY 
UNION 
SELECT 
  repeatable_holidays.branchcode AS BRANCH, 
  repeatable_holidays.title AS TITLE, 
  repeatable_holidays.description AS DESCRIPTION, 
  Str_To_Date( 
    Concat( 
      repeatable_holidays.month, 
      '/', 
      repeatable_holidays.day, 
      '/', 
      (If(repeatable_holidays.month >= Month(CurDate()), Year(CurDate()), Year(CurDate()) + 1)) 
    ), 
    '%m/%d/%Y' 
  ) AS UPCOMING_DATE, 
  If(repeatable_holidays.weekday = 0, 'Every Sunday', 
    If(repeatable_holidays.weekday = 1, 'Every Monday', 
      If(repeatable_holidays.weekday = 2, 'Every Tuesday', 
        If(repeatable_holidays.weekday = 3, 'Every Wednesday', 
          If(repeatable_holidays.weekday = 4, 'Every Thursday', 
            If(repeatable_holidays.weekday = 5, 'Every Friday', 
              If(repeatable_holidays.weekday = 6, 'Every Saturday', 
              Date_Format( 
                Str_To_Date( 
                  Concat( 
                    repeatable_holidays.month, 
                    '/', 
                    repeatable_holidays.day, 
                    '/', 
                    (If(repeatable_holidays.month >= Month(CurDate()), Year(CurDate()), Year(CurDate()) + 1)) 
                  ), 
                  '%m/%d/%Y'), 
                  '%W' 
                ) 
              ) 
            ) 
          ) 
        ) 
      ) 
    ) 
  ) AS DAY_OF_WEEK, 
  If(repeatable_holidays.weekday IS NULL, ""Repeats annually"", ""Repeats weekly"") AS REPEATS 
FROM 
    repeatable_holidays 
WHERE 
    (repeatable_holidays.branchcode LIKE @brn 
  AND 
    Str_To_Date( 
      Concat( 
        repeatable_holidays.month, 
        '/', 
        repeatable_holidays.day, 
        '/', 
        (If(repeatable_holidays.month >= Month(CurDate()), Year(CurDate()), Year(CurDate()) + 1)) 
      ), 
    '%m/%d/%Y') > Now() - INTERVAL 1 DAY) 
  OR 
    (repeatable_holidays.branchcode LIKE @brn 
  AND 
    Str_To_Date( 
      Concat( 
        repeatable_holidays.month, 
        '/', 
        repeatable_holidays.day, 
        '/', 
        (If(repeatable_holidays.month >= Month(CurDate()), Year(CurDate()), Year(CurDate()) + 1)) 
      ), 
    '%m/%d/%Y') IS NULL) 
ORDER BY 
  BRANCH, 
  UPCOMING_DATE",,,,,,,,
R.003256,"/*
R.003256

----------

Name: GHW - School attributes
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-08-22 13:32:13
Modified on: 2021-08-15 22:20:53
Date last run: 2021-08-16 00:16:48

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat(
    ""<a href='/cgi-bin/koha/circ/circulation.pl?borrowernumber="", 
    borrowers.borrowernumber, 
    ""' target='_blank'>Patron</a>""
  ) AS LINK_TO_PATRON,
  borrowers.cardnumber,
  Concat_Ws("""", 
    If(
      borrowers.surname = """", 
      ""-"", 
      borrowers.surname
    ), 
    "" / "", 
    If(
      borrowers.firstname = """", 
      ""-"", 
      borrowers.firstname
    ), 
    If(
      borrowers.othernames = """", 
      "" "", 
      Concat("" - ("", borrowers.othernames, "")"")
    )
  ) AS NAME,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.email,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateofbirth,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  Coalesce(grade.lib, ""~"") AS GRADE,
  Coalesce(teacher.lib, ""~"") AS TEACHER
FROM
  borrowers
  LEFT JOIN (
    SELECT
      borrower_attributes.borrowernumber,
      authorised_values.lib,
      borrower_attributes.attribute
    FROM
      borrower_attributes
      JOIN authorised_values
        ON borrower_attributes.attribute = authorised_values.authorised_value
    WHERE
      borrower_attributes.code = 'GRADE'
    GROUP BY
      borrower_attributes.borrowernumber,
      borrower_attributes.attribute
  ) grade
    ON borrowers.borrowernumber = grade.borrowernumber
  LEFT JOIN (
    SELECT
      borrower_attributes.borrowernumber,
      authorised_values.lib,
      borrower_attributes.attribute
    FROM
      borrower_attributes
      JOIN authorised_values
        ON borrower_attributes.attribute = authorised_values.authorised_value
    WHERE
      borrower_attributes.code = 'USD113_T'
    GROUP BY
      borrower_attributes.borrowernumber,
      borrower_attributes.attribute
  ) teacher
    ON teacher.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Choose your library|ZBRAN>> AND
  borrowers.categorycode LIKE <<Choose a borrower category|LBORROWERCAT>> AND
  Coalesce(grade.attribute, ""~"") LIKE '%' AND
  Coalesce(teacher.attribute, ""~"") LIKE '%'
GROUP BY
  Coalesce(grade.lib, ""~""),
  borrowers.borrowernumber
ORDER BY
  borrowers.surname,
  borrowers.firstname",,,,,,,,
R.003257,"/*
R.003257

----------

Name: GHW - Patron output for input ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-08-24 00:37:54
Modified on: 2020-04-23 02:28:16
Date last run: 2021-05-18 17:40:53

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.cardnumber,
  borrowers.surname,
  borrowers.firstname,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.country,
  borrowers.branchcode,
  borrowers.categorycode
FROM
  borrowers
WHERE
  borrowers.branchcode NOT LIKE ""HIGH_CC"" AND
  borrowers.branchcode NOT LIKE ""PH%"" AND
  borrowers.branchcode LIKE <<Choose your library|branches>> AND
  borrowers.categorycode <> ""STAFF"" AND
  borrowers.cardnumber NOT LIKE ""0%"" AND
  borrowers.cardnumber IS NOT NULL AND
  borrowers.cardnumber NOT LIKE """"",,,,,,,,
R.003258,"/*
R.003258

----------

Name: Backtrack itypes
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-09-05 20:57:00
Modified on: 2019-09-06 01:39:27
Date last run: 2021-09-07 20:26:36

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branch_itype.branchname,
  branch_itype.description,
  Coalesce(statisticsall.CKO_REN, 0) AS CKO_REN_ALL,
  Coalesce(statisticsadult.CKO_REN, 0) AS CKO_REN_ADULT,
  Coalesce(statisticsya.CKO_REN, 0) AS CKO_REN_YA,
  Coalesce(statisticschildren.CKO_REN, 0) AS CKO_CHILDRENS,
  Coalesce(statisticsother.CKO_REN, 0) AS CKO_REN_OTHER
FROM
  (SELECT
      branches.branchname,
      itemtypes.description,
      branches.branchcode,
      itemtypes.itemtype
    FROM
      branches,
      itemtypes
    WHERE
      branches.branchcode LIKE <<Choose check-out library|LBRANCH>>) branch_itype
  LEFT JOIN (SELECT
      Coalesce(statistics.branch, ""NEKLS"") AS branch,
      Coalesce(statistics.itemtype, ""BOOK"") AS itemtype,
      Count(*) AS CKO_REN
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 2 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 2 MONTH)
    GROUP BY
      Coalesce(statistics.branch, ""NEKLS""),
      Coalesce(statistics.itemtype, ""BOOK"")
    ORDER BY
      branch,
      itemtype) statisticsall ON branch_itype.branchcode = statisticsall.branch AND
    branch_itype.itemtype = statisticsall.itemtype
  LEFT JOIN (SELECT
      Coalesce(statistics.branch, ""NEKLS"") AS branch,
      Coalesce(statistics.itemtype, ""BOOK"") AS itemtype,
      Count(*) AS CKO_REN
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 2 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 2 MONTH) AND
      (Coalesce(statistics.location, ""CART"") = 'ADULT' OR
        Coalesce(statistics.location, ""CART"") = 'LVPLADULT')
    GROUP BY
      Coalesce(statistics.branch, ""NEKLS""),
      Coalesce(statistics.itemtype, ""BOOK"")
    ORDER BY
      branch,
      itemtype) statisticsadult ON branch_itype.branchcode = statisticsadult.branch AND
    branch_itype.itemtype = statisticsadult.itemtype
  LEFT JOIN (SELECT
      Coalesce(statistics.branch, ""NEKLS"") AS branch,
      Coalesce(statistics.itemtype, ""BOOK"") AS itemtype,
      Count(*) AS CKO_REN
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 2 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 2 MONTH) AND
      Coalesce(statistics.location, ""CART"") <> 'ADULT' AND
      Coalesce(statistics.location, ""CART"") <> 'LVPLADULT' AND
      Coalesce(statistics.location, ""CART"") <> 'YOUNGADULT' AND
      Coalesce(statistics.location, ""CART"") <> 'LVPLYA' AND
      Coalesce(statistics.location, ""CART"") <> 'CHILDRENS' AND
      Coalesce(statistics.location, ""CART"") <> 'LVPLCHILD'
    GROUP BY
      Coalesce(statistics.branch, ""NEKLS""),
      Coalesce(statistics.itemtype, ""BOOK"")
    ORDER BY
      branch,
      itemtype) statisticsother ON branch_itype.branchcode = statisticsother.branch AND
    branch_itype.itemtype = statisticsother.itemtype
  LEFT JOIN (SELECT
      Coalesce(statistics.branch, ""NEKLS"") AS branch,
      Coalesce(statistics.itemtype, ""BOOK"") AS itemtype,
      Count(*) AS CKO_REN
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 2 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 2 MONTH) AND
      (Coalesce(statistics.location, ""CART"") = 'YOUNGADULT' OR
        Coalesce(statistics.location, ""CART"") = 'LVPLYA')
    GROUP BY
      Coalesce(statistics.branch, ""NEKLS""),
      Coalesce(statistics.itemtype, ""BOOK"")
    ORDER BY
      branch,
      itemtype) statisticsya ON statisticsya.itemtype = branch_itype.itemtype AND
    statisticsya.branch = branch_itype.branchcode
  LEFT JOIN (SELECT
      Coalesce(statistics.branch, ""NEKLS"") AS branch,
      Coalesce(statistics.itemtype, ""BOOK"") AS itemtype,
      Count(*) AS CKO_REN
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 2 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 2 MONTH) AND
      (Coalesce(statistics.location, ""CART"") = 'CHILDRENS' OR
        Coalesce(statistics.location, ""CART"") = 'LVPLCHILD')
    GROUP BY
      Coalesce(statistics.branch, ""NEKLS""),
      Coalesce(statistics.itemtype, ""BOOK"")
    ORDER BY
      branch,
      itemtype) statisticschildren ON statisticschildren.itemtype = branch_itype.itemtype AND
    statisticschildren.branch = branch_itype.branchcode
GROUP BY
  branch_itype.branchname,
  branch_itype.description
ORDER BY
  branch_itype.branchname,
  branch_itype.description",,,,,,,,
R.003259,"/*
R.003259

----------

Name: GHW ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-09-06 17:53:26
Modified on: 2019-09-06 17:54:22
Date last run: 2019-09-06 17:55:43

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  If(
    issuingrules.branchcode = ""*"",
    "" All libraries"",
    branch_names.branchname
  ) AS LIBRARY,
  Concat_Ws("""",
    If(
      issuingrules.categorycode LIKE ""*"",
      "" All patrons"",
      borrower_categories.description
    ),
    If(
      borrower_categories.category_type = ""A"",
      "" - (Adult)"",
      If(
        borrower_categories.category_type = ""C"",
        "" - (Child)"",
        If(
          borrower_categories.category_type = ""S"",
          "" - (Staff)"",
          If(
            borrower_categories.category_type = ""I"",
            "" - (Organization)"",
            If(
              borrower_categories.category_type = ""P"",
              "" - (Professional)"",
              If(
                borrower_categories.category_type = ""S"",
                "" - (Statistical)"",
                """"
              )
            )
          )
        )
      )
    )
  ) AS PATRON_CATEGORY,
  If(issuingrules.itemtype LIKE ""*"", "" All item types"", item_types.description) AS ITEM_TYPE,
  If(issuingrules.maxissueqty IS NULL, ""Unlimited"", issuingrules.maxissueqty) AS ITEMS_ALLOWED,
  Concat(issuingrules.issuelength, "" "", issuingrules.lengthunit) AS LOAN_PERIOD,
  issuingrules.renewalsallowed AS RENEWALS_ALLOWED,
  Concat(issuingrules.renewalperiod, "" "", issuingrules.lengthunit) AS RENEWAL_PERIOD,
  Concat_Ws("""",
    If(
      issuingrules.hardduedate IS NULL,
      """",
      If(
        issuingrules.hardduedatecompare = ""-1"",
        ""Items must be returned before "",
        If(
          issuingrules.hardduedatecompare = ""0"",
          ""Items must be turned in before "",
          If(
            issuingrules.hardduedatecompare = ""1"",
            ""Items must be turned in after "",
            ""X error X""
          )
        )
      )
    ),
    issuingrules.hardduedate
  ) AS ALL_ITEMS_DUE,
  If(
    issuingrules.auto_renew = ""no"",
    """",
    Concat_Ws("""",
      ""Items are set to auto-renew "",
      issuingrules.norenewalbefore,
      "" before they are due.""
    )
  ) AS auto_renew
FROM
  issuingrules
  LEFT JOIN (
    SELECT
      categories.categorycode,
      categories.description,
      categories.category_type
    FROM
      categories
  ) borrower_categories
    ON borrower_categories.categorycode = issuingrules.categorycode
  LEFT JOIN (
    SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes
  ) item_types
    ON item_types.itemtype = issuingrules.itemtype
  LEFT JOIN (
    SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches
  ) branch_names
    ON branch_names.branchcode = issuingrules.branchcode
WHERE
  (If(issuingrules.branchcode = ""*"", "" All libraries"", branch_names.branchname) LIKE ""%All lib%"" OR
    If(issuingrules.branchcode = ""*"", "" All libraries"", issuingrules.branchcode) LIKE <<Select your library|branches>>)
ORDER BY
  LIBRARY,
  If(borrower_categories.category_type = ""A"", ""Adult"", If(borrower_categories.category_type = ""C"", ""Child"", If(borrower_categories.category_type = ""S"", ""Staff"", If(borrower_categories.category_type = ""I"", ""Organization"", If(borrower_categories.category_type = ""P"", ""Professional"", If(borrower_categories.category_type = ""S"", ""Statistical"", """")))))),
  issuingrules.categorycode,
  ITEM_TYPE",,,,,,,,
R.003261,"/*
R.003261

----------

Name: GHW - Deleted items list by date the item was marked ""Lost""
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-09-10 10:46:16
Modified on: 2019-09-10 10:56:32
Date last run: 2022-08-26 11:25:07

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Lists items that have been marked as lost and have been deleted</p>
<ul><li>Shows items marked lost during the date range you specify that have already been deleted</li>
<li>at the library you specify</li>
<li>grouped by item number</li>
<li>sorted in the standard Next classification order</li>
</ul><br />
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3261&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  deleteditems.barcode,
  deleteditems.homebranch,
  deleteditems.holdingbranch,
  location.lib AS LOCATION,
  itemtypes.description AS ITYPE,
  ccode.lib AS CCODE,
  deleteditems.itemcallnumber,
  Coalesce(biblio.author, deletedbiblio.author) AS AUTHOR,
  Coalesce(biblio.title, deletedbiblio.title) AS TITLE,
  deleteditems.price,
  deleteditems.replacementprice,
  deleteditems.timestamp AS DELETED_ON,
  losts.lib,
  deleteditems.itemlost_on,
  deleteditems.withdrawn,
  deleteditems.withdrawn_on
FROM
  deleteditems
  LEFT JOIN biblio
    ON deleteditems.biblionumber = biblio.biblionumber
  LEFT JOIN deletedbiblio
    ON deleteditems.biblionumber = deletedbiblio.biblionumber
  LEFT JOIN itemtypes
    ON deleteditems.itype = itemtypes.itemtype
  LEFT JOIN (
    SELECT
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
    GROUP BY
      authorised_values.authorised_value,
      authorised_values.lib
  ) ccode
    ON deleteditems.ccode = ccode.authorised_value
  LEFT JOIN (
    SELECT
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC'
    GROUP BY
      authorised_values.authorised_value,
      authorised_values.lib
  ) location
    ON deleteditems.location = location.authorised_value
  LEFT JOIN (
    SELECT
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOST'
  ) losts
    ON losts.authorised_value = deleteditems.itemlost
WHERE
  deleteditems.homebranch LIKE <<Choose item home library|LBRANCH>> AND
  Coalesce(deleteditems.location, ""-"") LIKE <<Choose location|LLOC>> AND
  Coalesce(deleteditems.itype, ""-"") LIKE <<Choose item type|LITYPES>> AND
  Coalesce(deleteditems.ccode, ""-"") LIKE <<Choose collection code|LCCODE>> AND
  deleteditems.itemlost_on BETWEEN <<Between the beginning of the day on|date>> AND (<<and the end of the day on|date>> + INTERVAL 1 DAY)
GROUP BY
  deleteditems.itemnumber
ORDER BY
  deleteditems.homebranch,
  LOCATION,
  ITYPE,
  CCODE,
  AUTHOR,
  TITLE,
  deleteditems.itemcallnumber",,,,,,,,
R.003262,"/*
R.003262

----------

Name: GHW - Multiple requests table
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-09-10 11:38:23
Modified on: 2019-09-11 16:10:30
Date last run: 2022-10-03 14:26:49

----------

Public: 0
Expiry: 3600

----------



----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', reservess.biblionumber, '\"" target=""_blank"">Link to title</a>') AS GO_TO_RECORD,
  Concat_Ws(""<br />"", reservess.title, reservess.GMD) AS title,
  reservess.Count_reserve_id AS REQUESTS_AT_THIS_LIBRARY,
  Coalesce(localitems.Count_itemnumber, Concat(""<span style='color: red;'>0</span>"")) AS YOUR_LIBRARY_OWNS,
  totalitems.Count_itemnumber AS SYSTEM_WIDE_ITEM_COUNT,
  reservesx.Count_reserve_id AS SYSTEM_WIDE_REQUEST_COUNT
FROM
  (
    SELECT
      branches.branchname,
      branches.branchcode
    FROM
      branches
  ) branchess
  JOIN (
    SELECT
      reserves.branchcode,
      reserves.biblionumber,
      Count(reserves.reserve_id) AS Count_reserve_id,
      biblio.title,
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]') AS GMD
    FROM
      reserves
      JOIN biblio
        ON reserves.biblionumber = biblio.biblionumber
      JOIN biblio_metadata
        ON biblio_metadata.biblionumber = biblio.biblionumber
    WHERE
      reserves.found IS NULL
    GROUP BY
      reserves.branchcode,
      reserves.biblionumber
    ORDER BY
      Count_reserve_id DESC
  ) reservess
    ON reservess.branchcode = branchess.branchcode
  LEFT JOIN (
    SELECT
      items.biblionumber,
      Count(DISTINCT items.itemnumber) AS Count_itemnumber
    FROM
      items
      JOIN reserves
        ON items.biblionumber = reserves.biblionumber
    GROUP BY
      items.biblionumber
  ) totalitems
    ON totalitems.biblionumber = reservess.biblionumber
  LEFT JOIN (
    SELECT
      items.biblionumber,
      items.homebranch,
      Count(DISTINCT items.itemnumber) AS Count_itemnumber
    FROM
      items
      JOIN reserves
        ON reserves.biblionumber = items.biblionumber
    WHERE
      items.homebranch = <<library1>>
    GROUP BY
      items.biblionumber
  ) localitems
    ON localitems.biblionumber = reservess.biblionumber
  INNER JOIN (
    SELECT
      reserves.biblionumber,
      Count(reserves.reserve_id) AS Count_reserve_id,
      reserves.found
    FROM
      reserves
    WHERE
      reserves.found IS NULL
    GROUP BY
      reserves.biblionumber,
      reserves.found
  ) reservesx
    ON reservesx.biblionumber = reservess.biblionumber
WHERE
  branchess.branchcode = <<library2>> AND
  ((reservess.Count_reserve_id > 1 AND
      Coalesce(localitems.Count_itemnumber, 0) = 0) OR
    (reservess.Count_reserve_id / totalitems.Count_itemnumber > 3))
GROUP BY
  Concat_Ws("" "", reservess.title, reservess.GMD),
  reservess.Count_reserve_id,
  totalitems.Count_itemnumber,
  reservesx.Count_reserve_id,
  reservess.biblionumber,
  localitems.Count_itemnumber,
  reservess.title,
  reservess.GMD
ORDER BY
  REQUESTS_AT_THIS_LIBRARY DESC,
  Coalesce(localitems.Count_itemnumber, 0) DESC,
  totalitems.Count_itemnumber ASC",,,,,,,,
R.003263,"/*
R.003263

----------

Name: GHW - 3:1 requests ratio report
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-09-10 11:59:57
Modified on: 2019-11-04 15:28:45
Date last run: 2022-09-30 15:40:49

----------

Public: 0
Expiry: 10

----------

<div id=reportinfo>
<p>Presents a list of items that have a higher than 3:1 requests to copies ratio.</p>
<ul><li>Shows titles that currently have more than 3 requests per copy</li>
<li>system wide</li>
<li>grouped by biblio number</li>
<li>sorted by highest ratio to lowest ratio</li>
<li>contains links to the bibliographic records</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Notes go here.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports= XX PUT REPORTNUMBER HERE and remove XXs and Spaces XX &phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">Link to title</a>') AS 'LINK_TO_TITLE',
  Concat_Ws(""<br />"", biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]')) AS TITLE,
  Count(DISTINCT reserves.borrowernumber) AS HOLDCOUNT,
  Count(DISTINCT items.itemnumber) AS ITEMCOUNT,
  Concat(Format(Count(DISTINCT reserves.borrowernumber) / Count(DISTINCT items.itemnumber), 2), "" : 1"") AS RATIO,
  GROUP_CONCAT(DISTINCT items.homebranch SEPARATOR ' // ') AS HOMEBRANCHES,
  GROUP_CONCAT(DISTINCT itypess.description SEPARATOR ' // ') AS ITYPES,
  GROUP_CONCAT(DISTINCT items.itemcallnumber SEPARATOR ' // ') AS CALLNUMBERS,
  GROUP_CONCAT(DISTINCT nfl.lib SEPARATOR ' ') AS NOTLOAN
FROM
  reserves
  LEFT JOIN items
    ON items.biblionumber = reserves.biblionumber
  LEFT JOIN biblio
    ON reserves.biblionumber = biblio.biblionumber
  INNER JOIN biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'NOT_LOAN'
  ) nfl
    ON nfl.authorised_value = items.notforloan
  LEFT JOIN (
    SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes
  ) itypess
    ON itypess.itemtype = items.itype
WHERE
  items.itemlost = 0 AND
  items.damaged = 0
GROUP BY
  biblio.biblionumber,
  biblio_metadata.metadata
HAVING
  (Count(DISTINCT reserves.borrowernumber) / Count(DISTINCT items.itemnumber)) > 3
ORDER BY
  (Count(DISTINCT reserves.borrowernumber) / Count(DISTINCT items.itemnumber)) DESC",,,,,,,,
R.003265,"/*
R.003265

----------

Name: GHW -MAFIA 
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-09-12 00:38:59
Modified on: 2019-09-12 01:02:48
Date last run: 2022-09-13 18:11:00

----------

Public: 0
Expiry: 300

----------

Collated shelf check list

Missing - marked missing between first day of the month 2 months ago and two Sundays ago
Assumed lost - marked missing between first day of the month 2 months ago and two Sundays ago
F
In transit - marked missing between first day of the month 2 months ago and two Sundays ago
In process - marked missing between first day of the month 2 months ago and two Sundays ago
Available soon (on order) - Ordered more than 3 months ago

----------
*/

","SELECT
  Concat_Ws("""", '<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">Link to title</a>') AS LINK,
  Concat(""-"", items.barcode, ""-"") AS BC,
  items.homebranch AS OWNING_LIB,
  items.holdingbranch AS CURRENT_LIB,
  locs.lib AS LOCATION,
  Concat(itypes.description, "" ("", items.itype, "")"") AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber AS CALL_NUMBER,
  biblio.author AS AUTHOR,
  biblio.title AS TITLE,
  items.datelastseen AS LAST_SEEN_ON,
  Concat_Ws("""", ""Sent from "", branchtransfers.frombranch, "" to "", branchtransfers.tobranch, "" on "", branchtransfers.datesent) AS STATUS
FROM
  (items
  JOIN branchtransfers
    ON items.itemnumber = branchtransfers.itemnumber)
  JOIN biblio
    ON items.biblionumber = biblio.biblionumber
  LEFT JOIN (
    SELECT
      itemtypes.description,
      itemtypes.itemtype
    FROM
      itemtypes
  ) itypes
    ON itypes.itemtype = items.itype
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
  ) ccodes
    ON ccodes.authorised_value = items.ccode
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC'
  ) locs
    ON locs.authorised_value = items.location
WHERE
  items.datelastseen BETWEEN (AddDate(Last_Day(SubDate(Now(), INTERVAL 3 MONTH)), 1)) AND (Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY)) AND
  branchtransfers.datearrived IS NULL AND
  ((items.homebranch = <<Choose your library|branches>>) OR
    (branchtransfers.frombranch = <<Choose your library|branches>>) OR
    (branchtransfers.tobranch = <<Choose your library|branches>>))
GROUP BY
  locs.lib,
  ccodes.lib,
  items.barcode
UNION
SELECT
  Concat_Ws("""", '<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">Link to title</a>') AS LINK,
  Concat(""-"", items.barcode, ""-"") AS BC,
  items.homebranch AS OWNING_LIB,
  items.holdingbranch AS CURRENT_LIB,
  Coalesce(locs.lib, ""-"") AS LOCATION,
  Concat(itemtypes.description, "" ("", items.itype, "")"") AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber AS CALL_NUMBER,
  biblio.author AS AUTHOR,
  Concat_Ws("" "", biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]')) AS TITLE,
  items.datelastseen AS LAST_SEEN_ON,
  Concat_Ws("""", losts.lib, "" on "", items.itemlost_on) AS STATUS
FROM
  biblio
  JOIN biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber
  JOIN items
    ON items.biblionumber = biblio.biblionumber
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
    GROUP BY
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
  ) ccodes
    ON items.ccode = ccodes.authorised_value
  JOIN biblioitems
    ON biblioitems.biblionumber = biblio.biblionumber AND
      items.biblioitemnumber = biblioitems.biblioitemnumber
  JOIN itemtypes
    ON items.itype = itemtypes.itemtype
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'NOT_LOAN'
  ) nfl
    ON nfl.authorised_value = items.notforloan
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'DAMAGED'
  ) damageds
    ON damageds.authorised_value = items.damaged
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOST'
  ) losts
    ON losts.authorised_value = items.itemlost
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'WITHDRAWN'
  ) withdrawns
    ON withdrawns.authorised_value = items.withdrawn
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC'
  ) locs
    ON locs.authorised_value = items.location
WHERE
  items.onloan IS NULL AND
  items.homebranch = <<Choose your library|branches>> AND
  (items.itemlost = 9 OR
    items.itemlost = 3) AND
  items.itemlost_on BETWEEN (AddDate(Last_Day(SubDate(Now(), INTERVAL 3 MONTH)), 1)) AND (Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY))
GROUP BY
  items.itemlost_on,
  biblio.biblionumber,
  items.itemnumber,
  damageds.lib,
  items.damaged_on
UNION
SELECT
  Concat_Ws("""", '<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">Link to title</a>') AS LINK,
  Concat(""-"", items.barcode, ""-"") AS BC,
  items.homebranch AS OWNING_LIB,
  items.holdingbranch AS CURRENT_LIB,
  Coalesce(locs.lib, ""-"") AS LOCATION,
  Concat(itemtypes.description, "" ("", items.itype, "")"") AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber AS CALL_NUMBER,
  biblio.author AS AUTHOR,
  Concat_Ws("" "", biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]')) AS TITLE,
  items.datelastseen AS LAST_SEEN_ON,
  Concat_Ws("""", losts.lib, "" on "", items.itemlost_on) AS STATUS
FROM
  biblio
  JOIN biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber
  JOIN items
    ON items.biblionumber = biblio.biblionumber
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
    GROUP BY
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
  ) ccodes
    ON items.ccode = ccodes.authorised_value
  JOIN biblioitems
    ON biblioitems.biblionumber = biblio.biblionumber AND
      items.biblioitemnumber = biblioitems.biblioitemnumber
  JOIN itemtypes
    ON items.itype = itemtypes.itemtype
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'NOT_LOAN'
  ) nfl
    ON nfl.authorised_value = items.notforloan
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'DAMAGED'
  ) damageds
    ON damageds.authorised_value = items.damaged
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOST'
  ) losts
    ON losts.authorised_value = items.itemlost
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'WITHDRAWN'
  ) withdrawns
    ON withdrawns.authorised_value = items.withdrawn
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC'
  ) locs
    ON locs.authorised_value = items.location
WHERE
  items.onloan IS NULL AND
  items.homebranch = <<Choose your library|branches>> AND
  items.itemlost <> 9 AND
  items.itemlost <> 3 AND
  items.itemlost_on BETWEEN (AddDate(Last_Day(SubDate(Now(), INTERVAL 3 MONTH)), 1)) AND (Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY))
GROUP BY
  items.itemlost_on,
  biblio.biblionumber,
  items.itemnumber,
  damageds.lib,
  items.damaged_on
UNION
SELECT
  Concat_Ws("""", '<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">Link to title</a>') AS LINK,
  Concat(""-"", items.barcode, ""-"") AS BC,
  items.homebranch AS OWNING_LIB,
  items.holdingbranch AS CURRENT_LIB,
  Coalesce(locs.lib, ""-"") AS LOCATION,
  Concat(itemtypes.description, "" ("", items.itype, "")"") AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber AS CALL_NUMBER,
  biblio.author AS AUTHOR,
  Concat_Ws("" "", biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]')) AS TITLE,
  items.datelastseen AS LAST_SEEN_ON,
  Concat_Ws("""", Coalesce(locs.lib, ""NO SHELVING LOCATION""), "" since at least "", items.timestamp) AS STATUS
FROM
  biblio
  JOIN biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber
  JOIN items
    ON items.biblionumber = biblio.biblionumber
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
    GROUP BY
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
  ) ccodes
    ON items.ccode = ccodes.authorised_value
  JOIN biblioitems
    ON biblioitems.biblionumber = biblio.biblionumber AND
      items.biblioitemnumber = biblioitems.biblioitemnumber
  JOIN itemtypes
    ON items.itype = itemtypes.itemtype
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'NOT_LOAN'
  ) nfl
    ON nfl.authorised_value = items.notforloan
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'DAMAGED'
  ) damageds
    ON damageds.authorised_value = items.damaged
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOST'
  ) losts
    ON losts.authorised_value = items.itemlost
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'WITHDRAWN'
  ) withdrawns
    ON withdrawns.authorised_value = items.withdrawn
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC'
  ) locs
    ON locs.authorised_value = items.location
WHERE
  items.onloan IS NULL AND
  items.homebranch = <<Choose your library|branches>> AND
  (items.location = 'PROC' OR
    items.location = 'CATALOGING' OR
    items.location = 'CART' OR
    items.location IS NULL) AND
  items.timestamp BETWEEN (AddDate(Last_Day(SubDate(Now(), INTERVAL 3 MONTH)), 1)) AND (Date_Sub(Date(Now()), INTERVAL DayOfWeek(Now()) + 6 DAY))
GROUP BY
  biblio.biblionumber,
  items.itemnumber
UNION
SELECT
  Concat_Ws("""", '<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">Link to title</a>') AS LINK,
  Concat(""-"", items.barcode, ""-"") AS BC,
  items.homebranch AS OWNING_LIB,
  items.holdingbranch AS CURRENT_LIB,
  Coalesce(locs.lib, ""-"") AS LOCATION,
  Concat(itemtypes.description, "" ("", items.itype, "")"") AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber AS CALL_NUMBER,
  biblio.author AS AUTHOR,
  Concat_Ws("" "", biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]')) AS TITLE,
  items.datelastseen AS LAST_SEEN_ON,
  Concat_Ws("""", nfl.lib, "" since "", items.dateaccessioned) AS STATUS
FROM
  biblio
  JOIN biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber
  JOIN items
    ON items.biblionumber = biblio.biblionumber
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
    GROUP BY
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
  ) ccodes
    ON items.ccode = ccodes.authorised_value
  JOIN biblioitems
    ON biblioitems.biblionumber = biblio.biblionumber AND
      items.biblioitemnumber = biblioitems.biblioitemnumber
  JOIN itemtypes
    ON items.itype = itemtypes.itemtype
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'NOT_LOAN'
  ) nfl
    ON nfl.authorised_value = items.notforloan
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'DAMAGED'
  ) damageds
    ON damageds.authorised_value = items.damaged
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOST'
  ) losts
    ON losts.authorised_value = items.itemlost
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'WITHDRAWN'
  ) withdrawns
    ON withdrawns.authorised_value = items.withdrawn
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC'
  ) locs
    ON locs.authorised_value = items.location
WHERE
  items.homebranch = <<Choose your library|branches>> AND
  items.dateaccessioned <= AddDate(Last_Day(SubDate(Now(), INTERVAL 4 MONTH)), 1) AND
  items.notforloan = -1
GROUP BY
  biblio.biblionumber,
  items.itemnumber
ORDER BY
  OWNING_LIB,
  LOCATION,
  ITYPE,
  CCODE,
  CALL_NUMBER,
  AUTHOR,
  TITLE,
  BC",,,,,,,,
R.003267,"/*
R.003267

----------

Name: GHW - ISBN errors
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-09-25 09:45:18
Modified on: 2019-11-04 15:51:57
Date last run: 2019-11-04 15:52:00

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Generates a list of bibliographic records with parentheses in the 020$a field</p>
<ul><li>Shows records where the ISBN contains data that should go in the 020$q field rather than the $a field</li>
<li>lists records at all libraries</li>
<li>grouped and sorted by biblionumber</li>
</ul><br />
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3267&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3267"">Click here to download as a csv file</a></p>
</div>

----------
*/

","SELECT
  biblio.biblionumber,
  biblio.author,
  biblio.title,
  biblioitems.isbn,
  biblioitems.itemtype
FROM
  biblio
  JOIN biblioitems
    ON biblioitems.biblionumber = biblio.biblionumber
WHERE
  biblioitems.isbn LIKE '%(%' AND
  biblioitems.itemtype <> 'DIGITAL'
GROUP BY
  biblio.biblionumber
ORDER BY
  biblio.biblionumber DESC",,,,,,,,
R.003268,"/*
R.003268

----------

Name: GHW - ADMINREPORT - REGBRANCH cleanup
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-09-26 10:52:49
Modified on: 2019-09-26 13:34:10
Date last run: 2019-11-04 15:53:00

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.borrowernumber,
  borrowers.cardnumber,
  borrowers.surname,
  borrowers.firstname,
  borrowers.title,
  borrowers.othernames,
  borrowers.initials,
  borrowers.streetnumber,
  borrowers.streettype,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.country,
  borrowers.email,
  borrowers.phone,
  borrowers.mobile,
  borrowers.fax,
  borrowers.emailpro,
  borrowers.phonepro,
  borrowers.B_streetnumber,
  borrowers.B_streettype,
  borrowers.B_address,
  borrowers.B_address2,
  borrowers.B_city,
  borrowers.B_state,
  borrowers.B_zipcode,
  borrowers.B_country,
  borrowers.B_email,
  borrowers.B_phone,
  borrowers.dateofbirth,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  borrowers.date_renewed,
  borrowers.debarred,
  borrowers.contactname,
  borrowers.contactfirstname,
  borrowers.contacttitle,
  borrowers.guarantorid,
  borrowers.relationship,
  borrowers.ethnicity,
  borrowers.ethnotes,
  borrowers.sex,
  borrowers.sort1,
  borrowers.sort2,
  borrowers.altcontactfirstname,
  borrowers.altcontactsurname,
  borrowers.altcontactaddress1,
  borrowers.altcontactaddress2,
  borrowers.altcontactaddress3,
  borrowers.altcontactstate,
  borrowers.altcontactzipcode,
  borrowers.altcontactcountry,
  borrowers.altcontactphone,
  Concat_Ws(':', borrower_attributes.code, branches.branchname) AS patron_attributes
FROM
  borrowers
  INNER JOIN borrower_attributes
    ON borrower_attributes.borrowernumber = borrowers.borrowernumber
  INNER JOIN branches
    ON borrowers.branchcode = branches.branchcode
WHERE
  borrower_attributes.code = 'REGBRANCH' AND
  borrower_attributes.attribute IN [<<Enter REGBRANCH code>>]
ORDER BY
  borrowers.borrowernumber",,,,,,,,
R.003269,"/*
R.003269

----------

Name: GHW - ADMINREPORT - REGBRANCH cleanup 2
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-09-26 12:42:56
Modified on: 2019-09-26 12:57:07
Date last run: 2019-09-26 12:57:09

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.borrowernumber,
  Concat(""-"", borrowers.cardnumber, ""-"") AS cardnumber,
  borrowers.surname,
  borrowers.firstname,
  borrowers.title,
  borrowers.othernames,
  borrowers.initials,
  borrowers.streetnumber,
  borrowers.streettype,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.country,
  borrowers.email,
  borrowers.phone,
  borrowers.mobile,
  borrowers.fax,
  borrowers.emailpro,
  borrowers.phonepro,
  borrowers.B_streetnumber,
  borrowers.B_streettype,
  borrowers.B_address,
  borrowers.B_address2,
  borrowers.B_city,
  borrowers.B_state,
  borrowers.B_zipcode,
  borrowers.B_country,
  borrowers.B_email,
  borrowers.B_phone,
  borrowers.dateofbirth,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  borrowers.date_renewed,
  borrowers.debarred,
  borrowers.contactname,
  borrowers.contactfirstname,
  borrowers.contacttitle,
  borrowers.guarantorid,
  borrowers.relationship,
  borrowers.ethnicity,
  borrowers.ethnotes,
  borrowers.sex,
  borrowers.sort1,
  borrowers.sort2,
  borrowers.altcontactfirstname,
  borrowers.altcontactsurname,
  borrowers.altcontactaddress1,
  borrowers.altcontactaddress2,
  borrowers.altcontactaddress3,
  borrowers.altcontactstate,
  borrowers.altcontactzipcode,
  borrowers.altcontactcountry,
  borrowers.altcontactphone,
  Concat_Ws(':', 'REGBRANCH', branches.branchname) AS patron_attributes
FROM
  borrowers
  JOIN branches
    ON borrowers.branchcode = branches.branchcode
  LEFT JOIN (
    SELECT
      borrower_attributes.id,
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute
    FROM
      borrower_attributes
    WHERE
      borrower_attributes.code = 'REGBRANCH'
  ) attributess
    ON attributess.borrowernumber = borrowers.borrowernumber
WHERE
  attributess.attribute IS NULL AND
  Month(borrowers.dateenrolled) = Month(CurDate() - INTERVAL 0 MONTH) AND
  Year(borrowers.dateenrolled) = Year(CurDate() - INTERVAL 0 MONTH)
ORDER BY
  borrowers.borrowernumber",,,,,,,,
R.003271,"/*
R.003271

----------

Name: ADMINREPORT - Media 942c
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-09-30 01:41:46
Modified on: 2019-10-04 14:20:40
Date last run: 2021-05-27 21:31:25

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  CONCAT('') AS biblionumber,
  COUNT(*) AS BIB_ITYPE
FROM
  biblio_metadata
WHERE
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""c""]') = 'MEDIA'
UNION
SELECT
  biblio_metadata.biblionumber,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""c""]') AS BIB_ITYPE
FROM
  biblio_metadata
WHERE
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""c""]') = 'MEDIA'
GROUP BY
  biblio_metadata.biblionumber
LIMIT 1999",,,,,,,,
R.003272,"/*
R.003272

----------

Name: GHW - Email template report for miss-labeled deliveries ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-09-30 17:39:47
Modified on: 2019-10-02 15:49:00
Date last run: 2019-10-01 15:52:39

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat_Ws(
    """",
    'nexthelp@nekls.org',
    '<br /><br />',
    shippinginfo.frommail,
    '<br /><br />',
    'Items shipped with incorrect label',
    '<br /><br />', 
    'According to the logs in the system, an item was shipped from ', 
    '<span style=""text-decoration: underline;"">', 
    shippinginfo.fromname, 
    '</span>', 
    ' to ', 
    '<span style=""text-decoration: underline;"">', 
    shippinginfo.toname, 
    '</span>', 
    ' on ', 
    shippinginfo.DATE, 
    ' at ', 
    shippinginfo.TIME, 
    '<br /><br />', 
    'The details are as follow:<br /><br />', 
    Concat('BC: ', Upper(items.barcode), '<br />'), 
    Concat('Home library: ', items.homebranch, '<br />'), 
    Concat('Current library: ', items.holdingbranch, '<br />'), 
    Concat('Location: ', loction.lib, '<br />'), 
    Concat('Item type: ', itemtypes.description, '<br />'), 
    Concat('Collection code: ', ccodes.lib, '<br />'), 
    Concat('Call number: ', items.itemcallnumber, '<br />'), 
    Concat('Author: ', biblio.author, '<br />'), 
    Concat_Ws(
      ' ', 
      'Title: ', 
      biblio.title, 
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), 
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), 
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')
    ), 
    '<br /><br />', 
    'It appears that your staff used the incorrect shipping label because this item arrived recently in the delivery at ', 
    '<span style=""text-decoration: underline; font-weight: bold;"">', 
    Concat(receivingbranch.branchnotes, "" - "", receivingbranch.branchname), 
    '</span>', 
    ' instead of its intended destination.', 
    '<br /><br />', 
    'We are letting you know because we have had a significant problem with miss-labeled deliveries at ',
    receivingbranch.branchname,
    ' recently.', 
    '  We were hoping you could let your staff know about this so we can get the ', 
    '<span style=""text-decoration: underline; font-weight: bold;"">', 
    Concat(shippinginfo.tonotes, "" - "", shippinginfo.toname), 
    '</span>', 
    ' items shipped directly to ', 
    '<span style=""text-decoration: underline; font-weight: bold;"">', 
    Concat(shippinginfo.tonotes, "" - "", shippinginfo.toname), 
    '</span>', 
    ' instead of ', 
    '<span style=""text-decoration: underline; font-weight: bold;"">', 
    Concat(receivingbranch.branchnotes, "" - "", receivingbranch.branchname), 
    '</span>', '.', '<br /><br />', 
    'Thanks for your help - and if you have any questions (or if you are having a similar problem with miss-labeled deliveries), please let us know at nexthelp@nekls.org,<br /><br />George<br />nexthelp@nekls.org') AS LETTER
FROM
  items
  JOIN biblio
    ON items.biblionumber = biblio.biblionumber
  JOIN biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber AND
      items.biblionumber = biblio_metadata.biblionumber
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC'
  ) loction
    ON loction.authorised_value = items.location
  LEFT JOIN itemtypes
    ON itemtypes.itemtype = items.itype
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode'
  ) ccodes
    ON ccodes.authorised_value = items.ccode
  JOIN (
    SELECT
      branchtransfers.branchtransfer_id,
      Date_Format(branchtransfers.datesent, ""%Y.%m.%d"") AS DATE,
      Date_Format(branchtransfers.datesent, ""%h:%i %p"") AS TIME,
      branchtransfers.itemnumber,
      branchfrom.branchemail AS frommail,
      branchfrom.branchname AS fromname,
      branchfrom.branchnotes AS fromnotes,
      branchto.branchname AS toname,
      branchto.branchnotes AS tonotes
    FROM
      branchtransfers
      JOIN (
        SELECT
          branches.branchcode,
          branches.branchname,
          branches.branchnotes,
          branches.branchemail
        FROM
          branches
      ) branchfrom
        ON branchfrom.branchcode = branchtransfers.frombranch
      JOIN (
        SELECT
          branches.branchcode,
          branches.branchname,
          branches.branchnotes
        FROM
          branches
      ) branchto
        ON branchto.branchcode = branchtransfers.tobranch
    WHERE
      branchtransfers.branchtransfer_id = <<Transfer ID>>
    GROUP BY
      branchtransfers.branchtransfer_id,
      branchtransfers.itemnumber,
      branchfrom.branchemail,
      branchfrom.branchname,
      branchfrom.branchnotes,
      branchto.branchname,
      branchto.branchnotes
  ) shippinginfo
    ON shippinginfo.itemnumber = items.itemnumber
  JOIN branches
    ON items.homebranch = branches.branchcode,
  (
    SELECT
      branches.branchcode,
      branches.branchname,
      branches.branchnotes
    FROM
      branches
    WHERE
      branches.branchcode = <<Library receiving miss-labeled item|branches>>
  ) receivingbranch
GROUP BY
  items.itemnumber",,,,,,,,
R.003273,"/*
R.003273

----------

Name: GHW - Miss labeled discovery ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-09-30 22:29:07
Modified on: 2019-10-02 14:16:53
Date last run: 2019-10-01 15:49:58

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branchtransfers.branchtransfer_id,
  reportingbranch.branchcode,
  Upper(items.barcode) AS ITEM_BC,
  branchtransfers.itemnumber,
  branchtransfers.frombranch,
  branchtransfers.datesent,
  branchtransfers.tobranch,
  branchtransfers.datearrived,
  branchtransfers.comments,
  Concat('<a href=\""/cgi-bin/koha/reports/guided_reports.pl?reports=3272&phase=Run+this+report&param_name=Transfer+ID&sql_params=', branchtransfers.branchtransfer_id, '&param_name=Library+receiving+miss-labeled+item%7Cbranches&sql_params=', reportingbranch.branchcode, ' "" target=""_blank"">Report 3272</a>') AS REPORT
FROM
  items
  JOIN branchtransfers
    ON branchtransfers.itemnumber = items.itemnumber,
  (
    SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches
    WHERE
      branches.branchcode LIKE <<library|branches>>
  ) reportingbranch
WHERE
  items.barcode LIKE Concat(""%"", <<item barcode>>, ""%"")
GROUP BY
  branchtransfers.branchtransfer_id,
  reportingbranch.branchcode
ORDER BY
  branchtransfers.datesent DESC",,,,,,,,
R.003275,"/*
R.003275

----------

Name: GHW - ADMINREPORT - Quick count
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-10-01 01:00:55
Modified on: 2019-10-01 01:00:55
Date last run: 2019-10-01 02:39:12

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Count(*) AS COUNT
FROM
  items
WHERE
  items.itype = 'MEDIA'",,,,,,,,
R.003276,"/*
R.003276

----------

Name: GHW - Find unfilled/not-suspended requests for a library
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-10-02 16:50:52
Modified on: 2020-06-06 01:27:11
Date last run: 2022-02-18 14:24:56

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat('<a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', reserves.borrowernumber, '#reserves"" target=""_blank"">Open in new window</a>') AS LINK,
  Concat('https://staff.nextkansas.org/cgi-bin/koha/circ/circulation.pl?borrowernumber=', reserves.borrowernumber, '#reserves') AS URL,
  reserves.branchcode,
  Count(reserves.reserve_id) AS Count_reserve_id
FROM
  reserves
WHERE
  reserves.branchcode LIKE <<Choose your library|LBRANCH>> AND
  reserves.found IS NULL AND
  reserves.suspend = """"
GROUP BY
  reserves.borrowernumber,
  reserves.branchcode,
  reserves.found,
  reserves.suspend
ORDER BY
  reserves.branchcode,
  reserves.borrowernumber",,,,,,,,
R.003277,"/*
R.003277

----------

Name: GHW - ADMINREPORT - TONGANOXIE push
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-10-04 16:07:57
Modified on: 2019-10-10 08:50:15
Date last run: 2019-10-10 08:50:33

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  reserves.branchcode,
  Concat('<a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', reserves.borrowernumber, '#reserves "" target=""_blank"">Open in new window</a>') AS LINK,
  Count(reserves.reserve_id) AS Count_reserve_id,
  reserves.suspend_until
FROM
  reserves
WHERE
  reserves.branchcode LIKE <<Choose pickup library|LBRANCH>> AND
  reserves.found IS NULL AND
  reserves.suspend_until = <<Choose ""Suspended until date""|date>>
GROUP BY
  reserves.borrowernumber,
  reserves.branchcode,
  reserves.found,
  reserves.suspend,
  reserves.suspend_until
ORDER BY
  reserves.borrowernumber",,,,,,,,
R.003278,"/*
R.003278

----------

Name: GHW - message push ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-10-10 08:58:10
Modified on: 2019-10-10 08:59:36
Date last run: 2019-10-10 09:10:02

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  reserves.branchcode,
  Concat('<a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', reserves.borrowernumber, '#reserves "" target=""_blank"">Open in new window</a>') AS LINK,
  Count(reserves.reserve_id) AS Count_reserve_id,
  reserves.suspend_until,
  messagess.message
FROM
  reserves
  LEFT JOIN (
    SELECT
      messages.message_id,
      messages.borrowernumber,
      messages.branchcode,
      messages.message_type,
      messages.message,
      messages.message_date,
      messages.manager_id
    FROM
      messages
    WHERE
      messages.manager_id = 224610
  ) messagess
    ON messagess.borrowernumber = reserves.borrowernumber
WHERE
  reserves.branchcode LIKE <<Choose pickup location|LBRANCH>> AND
  reserves.found IS NULL AND
  reserves.suspend_until = <<Choose suspend until date|date>>
GROUP BY
  reserves.branchcode,
  reserves.suspend_until,
  messagess.message,
  reserves.borrowernumber,
  reserves.found,
  reserves.suspend
ORDER BY
  reserves.borrowernumber",,,,,,,,
R.003279,"/*
R.003279

----------

Name: GHW - List / virtualshelf report 006 - Export list to spreadsheet
Created by: George H Williams

----------

Group: Lists Module
     -

Created on: 2019-11-05 09:28:33
Modified on: 2019-11-07 14:19:49
Date last run: 2022-08-12 15:36:37

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class='noprint'>
<p>Converts a list into a format that can be downloaded as spreadsheet</p>
<ul><li>Displays all items currently attached to a list</li>
<li>at all libraries</li>
<li>grouped by list number, biblionumber, and item barcode number</li>
<li>sorted by home library, shelving location, item type, collection code, call number, author, and title</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Replaces report:</p>
<ul>
<li>1746 - Shelf List from a Private List</li>
<li>3021 - GHW - Print a list - variant</li>
<li>3063 - GHW - Print list by ID number</li>
</ul>
<p></p>
<p>A list's ID number will be the last 4 digits of the list's URL.</p>
<p></p>
<p>Items listed as ""Unavailable"" are either checked out or have a status of ""Not for loan,"" one of the ""Lost"" statuses, one of the ""Damaged"" statuses, or a </p>
<p></p>
<p>Once the report has been run, click on the ""Download"" button and select ""Comma separated text (.csv)"" to download the results to your computer where the sheet can be opened in Excel and modified as you see fit.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3279&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  virtualshelves.shelfname,
  items.homebranch,
  locations.lib AS location,
  itypes.description AS item_type,
  ccodes.lib AS collection_code,
  items.itemcallnumber,
  biblio.author,
  REGEXP_REPLACE(
    Concat_Ws("" "",
      biblio.title,
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), 
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'), 
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]')
    ), 
    '[[:space:]]+', 
    ' '
  ) AS FULL_TITLE,
  Concat(""-"", items.barcode, ""-"") AS barcode,
  If(
    (
      Coalesce(items.notforloan, 0) +
      Coalesce(items.damaged, 0) +
      Coalesce(items.itemlost, 0) +
      Coalesce(items.withdrawn, 0) +
      If(items.onloan IS NOT NULL, ""1"", ""0"")
    ) = 0, 
    """", 
    ""Unavailable""
  ) AS AVAILABLE
FROM
  virtualshelfcontents
  JOIN biblio
    ON biblio.biblionumber = virtualshelfcontents.biblionumber
  JOIN items
    ON items.biblionumber = biblio.biblionumber
  LEFT JOIN (
    SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes
  ) itypes
    ON itypes.itemtype = items.itype
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC'
  ) locations
    ON locations.authorised_value = items.location
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
  ) ccodes
    ON ccodes.authorised_value = items.ccode
  JOIN biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber
  JOIN virtualshelves
    ON virtualshelfcontents.shelfnumber = virtualshelves.shelfnumber
WHERE
  virtualshelfcontents.shelfnumber = <<Enter list number>> AND
  items.homebranch LIKE Concat(""%"", <<Choose your library|LBRANCH>>,""%"")
GROUP BY
  items.barcode,
  virtualshelfcontents.shelfnumber,
  biblio.biblionumber
ORDER BY
  items.homebranch,
  location,
  item_type,
  collection_code,
  items.itemcallnumber,
  biblio.author,
  biblio.title",,,,,,,,
R.003280,"/*
R.003280

----------

Name: GHW - Borrower county by library / city / state
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-11-08 14:37:15
Modified on: 2019-11-08 15:57:10
Date last run: 2021-12-14 15:22:08

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Counts borrowers by homebranch and city/state</p>
<ul><li>counts patrons currently in the system</li>
<li>at the library you specify, at the group of libraries you specify, or at all libraries</li>
<li>grouped by borrower home library, borrower city, and borrower state</li>
<li>sorted by home library, city, and state</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3280&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  information1.HOMEBRANCH,
  information1.city,
  information1.state,
  borrowers_total.Count_borrowernumber AS BORROWERS_TOTAL,
  borrowers_unepired.Count_borrowernumber AS BORROWERS_UNEXPIRED,
  If((borrowers_total.Count_borrowernumber - borrowers_unepired.Count_borrowernumber) = 0, """", (borrowers_total.Count_borrowernumber - borrowers_unepired.Count_borrowernumber)) AS BORROWERS_EXPIRED
FROM
  (
    SELECT
      borrowers.branchcode AS HOMEBRANCH,
      borrowers.city,
      borrowers.state
    FROM
      borrowers
    GROUP BY
      borrowers.branchcode,
      borrowers.city,
      borrowers.state
  ) information1
  INNER JOIN (
    SELECT
      borrowers.branchcode AS HOMEBRANCH,
      borrowers.city,
      borrowers.state,
      Count(borrowers.borrowernumber) AS Count_borrowernumber
    FROM
      borrowers
    GROUP BY
      borrowers.branchcode,
      borrowers.city,
      borrowers.state
  ) borrowers_total
    ON borrowers_total.city = information1.city AND
      borrowers_total.state = information1.state AND
      borrowers_total.HOMEBRANCH = information1.HOMEBRANCH
  LEFT JOIN (
    SELECT
      borrowers.branchcode AS HOMEBRANCH,
      borrowers.city,
      borrowers.state,
      Count(borrowers.borrowernumber) AS Count_borrowernumber
    FROM
      borrowers
    WHERE
      borrowers.dateexpiry >= Now()
    GROUP BY
      borrowers.branchcode,
      borrowers.city,
      borrowers.state
  ) borrowers_unepired
    ON borrowers_unepired.city = information1.city AND
      borrowers_unepired.state = information1.state AND
      borrowers_unepired.HOMEBRANCH = information1.HOMEBRANCH
WHERE
  information1.HOMEBRANCH LIKE <<Choose your library|LBRANCH>>
GROUP BY
  information1.HOMEBRANCH,
  information1.city,
  information1.state,
  borrowers_total.Count_borrowernumber,
  borrowers_unepired.Count_borrowernumber",,,,,,,,
R.003281,"/*
R.003281

----------

Name: GHW - ADMINREPORT - is this large print?
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-11-21 15:16:31
Modified on: 2019-11-21 15:16:31
Date last run: 2019-11-21 15:22:00

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT Concat_Ws(""<br />"",
  ""nexthelp@nekls.org<br />"",
  branches.branchemail,
  Concat(""<br />Large print item record/bibliogrphic record problem - "", items.biblionumber, ""<br /><br />Hello at "", items.homebranch, "",<br />""),
  ""There is an item owned by your library and the bibliogrpahic record and item record are problematic.  The details are as follow:<br />"",
  Concat(""Barcode: "", items.barcode),
  Concat(""Homebranch: "", items.homebranch),
  Concat(""Location: "", Coalesce(locs.lib, ""-"")),
  Concat(""Item type: "", Coalesce(Concat(itemtypes.description, "" ("", items.itype, "")""), ""-"")),
  Concat(""Collection code: "", ccodes.lib),
  Concat(""Call number: "", Coalesce(items.itemcallnumber, ""-"")),
  Concat(""Author: "", biblio.author),
  Concat(""Title: "", Concat_Ws("" "",
    biblio.title,
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""c""]'))
  ),
  ""<br /><br />The specific things of note are:<br />"", ""<ul>"",
                              
  Concat(
    ""<li>The collection code ("",
    ccodes.lib,
    "") on your item doesn't match the edition statement for this item listed in the 250 field of the bibliographic record:"",
    Concat(
      ""<br />250$a: "",
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""250""]/subfield[@code=""a""]')
    ),
    ""</li><br />""
  ),
                              
  Concat(
    ""<li>The collection code ("",
    ccodes.lib,
    "") and item type ("",
    itemtypes.description,
    "") on your item doesn't match the description of the item in the 300 field of the bibliographic record:"",
    Concat(
      ""<br />300$a: "",
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""300""]/subfield[@code=""a""]'),
      ""<br />300$b: "",
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""300""]/subfield[@code=""b""]'),
      ""<br />300$c: "",
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""300""]/subfield[@code=""c""]')
    ),
    ""</li><br />""
  ),
  ""</ul>"", 
  Concat(""<br />Could you take a look at this item and confirm that it is, in fact, a large print copy.  If this item belongs on a different bibliographic record, could you move it to a different record?  If there isn't already a regular print record, then could you import a better bibliographic record and attach this item to that record?  If you need any help with this issue, please respond with the item barcode number from this item, the UPC code from the the item, plus the full title of the item as it appears in the work itself.<br /><br />Thanks,"")
) AS INFO
FROM biblio
JOIN biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
JOIN items ON items.biblionumber = biblio.biblionumber
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'CCODE'
   GROUP BY authorised_values.category,
            authorised_values.authorised_value,
            authorised_values.lib ) ccodes ON items.ccode = ccodes.authorised_value
JOIN biblioitems ON biblioitems.biblionumber = biblio.biblionumber
AND items.biblioitemnumber = biblioitems.biblioitemnumber
JOIN itemtypes ON items.itype = itemtypes.itemtype
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'NOT_LOAN' ) nfl ON nfl.authorised_value = items.notforloan
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'DAMAGED' ) damageds ON damageds.authorised_value = items.damaged
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'LOST' ) losts ON losts.authorised_value = items.itemlost
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'WITHDRAWN' ) withdrawns ON withdrawns.authorised_value = items.withdrawn
LEFT JOIN
  ( SELECT authorised_values.category,
           authorised_values.authorised_value,
           authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'LOC' ) locs ON locs.authorised_value = items.location
INNER JOIN branches ON branches.branchcode = items.homebranch
WHERE items.barcode = <<Enter item barcode>>
GROUP BY
  biblio.biblionumber,
  items.itemnumber,
  locs.lib,
  branches.branchemail
ORDER BY
  items.homebranch,
  items.location,
  items.itype,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title",,,,,,,,
R.003282,"/*
R.003282

----------

Name: GHW - Item dashboard
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-11-22 13:25:34
Modified on: 2022-05-25 15:42:09
Date last run: 2022-10-03 11:47:47

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Retrieves data and associated reports information based on an item barcode number</p>
<ul><li>Shows current data</li>
<li>for the item barcode number you specify</li>
<li>grouped and sorted by item number</li>
<li>links to the item record, the item's bibliographic record, report 2785, report 3342, report 2784, and report 3039 -- unless the item has already been deleted</li>
<li>if the item has already been deleted, there are links to report 3009</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Replaces report 3113</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">dashboard</p>
</div>

----------
*/

","SELECT
  Concat_Ws('<br />',
    '<h3 style=""color: white; background-color: #829356; text-align: center;"">This item is currently in the catalog</h3>',
    Concat('<h4>You searched for: ""', <<Enter barcode number>>, '""</h4>'),
    Concat('Item homebranch: ', items.homebranch),
    Concat('Current branch: ', items.holdingbranch),
    Concat('Permanent shelving location: ', items.permanent_location),
    Concat('Current shelving location: ', items.location),
    Concat('Item type: ', items.itype),
    Concat('Collection code: ', ccodes.lib),
    Concat('Call#: ', items.itemcallnumber),
    Concat('Author: ', biblio.author),
    Concat('Title: ',
      Concat_Ws(' ',
        '<span style=""text-transform: uppercase"">',
        biblio.title,
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
        '</span>')
      ),
    Concat('Item barcode: ', Upper(items.barcode)),
    Concat('<br />Public notes: ', items.itemnotes),
    Concat('Non-public notes: ', items.itemnotes_nonpublic),
    Concat('<br />Total circulation: ', (Sum((Coalesce(items.issues, 0)) + (Coalesce(items.renewals, 0))))),
    Concat('(', items.issues, ' checkouts + ', items.renewals, ' renewals)'),
    Concat('<br />Date added: ', items.dateaccessioned),
    Concat('Last borrowed: ', items.datelastborrowed),
    Concat('Last seen: ', items.datelastseen),
    Concat('<br />Circs in the previous 12 months: ', statistics_one.last_one),
    Concat('Circs in the previous 24 months: ', statistics_two.last_two),
    Concat('<br />Item record last modified: ', items.timestamp),
    Concat('<br />Due date: ', If(issuesi.date_due IS NULL, ""-"", Date_Format(issuesi.date_due, ""%Y.%m.%d""))),
    Concat(""Not for loan status: "", If(items.notforloan = 0, ""-"", If(items.notforloan IS NULL, ""-"", nfl.lib))),
    Concat(""Damaged status: "", If(items.damaged = 0, ""-"", If(items.damaged IS NULL, ""-"", damagedi.lib))),
    Concat(""Lost status: "", If(items.itemlost = 0, ""-"", If(items.itemlost IS NULL, ""-"", Concat(losti.lib, "" on "", items.itemlost_on)))),
    Concat(""Withdrawn status: "", If(items.withdrawn = 0, ""-"", If(items.withdrawn IS NULL, ""- "", Concat(withdrawni.lib, "" on "", items.withdrawn_on)))),
    Concat(""<br /> In transit from "", If(transfersi.frombranch IS NULL, ""-"", Concat(transfersi.frombranch, "" to "", transfersi.tobranch, "" since "", transfersi.datesent))),
    Concat(""<br />Link to borrower: "", If(issuesi.date_due IS NULL, ""-"", Concat(""<a href='/cgi-bin/koha/circ/circulation.pl?borrowernumber="", issuesi.borrowernumber, ""' target='_blank'>go to the borrower's account</a>""))),
    Concat(""Link to title: "", Concat(""<a href='/cgi-bin/koha/catalogue/detail.pl?biblionumber="", biblio.biblionumber, ""' target='_blank'>go to the bibliographic record</a>"")),
    Concat(""Link to item: "", Concat(""<a href='/cgi-bin/koha/catalogue/moredetail.pl?itemnumber="", items.itemnumber, ""&biblionumber="", biblio.biblionumber, ""' target='_blank'>go to the item record</a>"")),
    Concat(""Item circ history: "", Concat(""<a href='/cgi-bin/koha/reports/guided_reports.pl?reports=2785&phase=Run+this+report&param_name=Enter+item+barcode+number&sql_params="", items.barcode, ""' target='_blank'>see item circ history</a>"")),
    Concat(""Item action log history: "", Concat(""<a href='/cgi-bin/koha/reports/guided_reports.pl?reports=3342&phase=Run+this+report&param_name=Enter+item+number&sql_params="", items.itemnumber, ""' target='_blank'>see action log history</a>"")),     
    Concat(""Item in transit history: "", Concat(""<a href='/cgi-bin/koha/reports/guided_reports.pl?reports=2784&phase=Run+this+report&sql_params="", items.barcode, ""' target='_blank'>see item transit history</a>"")),
    Concat(""Request history on this title: "", Concat(""<a href='/cgi-bin/koha/reports/guided_reports.pl?reports=3039&phase=Run+this+report&sql_params=%25&sql_params=%25&sql_params=%25&sql_params=%25&sql_params=%25&sql_params="", biblio.biblionumber, ""&sql_params=%25' target='_blank'>see title's request history</a>"")),
    Concat(""Request history on this item: "", Concat(""<a href='/cgi-bin/koha/reports/guided_reports.pl?reports=3039&phase=Run+this+report&sql_params=%25&sql_params=%25&sql_params=%25&sql_params=%25&sql_params=%25&sql_params=%25&sql_params="", items.barcode, ""' target='_blank'>see item's request history</a>"")),
    Concat(""<br /><br /><a href='/cgi-bin/koha/reports/guided_reports.pl?phase=Run+this+report&reports=3009&sql_params="", Replace(Replace(Replace(Replace(Replace(Replace(Replace(items.barcode, Char(43), ""%2B""), Char(47), ""%2F""), Char(32), ""%20""), Char(45), ""%2D""), Char(36), ""%24""), Char(37), ""%25""), Char(46), ""%2E""), ""&limit=50' target='_blank'>Search payment and fee notes and descriptions for this item barcode number</a>""),
    '<br /><h3 style=""color: white; background-color: #829356; text-align: center;"">This item is currently in the catalog<br />it has not been deleted</h3>'
  ) AS INFO
FROM
  items
  JOIN biblio
    ON items.biblionumber = biblio.biblionumber
  JOIN biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber AND
      items.biblionumber = biblio_metadata.biblionumber
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
  ) ccodes
    ON items.ccode = ccodes.authorised_value
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'NOT_LOAN'
  ) nfl
    ON items.notforloan = nfl.authorised_value
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'DAMAGED'
  ) damagedi
    ON items.damaged = damagedi.authorised_value
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOST'
  ) losti
    ON items.itemlost = losti.authorised_value
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'WITHDRAWN'
  ) withdrawni
    ON items.withdrawn = withdrawni.authorised_value
  LEFT JOIN (
    SELECT
      branchtransfers.itemnumber,
      branchtransfers.frombranch,
      branchtransfers.datesent,
      branchtransfers.tobranch,
      branchtransfers.datearrived
    FROM
      branchtransfers
    WHERE
      branchtransfers.datearrived IS NULL
  ) transfersi
    ON items.itemnumber = transfersi.itemnumber
  LEFT JOIN (
    SELECT
      issues.itemnumber,
      issues.date_due,
      issues.borrowernumber
    FROM
      issues
  ) issuesi
    ON items.itemnumber = issuesi.itemnumber 
  LEFT JOIN (
    SELECT
      statistics.itemnumber,
      Count(*) AS last_one
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      statistics.datetime > CurDate() - INTERVAL 1 YEAR
    GROUP BY
      statistics.itemnumber) statistics_one ON statistics_one.itemnumber = items.itemnumber 
  LEFT JOIN (
     SELECT
      statistics.itemnumber,
      Count(*) AS last_two
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      statistics.datetime > CurDate() - INTERVAL 2 YEAR
    GROUP BY
      statistics.itemnumber) statistics_two ON statistics_two.itemnumber = items.itemnumber
WHERE
  items.barcode LIKE Concat(""%"", <<Enter barcode number>>, ""%"")
GROUP BY
  items.itemnumber
UNION
SELECT
  Concat_Ws('<br />',
    '<h2 style=""color: white; background-color: #AD2A1A; text-align: center;"">This item has been deleted</h2>',
    Concat('<h4>You searched for: ""', <<Enter barcode number>>, '""</h4>'),
    Concat('At the time of its deletion on:  <ins><strong>', deleteditems.timestamp, ""<br /></strong></ins> this item's information was as follows:<br />""),
    Concat('Item homebranch: ', deleteditems.homebranch),
    Concat('Current branch: ', deleteditems.holdingbranch),
    Concat('Permanent shelving location: ', deleteditems.permanent_location),
    Concat('Current shelving location: ', deleteditems.location),
    Concat('Item type: ', deleteditems.itype),
    Concat('Collection code: ', ccodes.lib),
    Concat('Call#: ', deleteditems.itemcallnumber),
    Concat('Author: ', Coalesce(biblio.author, deletedbiblio.author)),
    Concat('Title: ', Coalesce(biblio.title, deletedbiblio.title)),
    Concat('Item barcode: ', deleteditems.barcode),
    Concat('Replacement price: ', deleteditems.replacementprice),
    Concat('Item id number: ', deleteditems.itemnumber),
    Concat(""<br />Damaged status: "", If(deleteditems.damaged = 0, ""-"", If(deleteditems.damaged IS NULL, ""-"", damagedi.lib))),
    Concat(""Lost status: "", If(deleteditems.itemlost = 0, ""-"", If(deleteditems.itemlost IS NULL, ""-"", Concat(losti.lib, "" on "", deleteditems.itemlost_on)))),
    Concat(""Withdrawn status: "", If(deleteditems.withdrawn = 0, ""-"", If(deleteditems.withdrawn IS NULL, ""- "", Concat(deletedwithdrawni.lib, "" on "", deleteditems.withdrawn_on)))),
    If(biblio.biblionumber IS NULL, ""<br />-- Bibliographic record has been deleted --"", Concat(""<br /><a href='/cgi-bin/koha/catalogue/detail.pl?biblionumber="", biblio.biblionumber, ""' target='_blank'>Go to the bibliographic record</a>"")),
    Concat(""<br /><a href='/cgi-bin/koha/reports/guided_reports.pl?phase=Run+this+report&reports=3009&sql_params="", Replace(Replace(Replace(Replace(Replace(Replace(Replace(deleteditems.barcode, Char(43), ""%2B""), Char(47), ""%2F""), Char(32), ""%20""), Char(45), ""%2D""), Char(36), ""%24""), Char(37), ""%25""), Char(46), ""%2E""), ""&limit=50' target='_blank'>Search payment and fee notes and descriptions for this item barcode number</a>""),
    '<br /><h2 style=""color: white; background-color: #AD2A1A; text-align: center;"">This item was deleted from the catalog<br />within the past 13 months</h2>'
  ) AS INFO
FROM
  deleteditems
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
  ) ccodes
    ON deleteditems.ccode = ccodes.authorised_value
  LEFT JOIN biblio
    ON deleteditems.biblionumber = biblio.biblionumber
  LEFT JOIN deletedbiblio
    ON deleteditems.biblionumber = deletedbiblio.biblionumber
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'DAMAGED'
  ) damagedi
    ON damagedi.authorised_value = deleteditems.damaged
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOST'
  ) losti
    ON losti.authorised_value = deleteditems.itemlost
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'WITHDRAWN'
  ) deletedwithdrawni
    ON deletedwithdrawni.authorised_value = deleteditems.withdrawn
WHERE
  deleteditems.barcode LIKE Concat(""%"", <<Enter barcode number>>, ""%"")
GROUP BY
  deleteditems.itemnumber",,,,,,,,
R.003283,"/*
R.003283

----------

Name: GHW - Search for borrower by SMS text message number
Created by: George H Williams

----------

Group: Borrowers
     -

Created on: 2019-11-27 10:45:22
Modified on: 2020-03-27 09:48:06
Date last run: 2021-03-08 20:39:20

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Find a patron's card number based on a portion of their SMS text messaging number</p>
<ul><li>Shows all patrons that currently have that portion of an SMS text number</li>
<li>at all libraries</li>
<li>grouped by borrowernumber</li>
<li>grouped by text messaging phone number</li>
<li>links to the patron's account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Text message numbers are ten digits long and  only contain numerals - no spaces, letters, or punctuation.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3283&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  Concat('<a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', borrowers.borrowernumber, '"" target=""_blank"">Go to patron account</a>') AS LINK,
  borrowers.cardnumber,
  borrowers.smsalertnumber
FROM
  borrowers
WHERE
  borrowers.smsalertnumber LIKE CONCAT(""%"", REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(<<Enter part of a text messaging number>>, ' ', ''), '-', ''), '(', ''), ')', ''), '.', ''), ""%"")
GROUP BY
  borrowers.borrowernumber
ORDER BY
  borrowers.smsalertnumber",,,,,,,,
R.003285,"/*
R.003285

----------

Name: 942 search
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-12-07 21:24:12
Modified on: 2019-12-10 16:19:16
Date last run: 2019-12-10 16:22:07

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">Link</a>') AS LINK_TO_TITLE,
  biblio.biblionumber,
  biblio.title,
  biblio.author,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]') AS H,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""c""]') AS RITYPE
FROM
  biblio
  JOIN biblio_metadata
    ON biblio_metadata.biblionumber = biblio.biblionumber
WHERE
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""c""]') LIKE Concat(""%"", <<Enter bibliographic record itype>> ,""%"")
GROUP BY
  biblio.biblionumber,
  biblio.datecreated
ORDER BY
  biblio.biblionumber DESC",,,,,,,,
R.003286,"/*
R.003286

----------

Name: GHW - HCC Video problem
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-12-13 21:55:43
Modified on: 2019-12-13 21:56:18
Date last run: 2019-12-22 22:21:33

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat(""https://staff.nextkansas.org/cgi-bin/koha/catalogue/detail.pl?biblionumber="", biblio.biblionumber) AS LINK,
  biblio.biblionumber,
  biblio.title,
  Count(items.itemnumber) AS ICOUNT
FROM
  biblio
  JOIN items
    ON items.biblionumber = biblio.biblionumber
WHERE
  items.homebranch = 'HIGH_CC' AND
  items.itype LIKE ""NVID%""
GROUP BY
  biblio.biblionumber
HAVING
  Count(items.itemnumber) > 1
ORDER BY
  Count(items.itemnumber) DESC",,,,,,,,
R.003287,"/*
R.003287

----------

Name: GHW ADMINREPORT - Quick and Dirty
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-12-17 20:10:02
Modified on: 2019-12-17 20:10:02
Date last run: 2019-12-23 09:34:17

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat('<a class= ""clicked"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', items.biblionumber, '\"" target=""_blank"">', items.biblionumber, '</a>') AS LINK_TO_TITLE,
  items.biblionumber,
  items.itemnumber AS ITEM_NUMBER,
  Concat(""-"", Coalesce(items.barcode, ""-""), ""-"") AS BARCODE,
  items.homebranch,
  items.holdingbranch,
  Coalesce(items.location, ""-"") AS LOCATION,
  Coalesce(itypes.description, ""-"") AS ITYPE,
  Coalesce(ccodes.lib, ""-"") AS CCODE,
  items.itemcallnumber,
  biblio.author,
  Concat_Ws("" "", biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')) AS FULL_TITLE,
  biblioitems.publicationyear,
  items.dateaccessioned,
  items.datelastborrowed,
  items.datelastseen,
  items.issues,
  items.renewals,
  Sum((Coalesce(items.issues, 0)) + (Coalesce(items.renewals, 0))) AS CHECKOUTS_PLUS_RENEWALS,
  If(items.onloan IS NULL, 'No', 'Yes') AS CHECKED_OUT,
  If(Sum(Coalesce(items.damaged, 0) + Coalesce(items.itemlost, 0) + Coalesce(items.withdrawn, 0)) = 0, 'No', 'Yes') AS STATUS_PROBLEMS,
  If(notloan.authorised_value = 0, ""-"", notloan.lib) AS NOT_FOR_LOAN,
  intransit.TRANSIT,
  items.itemnotes,
  items.itemnotes_nonpublic,
  items.copynumber,
  items.replacementprice,
  localcounts.Count_itemnumber AS LOCAL_COPIES,
  systemcounts.Count_itemnumber AS SYSTEM_COPIES,
  Concat('<a class= ""clicked"" href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=', items.biblionumber, '&itemnumber=', items.itemnumber, '#edititem\"" target=""_blank"">Edit item</a>') AS EDIT_ITEM
FROM
  items
  JOIN biblio
    ON items.biblionumber = biblio.biblionumber
  JOIN biblio_metadata
    ON items.biblionumber = biblio_metadata.biblionumber
  JOIN biblioitems
    ON items.biblioitemnumber = biblioitems.biblioitemnumber
  JOIN (
    SELECT
      items.biblionumber,
      items.homebranch,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    GROUP BY
      items.biblionumber,
      items.homebranch
  ) localcounts
    ON items.biblionumber = localcounts.biblionumber AND
      items.homebranch = localcounts.homebranch
  JOIN (
    SELECT
      items.biblionumber,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    GROUP BY
      items.biblionumber
  ) systemcounts
    ON items.biblionumber = systemcounts.biblionumber
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'NOT_LOAN'
    GROUP BY
      authorised_values.category,
      authorised_values.authorised_value
  ) notloan
    ON notloan.authorised_value = items.notforloan
  LEFT JOIN (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode'
  ) ccodes
    ON ccodes.authorised_value = items.ccode
  LEFT JOIN (
    SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes
  ) itypes
    ON itypes.itemtype = items.itype
  LEFT JOIN (
    SELECT
      branchtransfers.itemnumber,
      If(branchtransfers.datearrived IS NULL, ""Yes"", ""No"") AS TRANSIT
    FROM
      branchtransfers
    WHERE
      branchtransfers.datearrived IS NULL
  ) intransit
    ON intransit.itemnumber = items.itemnumber
WHERE
  items.homebranch LIKE 'CORNING' AND
  Coalesce(items.location, ""-"") LIKE '%' AND
  Coalesce(items.itype, ""XXX"") LIKE '%' AND
  Coalesce(items.ccode, ""XXX"") LIKE '%' AND
  Coalesce(items.itemcallnumber, ""-"") LIKE Concat('%', ""%"") AND
  If(notloan.authorised_value = 0, ""-"", Concat(notloan.lib, ""X"")) LIKE '%' AND
  Coalesce(items.dateaccessioned, ""0"") <= '2019-12-18' AND
  Coalesce(items.datelastborrowed, ""0"") <= '2019-12-18' AND
  Coalesce(items.datelastseen, ""0"") <= '2019-12-18'
GROUP BY
  items.itemnumber,
  items.holdingbranch,
  intransit.TRANSIT,
  itypes.description,
  ccodes.lib
HAVING
  CHECKOUTS_PLUS_RENEWALS <= '999999999999' AND
  CHECKED_OUT LIKE '%' AND
  STATUS_PROBLEMS LIKE '%' AND
  LOCAL_COPIES >= '0' AND
  SYSTEM_COPIES >= '0'
ORDER BY
  items.homebranch,
  LOCATION,
  ITYPE,
  CCODE,
  items.itemcallnumber,
  biblio.author,
  biblio.title",,,,,,,,
R.003288,"/*
R.003288

----------

Name: GHW - Batch deleting fees
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-12-26 09:46:35
Modified on: 2021-12-17 11:36:41
Date last run: 2022-07-19 15:26:35

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Generates data for batch deleting fees</p>
<ul><li>Shows current outstanding fees</li>
<li>at the library you specify</li>
<li>grouped by accountline ID number</li>
<li>sorted by library and fee date</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>When a library decides to remove all old late fees from all of their patron's accounts, run this report, determine which fees are for late fees, and send the list of accountline_id numbers to ByWater Solutions asking them to set the amount.outstanding to $0.00.</p>
<p></p>
<p>The process this report uses works along 4 pathways</p>
<ul>
  <li>It looks for all accountlines where the issue_id is still in the issues table (i.e. item with fee is still checked out to the patron) AND the issuing library matches the specified library.</li>
  <li>It looks for all accountlines where the issue_id is still in the old_issues table (i.e. when the item with the fee was returned within the last 13 months) AND the issuing library matches the specified library.</li>
  <li>It looks for all accountlines that were created manually based on the home library of the account manually creating the fee.</li>
  <li>It looks for all accountlines where the patron's home library matches the specified library AND the issue_id is null (i.e. no data about where the item was checked out) AND where the manager's ID is also null.  These are generally fees that have gone unpaid for such a long time that there is no longer any way to determine where the item was checked out.</li>
</ul>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3288&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">tag goes here</p>
</div>

----------
*/

","SELECT
  branchess.branchname,
  fees.date AS FEE_CREATED_ON,
  fees.credit_type_code,
  fees.debit_type_code,
  fees.accountlines_id,
  fees.issue_id,
  Format(fees.amountoutstanding, 2) AS AMOUNT_OUTSTANDING,
  items.itype AS ITEM_TYPE,
  Concat('-', Trim(Replace(fees.note, '\r\n', '||')), '-') AS note,
  fees.timestamp FEE_UPDATED_ON
FROM
  (SELECT
      branches.branchname,
      branches.branchcode
    FROM
      branches
    UNION
    SELECT
      ' All branches' AS branchname,
      '--' AS branchcode) branchess JOIN
  (SELECT
      accountlines.accountlines_id,
      accountlines.issue_id,
      accountlines.borrowernumber,
      accountlines.date,
      accountlines.credit_type_code,
      accountlines.debit_type_code,
      accountlines.status,
      accountlines.amountoutstanding,
      accountlines.timestamp,
      accountlines.note,
      accountlines.manager_id,
      Coalesce(Coalesce(issues.branchcode, old_issues.branchcode),
      '--') AS branchcode,
      accountlines.itemnumber
    FROM
      accountlines LEFT JOIN
      issues ON issues.issue_id = accountlines.issue_id LEFT JOIN
      old_issues ON old_issues.issue_id = accountlines.issue_id
    WHERE
      accountlines.amountoutstanding > 0 AND
      accountlines.borrowernumber IS NOT NULL
    GROUP BY
      accountlines.accountlines_id,
      accountlines.credit_type_code,
      accountlines.note,
      accountlines.itemnumber
    UNION
    SELECT
      accountlines.accountlines_id,
      accountlines.issue_id,
      accountlines.borrowernumber,
      accountlines.date,
      accountlines.credit_type_code,
      accountlines.debit_type_code,
      accountlines.status,
      accountlines.amountoutstanding,
      accountlines.timestamp,
      accountlines.note,
      accountlines.manager_id,
      Coalesce(staff.branchcode, '--') AS branchcode,
      accountlines.itemnumber
    FROM
      accountlines LEFT JOIN
      issues ON issues.issue_id = accountlines.issue_id LEFT JOIN
      old_issues ON old_issues.issue_id = accountlines.issue_id LEFT JOIN
      borrowers staff ON staff.borrowernumber = accountlines.manager_id
    WHERE
      accountlines.amountoutstanding > 0 AND
      accountlines.manager_id IS NOT NULL AND
      accountlines.borrowernumber IS NOT NULL
    GROUP BY
      accountlines.accountlines_id,
      accountlines.credit_type_code,
      accountlines.note,
      accountlines.itemnumber
    UNION
    SELECT
      accountlines.accountlines_id,
      accountlines.issue_id,
      accountlines.borrowernumber,
      accountlines.date,
      accountlines.credit_type_code,
      accountlines.debit_type_code,
      accountlines.status,
      accountlines.amountoutstanding,
      accountlines.timestamp,
      accountlines.note,
      accountlines.manager_id,
      Coalesce(borrowers.branchcode, '--') AS branchcode1,
      accountlines.itemnumber
    FROM
      accountlines LEFT JOIN
      issues ON issues.issue_id = accountlines.issue_id LEFT JOIN
      old_issues ON old_issues.issue_id = accountlines.issue_id LEFT JOIN
      borrowers staff ON staff.borrowernumber = accountlines.manager_id
      LEFT JOIN
      borrowers ON borrowers.borrowernumber = accountlines.borrowernumber
    WHERE
      accountlines.amountoutstanding > 0 AND
      Coalesce(issues.branchcode, old_issues.branchcode) IS NULL AND
      staff.branchcode IS NULL AND
      accountlines.borrowernumber IS NOT NULL
    GROUP BY
      accountlines.accountlines_id,
      accountlines.credit_type_code,
      accountlines.note,
      accountlines.itemnumber) fees ON fees.branchcode = branchess.branchcode
  LEFT JOIN
  items ON items.itemnumber = fees.itemnumber
WHERE
  branchess.branchcode LIKE <<Choose your library|ZBRAN>> AND
  fees.debit_type_code LIKE <<Debit type|LDEBITTYPE>>
GROUP BY
  fees.accountlines_id
ORDER BY
  branchess.branchname",,,,,,,,
R.003290,"/*
R.003290

----------

Name: GHW - Authorised Values Synchronization - BRANCHES
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-12-30 11:06:11
Modified on: 2020-01-28 16:06:04
Date last run: 2021-04-26 17:05:11

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat('<a href=""/cgi-bin/koha/admin/authorised_values.pl?searchfield=', LBRANCH.category, '"" target=""_blank"">Link to AV</a>') AS LINK,
  If(LBRANCH.category IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", LBRANCH.category) AS category,
  If(LBRANCH.authorised_value IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", LBRANCH.authorised_value) AS authorised_value,
  If(LBRANCH.lib IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", LBRANCH.lib) AS lib,
  If(BRANCHESS.branchcode IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", BRANCHESS.branchcode) AS branchcode,
  If(BRANCHESS.branchname IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", BRANCHESS.branchname) AS branchname
FROM
  (
    SELECT
      authorised_values.id,
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.imageurl,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      (authorised_values.category = 'LBRANCH' OR
        authorised_values.category = 'ZBRAN')
  ) LBRANCH
  LEFT JOIN (
    SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches
  ) BRANCHESS
    ON BRANCHESS.branchcode = LBRANCH.authorised_value
GROUP BY
  LBRANCH.category,
  LBRANCH.authorised_value,
  LBRANCH.lib,
  BRANCHESS.branchcode,
  BRANCHESS.branchname
UNION
SELECT
  Concat('<a href=""/cgi-bin/koha/admin/authorised_values.pl?searchfield=', ZBRAN.category, '"" target=""_blank"">Link to AV</a>') AS LINK,
  ZBRAN.category,
  ZBRAN.authorised_value,
  ZBRAN.lib,
  BRANCHESS.branchcode,
  BRANCHESS.branchname
FROM
  (
    SELECT
      authorised_values.id,
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.imageurl,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      (authorised_values.category = 'LBRANCH' OR
        authorised_values.category = 'ZBRAN')
  ) ZBRAN
  RIGHT JOIN (
    SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches
  ) BRANCHESS
    ON BRANCHESS.branchcode = ZBRAN.authorised_value
GROUP BY
  ZBRAN.category,
  ZBRAN.authorised_value,
  ZBRAN.lib,
  BRANCHESS.branchcode,
  BRANCHESS.branchname
ORDER BY
  category,
  authorised_value
LIMIT 10000",,,,,,,,
R.003291,"/*
R.003291

----------

Name: GHW - Authorised Values synchronization - borrower categories
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-12-30 11:46:03
Modified on: 2020-01-28 16:05:19
Date last run: 2021-06-08 13:50:20

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat('<a href=""/cgi-bin/koha/admin/authorised_values.pl?searchfield=', LBORROWERCAT.category, '"" target=""_blank"">Link to AV</a>') AS LINK,
  If(LBORROWERCAT.category IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", LBORROWERCAT.category) AS category,
  If(LBORROWERCAT.authorised_value IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", LBORROWERCAT.authorised_value) AS authorised_value,
  If(LBORROWERCAT.lib IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", LBORROWERCAT.lib) AS lib,
  If(PATCAT.categorycode IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", PATCAT.categorycode) AS categorycode,
  If(PATCAT.description IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", PATCAT.description) AS description
FROM
  (
    SELECT
      authorised_values.id,
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.imageurl,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LBORROWERCAT'
  ) LBORROWERCAT
  LEFT JOIN (
    SELECT
      categories.categorycode,
      categories.description
    FROM
      categories
  ) PATCAT
    ON PATCAT.categorycode = LBORROWERCAT.authorised_value
UNION
SELECT
  Concat('<a href=""/cgi-bin/koha/admin/authorised_values.pl?searchfield=', LBORROWERCAT.category, '"" target=""_blank"">Link to AV</a>') AS LINK,
  If(LBORROWERCAT.category IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", LBORROWERCAT.category) AS category,
  If(LBORROWERCAT.authorised_value IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", LBORROWERCAT.authorised_value) AS authorised_value,
  If(LBORROWERCAT.lib IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", LBORROWERCAT.lib) AS lib,
  If(PATCAT.categorycode IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", PATCAT.categorycode) AS categorycode,
  If(PATCAT.description IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", PATCAT.description) AS description
FROM
  (
    SELECT
      authorised_values.id,
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.imageurl,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LBORROWERCAT'
  ) LBORROWERCAT
  RIGHT JOIN (
    SELECT
      categories.categorycode,
      categories.description
    FROM
      categories
  ) PATCAT
    ON PATCAT.categorycode = LBORROWERCAT.authorised_value
ORDER BY
  LINK,
  category,
  authorised_value
LIMIT 1000",,,,,,,,
R.003292,"/*
R.003292

----------

Name: GHW - Authorised Values Synchronization - Branch names
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-12-30 12:37:13
Modified on: 2020-01-28 16:04:55
Date last run: 2021-04-26 17:05:00

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat('<a href=""/cgi-bin/koha/admin/authorised_values.pl?searchfield=', LBRNAME.category, '"" target=""_blank"">Link to AV</a>') AS LINK,
  If(LBRNAME.category IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", LBRNAME.category) AS category,
  If(LBRNAME.authorised_value IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", LBRNAME.authorised_value) AS authorised_value,
  If(LBRNAME.lib IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", LBRNAME.lib) AS lib,
  If(BRANCHESS.branchcode IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", BRANCHESS.branchcode) AS branchcode,
  If(BRANCHESS.branchname IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", BRANCHESS.branchname) AS branchname
FROM
  (
    SELECT
      authorised_values.id,
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.imageurl,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LBRNAME'
  ) LBRNAME
  LEFT JOIN (
    SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches
  ) BRANCHESS
    ON BRANCHESS.branchname = LBRNAME.lib
GROUP BY
  LBRNAME.category,
  LBRNAME.authorised_value,
  LBRNAME.lib,
  BRANCHESS.branchcode,
  BRANCHESS.branchname
UNION
SELECT
  Concat('<a href=""/cgi-bin/koha/admin/authorised_values.pl?searchfield=', LBRNAME.category, '"" target=""_blank"">Link to AV</a>') AS LINK,
  If(LBRNAME.category IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", LBRNAME.category) AS category,
  If(LBRNAME.authorised_value IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", LBRNAME.authorised_value) AS authorised_value,
  If(LBRNAME.lib IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", LBRNAME.lib) AS lib,
  If(BRANCHESS.branchcode IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", BRANCHESS.branchcode) AS branchcode,
  If(BRANCHESS.branchname IS NULL, ""<span style='background-color: red; color: yellow'>Possible error</span>"", BRANCHESS.branchname) AS branchname
FROM
  (
    SELECT
      authorised_values.id,
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.imageurl,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LBRNAME'
  ) LBRNAME
  RIGHT JOIN (
    SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches
  ) BRANCHESS
    ON BRANCHESS.branchname = LBRNAME.lib
GROUP BY
  LBRNAME.category,
  LBRNAME.authorised_value,
  LBRNAME.lib,
  BRANCHESS.branchcode,
  BRANCHESS.branchname
LIMIT 1000",,,,,,,,
R.003293,"/*
R.003293

----------

Name: GHW - Spreadsheet builder - Branches and collection codes
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-12-31 14:13:24
Modified on: 2021-09-18 16:37:09
Date last run: 2021-09-18 17:22:02

----------

Public: 0
Expiry: 300

----------



----------
*/

","Select
  rnums.row_number,
  ccodess.code_number,
  CONCAT(If(rnums.row_number % 2 <> 0, ""Odd"", ""Even""), If(Right(ccodess.code_number, 1) % 2 <> 0, ""Odd"", ""Even"")) As EO,
  rnums.branchname As `Library Name`,
  authorised_values.lib As `Collection Code`,
  Concat("""") As `CKO + Renewal`,
  Concat("""") As `CKO + Renewal Adult`,
  Concat("""") As `CKO + Renewal Childrens`,
  Concat("""") As `CKO + Renewal Young Adult`,
  Concat("""") As `CKO + Renewal Other`
From
  (Select
     @row_number := @row_number + 1 As row_number,
     branchesx.branchcode,
     branchesx.branchname
   From
     (Select
        @row_number := 0) As t,
     (Select
        branches.branchcode,
        branches.branchname
      From
        branches
      UNION
      Select
        Concat(""DONIZ"") As branchcode,
        Concat(""Doniphan County Library -- Combined"") As branchname
      From
        branches
      UNION
      Select
        Concat(""PHZ"") As branchcode,
        Concat(""Prairie Hills Schools -- Combined"") As branchname
      From
        branches) branchesx
   Order By
     branchesx.branchname) rnums,
  authorised_values Inner Join
  (Select
     @code_number := @code_number + 1 As code_number,
     authorised_values.category,
     authorised_values.authorised_value,
     authorised_values.lib
   From
     (Select
        @code_number := 0) As t,
     authorised_values
   Where
     authorised_values.category = 'ccode'
   Order By
     authorised_values.lib,
     authorised_values.authorised_value) ccodess On ccodess.authorised_value = authorised_values.authorised_value
Where
  authorised_values.category = 'CCODE'
Order By
  `Library Name`,
  `Collection Code`,
  rnums.branchcode
Limit 10000",,,,,,,,
R.003294,"/*
R.003294

----------

Name: GHW - Spreadsheet builder - Item type
Created by: George H Williams

----------

Group: -
     -

Created on: 2019-12-31 15:05:33
Modified on: 2021-09-18 17:30:41
Date last run: 2021-09-18 17:30:44

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  rnums.row_number,
  itypecnt.code_number,
  CONCAT(If(rnums.row_number % 2 <> 0, ""Odd"", ""Even""), If(Right(itypecnt.code_number, 1) % 2 <> 0, ""Odd"", ""Even"")) As EO,
  rnums.branchname AS `Library Name`,
  itemtypes.description AS `Item Type`,
  Concat("""") AS `CKO + Renewal`,
  Concat("""") AS `CKO + Renewal Adult`,
  Concat("""") AS `CKO + Renewal Childrens`,
  Concat("""") AS `CKO + Renewal Young Adult`,
  Concat("""") AS `CKO + Renewal Other`
From
  (Select
     @row_number := @row_number + 1 As row_number,
     branchesx.branchcode,
     branchesx.branchname
   From
     (Select
        @row_number := 0) As t,
     (Select
        branches.branchcode,
        branches.branchname
      From
        branches
      UNION
      Select
        Concat(""DONIZ"") As branchcode,
        Concat(""Doniphan County Library -- Combined"") As branchname
      From
        branches
      UNION
      Select
        Concat(""PHZ"") As branchcode,
        Concat(""Prairie Hills Schools -- Combined"") As branchname
      From
        branches) branchesx
   Order By
     branchesx.branchname) rnums,
  (
    SELECT
      @code_number := @code_number + 1 AS code_number,
      itemtypes.itemtype,
      itemtypes.description
    FROM
      (
        SELECT
          @code_number := 0
      ) AS t,
      itemtypes
    ORDER BY
      itemtypes.description
  ) itypecnt
  INNER JOIN itemtypes
    ON itypecnt.itemtype = itemtypes.itemtype
ORDER BY
  `Library Name`,
  `Item Type`,
  rnums.branchcode
LIMIT 10000",,,,,,,,
R.003295,"/*
R.003295

----------

Name: GHW - Request filled last month - by collection code
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-01-03 15:26:45
Modified on: 2020-01-03 15:27:25
Date last run: 2020-01-26 17:26:33

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branchandcodes.branchcode,
  branchandcodes.lib AS CCODE,
  Count(requestdata_all.reserve_id) AS REQUESTS_FILLED_LM
FROM
  (
    SELECT
      branches.branchcode,
      ccodes.lib,
      ccodes.authorised_value
    FROM
      branches,
      (
        SELECT
          authorised_values.category,
          authorised_values.authorised_value,
          authorised_values.lib
        FROM
          authorised_values
        WHERE
          authorised_values.category = 'ccode'
      ) ccodes
    ORDER BY
      branches.branchcode,
      ccodes.lib
  ) branchandcodes
  LEFT JOIN (
    SELECT
      requests_filled.branchcode,
      requests_filled.reserve_id,
      requests_filled.itemnumber,
      Coalesce(items.ccode, deleteditems.ccode, ""XXX"") AS ccode
    FROM
      (
        SELECT
          old_reserves.branchcode,
          old_reserves.reserve_id,
          Coalesce(old_reserves.itemnumber, deleted_itemnumbers.itemnumber) AS itemnumber
        FROM
          old_reserves
          LEFT JOIN (
            SELECT
              action_logs.object AS reserve_id,
              SubString_Index(SubString_Index(action_logs.info, ""itemnumber' => '"", -1), ""'"", 1) AS itemnumber
            FROM
              action_logs
            WHERE
              action_logs.module = 'HOLDS' AND
              action_logs.info LIKE ""%itemnumber' => '%"" AND
              action_logs.action LIKE 'DEL%' AND
              Year(action_logs.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND
              Month(action_logs.timestamp) = Month(Now() - INTERVAL 1 MONTH)
            GROUP BY
              action_logs.action_id
          ) deleted_itemnumbers
            ON deleted_itemnumbers.reserve_id = old_reserves.reserve_id
          JOIN action_logs
            ON action_logs.object = old_reserves.reserve_id
        WHERE
          Month(action_logs.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
          Year(action_logs.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND
          old_reserves.found = 'F' AND
          action_logs.module = 'HOLDS' AND
          action_logs.action LIKE ""DEL%""
        GROUP BY
          old_reserves.branchcode,
          old_reserves.reserve_id,
          Coalesce(old_reserves.itemnumber, deleted_itemnumbers.itemnumber)
      ) requests_filled
      LEFT JOIN items
        ON items.itemnumber = requests_filled.itemnumber
      LEFT JOIN deleteditems
        ON deleteditems.itemnumber = requests_filled.itemnumber
    GROUP BY
      requests_filled.branchcode,
      requests_filled.reserve_id,
      requests_filled.itemnumber
  ) requestdata_all
    ON requestdata_all.ccode = branchandcodes.authorised_value AND
      requestdata_all.branchcode = branchandcodes.branchcode
WHERE
  branchandcodes.branchcode LIKE <<Choose your library|branches>>
GROUP BY
  branchandcodes.branchcode,
  branchandcodes.lib",,,,,,,,
R.003297,"/*
R.003297

----------

Name: GHW - Patron receiving SMS messages with an account updated in the previous month
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-01-09 13:43:08
Modified on: 2020-01-09 13:43:08
Date last run: 2020-01-09 15:55:01

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.branchcode,
  borrowers.cardnumber,
  borrower_message_transport_preferences.message_transport_type,
  borrowers.updated_on
FROM
  borrowers
  INNER JOIN borrower_message_preferences
    ON borrower_message_preferences.borrowernumber = borrowers.borrowernumber
  INNER JOIN borrower_message_transport_preferences
    ON borrower_message_transport_preferences.borrower_message_preference_id = borrower_message_preferences.borrower_message_preference_id
WHERE
  borrowers.branchcode = <<Choose your library|branches>> AND
  borrower_message_transport_preferences.message_transport_type = 'SMS' AND
  borrowers.updated_on > Now() - INTERVAL 1 MONTH
GROUP BY
  borrowers.branchcode,
  borrowers.cardnumber,
  borrower_message_transport_preferences.message_transport_type,
  borrowers.updated_on
ORDER BY
  borrowers.updated_on DESC",,,,,,,,
R.003298,"/*
R.003298

----------

Name: GHW - LEAVENWRTH patrons without Kanopy access
Created by: George H Williams

----------

Group:  LEAVENWRTH
     -

Created on: 2020-01-09 15:12:38
Modified on: 2021-08-16 20:32:56
Date last run: 2022-07-18 10:32:40

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows patrons with a LEAVENWRTH home library but without a ""Kanopy (LEAVENWRTH): Allowed . . ."" borrower attribute.</p>
<ul><li>Shows borrwoers that currently lack this attribute</li>
<li>grouped by categorycode and borrowernumber</li>
<li>sorted by library card number</li>
<li>links to the borrower account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Should be run monthly at LEAVENWRTH so the attribute can be added to those accounts</p>
<p><a href=""https://northeast-kansas-library-system.github.io/next/branches/LEAVENWRTH/kanopy.html#running-reports-to-manually-update-kanopy-permission"" target=""_blank"">Go to the training information for the Kanopy (LEAVENWRTH) extended borrower attribute.</a></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3298&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">kanopy; patron-extended-attributes; LEAVENWRTH;</p>
</div>

----------
*/

","SELECT
  Concat('<a href=""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=', borrowers.borrowernumber, '&step=4"" target=""_blank"">Go to patron account</a>') AS LINK,
  borrowers.cardnumber
FROM
  borrowers
  LEFT JOIN (
    SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute
    FROM
      borrower_attributes
    WHERE
      borrower_attributes.code = 'LEAVKANOPY'
  ) kanopy
    ON kanopy.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode = 'LEAVENWRTH' AND
  kanopy.attribute IS NULL AND
  borrowers.categorycode <> 'STAFF' AND
  borrowers.categorycode <> ""ILL"" AND
  borrowers.categorycode <> ""INHOUSE"" AND
  borrowers.categorycode <> ""STATISTIC"" AND
  borrowers.othernames <> 'SIP2 test account'
GROUP BY
  borrowers.categorycode,
  borrowers.borrowernumber
ORDER BY
  borrowers.cardnumber",,,,,,,,
R.003299,"/*
R.003299

----------

Name: GHW - Non-LEAVENWRTH patrons with LEAVENWRTH Kanopy access
Created by: George H Williams

----------

Group:  LEAVENWRTH
     -

Created on: 2020-01-09 15:15:12
Modified on: 2021-08-16 20:34:52
Date last run: 2022-08-12 09:53:24

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows patrons with a ""Kanopy (LEAVENWRTH): Allowed . . ."" patron attribute but without a LEAVENWRTH homebranch</p>
<ul><li>Shows borrwoers that currently have this attribute</li>
<li>grouped by categorycode and borrowernumber</li>
<li>sorted by library card number</li>
<li>links to the borrower account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Should be run monthly at LEAVENWRTH so the attribute can be removed from those accounts</p>
<p><a href=""https://northeast-kansas-library-system.github.io/next/branches/LEAVENWRTH/kanopy.html#running-reports-to-manually-update-kanopy-permission"" target=""_blank"">Go to the training information for the Kanopy (LEAVENWRTH) extended borrower attribute.</a></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3299&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">kanopy; patron-extended-attributes;</p>
</div>

----------
*/

","SELECT
  Concat('<a href=""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=', borrowers.borrowernumber, '&step=4"" target=""_blank"">Go to patron account</a>') AS LINK,
  borrowers.cardnumber
FROM
  borrowers
  LEFT JOIN (
    SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute
    FROM
      borrower_attributes
    WHERE
      borrower_attributes.code = 'LEAVKANOPY'
  ) kanopy
    ON kanopy.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode <> 'LEAVENWRTH' AND
  kanopy.attribute = 'LEAVENWRTH' AND
  borrowers.othernames <> 'SIP2 test account'
GROUP BY
  borrowers.categorycode,
  borrowers.borrowernumber
ORDER BY
  borrowers.cardnumber",,,,,,,,
R.003300,"/*
R.003300

----------

Name: GHW - OTTAWA patrons without OTTAWA Kanopy access
Created by: George H Williams

----------

Group:  OTTAWA
     -

Created on: 2020-01-09 15:31:47
Modified on: 2021-08-16 13:44:12
Date last run: 2021-08-24 14:15:28

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows patrons with a OTTAWA home library but without a ""Kanopy (OTTAWA): Allowed . . ."" borrower attribute.</p>
<ul><li>Shows borrwoers that currently lack this attribute</li>
<li>grouped by categorycode and borrowernumber</li>
<li>sorted by library card number</li>
<li>links to the borrower account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Should be run monthly at OTTAWA so the attribute can be added to those accounts</p>
<p><a href=""https://northeast-kansas-library-system.github.io/next/branches/OTTAWA/kanopy.html#running-reports-to-manually-update-kanopy-permission"" target=""_blank"">Go to the training information for the Kanopy (OTTAWA) extended borrower attribute.</a></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3300&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">kanopy; patron-extended-attributes; HOMEBRANCH;</p>
</div>

----------
*/

","SELECT
  Concat('<a href=""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=', borrowers.borrowernumber, '&step=4"" target=""_blank"">Go to patron account</a>') AS LINK,
  borrowers.cardnumber
FROM
  borrowers
  LEFT JOIN (
    SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute
    FROM
      borrower_attributes
    WHERE
      borrower_attributes.code = 'OTTAKANOPY'
  ) kanopy
    ON kanopy.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode = 'OTTAWA' AND
  kanopy.attribute IS NULL AND
  borrowers.categorycode <> 'STAFF' AND
  borrowers.categorycode <> ""ILL"" AND
  borrowers.categorycode <> ""INHOUSE"" AND
  borrowers.categorycode <> ""STATISTIC"" AND
  borrowers.othernames <> 'SIP2 test account'
GROUP BY
  borrowers.categorycode,
  borrowers.borrowernumber
ORDER BY
  borrowers.cardnumber",,,,,,,,
R.003301,"/*
R.003301

----------

Name: GHW - Non-OTTAWA patrons with OTTAWA Kanopy access
Created by: George H Williams

----------

Group:  OTTAWA
     -

Created on: 2020-01-09 15:33:11
Modified on: 2021-08-16 13:44:15
Date last run: 2021-08-24 14:15:26

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows patrons with a ""Kanopy (OTTAWA): Allowed . . ."" patron attribute but without a OTTAWA homebranch</p>
<ul><li>Shows borrwoers that currently have this attribute</li>
<li>grouped by categorycode and borrowernumber</li>
<li>sorted by library card number</li>
<li>links to the borrower account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Should be run monthly at OTTAWA so the attribute can be removed from those accounts</p>
<p><a href=""https://northeast-kansas-library-system.github.io/next/branches/OTTAWA/kanopy.html#running-reports-to-manually-update-kanopy-permission"" target=""_blank"">Go to the training information for the Kanopy (OTTAWA) extended borrower attribute.</a></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3301&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">kanopy; patron-extended-attributes; OTTAWA;</p>
</div>

----------
*/

","SELECT
  Concat('<a href=""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=', borrowers.borrowernumber, '&step=4"" target=""_blank"">Go to patron account</a>') AS LINK,
  borrowers.cardnumber
FROM
  borrowers
  LEFT JOIN (
    SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute
    FROM
      borrower_attributes
    WHERE
      borrower_attributes.code = 'OTTAKANOPY'
  ) kanopy
    ON kanopy.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode <> 'OTTAWA' AND
  kanopy.attribute = 'OTTAWA' AND
  borrowers.othernames <> 'SIP2 test account'
GROUP BY
  borrowers.categorycode,
  borrowers.borrowernumber
ORDER BY
  borrowers.cardnumber",,,,,,,,
R.003304,"/*
R.003304

----------

Name: GHW - Item Count by item type
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-01-13 16:10:56
Modified on: 2021-07-22 09:50:51
Date last run: 2022-08-30 10:39:02

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branchtypes.branchcode,
  branchtypes.description AS ITEM_TYPE,
  itemss.Count_itemnumber AS TOTAL_ITEMS,
  adultitems.Count_itemnumber AS ADULT_ITEMS,
  juvenileitems.Count_itemnumber AS JUVENILE_ITEMS,
  yaitems.Count_itemnumber AS YOUNG_ADULT_ITEMS
FROM
  (SELECT
      branches.branchcode,
      branches.branchname,
      itemtypes.itemtype,
      itemtypes.description
    FROM
      branches,
      itemtypes
    GROUP BY
      branches.branchcode,
      branches.branchname,
      itemtypes.itemtype,
      itemtypes.description) branchtypes LEFT JOIN
  (SELECT
      items.homebranch,
      Coalesce(items.itype, ""XXX"") AS ITYPE,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    GROUP BY
      items.homebranch,
      Coalesce(items.itype, ""XXX"")) itemss ON itemss.homebranch =
      branchtypes.branchcode AND
      itemss.ITYPE = branchtypes.itemtype LEFT JOIN
  (SELECT
      items.homebranch,
      Coalesce(items.itype, ""XXX"") AS itype,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      (items.permanent_location = 'ADULT' OR
        items.permanent_location = 'BALDADULT' OR
        items.permanent_location = 'LVPLADULT' OR
        items.permanent_location = 'PAOLAADULT' OR
        items.permanent_location = 'CART' OR
        items.permanent_location = 'CATALOGING' OR
        items.permanent_location = 'PROC' OR
        items.permanent_location IS NULL)
    GROUP BY
      items.homebranch,
      Coalesce(items.itype, ""XXX"")) adultitems ON adultitems.homebranch =
      branchtypes.branchcode AND
      adultitems.itype = branchtypes.itemtype LEFT JOIN
  (SELECT
      items.homebranch,
      Coalesce(items.itype, ""XXX"") AS itype,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      items.permanent_location LIKE ""%CHILD%""
    GROUP BY
      items.homebranch,
      Coalesce(items.itype, ""XXX"")) juvenileitems ON juvenileitems.homebranch =
      branchtypes.branchcode AND
      juvenileitems.itype = branchtypes.itemtype LEFT JOIN
  (SELECT
      items.homebranch,
      Coalesce(items.itype, ""XXX"") AS itype,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      (items.permanent_location LIKE ""YOUNGADULT"" OR
        items.permanent_location LIKE ""%YA%"")
    GROUP BY
      items.homebranch,
      Coalesce(items.itype, ""XXX"")) yaitems ON yaitems.homebranch =
      branchtypes.branchcode AND
      yaitems.itype = branchtypes.itemtype
WHERE
  branchtypes.branchcode LIKE <<Choose your library|LBRANCH>> AND
  branchtypes.itemtype LIKE <<Choose an item type|LITYPES>>
GROUP BY
  branchtypes.branchcode,
  branchtypes.description,
  itemss.Count_itemnumber,
  adultitems.Count_itemnumber,
  juvenileitems.Count_itemnumber,
  yaitems.Count_itemnumber",,,,,,,,
R.003305,"/*
R.003305

----------

Name: GHW - items deleted last month by itype
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-01-14 16:06:38
Modified on: 2020-01-14 16:06:38
Date last run: 2021-09-07 11:23:05

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branchntypes.branchname,
  branchntypes.description,
  Sum(DISTINCT allitems.Count_itemnumber) AS ALL_ITEMS,
  Sum(DISTINCT adult.Count_itemnumber) AS ADULT,
  Sum(DISTINCT childrens.Count_itemnumber) AS CHILDREN,
  Sum(DISTINCT ya.Count_itemnumber) AS YA,
  Sum(DISTINCT other.Count_itemnumber) AS OTHER
FROM
  (
    SELECT
      branches.branchname,
      branches.branchcode,
      itemtypes.itemtype,
      itemtypes.description
    FROM
      branches,
      itemtypes
    GROUP BY
      branches.branchname,
      branches.branchcode,
      itemtypes.itemtype,
      itemtypes.description
  ) branchntypes
  LEFT JOIN (
    SELECT
      Coalesce(deleteditems.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(deleteditems.itype, ""XXX"") AS itype,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 MONTH)
    GROUP BY
      Coalesce(deleteditems.homebranch, ""NEKLS""),
      Coalesce(deleteditems.itype, ""XXX"")
  ) allitems
    ON allitems.homebranch = branchntypes.branchcode AND
      allitems.itype = branchntypes.itemtype
  LEFT JOIN (
    SELECT
      Coalesce(deleteditems.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(deleteditems.itype, ""XXX"") AS itype,
      deleteditems.location,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND
      (deleteditems.location = 'ADULT' OR
        deleteditems.location = ""LVPLADULT"" OR
        deleteditems.location = ""PAOLAADULT"")
    GROUP BY
      Coalesce(deleteditems.homebranch, ""NEKLS""),
      Coalesce(deleteditems.itype, ""XXX""),
      deleteditems.location
  ) adult
    ON adult.homebranch = branchntypes.branchcode AND
      adult.itype = branchntypes.itemtype
  LEFT JOIN (
    SELECT
      Coalesce(deleteditems.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(deleteditems.itype, ""XXX"") AS itype,
      deleteditems.location,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND
      (deleteditems.location = 'CHILDRENS' OR
        deleteditems.location = ""LVPLCHILD"" OR
        deleteditems.location = ""PAOLACHILD"")
    GROUP BY
      Coalesce(deleteditems.homebranch, ""NEKLS""),
      Coalesce(deleteditems.itype, ""XXX""),
      deleteditems.location
  ) childrens
    ON childrens.homebranch = branchntypes.branchcode AND
      childrens.itype = branchntypes.itemtype
  LEFT JOIN (
    SELECT
      Coalesce(deleteditems.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(deleteditems.itype, ""XXX"") AS itype,
      deleteditems.location,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND
      (deleteditems.location = 'YOUNGADULT' OR
        deleteditems.location = ""LVPLYA"" OR
        deleteditems.location = ""PAOLAYA"")
    GROUP BY
      Coalesce(deleteditems.homebranch, ""NEKLS""),
      Coalesce(deleteditems.itype, ""XXX""),
      deleteditems.location
  ) ya
    ON ya.homebranch = branchntypes.branchcode AND
      ya.itype = branchntypes.itemtype
  LEFT JOIN (
    SELECT
      Coalesce(deleteditems.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(deleteditems.itype, ""XXX"") AS itype,
      deleteditems.location,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND
      (deleteditems.location = 'CART' OR
        deleteditems.location = ""CATALOGING"" OR
        deleteditems.location = ""PROC"" OR
        deleteditems.location = """" OR
        deleteditems.location IS NULL)
    GROUP BY
      Coalesce(deleteditems.homebranch, ""NEKLS""),
      Coalesce(deleteditems.itype, ""XXX""),
      deleteditems.location
  ) other
    ON other.homebranch = branchntypes.branchcode AND
      other.itype = branchntypes.itemtype
WHERE
  branchntypes.branchcode = 'CORNING'
GROUP BY
  branchntypes.branchname,
  branchntypes.description",,,,,,,,
R.003306,"/*
R.003306

----------

Name: GHW - Total items at a librayr on the last day of last month
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-01-14 16:07:32
Modified on: 2020-01-14 16:07:32
Date last run: 2020-12-30 17:24:11

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branchntypes.branchname,
  branchntypes.description,
  Sum(DISTINCT allitems.Count_itemnumber) AS ALL_ITEMS,
  Sum(DISTINCT adult.Count_itemnumber) AS ADULT,
  Sum(DISTINCT childrens.Count_itemnumber) AS CHILDREN,
  Sum(DISTINCT ya.Count_itemnumber) AS YA,
  Sum(DISTINCT other.Count_itemnumber) AS OTHER
FROM
  (
    SELECT
      branches.branchname,
      branches.branchcode,
      itemtypes.itemtype,
      itemtypes.description
    FROM
      branches,
      itemtypes
    GROUP BY
      branches.branchname,
      branches.branchcode,
      itemtypes.itemtype,
      itemtypes.description
  ) branchntypes
  LEFT JOIN (
    SELECT
      Coalesce(items.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(items.itype, ""XXX"") AS itype,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      items.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1)
    GROUP BY
      Coalesce(items.homebranch, ""NEKLS""),
      Coalesce(items.itype, ""XXX"")
    UNION
    SELECT
      Coalesce(deleteditems.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(deleteditems.itype, ""XXX"") AS itype,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      deleteditems.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) AND
      deleteditems.timestamp > AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1)
    GROUP BY
      Coalesce(deleteditems.homebranch, ""NEKLS""),
      Coalesce(deleteditems.itype, ""XXX"")
  ) allitems
    ON allitems.homebranch = branchntypes.branchcode AND
      allitems.itype = branchntypes.itemtype
  LEFT JOIN (
    SELECT
      Coalesce(items.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(items.itype, ""XXX"") AS itype,
      items.location,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      items.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) AND
      (items.location = 'ADULT' OR
        items.location = ""LVPLADULT"" OR
        items.location = ""PAOLAADULT"")
    GROUP BY
      Coalesce(items.homebranch, ""NEKLS""),
      Coalesce(items.itype, ""XXX""),
      items.location
    UNION
    SELECT
      Coalesce(deleteditems.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(deleteditems.itype, ""XXX"") AS itype,
      deleteditems.location,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      deleteditems.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) AND
      deleteditems.timestamp > AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) AND
      (deleteditems.location = 'ADULT' OR
        deleteditems.location = ""LVPLADULT"" OR
        deleteditems.location = ""PAOLAADULT"")
    GROUP BY
      Coalesce(deleteditems.homebranch, ""NEKLS""),
      Coalesce(deleteditems.itype, ""XXX""),
      deleteditems.location
  ) adult
    ON adult.homebranch = branchntypes.branchcode AND
      adult.itype = branchntypes.itemtype
  LEFT JOIN (
    SELECT
      Coalesce(items.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(items.itype, ""XXX"") AS itype,
      items.location,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      items.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) AND
      (items.location = 'CHILDRENS' OR
        items.location = ""LVPLCHILD"" OR
        items.location = ""PAOLACHILD"")
    GROUP BY
      Coalesce(items.homebranch, ""NEKLS""),
      Coalesce(items.itype, ""XXX""),
      items.location
    UNION
    SELECT
      Coalesce(deleteditems.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(deleteditems.itype, ""XXX"") AS itype,
      deleteditems.location,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      deleteditems.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) AND
      deleteditems.timestamp > AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) AND
      (deleteditems.location = 'CHILDRENS' OR
        deleteditems.location = ""LVPLCHILD"" OR
        deleteditems.location = ""PAOLACHILD"")
    GROUP BY
      Coalesce(deleteditems.homebranch, ""NEKLS""),
      Coalesce(deleteditems.itype, ""XXX""),
      deleteditems.location
  ) childrens
    ON childrens.homebranch = branchntypes.branchcode AND
      childrens.itype = branchntypes.itemtype
  LEFT JOIN (
    SELECT
      Coalesce(items.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(items.itype, ""XXX"") AS itype,
      items.location,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      items.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) AND
      (items.location = 'YOUNGADULT' OR
        items.location = ""LVPLYA"" OR
        items.location = ""PAOLAYA"")
    GROUP BY
      Coalesce(items.homebranch, ""NEKLS""),
      Coalesce(items.itype, ""XXX""),
      items.location
    UNION
    SELECT
      Coalesce(deleteditems.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(deleteditems.itype, ""XXX"") AS itype,
      deleteditems.location,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      deleteditems.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) AND
      deleteditems.timestamp > AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) AND
      (deleteditems.location = 'YOUNGADULT' OR
        deleteditems.location = ""LVPLYA"" OR
        deleteditems.location = ""PAOLAYA"")
    GROUP BY
      Coalesce(deleteditems.homebranch, ""NEKLS""),
      Coalesce(deleteditems.itype, ""XXX""),
      deleteditems.location
  ) ya
    ON ya.homebranch = branchntypes.branchcode AND
      ya.itype = branchntypes.itemtype
  LEFT JOIN (
    SELECT
      Coalesce(items.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(items.itype, ""XXX"") AS itype,
      items.location,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      items.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) AND
      (items.location = 'CART' OR
        items.location = ""CATALOGING"" OR
        items.location = ""PROC"" OR
        items.location = """" OR
        items.location IS NULL)
    GROUP BY
      Coalesce(items.homebranch, ""NEKLS""),
      Coalesce(items.itype, ""XXX""),
      items.location
    UNION
    SELECT
      Coalesce(deleteditems.homebranch, ""NEKLS"") AS homebranch,
      Coalesce(deleteditems.itype, ""XXX"") AS itype,
      deleteditems.location,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      deleteditems.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) AND
      deleteditems.timestamp > AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) AND
      (deleteditems.location = 'CART' OR
        deleteditems.location = ""CATALOGING"" OR
        deleteditems.location = ""PROC"" OR
        deleteditems.location = """" OR
        deleteditems.location IS NULL)
    GROUP BY
      Coalesce(deleteditems.homebranch, ""NEKLS""),
      Coalesce(deleteditems.itype, ""XXX""),
      deleteditems.location
  ) other
    ON other.homebranch = branchntypes.branchcode AND
      other.itype = branchntypes.itemtype
WHERE
  branchntypes.branchcode = 'CORNING'
GROUP BY
  branchntypes.branchname,
  branchntypes.description",,,,,,,,
R.003307,"/*
R.003307

----------

Name: GHW - Authorised Values Synchronization - Item types
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-01-28 13:36:58
Modified on: 2020-01-28 14:07:19
Date last run: 2022-04-13 08:52:33

----------

Public: 0
Expiry: 300

----------



----------
*/

","Select
  Concat('<a href=""/cgi-bin/koha/admin/authorised_values.pl?searchfield=', ltypes.category, '"" target=""_blank"">Link to AV</a>') As LINK,
  If(itypes.itemtype Is Null, ""<span style='background-color: red; color: yellow'>Possible errror</span>"", itypes.itemtype) As ITYPE,
  If(ltypes.authorised_value Is Null, ""<span style='background-color: red; color: yellow'>Errror</span>"", ltypes.authorised_value) As authorised_value,
  If(itypes.description Is Null, ""<span style='background-color: red; color: yellow'>Possible errror</span>"", itypes.description) As description,
  ltypes.lib
From
  (Select
     itemtypes.itemtype,
     itemtypes.description
   From
     itemtypes) itypes Left Join
  (Select
     authorised_values.category,
     authorised_values.authorised_value,
     authorised_values.lib
   From
     authorised_values
   Where
     authorised_values.category = 'LITYPES'
   Group By
     authorised_values.category,
     authorised_values.authorised_value,
     authorised_values.lib) ltypes On ltypes.authorised_value = itypes.itemtype
Union
Select
  Concat('<a href=""/cgi-bin/koha/admin/authorised_values.pl?searchfield=', ltypes.category, '"" target=""_blank"">Link to AV</a>') As LINK,
  If(itypes.itemtype Is Null, ""<span style='background-color: red; color: yellow'>Possible errror</span>"", itypes.itemtype) As ITYPE,
  If(ltypes.authorised_value Is Null, ""<span style='background-color: red; color: yellow'>Errror</span>"", ltypes.authorised_value) As authorised_value,
  If(itypes.description Is Null, ""<span style='background-color: red; color: yellow'>Possible errror</span>"", itypes.description) As description,
  ltypes.lib
From
  (Select
     itemtypes.itemtype,
     itemtypes.description
   From
     itemtypes) itypes Right Join
  (Select
     authorised_values.category,
     authorised_values.authorised_value,
     authorised_values.lib
   From
     authorised_values
   Where
     authorised_values.category = 'LITYPES'
   Group By
     authorised_values.category,
     authorised_values.authorised_value,
     authorised_values.lib) ltypes On ltypes.authorised_value = itypes.itemtype
ORDER BY
  ITYPE,
  authorised_value
LIMIT 1000",,,,,,,,
R.003308,"/*
R.003308

----------

Name: GHW - Authorised Values Synchronization - Collection Codes
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-01-28 14:21:20
Modified on: 2021-07-08 15:15:42
Date last run: 2022-04-27 09:12:30

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat(
    '<a href=""/cgi-bin/koha/admin/authorised_values.pl?searchfield=',
    ccodes.category, 
    '"" target=""_blank"">Link to CCODE</a>'
  ) AS LINK_TO_CCODE,
  If(
    ccodes.category IS NULL,
    ""<span style='background-color: red; color: yellow'>Possible errror</span>"",
    ccodes.category
  ) AS CATEGORY,
  ccodes.authorised_value AS CCODE,
  If(
    lccodes.category IS NULL,
    ""<span style='background-color: red; color: yellow'>Possible errror</span>"",
    lccodes.category
  ) AS ALT_CATEGORY,
  Concat(
    '<a href=""/cgi-bin/koha/admin/authorised_values.pl?searchfield=',
    lccodes.category, 
    '"" target=""_blank"">Link to LCCODE</a>'
  ) AS LINK_TO_LCCODE,
  lccodes.authorised_value AS LCCODE,
  ccodes.lib AS LIB,
  lccodes.lib AS ALT_LIB,
  ccodes.lib_opac AS OPAC,
  lccodes.lib_opac AS ALT_OPTC
FROM
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE') ccodes LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LCCODE') lccodes ON
      lccodes.authorised_value = ccodes.authorised_value
UNION
SELECT
  Concat(
    '<a href=""/cgi-bin/koha/admin/authorised_values.pl?searchfield=',
    ccodesx.category, 
    '"" target=""_blank"">Link to CCODE</a>'
  ) AS LINK,
  If(
    ccodesx.category IS NULL,
    ""<span style='background-color: red; color: yellow'>Possible errror</span>"",
    ccodesx.category
  ) AS category,
  ccodesx.authorised_value,
  If(
    lccodesx.category IS NULL,
    ""<span style='background-color: red; color: yellow'>Possible errror</span>"",
    lccodesx.category
  ) AS category1,
  Concat(
    '<a href=""/cgi-bin/koha/admin/authorised_values.pl?searchfield=',
    lccodesx.category, 
    '"" target=""_blank"">Link to LCCODE</a>'
  ) AS LINK1,
  lccodesx.authorised_value AS authorised_value1,
  ccodesx.lib,
  lccodesx.lib AS lib1,
  ccodesx.lib_opac,
  lccodesx.lib_opac AS lib_opac1
FROM
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE') ccodesx RIGHT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LCCODE') lccodesx ON
      lccodesx.authorised_value = ccodesx.authorised_value
ORDER BY
  LINK_TO_CCODE,
  CCODE
LIMIT 1000",,,,,,,,
R.003309,"/*
R.003309

----------

Name: GHW - LEAVENWRTH - patrons with YES newsletter permission - new and renewed yesterday
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-01-30 12:21:42
Modified on: 2020-01-30 12:21:59
Date last run: 2022-10-03 03:00:04

----------

Public: 0
Expiry: 300

----------



----------
*/

","Select
  borrowers.branchcode,
  borrowers.cardnumber,
  Concat(borrowers.surname, "", "", borrowers.firstname) As BORROWER_NAME,
  borrowers.email,
  Concat(newsletter.code, "", "", newsletter.lib) As PERMISSION,
  borrowers.dateenrolled,
  borrowers.date_renewed
From
  borrowers Left Join
  (Select
     borrower_attributes.borrowernumber,
     borrower_attributes.code,
     authorised_values.lib,
     authorised_values.authorised_value
   From
     borrower_attributes Inner Join
     borrower_attribute_types On borrower_attributes.code = borrower_attribute_types.code Inner Join
     authorised_values On borrower_attribute_types.authorised_value_category = authorised_values.category And
         borrower_attributes.attribute = authorised_values.authorised_value
   Where
     borrower_attributes.code = 'NEWSLETTER') newsletter On borrowers.borrowernumber = newsletter.borrowernumber
Where
  borrowers.branchcode Like 'LEAVENWRTH' And
  Coalesce(newsletter.authorised_value, 'NotAsked') Like 'Yes' And
  (borrowers.dateenrolled = CurDate() - Interval 1 Day Or
      borrowers.date_renewed = CurDate() - Interval 1 Day)
Group By
  borrowers.cardnumber,
  borrowers.email,
  borrowers.dateenrolled,
  borrowers.date_renewed,
  Coalesce(newsletter.authorised_value, 'NotAsked')
Order By
  borrowers.branchcode,
  BORROWER_NAME",,,,,,,,
R.003310,"/*
R.003310

----------

Name: GHW - duplicates ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-02-08 20:17:56
Modified on: 2020-02-08 21:39:42
Date last run: 2021-11-30 17:17:49

----------

Public: 0
Expiry: 300

----------



----------
*/

","Select
  Concat('<a href=\""/cgi-bin/koha/catalogue/search.pl?idx=ti&q=', Trim(Replace(Replace(Replace(Replace(Replace(Replace(biblio.title, '/', ''), ':', ''), ';', ''), '.', ''), '""', ''), ""'"", """")), '&sort_by=title_az\"" target=""_blank"">SEARCH</a>') As SEARCH,
  Trim(Replace(Replace(Replace(Replace(Replace(Replace(biblio.title, '/', ''), ':', ''), ';', ''), '.', ''), '""', ''), ""'"", """")) As TITLE,
  Group_Concat(biblio.biblionumber) As BIBLIONUMBERS,
  Group_Concat(biblio.author, "" | "") As AUTHORS,
  Count(biblio.biblionumber) As TITLE_COUNT
From
  biblio Join
  (Select
      items.biblionumber
    From
      items
    Where
      items.ccode Not Like ""DL%"" And
      items.ccode Not Like ""ER%""
    Group By
      items.biblionumber) itemsx On itemsx.biblionumber = biblio.biblionumber
Group By
  Concat('<a href=\""/cgi-bin/koha/catalogue/search.pl?idx=ti&q=', Trim(Replace(Replace(Replace(Replace(Replace(biblio.title, '/', ''), ':', ''), ';', ''), '.', ''), '""', '')), '&sort_by=title_az\"" target=""_blank"">SEARCH</a>'),
  Trim(Replace(Replace(Replace(Replace(Replace(biblio.title, '/', ''), ':', ''), ';', ''), '.', ''), '""', ''))
Having
  Count(biblio.biblionumber) > 1
Order By
  TITLE",,,,,,,,
R.003311,"/*
R.003311

----------

Name: GHW - ADMINREPORT - narrow holdsqueue
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-02-10 10:35:13
Modified on: 2020-02-10 14:27:31
Date last run: 2020-02-10 14:28:16

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>

<script>

$(window).on(""load"", function() {
  $(""#printme"").click(function () {
    var divToPrint = document.getElementById('report_results');
    newWin = window.open("""");
    newWin.document.write(divToPrint.outerHTML);
    newWin.print();
    newWin.close();
  });
});

    function printDiv() {
        var divToPrint = document.getElementById('report_results');
        newWin = window.open("""");
        newWin.document.write(divToPrint.outerHTML);
        newWin.print();
        newWin.close();
   }
</script>

<p>Generates a pick-list that can be easily printed on a receipt printer.</p>
<ul><li>Shows items currently on the holds report</li>
<li>at the library you specify</li>
<li>sorted in standard Next Search Catalog classification order</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><input type=""button"" id=""printme"" style=""margin: 20px; padding: 5px;"" value=""Print this report""></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3311&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT Concat_Ws('<br />',
  '',
  items.barcode,
  '',
  items.homebranch,
  items.holdingbranch,
  locations.lib,
  itypes.description,
  ccodes.lib,
  items.itemcallnumber,
  items.copynumber,
  biblio.author,
  Concat_Ws('<br />',
    biblio.title,
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')
  )
) AS ITEMS_WITH_REQUESTS
FROM biblio
LEFT JOIN ((hold_fill_targets
            LEFT JOIN items ON hold_fill_targets.itemnumber = items.itemnumber)
           LEFT JOIN biblio_metadata ON items.biblionumber = biblio_metadata.biblionumber) ON biblio.biblionumber = biblio_metadata.biblionumber
LEFT JOIN
  (SELECT authorised_values.category,
          authorised_values.authorised_value,
          authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'CCODE') ccodes ON ccodes.authorised_value = items.ccode
LEFT JOIN
  (SELECT authorised_values.category,
          authorised_values.authorised_value,
          authorised_values.lib
   FROM authorised_values
   WHERE authorised_values.category = 'LOC') locations ON locations.authorised_value = items.location
LEFT JOIN
  (SELECT itemtypes.itemtype,
          itemtypes.description
   FROM itemtypes) itypes ON itypes.itemtype = items.itype
WHERE items.homebranch Like <<Choose your library|branches>>
ORDER BY items.homebranch,
         items.holdingbranch,
         items.location,
         items.itype,
         items.ccode,
         items.itemcallnumber,
         items.copynumber,
         biblio.author,
         biblio.title",,,,,,,,
R.003313,"/*
R.003313

----------

Name: GHW - COVID helper
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-03-14 01:12:14
Modified on: 2020-03-15 22:14:48
Date last run: 2020-05-03 22:16:51

----------

Public: 0
Expiry: 300

----------

https://www.openmultipleurl.com/

----------
*/

","SELECT
  Concat('https://staff.nextkansas.org/cgi-bin/koha/reserve/request.pl?biblionumber=', items.biblionumber) AS LINK,
  items.itemnumber,
  items.barcode,
  items.homebranch,
  items.holdingbranch,
  reservess.branchcode,
  reservess.surname,
  reservess.cardnumber,
  reservess.reservedate,
  reservess.expirationdate,
  reservess.reserve_id
FROM
  items LEFT JOIN
  (SELECT
      borrowers.cardnumber,
      borrowers.surname,
      reserves.itemnumber,
      reserves.branchcode,
      reserves.reservedate,
      reserves.expirationdate,
      reserves.reserve_id
    FROM
      reserves JOIN
      borrowers ON reserves.borrowernumber = borrowers.borrowernumber
    WHERE
      reserves.branchcode = 'NEKLS') reservess ON reservess.itemnumber = items.itemnumber
WHERE
  items.homebranch = <<Affected library|branches>> AND
  items.holdingbranch <> <<Affected library|branches>> AND
  (items.itemlost IS NULL OR
      items.itemlost = '' OR
      items.itemlost = 0)",,,,,,,,
R.003316,"/*
R.003316

----------

Name: Update all 2020 patron expirations to 2021
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-03-22 20:56:24
Modified on: 2020-03-22 21:48:13
Date last run: 2020-03-23 00:37:18

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.cardnumber,
  REGEXP_REPLACE(Trim(borrowers.surname), '[[:space:]]+', ' ') AS surname,
  REGEXP_REPLACE(Trim(borrowers.firstname), '[[:space:]]+', ' ') AS firstname,
  REGEXP_REPLACE(Trim(Replace(borrowers.address, ""."", """")), '[[:space:]]+', ' ') AS address,
  borrowers.city,
  If(borrowers.state LIKE ""Kans%"", ""KS"", If(borrowers.state LIKE ""co%"", ""CO"", If(borrowers.state LIKE ""Neb%"", ""NE"", upper(borrowers.state)))) AS state,
  LEFT(borrowers.zipcode, 5) AS zipcode,
  borrowers.country,
  borrowers.email,
  borrowers.phone,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateexpiry + INTERVAL 1 YEAR AS dateexpiry
FROM
  borrowers
WHERE
  borrowers.categorycode <> ""STAFF"" AND
  Year(borrowers.dateexpiry) = 2020 AND
  borrowers.branchcode LIKE <<Choose your library|ZBRAN>>",,,,,,,,
R.003317,"/*
R.003317

----------

Name: GHW - Self-Registration Report
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-03-27 09:17:33
Modified on: 2020-04-13 14:26:53
Date last run: 2020-06-19 11:21:09

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat('<a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', borrowers.borrowernumber, '"" target=""_blank"">Link</a>') AS DIRECT_LINK,
  borrowers.cardnumber,
  borrowers.branchcode,
  Concat(Coalesce(borrowers.surname, ''), ', ', Coalesce(borrowers.firstname, '')) AS NAME,
  borrowers.dateofbirth,
  Concat_Ws(""<br />"",
    Coalesce(borrowers.address, ''),
    Coalesce(borrowers.address2, ''),
    Concat(Coalesce(borrowers.city, ''), ', ', Coalesce(borrowers.state, ''), ' ', Coalesce(borrowers.zipcode, ''))
  ) AS ADDRESS,
  borrowers.email,
  borrowers.phone,
  borrowers.categorycode,
  borrowers.dateenrolled
FROM
  borrowers
WHERE
  borrowers.categorycode = 'A_SELF'
ORDER BY
  borrowers.cardnumber DESC",,,,,,,,
R.003318,"/*
R.003318

----------

Name: Branchcodes
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-04-01 08:51:38
Modified on: 2020-04-01 08:51:38
Date last run: 2020-04-01 08:51:40

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branches.branchcode,
  branches.branchname
FROM
  branches",,,,,,,,
R.003319,"/*
R.003319

----------

Name: GHW - COVID-19 Self-registered duplicate
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-04-13 14:47:24
Modified on: 2020-04-13 14:47:24
Date last run: 2020-07-08 14:35:42

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat(
    '&lt;br /&gt;SELF-REGISTERED DUPLICATE PATRON&lt;br /&gt;This patron appears to have self-registered for a second account during the COVID-19 emergency and now has two accounts.  This account (',
    pat1.cardnumber,
    ' - ',
    pat1.branchcode,
    ') and another with card number  &lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    pat2.borrowernumber,
    '"" target=""_blank""&gt;',
    pat2.cardnumber,
    ' - ',
    pat2.branchcode,
    '.&lt;/a&gt;&lt;br /&gt;The self-registered account should not be renewed or updated after the emergency has passed.&lt;br /&gt;GHW - NEKLS&lt;br /&gt;'
  ) AS CARDONE,
  Concat(
    '&lt;br /&gt;SELF-REGISTERED DUPLICATE PATRON&lt;br /&gt;This patron appears to have self-registered for a second account during the COVID-19 emergency and now has two accounts.  This account (',
      pat2.cardnumber,
      ' - ',
      pat2.branchcode,
      ') and another with card number  &lt;a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
      pat1.borrowernumber,
      '"" target=""_blank""&gt;',
      pat1.cardnumber,
      ' - ',
      pat1.branchcode,
      '.&lt;/a&gt;&lt;br /&gt;The self-registered account should not be renewed or updated after the emergency has passed.&lt;br /&gt;GHW - NEKLS&lt;br /&gt;'
  ) AS CARDTWO
FROM borrowers pat1,
     borrowers pat2
WHERE pat1.cardnumber = <<Card one>>
  AND pat2.cardnumber = <<Card two>>",,,,,,,,
R.003320,"/*
R.003320

----------

Name: ghw -Self-reg email
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-04-16 17:59:30
Modified on: 2020-04-16 18:04:03
Date last run: 2021-08-13 13:12:03

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  message_queue.message_id,
  message_queue.borrowernumber,
  message_queue.subject,
  message_queue.content,
  message_queue.metadata,
  message_queue.letter_code,
  message_queue.message_transport_type,
  message_queue.status,
  message_queue.time_queued,
  message_queue.to_address,
  message_queue.from_address,
  message_queue.content_type
FROM
  message_queue
WHERE
  message_queue.subject = 'Verify Your Account'
ORDER BY
  message_queue.message_id DESC",,,,,,,,
R.003322,"/*
R.003322

----------

Name: GHW - Total late fees collected at a library - by month
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-04-30 15:39:17
Modified on: 2020-12-30 11:07:30
Date last run: 2021-05-03 12:25:38

----------

Public: 0
Expiry: 300

----------

No data prior to August of 2018

----------
*/

","SELECT
  borrowers.branchcode,
  Year(account_offsets.created_on),
  Month(account_offsets.created_on),
  Format(Sum(ABS(account_offsets.amount)), 2) AS Sum_amount,
  accountlines1.debit_type_code,
  account_offsets.type
FROM
  account_offsets JOIN
  accountlines ON accountlines.accountlines_id = account_offsets.credit_id JOIN
  borrowers ON accountlines.manager_id = borrowers.borrowernumber JOIN
  accountlines accountlines1 ON accountlines1.accountlines_id =
      account_offsets.debit_id
WHERE
  accountlines1.debit_type_code = 'OVERDUE' AND
  account_offsets.type = 'Payment' AND
  borrowers.branchcode LIKE <<Choose your library|ZBRAN>>
GROUP BY
  borrowers.branchcode,
  Year(account_offsets.created_on),
  Month(account_offsets.created_on),
  accountlines1.debit_type_code,
  account_offsets.type
ORDER BY
  borrowers.branchcode,
  Year(account_offsets.created_on),
  Month(account_offsets.created_on)",,,,,,,,
R.003324,"/*
R.003324

----------

Name: GHW - 942 fix part 3
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-05-03 23:35:39
Modified on: 2020-05-09 20:56:12
Date last run: 2021-10-14 13:29:12

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  items.biblionumber,
  Group_Concat(DISTINCT items.location) AS LOCATIONS,
  Count(items.location) AS COUNTT,
  Count(DISTINCT items.location) AS COUNTD,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""e""]') AS BIBLOCATION
FROM
  items JOIN
  biblio_metadata ON biblio_metadata.biblionumber = items.biblionumber
GROUP BY
  items.biblionumber
HAVING
  Count(DISTINCT items.location) = 1 AND
  LOCATIONS <> BIBLOCATION AND
  Group_Concat(DISTINCT items.location) = <<Choose bib level shelving location|BIBLOC>>",,,,,,,,
R.003325,"/*
R.003325

----------

Name: GHW - New requests report
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-05-04 13:02:22
Modified on: 2020-05-04 13:02:22
Date last run: 2020-05-04 13:02:33

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  reserves.branchcode,
  GROUP_CONCAT(items.barcode SEPARATOR ""<br />"") AS Group_Concat_barcode
FROM
  reserves JOIN
  items ON reserves.itemnumber = items.itemnumber
WHERE
  reserves.found = 'W' AND
  reserves.borrowernumber = <<Enter borrowernumber>>
GROUP BY
  reserves.branchcode",,,,,,,,
R.003326,"/*
R.003326

----------

Name: GHW - 942e phase 4
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-05-09 21:22:43
Modified on: 2021-04-02 17:19:20
Date last run: 2021-05-27 21:33:04

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  biblio.author,
  Concat_Ws("" "", 
    biblio.title, 
    biblio.subtitle, 
    biblioitems.number,
    biblio.part_name
  ) AS FULL_TITLE,
  locs.lib AS BIB_LOCATION,
  itypess.description AS BIB_ITYPE,
  ccodes.lib AS CCODE,
  Date_Format(biblio.datecreated, ""%Y.%m.%d"") AS DATE_ADDED,
  biblio.biblionumber,
  Concat(
    '<a class= ""clicked"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', 
    biblio.biblionumber, 
    '\"" target=""_blank"">Go to title</a>'
  ) AS LINK_TO_TITLE,
  Query1.COUNT,
  Query1.Group_Concat_permanent_location
FROM
  biblio JOIN
  biblioitems ON biblioitems.biblionumber = biblio.biblionumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') locs ON locs.authorised_value =
      biblioitems.agerestriction LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itypess ON itypess.itemtype = biblioitems.itemtype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      biblioitems.cn_class INNER JOIN
  (SELECT
      items.biblionumber,
      Count(DISTINCT items.permanent_location) AS COUNT,
      Group_Concat(DISTINCT items.permanent_location) AS
      Group_Concat_permanent_location
    FROM
      items
    GROUP BY
      items.biblionumber
    HAVING
      Count(DISTINCT items.permanent_location) = '1') Query1 ON
      Query1.biblionumber = biblio.biblionumber
WHERE
  locs.lib IS NULL AND
  Query1.Group_Concat_permanent_location LIKE ""%ADULT%""
GROUP BY
  biblio.biblionumber,
  Query1.COUNT,
  Query1.Group_Concat_permanent_location
LIMIT 500",,,,,,,,
R.003327,"/*
R.003327

----------

Name: GHW - 942e - Phase 5
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-05-09 23:03:27
Modified on: 2020-05-10 00:27:13
Date last run: 2020-05-10 00:27:17

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  items.biblionumber,
  GROUP_CONCAT(DISTINCT items.location ORDER BY items.location) AS LOCATIONS,
  GROUP_CONCAT(DISTINCT items.permanent_location ORDER BY items.permanent_location) AS PERM_LOCATION,
  GROUP_CONCAT(DISTINCT items.itemcallnumber ORDER BY items.itemcallnumber) AS PERM_LOCATION,
  Count(items.location) AS COUNTT,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""a""]') AS TILE,
  Group_Concat(DISTINCT items.ccode) AS CCODES,
  Count(DISTINCT items.location) AS COUNTD,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""e""]') AS BIBLOCATION
FROM
  items JOIN
  biblio_metadata ON biblio_metadata.biblionumber = items.biblionumber
WHERE
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""e""]') <> ""ADULT"" AND
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""e""]') <> ""CHILDRENS"" AND
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""e""]') <> ""YOUNGADULT""
GROUP BY
  items.biblionumber",,,,,,,,
R.003328,"/*
R.003328

----------

Name: GHW - School District Email Generator
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-05-15 15:47:47
Modified on: 2020-05-15 20:33:40
Date last run: 2021-08-13 13:11:51

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.cardnumber,
  If(borrowers.email = """", branchess.branchemail, borrowers.email) AS email,
  branchess.branchname,
  If(borrowers.email = """", "" // NO EMAIL ADDRESS ON RECORD FOR THIS BORROWER // "", """") AS nomail,
  borrowers.firstname,
  borrowers.surname,
  GROUP_CONCAT(bibliossitemss.item_info SEPARATOR ""<br />"") AS CKOS,
  Count(issues.issue_id) AS COUNT,
  If(Count(issues.issue_id) = 1, ""item"", ""items"") AS ITEMSSS,
  branchess.branchemail
FROM
  (SELECT
      branches.branchcode,
      branches.branchname,
      branches.branchemail
    FROM
      branches) branchess JOIN
  borrowers ON branchess.branchcode = borrowers.branchcode JOIN
  issues ON issues.borrowernumber = borrowers.borrowernumber JOIN
  (SELECT
      Concat_Ws("" "", 
        ""TITLE:"", 
        biblio.title, 
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'), 
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), 
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'), 
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), 
        "" | AUTHOR:"", 
        biblio.author, 
        "" | LIBRARY BARCODE NUMBER:"", 
        items.barcode
      ) AS item_info,
      items.itemnumber
    FROM
      biblio JOIN
      biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber JOIN
      items ON items.biblionumber = biblio.biblionumber) bibliossitemss ON bibliossitemss.itemnumber = issues.itemnumber
WHERE
  branchess.branchcode LIKE <<Choose your library|ZPHSD>>
GROUP BY
  borrowers.cardnumber,
  branchess.branchemail,
  borrowers.email",,,,,,,,
R.003329,"/*
R.003329

----------

Name: GHW - ADMINREPORT items in transit to HIAWATHA
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-05-28 10:35:43
Modified on: 2020-05-28 10:36:47
Date last run: 2020-05-28 11:21:17

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat('<a href=""/cgi-bin/koha/reserve/request.pl?biblionumber=', reserves.biblionumber,'"" target=""_blank"">LINK</a>') AS LINK,
  borrowers.cardnumber,
  borrowers.surname,
  reserves.reservedate,
  reserves.branchcode AS PICKUP_AT,
  items.barcode,
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  biblio.author,
  biblio.title,
  reserves.suspend,
  reserves.suspend_until,
  reserves.found,
  reserves.borrowernumber
FROM
  reserves JOIN
  items ON reserves.itemnumber = items.itemnumber INNER JOIN
  biblio ON items.biblionumber = biblio.biblionumber INNER JOIN
  borrowers ON reserves.borrowernumber = borrowers.borrowernumber
WHERE
  reserves.branchcode = 'HIAWATHA' AND
  reserves.found = 'T'",,,,,,,,
R.003331,"/*
R.003331

----------

Name: GHW Adminreport - Long states
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-06-09 13:17:12
Modified on: 2020-06-09 13:17:12
Date last run: 2020-06-09 14:48:08

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.cardnumber,
  borrowers.surname,
  borrowers.firstname,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.country,
  borrowers.branchcode,
  borrowers.categorycode
FROM
  borrowers
WHERE
  borrowers.branchcode NOT LIKE ""HIGH_CC"" AND
  borrowers.branchcode NOT LIKE ""PH%"" AND
  borrowers.branchcode LIKE '%' AND
  borrowers.categorycode <> ""STAFF"" AND
  borrowers.cardnumber NOT LIKE ""0%"" AND
  borrowers.cardnumber IS NOT NULL AND
  borrowers.cardnumber NOT LIKE """" AND
  Length(borrowers.state) > 2",,,,,,,,
R.003332,"/*
R.003332

----------

Name: GHW - ADMINREPORT permanent location fix
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-06-10 16:50:44
Modified on: 2020-06-11 16:20:19
Date last run: 2020-06-11 16:20:30

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  items.itemnumber,
  items.biblionumber,
  items.barcode,
  items.permanent_location,
  items.location
FROM
  items
WHERE
  (items.permanent_location IS NULL OR
      items.permanent_location = """")
GROUP BY
  items.itemnumber,
  items.biblionumber,
  items.barcode,
  items.permanent_location,
  items.location",,,,,,,,
R.003333,"/*
R.003333

----------

Name: GHW - CLUBS - List of all clubs
Created by: George H Williams

----------

Group: Clubs
     -

Created on: 2020-06-15 16:10:09
Modified on: 2021-02-03 15:13:25
Date last run: 2022-02-24 15:19:25

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Generates a list of all clubs</p>
<ul><li>List shows clubs that are current at the time you run the report</li>
<li>at the library you specify</li>
<li>grouped by club id number</li>
<li>sorted by club home library, club name, and club id number</li>
<li>contains links to report 3335 - which generates a list of club members that can be shared with other club members</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Updated on 2020.02.03</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3333&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">clubs</p>
</div>

----------
*/

","SELECT
  Concat_Ws(""<br />&#160;&#160;&#160;&#160;&#160;"", 
    clubs.name,
    branches.branchname, 
    club_templates.name,
    Concat('Club ID number: ', clubs.id)
  ) AS CLUB_NAME,
  Concat_WS(""<br />"",
    liaisons.LIAISON,
    leaders.LEADER,
    frequencys.FREQUENCY,
    urls.URL,
    Concat(
      ""Number of members: "", 
      counts.Count_borrowernumber
    )
  ) AS CLUB_INFO,
  CONCAT(
    '<a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3335&phase=Run+this+report&param_name=Enter+club+ID+number&sql_params=', 
    clubs.id, 
    '"" target=""_blank"">Link to club roster for club members</a>'
  ) AS LINK_TO_ROSTER
FROM
  clubs JOIN
  club_templates ON clubs.club_template_id = club_templates.id  JOIN
  branches ON clubs.branchcode = branches.branchcode LEFT JOIN
  (SELECT
     club_fields.club_id,
     Concat_Ws("": "", 
       club_template_fields.name, 
       Coalesce(club_fields.value, ""-"")
     ) AS LIAISON,
     club_fields.club_template_field_id
   FROM
     club_fields  JOIN
     club_template_fields ON club_fields.club_template_field_id =
         club_template_fields.id
   WHERE
     (club_fields.club_template_field_id = 1 OR
         club_fields.club_template_field_id = 5)
   ORDER BY
     club_fields.club_id) liaisons ON liaisons.club_id = clubs.id LEFT JOIN
  (SELECT
     club_fields.club_id,
     Concat_Ws("": "", 
       club_template_fields.name, 
       Coalesce(club_fields.value, ""-"")
     ) AS LEADER,
     club_fields.club_template_field_id
   FROM
     club_fields JOIN
     club_template_fields ON club_fields.club_template_field_id =
         club_template_fields.id
   WHERE
     (club_fields.club_template_field_id = 2 OR
         club_fields.club_template_field_id = 6)
   ORDER BY
     club_fields.club_id) leaders ON leaders.club_id = clubs.id LEFT JOIN
  (SELECT
     club_fields.club_id,
     Concat_Ws("": "", 
       club_template_fields.name, 
       Coalesce(club_fields.value, ""-"")
     ) AS FREQUENCY,
     club_fields.club_template_field_id
   FROM
     club_fields JOIN
     club_template_fields ON club_fields.club_template_field_id =
         club_template_fields.id
   WHERE
     (club_fields.club_template_field_id = 3 OR
         club_fields.club_template_field_id = 7)
   ORDER BY
     club_fields.club_id) frequencys ON frequencys.club_id = clubs.id LEFT JOIN
  (SELECT
     club_fields.club_id,
     Concat_Ws("": "", 
       club_template_fields.name, 
       Coalesce(club_fields.value, ""-"")
     ) AS URL,
     club_fields.club_template_field_id
   FROM
     club_fields JOIN
     club_template_fields ON club_fields.club_template_field_id =
         club_template_fields.id
   WHERE
     (club_fields.club_template_field_id = 4 OR
         club_fields.club_template_field_id = 8)
   ORDER BY
     club_fields.club_id) urls ON urls.club_id = clubs.id LEFT JOIN
  (SELECT
     club_enrollments.club_id,
     Count(DISTINCT club_enrollments.borrowernumber) AS Count_borrowernumber
   FROM
     club_enrollments
   GROUP BY
     club_enrollments.club_id) counts ON counts.club_id = clubs.id
WHERE
  clubs.branchcode LIKE <<Choose your library|ZBRAN>>
GROUP BY
  liaisons.LIAISON,
  leaders.LEADER,
  frequencys.FREQUENCY,
  urls.URL,
  clubs.id
ORDER BY
  branches.branchname,
  clubs.name",,,,,,,,
R.003334,"/*
R.003334

----------

Name: GHW - CLUB Membership roster for library use only
Created by: George H Williams

----------

Group: Clubs
     -

Created on: 2020-06-15 17:13:07
Modified on: 2021-02-03 15:11:14
Date last run: 2021-02-03 15:16:29

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  clubs.name AS CLUB_NAME,
  borrowers.cardnumber,
  Concat_Ws('<br />', 
    Concat(
      borrowers.surname, 
      ', ', 
      borrowers.firstname, 
      If(
        borrowers.othernames = '', 
        '', 
        Concat(' (', borrowers.othernames,')')
      )
    ), 
    If(name.value = 1, '', '<u>Patron does not want their name shared</u><br />'), 
    borrowers.email,
    If(email.value = 1, '', '<u>Patron does not want their e-mail shared</u><br />'), 
    borrowers.phone, 
    If(phone.value = 1, '', '<u>Patron does not want their phone number shared</u><br />'),
    Concat(
      'Joined on: ', 
      Month(club_enrollments.date_enrolled), 
      '/', 
      Day(club_enrollments.date_enrolled), 
      '/', 
      Year(club_enrollments.date_enrolled)
    )
  ) AS CLUB_ROSTER_FOR_LIBRARY_USE_ONLY
FROM
  clubs JOIN
  club_enrollments ON club_enrollments.club_id = clubs.id JOIN
  (SELECT
      club_enrollment_fields.id,
      club_enrollment_fields.club_enrollment_id,
      club_enrollment_fields.club_template_enrollment_field_id,
      club_enrollment_fields.value,
      club_template_enrollment_fields.description
    FROM
      club_enrollment_fields JOIN
      club_template_enrollment_fields ON
          club_enrollment_fields.club_template_enrollment_field_id =
          club_template_enrollment_fields.id
    WHERE
      club_template_enrollment_fields.name LIKE ""%Name%"") name ON
      name.club_enrollment_id = club_enrollments.id JOIN
  (SELECT
      club_enrollment_fields.id,
      club_enrollment_fields.club_enrollment_id,
      club_enrollment_fields.club_template_enrollment_field_id,
      club_enrollment_fields.value,
      club_template_enrollment_fields.description
    FROM
      club_enrollment_fields JOIN
      club_template_enrollment_fields ON
          club_enrollment_fields.club_template_enrollment_field_id =
          club_template_enrollment_fields.id
    WHERE
      club_template_enrollment_fields.name LIKE ""%mail%"") email ON
      email.club_enrollment_id = club_enrollments.id JOIN
  (SELECT
      club_enrollment_fields.id,
      club_enrollment_fields.club_enrollment_id,
      club_enrollment_fields.club_template_enrollment_field_id,
      club_enrollment_fields.value,
      club_template_enrollment_fields.description
    FROM
      club_enrollment_fields JOIN
      club_template_enrollment_fields ON
          club_enrollment_fields.club_template_enrollment_field_id =
          club_template_enrollment_fields.id
    WHERE
      club_template_enrollment_fields.name LIKE ""%phone%"") phone ON
      phone.club_enrollment_id = club_enrollments.id JOIN
  borrowers ON club_enrollments.borrowernumber = borrowers.borrowernumber
WHERE
  clubs.id = <<Enter club ID number>>
ORDER BY
  club_enrollments.id",,,,,,,,
R.003335,"/*
R.003335

----------

Name: GHW - CLUB Membership roster for club use
Created by: George H Williams

----------

Group: Clubs
     -

Created on: 2020-06-15 17:41:11
Modified on: 2021-02-03 16:35:38
Date last run: 2022-02-24 15:19:31

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Lists the members of a club in a format that can be shared with other members of the same club</p>
<ul><li>Shows current members of the club that you specify</li>
<li>grouped by club id number and borrowernumber</li>
<li>sorted by club enrollment number (order in which the members joined)</li>
<li>links</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3335&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">clubs</p>
</div>

----------
*/

","SELECT
  clubs.name AS CLUB_NAME,
  Concat_Ws(
   '<br />', 
    If(
      name.value = 1, 
      Concat(
        borrowers.surname, 
        ', ', 
        borrowers.firstname, 
        If(
          borrowers.othernames = '', 
          '', 
          Concat(' (', borrowers.othernames, ')')
        )
      ), 
      '<u>Patron does not want their name shared with other members</u><br />'
    ),
    If(
      email.value = 1, 
      borrowers.email, 
      '<u>Patron does not want their e-mail shared with other members</u><br />'
    ),
    If(
      phone.value = 1, 
      borrowers.phone, 
      '<u>Patron does not want their phone number shared with other members</u><br />'
    ), 
    Concat(
      'Joined on: ', 
      Month(club_enrollments.date_enrolled), 
      '/', 
      Day(club_enrollments.date_enrolled), 
      '/', 
      Year(club_enrollments.date_enrolled)
    )
  ) AS CLUB_ROSTER_FOR_CLUB_MEMBERS
FROM
  clubs JOIN
  club_enrollments ON club_enrollments.club_id = clubs.id JOIN
  (SELECT
      club_enrollment_fields.id,
      club_enrollment_fields.club_enrollment_id,
      club_enrollment_fields.club_template_enrollment_field_id,
      club_enrollment_fields.value,
      club_template_enrollment_fields.description
    FROM
      club_enrollment_fields JOIN
      club_template_enrollment_fields ON
          club_enrollment_fields.club_template_enrollment_field_id =
          club_template_enrollment_fields.id
    WHERE
      club_template_enrollment_fields.name LIKE ""%Name%"") name ON
      name.club_enrollment_id = club_enrollments.id JOIN
  (SELECT
      club_enrollment_fields.id,
      club_enrollment_fields.club_enrollment_id,
      club_enrollment_fields.club_template_enrollment_field_id,
      club_enrollment_fields.value,
      club_template_enrollment_fields.description
    FROM
      club_enrollment_fields JOIN
      club_template_enrollment_fields ON
          club_enrollment_fields.club_template_enrollment_field_id =
          club_template_enrollment_fields.id
    WHERE
      club_template_enrollment_fields.name LIKE ""%mail%"") email ON
      email.club_enrollment_id = club_enrollments.id JOIN
  (SELECT
      club_enrollment_fields.id,
      club_enrollment_fields.club_enrollment_id,
      club_enrollment_fields.club_template_enrollment_field_id,
      club_enrollment_fields.value,
      club_template_enrollment_fields.description
    FROM
      club_enrollment_fields JOIN
      club_template_enrollment_fields ON
          club_enrollment_fields.club_template_enrollment_field_id =
          club_template_enrollment_fields.id
    WHERE
      club_template_enrollment_fields.name LIKE ""%phone%"") phone ON
      phone.club_enrollment_id = club_enrollments.id JOIN
  borrowers ON club_enrollments.borrowernumber = borrowers.borrowernumber
WHERE
  clubs.id = <<Enter club ID number>>
GROUP BY
  clubs.id,
  borrowers.borrowernumber
ORDER BY
  club_enrollments.id",,,,,,,,
R.003336,"/*
R.003336

----------

Name: GHW - Items checked out during a date range
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-06-19 15:55:38
Modified on: 2021-07-07 14:51:26
Date last run: 2021-07-23 12:11:38

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Shows items checked out or renewed during a date range</p>
<ul><li>Shows items checked out or renewed during the date range you specify</li>
<li>at the library you specify</li>
<li>grouped by itemnumber, biblionumber, and the timestamp for the checkout/renewal</li>
<li>sorted by the checkout or renewal date, the item homebranch, the item permanent location, the item type, the collection code, the call number, the author, and the title</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Report created by George Williams.</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3336&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  statistics.branch,
  items.barcode,
  items.homebranch,
  permlocations.lib AS PERM_LOCATION,
  itypes.description AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber,
  biblio.author,
  Concat_Ws("" "", biblio.title, ExtractValue(biblio_metadata.metadata,
  '//datafield[@tag=""245""]/subfield[@code=""h""]'),
  ExtractValue(biblio_metadata.metadata,
  '//datafield[@tag=""245""]/subfield[@code=""b""]'),
  ExtractValue(biblio_metadata.metadata,
  '//datafield[@tag=""245""]/subfield[@code=""p""]'),
  ExtractValue(biblio_metadata.metadata,
  '//datafield[@tag=""245""]/subfield[@code=""n""]')) AS FULL_TITLE,
  Date_Format(statistics.datetime, '%Y.%m.%d') AS CKO_RENEW_DATE
FROM
  statistics JOIN
  items ON items.itemnumber = statistics.itemnumber JOIN
  biblio ON items.biblionumber = biblio.biblionumber JOIN
  biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
  LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') permlocations ON
      permlocations.authorised_value = items.permanent_location LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itypes ON itypes.itemtype = items.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      items.ccode
WHERE
  statistics.datetime BETWEEN <<Between the beginning of the day on|date>> AND (<<and the end of the day on|date>> + interval 1 day) AND
  (statistics.type = 'issue' OR
      statistics.type = 'renew') AND
  statistics.branch = <<Checked out or renewed at|ZBRAN>>
GROUP BY
  items.itemnumber,
  biblio.biblionumber,
  statistics.datetime
ORDER BY
  CKO_RENEW_DATE DESC,
  items.homebranch,
  PERM_LOCATION,
  ITYPE,
  CCODE,
  items.itemcallnumber,
  biblio.author,
  FULL_TITLE",,,,,,,,
R.003338,"/*
R.003338

----------

Name: Debit Codes
Created by: Bywater bwssupport

----------

Group: -
     -

Created on: 2020-07-09 14:05:15
Modified on: 2020-07-09 14:05:43
Date last run: 2020-07-09 14:10:04

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT CONCAT('<a href=\""/cgi-bin/koha/reports/guided_reports.pl?reports=3337&phase=Run+this+report&param_name=Gimme+a+code&sql_params=', code ,'\"">',code,'</a>') AS code,
	description
FROM account_debit_types",,,,,,,,
R.003339,"/*
R.003339

----------

Name: GHW - Borrowers with unresolved credits on their accounts
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-07-10 15:06:56
Modified on: 2020-07-10 16:39:04
Date last run: 2021-03-04 22:32:11

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Shows a list of borrowers with unresolved credits on their accounts</p>
<ul><li>Shows borrowers with currently unresolved credits</li>
<li>shows patrons at the home library you specify</li>
<li>grouped by borrowernumber</li>
<li>sorted by formula that generates row numbers</li>
<li>links to the borrower's fine payment tab</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3339&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  (@row_number:=@row_number + 1) AS num, 
  Concat('<a href=""/cgi-bin/koha/members/pay.pl?borrowernumber=',
  accountlineslesszero.borrowernumber, '"" target=""blank"">Link to patron</a>') AS
  LINK,
  borrowers.branchcode,
  borrowers.cardnumber AS LIBRARYCARD,
  borrowers.categorycode,
  Sum(accountlineslesszero.amountoutstanding) AS Sum_amountoutstanding
FROM
  borrowers JOIN
  (SELECT
      accountlines.borrowernumber,
      accountlines.amountoutstanding
    FROM
      accountlines
    WHERE
      accountlines.amountoutstanding < 0) accountlineslesszero ON
      accountlineslesszero.borrowernumber = borrowers.borrowernumber,
    (SELECT @row_number:=0) AS t
WHERE
  borrowers.branchcode LIKE <<Choose borrower home library|ZBRAN>>
GROUP BY
  borrowers.borrowernumber
ORDER BY
  num",,,,,,,,
R.003341,"/*
R.003341

----------

Name: GHW - Adults with guarantors
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-07-27 14:46:13
Modified on: 2020-07-27 14:46:13
Date last run: 2022-03-31 10:39:29

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.cardnumber,
  borrowers.surname,
  borrowers.firstname,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.contactname,
  borrowers.contactfirstname,
  borrowers.contacttitle,
  borrowers.relationship,
  borrower_relationships.guarantor_id,
  borrowers.borrowernotes,
  borrowers.dateofbirth
FROM
  borrowers LEFT JOIN
  borrower_relationships ON borrower_relationships.guarantee_id =
      borrowers.borrowernumber
WHERE
  (borrowers.dateofbirth <= CurDate() - INTERVAL 18 YEAR OR
      borrowers.dateofbirth IS NULL) AND
  (borrowers.relationship <> '' OR
      borrowers.contactname <> '' OR
      borrowers.contactfirstname <> '' OR
      borrower_relationships.guarantor_id <> '')
GROUP BY
  borrower_relationships.guarantor_id,
  borrowers.borrowernotes,
  borrowers.dateofbirth,
  borrowers.borrowernumber",,,,,,,,
R.003342,"/*
R.003342

----------

Name: GHW - Action logs - Item number lookup
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-08-13 14:10:41
Modified on: 2021-04-19 14:30:08
Date last run: 2022-09-30 14:02:24

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  action_logs.action_id,
  action_logs.timestamp,
  action_logs.user,
  action_logs.module,
  action_logs.action,
  action_logs.object,
  Replace(action_logs.info, "","", "",<br />"") AS info,
  action_logs.interface
FROM
  action_logs
WHERE
  action_logs.info LIKE Concat(""%'itemnumber' => "", <<Enter item number>>, ""%"")",,,,,,,,
R.003343,"/*
R.003343

----------

Name: GHW - Get itemnumber by Array
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-08-13 15:39:10
Modified on: 2020-08-13 16:01:52
Date last run: 2020-08-13 16:03:48

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  items.itemnumber
FROM
  items
WHERE
  items.barcode IN (<<Enter item barcode numbers in quotes and separated by commas>>)",,,,,,,,
R.003344,"/*
R.003344

----------

Name: Finding the borrower relationships due to Error
Created by: Bywater bwssupport

----------

Group: -
     -

Created on: 2020-08-14 08:37:06
Modified on: 2020-08-14 08:37:06
Date last run: 2020-08-14 11:25:01

----------

Public: 0
Expiry: 300

----------



----------
*/

","select relationship, count(id) from borrower_relationships group by relationship",,,,,,,,
R.003345,"/*
R.003345

----------

Name: Detail about blank relationships
Created by: Bywater bwssupport

----------

Group: -
     -

Created on: 2020-08-14 08:42:47
Modified on: 2020-08-14 08:42:47
Date last run: 2020-08-14 11:47:55

----------

Public: 0
Expiry: 300

----------



----------
*/

",select * from borrower_relationships where relationship='',,,,,,,,
R.003346,"/*
R.003346

----------

Name: GHW - Sandbox
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-08-14 15:14:53
Modified on: 2022-08-30 16:35:53
Date last run: 2022-08-30 16:37:18

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.cardnumber,
  borrower_attributes.borrowernumber,
  borrower_attribute_types.description,
  borrower_attribute_types.code,
  borrower_attributes.attribute
FROM
  borrower_attribute_types INNER JOIN
  borrower_attributes ON
      borrower_attributes.code = borrower_attribute_types.code INNER JOIN
  borrowers ON borrower_attributes.borrowernumber = borrowers.borrowernumber
WHERE
  borrower_attribute_types.code = 'USD113_T'",,,,,,,,
R.003347,"/*
R.003347

----------

Name: GHW - Active holds queue count
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-08-19 09:11:07
Modified on: 2020-08-19 09:11:07
Date last run: 2020-11-19 13:00:44

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branches.branchcode,
  beshipped.Count_itemnumber AS REQUESTS_TO_SHIP,
  bepickedup.Count_itemnumber AS REQUESTS_TO_RECEIVE
FROM
  branches LEFT JOIN
  (SELECT
      tmp_holdsqueue.holdingbranch,
      Count(tmp_holdsqueue.itemnumber) AS Count_itemnumber
    FROM
      tmp_holdsqueue
    GROUP BY
      tmp_holdsqueue.holdingbranch) beshipped ON beshipped.holdingbranch =
      branches.branchcode LEFT JOIN
  (SELECT
      tmp_holdsqueue.pickbranch,
      Count(tmp_holdsqueue.itemnumber) AS Count_itemnumber
    FROM
      tmp_holdsqueue
    GROUP BY
      tmp_holdsqueue.pickbranch) bepickedup ON bepickedup.pickbranch =
      branches.branchcode
ORDER BY
  branches.branchcode",,,,,,,,
R.003348,"/*
R.003348

----------

Name: GHW - Titles with requests
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-08-21 16:22:19
Modified on: 2020-08-21 16:50:22
Date last run: 2021-11-09 00:00:44

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  reserves.branchcode AS PICKUP_AT,
  reserves.reservedate AS REQUESTED_ON,
  If(reserves.suspend_until > 1, Concat('Suspended until ', Date_Format(reserves.suspend_until, ""%m/%d/%Y"")), If(reserves.suspend = '', 'Active', 'Suspended indefinitely')) AS SUSPENDED,
  biblio.author,
  biblio.title,
  If(reserves.item_level_hold = '', '-', 'Item level request') AS ITEM_LEVEL,
  Concat('<a href=\""/cgi-bin/koha/reserve/request.pl?biblionumber=', reserves.biblionumber, '\"" target=""_blank"">', reserves.biblionumber, '</a>') AS LINK_TO_REQUEST
FROM
  reserves JOIN
  biblio ON reserves.biblionumber = biblio.biblionumber
WHERE
  reserves.branchcode LIKE <<Choose pick-up library|ZBRAN>> AND
  If(reserves.suspend > 0, 'Yes', 'No') LIKE <<Display suspended requests|ZYES_NO>>
GROUP BY
  reserves.reserve_id
ORDER BY
  PICKUP_AT",,,,,,,,
R.003350,"/*
R.003350

----------

Name: GHW - Special reopening holds queue report for LEAVENWRTH
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-08-27 16:12:40
Modified on: 2020-08-27 16:23:23
Date last run: 2021-11-09 00:52:18

----------

Public: 0
Expiry: 300

----------

Run on Friday - Set items aside till Monday - check items in after 2:15 a.m. Monday morning

----------
*/

","Select
    Concat_Ws('<br />',
      Concat('Current: ', items.holdingbranch), 
      Concat('Home: ', items.homebranch), 
      Concat('Last seen: ', items.datelastseen), 
      Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">Go to biblio</a>')
    ) As INFO,
    Concat_Ws('<br />', 
      If(items.location = 'CART', 'Recently returned', items.location), 
      ccodes.lib,
      items.itemcallnumber, items.copynumber
    ) As CALL_NUMBER,
    Concat_Ws('<br />', 
      biblio.author, 
      (Concat_Ws('<br />', 
        biblio.title, ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), 
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), 
        ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'))
      )
    ) As AUTHOR_TITLE,
    Concat_Ws('<br />', 
      (Concat('<img src=""/cgi-bin/koha/svc/barcode?barcode=', '*', Upper(items.barcode), '*', '&type=Code39""></img>')), 
      items.barcode
    ) AS BARCODE,
    CONCAT_WS('<br />',
    If(reserves.suspend_until > 1, Concat('Suspended until ', Date_Format(reserves.suspend_until, ""%m/%d/%Y"")), If(reserves.suspend = '', 'Active', 'Suspended indefinitely')),
    Concat_Ws('', 
      If(items.damaged_on > 0, Concat('Damaged on ', items.damaged_on, '<br />'), ''), 
      If(items.itemlost_on > 0, Concat('Lost on ', items.itemlost_on, '<br />'), ''), 
      If(items.withdrawn_on > 0, Concat('Withdrawn on ', items.withdrawn_on, '<br />'), '')
    )
  ) As STATUS_ISSUES
From
    reserves Join
    biblio On reserves.biblionumber = biblio.biblionumber Inner Join
    items On items.biblionumber = biblio.biblionumber Left Join
    (Select
         authorised_values.category,
         authorised_values.authorised_value,
         authorised_values.lib
     From
         authorised_values
     Where
         authorised_values.category = 'ccode') ccodes On ccodes.authorised_value = items.ccode Inner Join
    biblio_metadata On biblio_metadata.biblionumber = biblio.biblionumber
Where
    reserves.branchcode Like 'LEAVENWRTH' And
    If(reserves.suspend > 0, 'Yes', 'No') Like '%' And
    If(reserves.suspend_until > 1, Concat('Suspended until ', Date_Format(reserves.suspend_until, ""%m/%d/%Y"")),
    If(reserves.suspend = '', 'Active', 'Suspended indefinitely')) = 'Suspended until 08/31/2020' And
    items.homebranch = 'LEAVENWRTH' And
    items.notforloan = 0 And
    items.onloan Is Null And
    items.holdingbranch = 'LEAVENWRTH'
Group By
    biblio.biblionumber
Order By
    items.homebranch,
    If(items.location = 'CART', 'Z', items.location),
    items.itype,
    items.ccode,
    items.itemcallnumber,
    biblio.author,
    biblio.title",,,,,,,,
R.003351,"/*
R.003351

----------

Name: GHW - Checkout Counts by Patron
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-08-28 17:31:11
Modified on: 2020-08-28 18:01:18
Date last run: 2021-05-05 13:51:06

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Item counts by patron where the patron has more than 1 item checked out - includes counts by checkout library</p>
<ul><li>Shows items currently checked out</li>
<li>At the library you specified</li>
<li>grouped by patron barcode number</li>
<li>sorted by highest total checkout count to lowest checkout count</li>
<li>links</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Does not include INHOUSE or ILL patron categories</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3351&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">tag goes here</p>
</div>

----------
*/

","Select
    Concat('<a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', borrowers.borrowernumber, '"" target=""_blank"">', borrowers.cardnumber, '</a>') AS LINK,
    borrowers.branchcode AS PATRON_HOME_LIBRARY,
    borrowers.categorycode AS PATRON_CATEGORYCODE,
    Count(Distinct issues.issue_id) As CKO_FROM_ALL_LIBRARIES,
    Group_Concat(Distinct bcounts.BCOUNT Order By bcounts.BCOUNT Separator "" - "") As CKO_PER_LIBRARY
From
    issues Join
    (Select
         issues.borrowernumber,
         Concat(issues.branchcode, ' - ', Count(issues.itemnumber)) As BCOUNT
     From
         issues
     Group By
         issues.borrowernumber,
         issues.branchcode) bcounts On bcounts.borrowernumber = issues.borrowernumber Join
    borrowers On issues.borrowernumber = borrowers.borrowernumber
Where
    borrowers.categorycode <> 'INHOUSE' And
    borrowers.categorycode <> 'ILL' And
    borrowers.branchcode Like <<Choose patron's home library|LBRANCH>>
Group By
    borrowers.cardnumber,
    borrowers.branchcode,
    borrowers.categorycode,
    issues.borrowernumber
Having
    Count(Distinct issues.issue_id) > 1
Order By
    CKO_FROM_ALL_LIBRARIES Desc",,,,,,,,
R.003352,"/*
R.003352

----------

Name: GHW - Quick maxissueqty report
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-09-08 00:05:01
Modified on: 2020-09-08 00:05:01
Date last run: 2021-05-24 22:02:16

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT 
  circulation_rules.id, 
  circulation_rules.branchcode, 
  circulation_rules.categorycode, 
  circulation_rules.itemtype, 
  circulation_rules.rule_name, 
  circulation_rules.rule_value 
FROM circulation_rules 
WHERE circulation_rules.rule_name = ""maxissueqty"" AND 
  circulation_rules.categorycode IS NULL AND 
  circulation_rules.itemtype IS NULL AND 
  circulation_rules.rule_value > 0 
ORDER BY 
  circulation_rules.rule_value 
  DESC",,,,,,,,
R.003354,"/*
R.003354

----------

Name: GHW - Items marked as ""Withdrawn"" in the previous calendar month at OTTAWA
Created by: George H Williams

----------

Group:  OTTAWA
     -

Created on: 2020-09-29 23:37:01
Modified on: 2021-08-16 13:44:19
Date last run: 2022-10-01 05:00:04

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Generates a list of items that were marked as ""Withdrawn"" in the previous calendar month at OTTAWA and shows the last patron to have had the item billed to their account</p>
<ul><li>Only shows items marked as ""Withdrawn"" in the previous calendar month</li>
<li>where OTTAWA is the item home branch</li>
<li>grouped by item number and biblionumber</li>
<li>sorted by home library, shelf location, item type, collection code, call number, author, and title</li>
<li>contains raw HTML links to the bibliographic record and to the borrower's account page</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Scheduled to automatically e-mail to OTTAWA staff on the first of each month.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3354&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3354"">Click here to download as a csv file</a></p>
<p class= ""notetags"" style=""display: none;"">#ottawa, #withdrawn, #scheduled</p>
</div>

----------
*/

","SELECT
  Concat('https://staff.nextkansas.org/cgi-bin/koha/catalogue/detail.pl?biblionumber=', items.biblionumber) AS LINK_TO_TITLE,
  items.itemnumber AS ITEM_NUMBER,
  Concat(""-"", Coalesce(items.barcode, ""-""), ""-"") AS ITEM_BARCODE,
  Concat_Ws("" // "", 
    items.homebranch, 
    items.holdingbranch, 
    Coalesce(locs.lib, ""-""), 
    Coalesce(itypes.description, ""-""), 
    Coalesce(ccodes.lib, ""-""), 
    items.itemcallnumber, 
    items.copynumber, 
    biblio.author, 
    Concat_Ws("" "", 
      biblio.title, 
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')
    )
  ) AS ITEM_INFO,
  items.replacementprice,
  Date_Format(fees.date_due, '%Y-%m-%d') AS ITEM_DUE_DATE,
  withdrawnst.lib AS WITHDRAWN_STATUS,
  items.withdrawn_on,
  Concat_Ws("" | "", 
    Concat(""Due on: "", items.onloan), 
    If(notloanst.lib = """", """", Concat(""Not for loan status: "", notloanst.lib)), 
    Concat(""Damaged status: "", damagedst.lib, ""on"", items.damaged_on), 
    Concat(""Lost status: "", lostst.lib, ""on"", items.itemlost_on)
  ) AS OTHER_STATUSES,
  Concat('https://staff.nextkansas.org/cgi-bin/koha/members/pay.pl?borrowernumber=', fees.borrowernumber) AS LINK_TO_BORROWER,
  fees.cardnumber,
  Concat_Ws("", "", fees.surname, fees.firstname) AS BORROWERNAME,
  fees.date AS BILLING_DATE,
  fees.amountoutstanding,
  fees.branchcode AS CKO_AT,
  fees.debit_type_code,
  fees.description AS FEE_DESCRIPTION
FROM
  items JOIN
  biblio ON items.biblionumber = biblio.biblionumber JOIN
  biblio_metadata ON items.biblionumber = biblio_metadata.biblionumber JOIN
  biblioitems ON items.biblioitemnumber = biblioitems.biblioitemnumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'NOT_LOAN') notloanst ON
      notloanst.authorised_value = items.notforloan LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      items.ccode LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itypes ON itypes.itemtype = items.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'DAMAGED') damagedst ON
      damagedst.authorised_value = items.damaged LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOST') lostst ON lostst.authorised_value =
      items.itemlost LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'WITHDRAWN') withdrawnst ON
      withdrawnst.authorised_value = items.withdrawn LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') locs ON locs.authorised_value =
      items.location JOIN
  (SELECT
      accountlines.itemnumber,
      accountlines.issue_id,
      accountlines.borrowernumber,
      accountlines.date,
      accountlines.amountoutstanding,
      old_issues.branchcode,
      accountlines.debit_type_code,
      accountlines.description,
      accountlines.status,
      borrowers.cardnumber,
      borrowers.surname,
      borrowers.firstname,
      old_issues.date_due
    FROM
      accountlines JOIN
      old_issues ON old_issues.issue_id = accountlines.issue_id JOIN
      borrowers ON accountlines.borrowernumber = borrowers.borrowernumber
    WHERE
      accountlines.debit_type_code = 'LOST') fees ON fees.itemnumber =
      items.itemnumber
WHERE
  items.homebranch = ""OTTAWA"" AND
  withdrawnst.lib <> """" AND
  Month(items.withdrawn_on) = Month(Now() - INTERVAL 1 MONTH) AND
  Year(items.withdrawn_on) = Year(Now() - INTERVAL 1 MONTH)
GROUP BY
  items.itemnumber,
  biblio.biblionumber
ORDER BY
  items.homebranch,
  items.location,
  items.itype,
  items.ccode,
  items.itemcallnumber,
  Trim(REGEXP_REPLACE(biblio.author, ""[.,:;\/]"", """")),
  Trim(REGEXP_REPLACE(Trim(LEADING 'a ' FROM Trim(LEADING 'an ' FROM Trim(LEADING 'the ' FROM Lower(biblio.title)))), ""[.:;\""\'\/]"", """")), 
  Trim(REGEXP_REPLACE(ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), ""[.:;\""\'\/]"", """")), 
  Trim(REGEXP_REPLACE(ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'), ""[.:;\""\'\/]"", """")), 
  Trim(REGEXP_REPLACE(ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), ""[.:;\""\'\/]"", """"))",,,,,,,,
R.003355,"/*
R.003355

----------

Name: GHW - D1 Circulation by borrower details - Unique borrowers - Next Search Catalog
Created by: George H Williams

----------

Group: Statistics
     2022 beginning of month statistics

Created on: 2020-10-08 22:42:10
Modified on: 2022-03-10 15:17:51
Date last run: 2022-10-01 00:45:02

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint> 
<p>Circulation by borrower details - Unique borrowers in the previous calendar month</p> 
<ul>
  <li>Shows borrower counts on each day of the month for the previous month</li> 
  <li>includes a unique borrower account per month in the final column</li> 
  <li>At all Next Search Catalog libraries</li> 
  <li>grouped and sorted by the library where the borrower checked out or renewed items</li> 
</ul>
<br /> 
<p><ins>Notes:</ins></p> 
<p></p> 
<p>A borrower is counted as 1 borrower if they check out or renew materials on the day specified.  If a borrower checks out 10 items at 10:00 a.m. and then checks out additional items at 4:00 p.m., that borrower is only counted once for the purposes of this report.</p> 
<p></p> 
<p>The final column is a monthly count of unique borrowers.  So if a borrower checks out 1 book on the first of the month and then checks out 1 book on the 15th of the month, that borrower is only counted as 1 unique borrower in the final column of this report.</p> 
<p></p> 
<p class=""updated"">This report and these notes updated on 2022.03.10</p> 
<p></p> 
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3355"">Click here to download as a csv file</a></p> 
<p class= ""notetags"" style=""display: none;"">#monthly #statistics #borrower #details #unique</p> 
<!-- html notes rendered on guided_reports.pl by jquery at https://wiki.koha-community.org/wiki/JQuery_Library#Render_patron_messages_as_HTML_and_in_Report_notes --> 
</div> 

----------
*/

","SELECT 
  branchess.branchname, 
  aa.Count_borrowernumber AS `01`, 
  ab.Count_borrowernumber AS `02`, 
  ac.Count_borrowernumber AS `03`, 
  ad.Count_borrowernumber AS `04`, 
  ae.Count_borrowernumber AS `05`, 
  af.Count_borrowernumber AS `06`, 
  ag.Count_borrowernumber AS `07`, 
  ah.Count_borrowernumber AS `08`, 
  ai.Count_borrowernumber AS `09`, 
  aj.Count_borrowernumber AS `10`, 
  ba.Count_borrowernumber AS `11`, 
  bb.Count_borrowernumber AS `12`, 
  bc.Count_borrowernumber AS `13`, 
  bd.Count_borrowernumber AS `14`, 
  be.Count_borrowernumber AS `15`, 
  bf.Count_borrowernumber AS `16`, 
  bg.Count_borrowernumber AS `17`, 
  bh.Count_borrowernumber AS `18`, 
  bi.Count_borrowernumber AS `19`, 
  bj.Count_borrowernumber AS `20`, 
  ca.Count_borrowernumber AS `21`, 
  cb.Count_borrowernumber AS `22`, 
  cc.Count_borrowernumber AS `23`, 
  cd.Count_borrowernumber AS `24`, 
  ce.Count_borrowernumber AS `25`, 
  cf.Count_borrowernumber AS `26`, 
  cg.Count_borrowernumber AS `27`, 
  ch.Count_borrowernumber AS `28`, 
  ci.Count_borrowernumber AS `29`, 
  da.Count_borrowernumber AS `30`, 
  db.Count_borrowernumber AS `31`, 
  zz.Count_borrowernumber AS MONTHLY_TOTAL 
FROM 
  (SELECT 
      branches.branchcode, 
      branches.branchname 
    FROM 
      branches) branchess LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 1 
    GROUP BY 
      statistics.branch) aa ON aa.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 2 
    GROUP BY 
      statistics.branch) ab ON ab.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 3 
    GROUP BY 
      statistics.branch) ac ON ac.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 4 
    GROUP BY 
      statistics.branch) ad ON ad.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 5 
    GROUP BY 
      statistics.branch) ae ON ae.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 6 
    GROUP BY 
      statistics.branch) af ON af.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 7 
    GROUP BY 
      statistics.branch) ag ON ag.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 8 
    GROUP BY 
      statistics.branch) ah ON ah.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 9 
    GROUP BY 
      statistics.branch) ai ON ai.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 10 
    GROUP BY 
      statistics.branch) aj ON aj.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 11 
    GROUP BY 
      statistics.branch) ba ON ba.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 12 
    GROUP BY 
      statistics.branch) bb ON bb.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 13 
    GROUP BY 
      statistics.branch) bc ON bc.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 14 
    GROUP BY 
      statistics.branch) bd ON bd.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 15 
    GROUP BY 
      statistics.branch) be ON be.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 16 
    GROUP BY 
      statistics.branch) bf ON bf.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 17 
    GROUP BY 
      statistics.branch) bg ON bg.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 18 
    GROUP BY 
      statistics.branch) bh ON bh.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 19 
    GROUP BY 
      statistics.branch) bi ON bi.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 20 
    GROUP BY 
      statistics.branch) bj ON bj.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 21 
    GROUP BY 
      statistics.branch) ca ON ca.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 22 
    GROUP BY 
      statistics.branch) cb ON cb.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 23 
    GROUP BY 
      statistics.branch) cc ON cc.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 24 
    GROUP BY 
      statistics.branch) cd ON cd.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 25 
    GROUP BY 
      statistics.branch) ce ON ce.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 26 
    GROUP BY 
      statistics.branch) cf ON cf.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 27 
    GROUP BY 
      statistics.branch) cg ON cg.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 28 
    GROUP BY 
      statistics.branch) ch ON ch.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 29 
    GROUP BY 
      statistics.branch) ci ON ci.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 30 
    GROUP BY 
      statistics.branch) da ON da.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      Year(statistics.datetime) AS YEAR, 
      Month(statistics.datetime) AS MONTH, 
      Day(statistics.datetime) AS DAY, 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
          statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Day(statistics.datetime) = 31 
    GROUP BY 
      statistics.branch) db ON db.branch = branchess.branchcode LEFT JOIN 
  (SELECT 
      statisticss.branch, 
      Count(DISTINCT statisticss.borrowernumber) AS Count_borrowernumber 
    FROM 
      statistics statisticss 
    WHERE 
      (statisticss.type = 'issue' OR 
          statisticss.type = 'renew') AND 
      statisticss.datetime BETWEEN (AddDate(Last_Day(SubDate(Now(), INTERVAL 2 
      MONTH)), 1)) AND (AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1)) 
    GROUP BY 
      statisticss.branch) zz ON zz.branch = branchess.branchcode 
UNION 
SELECT 
  Concat("" DATE"") AS branchname, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) AS `01`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 1 DAY AS `02`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 2 DAY AS `03`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 3 DAY AS `04`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 4 DAY AS `05`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 5 DAY AS `06`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 6 DAY AS `07`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 7 DAY AS `08`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 8 DAY AS `09`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 9 DAY AS `10`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 10 DAY AS `11`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 11 DAY AS `12`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 12 DAY AS `13`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 13 DAY AS `14`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 14 DAY AS `15`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 15 DAY AS `16`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 16 DAY AS `17`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 17 DAY AS `18`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 18 DAY AS `19`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 19 DAY AS `20`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 20 DAY AS `21`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 21 DAY AS `22`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 22 DAY AS `23`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 23 DAY AS `24`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 24 DAY AS `25`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 25 DAY AS `26`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 26 DAY AS `27`, 
  AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 27 DAY AS `28`, 
  If( 
    Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 28 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)), 
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 28 DAY, 
    ""NA"" 
  ) AS `29`, 
  If( 
    Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 29 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)), 
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 29 DAY, 
    ""NA"" 
  ) AS `30`, 
  If( 
    Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 30 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)), 
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 30 DAY, 
    ""NA"" 
  ) AS `31`, 
  Concat(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1), ' - ', Last_Day(CURRENT_DATE()) - INTERVAL 1 MONTH) AS MONTHLY_TOTAL 
UNION 
SELECT 
  Concat("" DAY"") AS branchname, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1), ""%W"") AS `01`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 1 DAY, ""%W"") AS `02`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 2 DAY, ""%W"") AS `03`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 3 DAY, ""%W"") AS `04`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 4 DAY, ""%W"") AS `05`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 5 DAY, ""%W"") AS `06`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 6 DAY, ""%W"") AS `07`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 7 DAY, ""%W"") AS `08`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 8 DAY, ""%W"") AS `09`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 9 DAY, ""%W"") AS `10`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 10 DAY, ""%W"") AS `11`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 11 DAY, ""%W"") AS `12`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 12 DAY, ""%W"") AS `13`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 13 DAY, ""%W"") AS `14`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 14 DAY, ""%W"") AS `15`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 15 DAY, ""%W"") AS `16`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 16 DAY, ""%W"") AS `17`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 17 DAY, ""%W"") AS `18`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 18 DAY, ""%W"") AS `19`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 19 DAY, ""%W"") AS `20`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 20 DAY, ""%W"") AS `21`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 21 DAY, ""%W"") AS `22`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 22 DAY, ""%W"") AS `23`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 23 DAY, ""%W"") AS `24`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 24 DAY, ""%W"") AS `25`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 25 DAY, ""%W"") AS `26`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 26 DAY, ""%W"") AS `27`, 
  Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 27 DAY, ""%W"") AS `28`, 
  If( 
    Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 28 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)), 
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 28 DAY, ""%W""), 
    ""NA"" 
  ) AS `29`, 
  If( 
    Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 29 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)), 
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 29 DAY, ""%W""), 
    ""NA"" 
  ) AS `30`, 
  If( 
    Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 30 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)), 
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 30 DAY, ""%W""), 
    ""NA"" 
  ) AS `31`, 
  Concat('-') AS MONTHLY_TOTAL 
ORDER BY 
  branchname ",,,,,,,,
R.003359,"/*
R.003359

----------

Name: GHW - Requests picked up or cancelled during the previous calendar month
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-10-21 23:06:16
Modified on: 2020-10-22 00:49:08
Date last run: 2020-12-03 19:53:20

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>List of requested titles picked up or cancelled in the previous calendar month</p>
<ul><li>Shows requests in the previous calendar month</li>
<li>at the request pickup library you specify</li>
<li>grouped by reserveid number</li>
<li>sorted by the pickup library plus the normal Next classification order</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>If a request shows up in this report with no classification information it's because no specific item was ever assigned to fill this request.  This can happen in several situations.</p>
<ul>
<li>The first situation would be if a title level request was placed and then cancelled before an available item reached the top of the requests queue</li>
<li>The second situation would be if a request was placed and an item was checked out to the borrower that filled that request before an available item reached the top of the requests queue</li>
<li>The third situation would be if an item was checked out to the borrower that was deleted after the item was returned but before this report was run</li>
</ul>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3359&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">#requests</p>
</div>

----------
*/

","SELECT
  old_reserves.branchcode AS PICK_UP_LIBRARY,
  Concat_WS("" / "",
    If(
      old_reserves.found = ""F"", 
      ""Request filled"", 
      If(old_reserves.itemnumber > 1, ""Request not picked up"", ""Cancelled before being held"")
    ),
    DATE_FORMAT(old_reserves.timestamp, ""%Y.%m.%d"")
  ) AS FILLED,
  items.homebranch,
  LOCATIONS.lib AS LOCATION,
  itemtypes.description AS ITYPE,
  CCODES.lib AS CCODE,
  If(
    old_reserves.found = ""F"", 
    Coalesce(items.itemcallnumber, ""Item delted -OR- item was borrowed before request was filled""),
    items.itemcallnumber
  ) AS ITEM_CALL_NUMBER,
  biblio.author,
  biblio.title
FROM
  old_reserves JOIN
  biblio ON old_reserves.biblionumber = biblio.biblionumber LEFT JOIN
  items ON old_reserves.itemnumber = items.itemnumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE') CCODES ON CCODES.authorised_value =
      items.ccode LEFT JOIN
  itemtypes ON itemtypes.itemtype = items.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') LOCATIONS ON
      LOCATIONS.authorised_value = items.permanent_location
WHERE
  old_reserves.branchcode LIKE <<Choose your library|ZBRAN>> AND
  Year(old_reserves.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND
  Month(old_reserves.timestamp) = Month(Now() - INTERVAL 1 MONTH)
GROUP BY
  old_reserves.reserve_id
ORDER BY
  old_reserves.branchcode,
  items.homebranch,
  LOCATION,
  ITYPE,
  CCODE,
  ITEM_CALL_NUMBER,
  biblio.author,
  biblio.title",,,,,,,,
R.003360,"/*
R.003360

----------

Name: GHW - Borrowers who may owe money on lost items checked out at your library
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-10-28 17:01:35
Modified on: 2020-10-28 17:10:07
Date last run: 2022-08-24 17:37:03

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Generates a list of borrowers who may owe money on lost items that were checked out at your library</p>
<ul><li>Shows borrowers who may owe money now</li>
<li>on lost items that were checked out at the library you select</li>
<li>grouped by borrowernumber and item number</li>
<li>sorted by borrower name and normal Next classification scheme</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3360&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">#lost #fees #borrowers</p>
</div>

----------
*/

","SELECT
  items.holdingbranch AS CKO_BRANCH,
  borrowers.cardnumber,
  CONCAT(
    If(borrowers.firstname <> '', Concat_Ws(', ', borrowers.surname, borrowers.firstname), borrowers.surname), 
    If(borrowers.othernames = '', '', Concat(', (', borrowers.othernames, ')'))
  ) AS NAME,
  CONCAT_WS(' | ', 
    borrowers.address, 
    borrowers.address2, 
    borrowers.city, 
    borrowers.state, 
    borrowers.zipcode
  ) AS ADDRESS,
  borrowers.phone,
  borrowers.email,
  FORMAT(borroweraccountlines.Sum_amountoutstanding, 2) AS TOTAL_FEES_DUE,
  FORMAT(itemaccountlines.amountoutstanding, 2) AS DUE_THIS_ITEM,
  items.barcode AS ITEM_BARCODE,
  CONCAT_WS(' | ', 
    items.homebranch, 
    locs.lib, 
    itemtypes.description, 
    ccodes.lib, 
    items.itemcallnumber, 
    biblio.author, 
    CONCAT_WS(' ', 
      biblio.title, 
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'), 
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), 
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')
    )
  ) AS ITEM_INFO,
  losts.lib AS LOST_STATUS,
  items.replacementprice
FROM
  items JOIN
  biblio ON items.biblionumber = biblio.biblionumber LEFT JOIN
  (SELECT
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = ""CCODE"") ccodes ON items.ccode =
      ccodes.authorised_value LEFT JOIN
  (SELECT
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOST') losts ON items.itemlost =
      losts.authorised_value JOIN
  biblio_metadata ON biblio.biblionumber = biblio_metadata.biblionumber
  LEFT JOIN
  items_last_borrower ON items_last_borrower.itemnumber = items.itemnumber
  LEFT JOIN
  itemtypes ON itemtypes.itemtype = items.itype JOIN
  borrowers ON items_last_borrower.borrowernumber = borrowers.borrowernumber
  JOIN
  (SELECT
      accountlines.borrowernumber,
      Sum(accountlines.amountoutstanding) AS Sum_amountoutstanding,
      accountlines.itemnumber
    FROM
      accountlines
    GROUP BY
      accountlines.borrowernumber
    HAVING
      Sum(accountlines.amountoutstanding) <> 0) borroweraccountlines ON
      borroweraccountlines.borrowernumber = borrowers.borrowernumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') locs ON locs.authorised_value =
      items.permanent_location LEFT JOIN
  (SELECT
      accountlines.borrowernumber,
      accountlines.itemnumber,
      accountlines.amountoutstanding,
      accountlines.debit_type_code,
      accountlines.status
    FROM
      accountlines
    WHERE
      accountlines.amountoutstanding <> 0
    GROUP BY
      accountlines.borrowernumber,
      accountlines.itemnumber,
      accountlines.amountoutstanding,
      accountlines.debit_type_code,
      accountlines.status) itemaccountlines ON itemaccountlines.borrowernumber =
      borrowers.borrowernumber AND
      itemaccountlines.itemnumber = items.itemnumber
WHERE
  items.holdingbranch LIKE <<Check-out branch|ZBRAN>>
GROUP BY
  borrowers.borrowernumber,
  items.itemnumber
HAVING
  LOST_STATUS LIKE <<Choose lost status|ZLOST_ONLY>>
ORDER BY
  borrowers.surname DESC,
  borrowers.firstname,
  items.homebranch,
  locs.lib,
  itemtypes.description,
  ccodes.lib,
  items.itemcallnumber,
  biblio.author,
  biblio.title,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')",,,,,,,,
R.003361,"/*
R.003361

----------

Name: GHW - Borrower count
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-10-29 13:05:33
Modified on: 2022-08-18 13:45:56
Date last run: 2022-10-03 10:51:01

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Counts borrowers</p>
<ul><li>current count plus added, renewed, and deleted last month</li>
<li>at the library you specify</li>
<li>grouped library code and category code</li>
<li>sorted by (in progress)</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Notes go here.</p>
<p>Replaces:</p>
<ul>
  <li>Report 574 - Monthly 004 New Patrons by Category</li>
  <li>Report 1308 - Count of Patrons by Category</li>
  <li>Report 2843 - GHW - Deleted borrowers count - previous month</li>
  <li>Report 2903 - GHW - Patrons added count by category - previous calendar month</li>
  <li>Report 3008 - GHW - Patron category count</li>
  <li>Report 3077 - GHW - Borrowers count by category</li>
</ul>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3361&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">#borrower #count #ultimate</p>
</div>

----------
*/

","SELECT
  branchescategories.branchname,
  If(
    branchescategories.category_type = 'A', 
    'Adult', 
    If(
      branchescategories.category_type = 'C', 
      'Minor', 
      If(
        branchescategories.category_type = 'S', 
        'Staff', 
        If(
          branchescategories.category_type = 'I', 
          'Organization', 
          If(
            branchescategories.category_type = 'P', 
            'Professional', 
            If(
              branchescategories.category_type = 'X', 
              'Statistical', 
              branchescategories.category_type
            )
          )
        )
      )
    )
  ) AS CATEGORY_TYPE,
  
    If(Concat(branchescategories.dateofbirthrequired,
  branchescategories.upperagelimit) = 0999, ""Any age"",
  If(Concat(branchescategories.dateofbirthrequired,
  branchescategories.upperagelimit) LIKE ""1_999"",
  Concat(branchescategories.dateofbirthrequired, "" or older""), Concat_Ws("" -- "",
  branchescategories.dateofbirthrequired, branchescategories.upperagelimit))) AS
  AGE_RANGE,
  
  branchescategories.description AS DESCRIPTION,
  branchescategories.categorycode,
  If(categories_branches.branchcode IS NULL, '', 'Yes') AS STAFF_CAN_CREATE_NEW,
  TOTAL.Count_borrowernumber AS TOTAL_BORROWERS,
  LM_ADDED.Count_borrowernumber AS ADDED_LM,
  LM_RENEWED.Count_borrowernumber AS RENEWED_LM,
  LM_DELETED.Count_borrowernumber AS DELETED_LM
FROM
  (SELECT
      branches.branchcode,
      branches.branchname,
      categories.categorycode,
      categories.description,
      categories.category_type,
      categories.dateofbirthrequired,
      categories.upperagelimit
    FROM
      branches,
      categories) branchescategories LEFT JOIN
  categories_branches ON categories_branches.branchcode =
      branchescategories.branchcode AND
      categories_branches.categorycode = branchescategories.categorycode
  LEFT JOIN
  (SELECT
      Count(borrowers.borrowernumber) AS Count_borrowernumber,
      borrowers.branchcode,
      borrowers.categorycode
    FROM
      borrowers
    GROUP BY
      borrowers.branchcode,
      borrowers.categorycode) TOTAL ON
      TOTAL.branchcode = branchescategories.branchcode AND
      TOTAL.categorycode = branchescategories.categorycode LEFT JOIN
  (SELECT
      Count(borrowers.borrowernumber) AS Count_borrowernumber,
      borrowers.branchcode,
      borrowers.categorycode
    FROM
      borrowers
    WHERE
      Year(borrowers.dateenrolled) = Year(Now() - INTERVAL 1 MONTH) AND
      Month(borrowers.dateenrolled) = Month(Now() - INTERVAL 1 MONTH)
    GROUP BY
      borrowers.branchcode,
      borrowers.categorycode) LM_ADDED ON LM_ADDED.branchcode =
      branchescategories.branchcode AND
      LM_ADDED.categorycode = branchescategories.categorycode LEFT JOIN
  (SELECT
      deletedborrowers.branchcode,
      deletedborrowers.categorycode,
      Count(deletedborrowers.borrowernumber) AS Count_borrowernumber
    FROM
      deletedborrowers
    WHERE
      Year(deletedborrowers.updated_on) = Year(Now() - INTERVAL 1 MONTH) AND
      Month(deletedborrowers.updated_on) = Month(Now() - INTERVAL 1 MONTH)
    GROUP BY
      deletedborrowers.branchcode,
      deletedborrowers.categorycode) LM_DELETED ON LM_DELETED.branchcode =
      branchescategories.branchcode AND
      LM_DELETED.categorycode = branchescategories.categorycode LEFT JOIN
  (SELECT
      Count(borrowers.borrowernumber) AS Count_borrowernumber,
      borrowers.branchcode,
      borrowers.categorycode
    FROM
      borrowers
    WHERE
      Year(borrowers.date_renewed) = Year(Now() - INTERVAL 1 MONTH) AND
      Month(borrowers.date_renewed) = Month(Now() - INTERVAL 1 MONTH)
    GROUP BY
      borrowers.branchcode,
      borrowers.categorycode) LM_RENEWED ON LM_RENEWED.branchcode =
      branchescategories.branchcode AND
      LM_RENEWED.categorycode = branchescategories.categorycode
WHERE
  (branchescategories.branchcode LIKE @brn := <<Choose your library|branches:all>> COLLATE utf8mb4_unicode_ci)
GROUP BY
  branchescategories.branchname,
  branchescategories.categorycode
UNION
SELECT
  Concat(branchescategories.branchname, ' - TOTAL') AS branchname,
  Concat('') AS CATEGORY_TYPE,
  Concat('') AS AGE_RANGE,
  Concat('') AS DESCRIPTION,
  Concat('') AS CATEGORYCODE,
  Concat('') AS STAFF_CAN_CREATE_NEW,
  TOTAL.Count_borrowernumber AS TOTAL_BORROWERS,
  LM_ADDED.Count_borrowernumber AS ADDED_LM,
  LM_RENEWED.Count_borrowernumber AS RENEWED_LM,
  LM_DELETED.Count_borrowernumber AS DELETED_LM
FROM
  (SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches) branchescategories LEFT JOIN
  (SELECT
      Count(borrowers.borrowernumber) AS Count_borrowernumber,
      borrowers.branchcode
    FROM
      borrowers
    WHERE
      Year(borrowers.dateenrolled) = Year(Now() - INTERVAL 1 MONTH) AND
      Month(borrowers.dateenrolled) = Month(Now() - INTERVAL 1 MONTH)
    GROUP BY
      borrowers.branchcode) LM_ADDED ON LM_ADDED.branchcode =
      branchescategories.branchcode LEFT JOIN
  (SELECT
      deletedborrowers.branchcode,
      Count(deletedborrowers.borrowernumber) AS Count_borrowernumber
    FROM
      deletedborrowers
    WHERE
      Year(deletedborrowers.updated_on) = Year(Now() - INTERVAL 1 MONTH) AND
      Month(deletedborrowers.updated_on) = Month(Now() - INTERVAL 1 MONTH)
    GROUP BY
      deletedborrowers.branchcode) LM_DELETED ON LM_DELETED.branchcode =
      branchescategories.branchcode LEFT JOIN
  (SELECT
      Count(borrowers.borrowernumber) AS Count_borrowernumber,
      borrowers.branchcode
    FROM
      borrowers
    WHERE
      Year(borrowers.date_renewed) = Year(Now() - INTERVAL 1 MONTH) AND
      Month(borrowers.date_renewed) = Month(Now() - INTERVAL 1 MONTH)
    GROUP BY
      borrowers.branchcode) LM_RENEWED ON LM_RENEWED.branchcode =
      branchescategories.branchcode LEFT JOIN
  (SELECT
      Count(borrowers.borrowernumber) AS Count_borrowernumber,
      borrowers.branchcode
    FROM
      borrowers
    GROUP BY
      borrowers.branchcode) TOTAL ON
      TOTAL.branchcode = branchescategories.branchcode
WHERE
  branchescategories.branchcode LIKE @brn
GROUP BY
  Concat(branchescategories.branchname, ' - TOTAL')
ORDER BY
  branchname,
  Coalesce(DESCRIPTION, 'Z')",,,,,,,,
R.003363,"/*
R.003363

----------

Name: Sandbox - ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-11-09 22:24:51
Modified on: 2020-11-09 22:25:03
Date last run: 2021-06-06 19:13:31

----------

Public: 0
Expiry: 300

----------



----------
*/

","Select
    biblio.biblionumber,
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""e""]') As LOCATION,
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""c""]') As ITYPE,
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""h""]') As CCODE,
    ITEMCCODES.Group_Concat_ccode,
    ITEMLOCS.PERM,
    ICOUNT.Count_itemnumber
From
    biblio Join
    biblio_metadata On biblio_metadata.biblionumber = biblio.biblionumber Inner Join
    (Select
         items.biblionumber,
         Group_Concat(Distinct items.ccode Order By items.ccode) As Group_Concat_ccode
     From
         items
     Group By
         items.biblionumber
     Having
         Group_Concat(Distinct items.ccode Order By items.ccode) Like 'FICTION') ITEMCCODES On ITEMCCODES.biblionumber =
            biblio.biblionumber Inner Join
    (Select
         items.biblionumber,
         Count(Distinct items.itemnumber) As Count_itemnumber
     From
         items
     Group By
         items.biblionumber) ICOUNT On ICOUNT.biblionumber = biblio.biblionumber Inner Join
    (Select
         items.biblionumber,
         Group_Concat(Distinct Coalesce(items.permanent_location, 'ZBLANK') Order By Coalesce(items.permanent_location,
         'ZBLANK')) As PERM
     From
         items
     Group By
         items.biblionumber) ITEMLOCS On ITEMLOCS.biblionumber = biblio.biblionumber
Where
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""c""]') = 'BOOK' And
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""h""]') = ''
Group By
    biblio.biblionumber,
    ITEMCCODES.Group_Concat_ccode,
    ITEMLOCS.PERM,
    ICOUNT.Count_itemnumber
LIMIT 500",,,,,,,,
R.003365,"/*
R.003365

----------

Name: GHW - List / virtualshelf report 005 - Display list titles with links to bibliographic records 
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-11-10 16:40:01
Modified on: 2020-11-10 16:52:40
Date last run: 2020-11-10 16:52:48

----------

Public: 0
Expiry: 300

----------

https://staff.nextkansas.org/cgi-bin/koha/catalogue/detail.pl?biblionumber=323043

----------
*/

","SELECT
  biblio.author,
  Concat('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">', biblio.title, '</a>') AS TITLE
FROM
  biblio
  JOIN virtualshelfcontents
    ON biblio.biblionumber = virtualshelfcontents.biblionumber
WHERE
  virtualshelfcontents.shelfnumber LIKE <<Enter list number>>
GROUP BY
  biblio.biblionumber
ORDER BY
  biblio.author,
  biblio.title",,,,,,,,
R.003368,"/*
R.003368

----------

Name: GHW - LINWOOD patrons without Kanopy access
Created by: George H Williams

----------

Group:  LINWOOD
     -

Created on: 2020-11-13 13:33:15
Modified on: 2021-08-16 20:31:04
Date last run: 2022-03-25 11:35:13

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows patrons with a LINWOOD home library but without a ""Kanopy (LINWOOD): Allowed . . ."" borrower attribute.</p>
<ul><li>Shows borrwoers that currently lack this attribute</li>
<li>grouped by categorycode and borrowernumber</li>
<li>sorted by library card number</li>
<li>links to the borrower account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Should be run monthly at LINWOOD so the attribute can be added to those accounts</p>
<p><a href=""https://northeast-kansas-library-system.github.io/next/branches/LINWOOD/kanopy.html#running-reports-to-manually-update-kanopy-permission"" target=""_blank"">Go to the training information for the Kanopy (LINWOOD) extended borrower attribute.</a></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3368&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">kanopy; patron-extended-attributes; LINWOOD;</p>
</div>

----------
*/

","SELECT
  Concat('<a href=""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=', borrowers.borrowernumber, '&step=4"" target=""_blank"">Go to patron account</a>') AS LINK,
  borrowers.cardnumber
FROM
  borrowers
  LEFT JOIN (
    SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute
    FROM
      borrower_attributes
    WHERE
      borrower_attributes.code = 'LINWKANOPY'
  ) kanopy
    ON kanopy.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode = 'LINWOOD' AND
  kanopy.attribute IS NULL AND
  borrowers.categorycode <> 'STAFF' AND
  borrowers.categorycode <> ""ILL"" AND
  borrowers.categorycode <> ""INHOUSE"" AND
  borrowers.categorycode <> ""STATISTIC"" AND
  borrowers.othernames <> 'SIP2 test account'
GROUP BY
  borrowers.categorycode,
  borrowers.borrowernumber
ORDER BY
  borrowers.cardnumber",,,,,,,,
R.003369,"/*
R.003369

----------

Name: GHW - SABETHA patrons without Kanopy access 
Created by: George H Williams

----------

Group:  SABETHA
     -

Created on: 2020-11-13 13:57:14
Modified on: 2021-08-16 13:41:47
Date last run: 2021-08-24 14:15:38

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows patrons with a SABETHA home library but without a ""Kanopy (SABETHA): Allowed . . ."" borrower attribute.</p>
<ul><li>Shows borrwoers that currently lack this attribute</li>
<li>grouped by categorycode and borrowernumber</li>
<li>sorted by library card number</li>
<li>links to the borrower account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Should be run monthly at SABETHA so the attribute can be added to those accounts</p>
<p><a href=""https://northeast-kansas-library-system.github.io/next/branches/SABETHA/kanopy.html#running-reports-to-manually-update-kanopy-permission"" target=""_blank"">Go to the training information for the Kanopy (SABETHA) extended borrower attribute.</a></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3369&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">kanopy; patron-extended-attributes; SABETHA;</p>
</div>

----------
*/

","SELECT
  Concat('<a href=""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=', borrowers.borrowernumber, '&step=4"" target=""_blank"">Go to patron account</a>') AS LINK,
  borrowers.cardnumber
FROM
  borrowers
  LEFT JOIN (
    SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute
    FROM
      borrower_attributes
    WHERE
      borrower_attributes.code = 'SABEKANOPY'
  ) kanopy
    ON kanopy.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode = 'SABETHA' AND
  kanopy.attribute IS NULL AND
  borrowers.categorycode <> 'STAFF' AND
  borrowers.categorycode <> ""ILL"" AND
  borrowers.categorycode <> ""INHOUSE"" AND
  borrowers.categorycode <> ""STATISTIC"" AND
  borrowers.othernames <> 'SIP2 test account'
GROUP BY
  borrowers.categorycode,
  borrowers.borrowernumber
ORDER BY
  borrowers.cardnumber",,,,,,,,
R.003370,"/*
R.003370

----------

Name: GHW - Non-LINWOOD patrons with LINWOOD Kanopy access 
Created by: George H Williams

----------

Group:  LINWOOD
     -

Created on: 2020-11-13 14:42:51
Modified on: 2021-08-16 20:30:53
Date last run: 2022-05-27 14:24:50

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows patrons with a ""Kanopy (LINWOOD): Allowed . . ."" patron attribute but without a LINWOOD homebranch</p>
<ul><li>Shows borrwoers that currently have this attribute</li>
<li>grouped by categorycode and borrowernumber</li>
<li>sorted by library card number</li>
<li>links to the borrower account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Should be run monthly at LINWOOD so the attribute can be removed from those accounts</p>
<p><a href=""https://northeast-kansas-library-system.github.io/next/branches/LINWOOD/kanopy.html#running-reports-to-manually-update-kanopy-permission"" target=""_blank"">Go to the training information for the Kanopy (LINWOOD) extended borrower attribute.</a></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3370&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">kanopy; patron-extended-attributes; LINWOOD;</p>
</div>

----------
*/

","SELECT
  Concat('<a href=""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=', borrowers.borrowernumber, '&step=4"" target=""_blank"">Go to patron account</a>') AS LINK,
  borrowers.cardnumber
FROM
  borrowers
  LEFT JOIN (
    SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute
    FROM
      borrower_attributes
    WHERE
      borrower_attributes.code = 'LINWKANOPY'
  ) kanopy
    ON kanopy.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode <> 'LINWOOD' AND
  kanopy.attribute = 'LINWOOD' AND
  borrowers.othernames <> 'SIP2 test account'
GROUP BY
  borrowers.categorycode,
  borrowers.borrowernumber
ORDER BY
  borrowers.cardnumber",,,,,,,,
R.003371,"/*
R.003371

----------

Name: GHW - Non-SABETHA patrons with SABETHA Kanopy access 
Created by: George H Williams

----------

Group:  SABETHA
     -

Created on: 2020-11-16 10:45:17
Modified on: 2021-08-16 13:41:55
Date last run: 2021-12-06 17:25:33

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows patrons with a ""Kanopy (SABETHA): Allowed . . ."" patron attribute but without a SABETHA homebranch</p>
<ul><li>Shows borrwoers that currently have this attribute</li>
<li>grouped by categorycode and borrowernumber</li>
<li>sorted by library card number</li>
<li>links to the borrower account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Should be run monthly at SABETHA so the attribute can be removed from those accounts</p>
<p><a href=""https://northeast-kansas-library-system.github.io/next/branches/SABETHA/kanopy.html#running-reports-to-manually-update-kanopy-permission"" target=""_blank"">Go to the training information for the Kanopy (SABETHA) extended borrower attribute.</a></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3371&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">kanopy; patron-extended-attributes;</p>
</div>

----------
*/

","SELECT
  Concat('<a href=""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=', borrowers.borrowernumber, '&step=4"" target=""_blank"">Go to patron account</a>') AS LINK,
  borrowers.cardnumber
FROM
  borrowers
  LEFT JOIN (
    SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute
    FROM
      borrower_attributes
    WHERE
      borrower_attributes.code = 'SABEKANOPY'
  ) kanopy
    ON kanopy.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode <> 'SABETHA' AND
  kanopy.attribute = 'SABETHA' AND
  borrowers.othernames <> 'SIP2 test account'
GROUP BY
  borrowers.categorycode,
  borrowers.borrowernumber
ORDER BY
  borrowers.cardnumber",,,,,,,,
R.003389,"/*
R.003389

----------

Name: GHW - Open refine ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-11-30 16:48:41
Modified on: 2022-08-16 22:50:00
Date last run: 2022-08-16 22:54:40

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Outputs borrower address in a way that can be easily imported back into Koha via the patron import tool</p>
<ul><li>Shows current borrowers</li>
<li>at the library you specify</li>
<li>designed to be flexible</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Notes go here.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3389&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">hidden flexible openrefine</p>
</div>

----------
*/

","SELECT
  UPPER(borrowers.cardnumber) AS cardnumber,
  borrowers.surname,
  borrowers.firstname,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.country,
  borrowers.branchcode,
  borrowers.categorycode
FROM
  borrowers
WHERE
  borrowers.branchcode NOT LIKE ""HIGH_CC"" AND
  /* borrowers.branchcode NOT LIKE ""PH%"" AND */
  borrowers.branchcode LIKE <<Choose your library|branches:all>> AND
  borrowers.categorycode <> ""STAFF"" AND
  borrowers.cardnumber NOT LIKE ""0%"" AND
  borrowers.cardnumber IS NOT NULL AND
  borrowers.cardnumber NOT LIKE """" AND
  borrowers.address LIKE Concat(<<Address>> ,""%"") AND
  borrowers.city LIKE Concat(<<City>>, ""%"") AND
  borrowers.state LIKE Concat(<<State>>, ""%"")",,,,,,,,
R.003390,"/*
R.003390

----------

Name: GHW - Get Koha version
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-12-08 17:29:42
Modified on: 2022-08-21 19:59:15
Date last run: 2022-10-03 13:07:33

----------

Public: 0
Expiry: 21600

----------

<div id=reportinfo class=noprint>
<p>Gets the Koha version from the system preferences table and formats it for printing on the staff client home page as a part of the breadcrumbs</p>
<ul><li>Shows the version right now</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report grabs the Koha version then formats it in a way that's readable in the breadcrumbs on the home page in the staff client.  This report requires separate jQuery to work properly.</p>
<p></p>
<p>Updated to Koha 21.05.14 on 2022.05.26</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3390&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">jQuery required, json report, Koha enhancement</p>
</div>

----------
*/

","SELECT
  Concat(
    '<span style=""font-weight: bold; text-decoration: underline;',
    If(
      systempreferences.value = '21.1110000', 
      '', 
      ' color: red;'
    ),
    '"">Koha version ', 
    SubString(systempreferences.value FROM 1 FOR 5 ),
    '.', 
    SubString(systempreferences.value FROM 6 FOR 2 ), 
    '.',  
    SubString(systempreferences.value FROM 8 FOR 10 ),
    IF(
      systempreferences.value = '21.1110000', 
      '', 
      Concat(' (Updated ', Curdate(), ')')
    ),
    '</span>'
  ) AS KVERS
FROM
  systempreferences
WHERE
  systempreferences.variable = 'Version'",,,,,,,,
R.003391,"/*
R.003391

----------

Name: GHW - Sandbox - ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2020-12-28 15:17:04
Modified on: 2020-12-28 16:03:21
Date last run: 2020-12-30 16:58:34

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branchescategories.branchname,
  If(
    branchescategories.category_type = 'A', 
    'Adult', 
    If(
      branchescategories.category_type = 'C', 
      'Minor', 
      If(
        branchescategories.category_type = 'S', 
        'Staff', 
        If(
          branchescategories.category_type = 'I', 
          'Organization', 
          If(
            branchescategories.category_type = 'P', 
            'Professional', 
            If(
              branchescategories.category_type = 'X', 
              'Statistical', 
              branchescategories.category_type
            )
          )
        )
      )
    )
  ) AS CATEGORY_TYPE,
  If(
    Concat(branchescategories.dateofbirthrequired, branchescategories.upperagelimit) = 0999, 
    ""Any age"", 
    If(
      Concat(branchescategories.dateofbirthrequired, branchescategories.upperagelimit) LIKE ""1_999"", 
      Concat(branchescategories.dateofbirthrequired, "" or older""), 
      Concat_Ws("" - "", branchescategories.dateofbirthrequired, branchescategories.upperagelimit)
    )
  ) AS AGE_RANGE,
  branchescategories.description AS DESCRIPTION,
  branchescategories.categorycode,
  If(categories_branches.branchcode IS NULL, 'No', 'Yes') AS STAFF_CAN_CREATE_NEW,
  TOTAL.Count_borrowernumber AS TOTAL_BORROWERS,
  LM_ADDED.Count_borrowernumber AS ADDED_LM,
  LM_RENEWED.Count_borrowernumber AS RENEWED_LM,
  LM_DELETED.Count_borrowernumber AS DELETED_LM,
  Concat(
    '<a href=\""/cgi-bin/koha/reports/guided_reports.pl?reports=3078&phase=Run+this+report&param_name=Choose+your+library|ZBRAN&sql_params=', 
    branchescategories.branchcode, 
    '&param_name=Choose+the+patron+category|LBORROWERCAT&sql_params=',
    branchescategories.categorycode,
    '\"" target=""_blank"">Report 3078</a>'
  ) AS LINK
FROM
  (SELECT
      branches.branchcode,
      branches.branchname,
      categories.categorycode,
      categories.description,
      categories.category_type,
      categories.dateofbirthrequired,
      categories.upperagelimit
    FROM
      branches,
      categories) branchescategories LEFT JOIN
  categories_branches ON categories_branches.branchcode =
      branchescategories.branchcode AND
      categories_branches.categorycode = branchescategories.categorycode
  LEFT JOIN
  (SELECT
      Count(borrowers.borrowernumber) AS Count_borrowernumber,
      borrowers.branchcode,
      borrowers.categorycode
    FROM
      borrowers
    GROUP BY
      borrowers.branchcode,
      borrowers.categorycode) TOTAL ON
      TOTAL.branchcode = branchescategories.branchcode AND
      TOTAL.categorycode = branchescategories.categorycode LEFT JOIN
  (SELECT
      Count(borrowers.borrowernumber) AS Count_borrowernumber,
      borrowers.branchcode,
      borrowers.categorycode
    FROM
      borrowers
    WHERE
      Year(borrowers.dateenrolled) = Year(Now() - INTERVAL 1 MONTH) AND
      Month(borrowers.dateenrolled) = Month(Now() - INTERVAL 1 MONTH)
    GROUP BY
      borrowers.branchcode,
      borrowers.categorycode) LM_ADDED ON LM_ADDED.branchcode =
      branchescategories.branchcode AND
      LM_ADDED.categorycode = branchescategories.categorycode LEFT JOIN
  (SELECT
      deletedborrowers.branchcode,
      deletedborrowers.categorycode,
      Count(deletedborrowers.borrowernumber) AS Count_borrowernumber
    FROM
      deletedborrowers
    WHERE
      Year(deletedborrowers.updated_on) = Year(Now() - INTERVAL 1 MONTH) AND
      Month(deletedborrowers.updated_on) = Month(Now() - INTERVAL 1 MONTH)
    GROUP BY
      deletedborrowers.branchcode,
      deletedborrowers.categorycode) LM_DELETED ON LM_DELETED.branchcode =
      branchescategories.branchcode AND
      LM_DELETED.categorycode = branchescategories.categorycode LEFT JOIN
  (SELECT
      Count(borrowers.borrowernumber) AS Count_borrowernumber,
      borrowers.branchcode,
      borrowers.categorycode
    FROM
      borrowers
    WHERE
      Year(borrowers.date_renewed) = Year(Now() - INTERVAL 1 MONTH) AND
      Month(borrowers.date_renewed) = Month(Now() - INTERVAL 1 MONTH)
    GROUP BY
      borrowers.branchcode,
      borrowers.categorycode) LM_RENEWED ON LM_RENEWED.branchcode =
      branchescategories.branchcode AND
      LM_RENEWED.categorycode = branchescategories.categorycode
WHERE
  (branchescategories.branchcode LIKE @brn := <<Choose your library|LBRANCH>> COLLATE utf8mb4_unicode_ci) AND
  If(categories_branches.branchcode IS NULL, 'No', 'Yes') LIKE <<Staff can make new|ZYES_NO>>
GROUP BY
  branchescategories.branchname,
  branchescategories.categorycode
UNION
SELECT
  Concat(branchescategories.branchname, ' - TOTAL') AS branchname,
  Concat('') AS CATEGORY_TYPE,
  Concat('') AS AGE_RANGE,
  Concat('') AS DESCRIPTION,
  Concat('') AS CATEGORYCODE,
  Concat('') AS STAFF_CAN_CREATE_NEW,
  TOTAL.Count_borrowernumber AS TOTAL_BORROWERS,
  LM_ADDED.Count_borrowernumber AS ADDED_LM,
  LM_RENEWED.Count_borrowernumber AS RENEWED_LM,
  LM_DELETED.Count_borrowernumber AS DELETED_LM,
  branchescategories.branchcode
FROM
  (SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches) branchescategories LEFT JOIN
  (SELECT
      Count(borrowers.borrowernumber) AS Count_borrowernumber,
      borrowers.branchcode
    FROM
      borrowers
    WHERE
      Year(borrowers.dateenrolled) = Year(Now() - INTERVAL 1 MONTH) AND
      Month(borrowers.dateenrolled) = Month(Now() - INTERVAL 1 MONTH)
    GROUP BY
      borrowers.branchcode) LM_ADDED ON LM_ADDED.branchcode =
      branchescategories.branchcode LEFT JOIN
  (SELECT
      deletedborrowers.branchcode,
      Count(deletedborrowers.borrowernumber) AS Count_borrowernumber
    FROM
      deletedborrowers
    WHERE
      Year(deletedborrowers.updated_on) = Year(Now() - INTERVAL 1 MONTH) AND
      Month(deletedborrowers.updated_on) = Month(Now() - INTERVAL 1 MONTH)
    GROUP BY
      deletedborrowers.branchcode) LM_DELETED ON LM_DELETED.branchcode =
      branchescategories.branchcode LEFT JOIN
  (SELECT
      Count(borrowers.borrowernumber) AS Count_borrowernumber,
      borrowers.branchcode
    FROM
      borrowers
    WHERE
      Year(borrowers.date_renewed) = Year(Now() - INTERVAL 1 MONTH) AND
      Month(borrowers.date_renewed) = Month(Now() - INTERVAL 1 MONTH)
    GROUP BY
      borrowers.branchcode) LM_RENEWED ON LM_RENEWED.branchcode =
      branchescategories.branchcode LEFT JOIN
  (SELECT
      Count(borrowers.borrowernumber) AS Count_borrowernumber,
      borrowers.branchcode
    FROM
      borrowers
    GROUP BY
      borrowers.branchcode) TOTAL ON
      TOTAL.branchcode = branchescategories.branchcode
WHERE
  branchescategories.branchcode LIKE @brn
GROUP BY
  Concat(branchescategories.branchname, ' - TOTAL')
ORDER BY
  branchname,
  Coalesce(DESCRIPTION, 'Z')",,,,,,,,
R.003393,"/*
R.003393

----------

Name: GHW - C2 Circulation by item details - item type - Next Search Catlog 
Created by: George H Williams

----------

Group: Statistics
     2022 beginning of month statistics

Created on: 2020-12-31 17:36:03
Modified on: 2022-03-10 15:15:14
Date last run: 2022-10-01 00:40:02

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint> 
<p>Circulation by item details spreadsheet report - circulation by item type</p> 
<ul><li>Shows counts of check-outs and renewals in the previous calendar month</li> 
<li>At all Next Search Catalog libraries</li> 
<li>grouped and sorted by library name</li> 
</ul><br /> 
<p><ins>Notes:</ins></p> 
<p></p> 
<p>SHELVING_LOCATION is based on the shelving location of the item at the time it was checked out *Unless the item had a ""Recently returned"" shelving location.*  This report falls back to the items' ""Permanent shelving location"" whenever the statistics data shows that the item's shelving location was ""Recently returned.""  If the shelving location is completely ambiguous, the circulation is counted in the CKO_RENEW_OTHER column.</p> 
<p></p> 
<ul> 
  <li>CKO_RENEW_ADULT includes items with these shelving locations:</li> 
  <ul> 
    <li>Adult</li> 
    <li>~Display - BALDWIN - Adult</li> 
    <li>~Display - LEAVENWRTH - Adult</li> 
    <li>~Display - PAOLA - Adult</li> 
    <li>Any situation where the location is recorded as ""Recently returned"" but the item's permanent location is one of these ""Adult"" locations</li> 
  </ul> 
  <br /> 
  <li>CKO_RENEW_YA includes items with these shelving locations:</li> 
  <ul> 
    <li>Young adult</li> 
    <li>~Display - BALDWIN - Young Adult</li> 
    <li>~Display - LEAVENWRTH - Young adult</li> 
    <li>~Display - PAOLA - Young adult</li> 
    <li>Any situation where the location is recorded as ""Recently returned"" but the item's permanent location is one of these ""Young adult"" locations</li> 
  </ul> 
  <br /> 
  <li>CKO_RENEW_CHILDRENS includes items with these shelving locations:</li> 
  <ul> 
    <li>Childrens</li> 
    <li>~Display - BALDWIN - Childrens</li> 
    <li>~Display - LEAVENWRTH - Children's</li> 
    <li>~Display - PAOLA - Children's</li> 
    <li>Any situation where the location is recorded as ""Recently returned"" but the item's permanent location is one of these ""Childrens"" locations</li> 
  </ul> 
  <br /> 
  <li>CKO_RENEW_OTHER includes items with these shelving locations:</li> 
  <ul> 
    <li>Cataloging</li> 
    <li>Processing Center</li> 
    <li>Any other situation where the recorded shelving location is ""Recently returned"" but the item's permanent location is ambiguous</li> 
    <li>Any items where the recorded shelving location is blank or unknown</li> 
  </ul> 
</ul> 
  <br /> 
<p></p> 
<p class=""updated"">This report and these notes updated on 2022.03.10</p> 
<p></p> 
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id= 3393"">Click here to download as a csv file</a></p> 
<p class= ""notetags"" style=""display: none;"">#monthly #statistics #item #details #itype</p> 
<!-- html notes rendered on guided_reports.pl by jquery at https://wiki.koha-community.org/wiki/JQuery_Library#Render_patron_messages_as_HTML_and_in_Report_notes --> 
</div> 

----------
*/

","SELECT 
  branch_itype.branchname AS CHECK_OUT_LIBRARY, 
  branch_itype.description AS ITEM_TYPE, 
  Coalesce(SUM(statistics_all.CKO_REN), 0) AS CKO_REN_ALL, 
  Coalesce(SUM(statistics_adult.CKO_REN), 0) AS CKO_REN_ADULT, 
  Coalesce(SUM(statistics_ya.CKO_REN), 0) AS CKO_REN_YA, 
  Coalesce(SUM(statistics_child.CKO_REN), 0) AS CKO_REN_CHILD, 
  Coalesce(SUM(statistics_other.CKO_REN), 0) AS CKO_REN_OTHER 
FROM 
    (SELECT 
      branches.branchname, 
      itemtypes.description, 
      branches.branchcode, 
      itemtypes.itemtype 
    FROM 
      branches, 
      itemtypes 
    WHERE 
      branches.branchcode LIKE '%' 
    ) branch_itype 
  LEFT JOIN 
    (SELECT 
      Coalesce(statistics.branch, ""NEKLS"") AS branch, 
      Coalesce(statistics.itemtype, ""BOOK"") AS itemtype, 
      Count(*) AS CKO_REN 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      Coalesce(statistics.branch, ""NEKLS""), 
      Coalesce(statistics.itemtype, ""BOOK"") 
    ORDER BY 
      branch, 
      itemtype 
    ) statistics_all 
  ON statistics_all.branch = branch_itype.branchcode AND 
    statistics_all.itemtype = branch_itype.itemtype LEFT JOIN 
    (SELECT 
      Coalesce(statistics.branch, ""NEKLS"") AS branch, 
      Coalesce(statistics.itemtype, ""BOOK"") AS itemtype, 
      Count(*) AS CKO_REN 
    FROM 
      statistics LEFT JOIN 
      items ON items.itemnumber = statistics.itemnumber 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      If( 
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"") 
      ) LIKE ""%ADULT%"" 
    GROUP BY 
      Coalesce(statistics.branch, ""NEKLS""), 
      Coalesce(statistics.itemtype, ""BOOK"") 
    ) statistics_adult 
  ON statistics_adult.branch = branch_itype.branchcode AND 
    statistics_adult.itemtype = branch_itype.itemtype LEFT JOIN 
    (SELECT 
      Coalesce(statistics.branch, ""NEKLS"") AS branch, 
      Coalesce(statistics.itemtype, ""BOOK"") AS itemtype, 
      Count(*) AS CKO_REN 
    FROM 
      statistics LEFT JOIN 
      items ON items.itemnumber = statistics.itemnumber 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      If( 
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"") 
      ) LIKE ""%YA%"" 
    GROUP BY 
      Coalesce(statistics.branch, ""NEKLS""), 
      Coalesce(statistics.itemtype, ""BOOK"") 
    ) statistics_ya 
  ON statistics_ya.branch = branch_itype.branchcode AND 
    statistics_ya.itemtype = branch_itype.itemtype LEFT JOIN 
    (SELECT 
      Coalesce(statistics.branch, ""NEKLS"") AS branch, 
      Coalesce(statistics.itemtype, ""BOOK"") AS itemtype, 
      Count(*) AS CKO_REN 
    FROM 
      statistics LEFT JOIN 
      items ON items.itemnumber = statistics.itemnumber 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      If( 
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"") 
      ) LIKE ""%CHILD%"" 
    GROUP BY 
      Coalesce(statistics.branch, ""NEKLS""), 
      Coalesce(statistics.itemtype, ""BOOK"") 
    ) statistics_child 
  ON statistics_child.branch = branch_itype.branchcode AND 
    statistics_child.itemtype = branch_itype.itemtype LEFT JOIN 
    (SELECT 
      Coalesce(statistics.branch, ""NEKLS"") AS branch, 
      Coalesce(statistics.itemtype, ""BOOK"") AS itemtype, 
      Count(*) AS CKO_REN 
    FROM 
      statistics LEFT JOIN 
      items ON items.itemnumber = statistics.itemnumber 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      If( 
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"") 
      ) NOT LIKE ""%ADULT%"" AND 
      If( 
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"") 
      ) NOT LIKE ""%YA%"" AND 
      If( 
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"") 
      ) NOT LIKE ""%CHILD%"" 
    GROUP BY 
      Coalesce(statistics.branch, ""NEKLS""), 
      Coalesce(statistics.itemtype, ""BOOK"") 
    ) statistics_other 
  ON statistics_other.branch = branch_itype.branchcode AND 
    statistics_other.itemtype = branch_itype.itemtype 
GROUP BY 
  branch_itype.branchname, 
  branch_itype.description ",,,,,,,,
R.003394,"/*
R.003394

----------

Name: GHW - C1 Circulation by item details - collection code - Next Search Catlog
Created by: George H Williams

----------

Group: Statistics
     2022 beginning of month statistics

Created on: 2020-12-31 17:40:07
Modified on: 2022-03-10 15:14:36
Date last run: 2022-10-01 00:35:02

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint> 
<p>Circulation by item details spreadsheet report - circulation by collection code</p> 
<ul><li>Shows counts of check-outs and renewals in the previous calendar month</li> 
<li>At all Next Search Catalog libraries</li> 
<li>grouped and sorted by library name</li> 
</ul><br /> 
<p><ins>Notes:</ins></p> 
<p></p> 
<p>SHELVING_LOCATION is based on the shelving location of the item at the time it was checked out *Unless the item had a ""Recently returned"" shelving location.*  This report falls back to the items' ""Permanent shelving location"" whenever the statistics data shows that the item's shelving location was ""Recently returned.""  If the shelving location is completely ambiguous, the circulation is counted in the CKO_RENEW_OTHER column.</p> 
<p></p> 
<ul> 
  <li>CKO_RENEW_ADULT includes items with these shelving locations:</li> 
  <ul> 
    <li>Adult</li> 
    <li>~Display - BALDWIN - Adult</li> 
    <li>~Display - LEAVENWRTH - Adult</li> 
    <li>~Display - PAOLA - Adult</li> 
    <li>Any situation where the location is recorded as ""Recently returned"" but the item's permanent location is one of these ""Adult"" locations</li> 
  </ul> 
  <br /> 
  <li>CKO_RENEW_YA includes items with these shelving locations:</li> 
  <ul> 
    <li>Young adult</li> 
    <li>~Display - BALDWIN - Young Adult</li> 
    <li>~Display - LEAVENWRTH - Young adult</li> 
    <li>~Display - PAOLA - Young adult</li> 
    <li>Any situation where the location is recorded as ""Recently returned"" but the item's permanent location is one of these ""Young adult"" locations</li> 
  </ul> 
  <br /> 
  <li>CKO_RENEW_CHILDRENS includes items with these shelving locations:</li> 
  <ul> 
    <li>Childrens</li> 
    <li>~Display - BALDWIN - Childrens</li> 
    <li>~Display - LEAVENWRTH - Children's</li> 
    <li>~Display - PAOLA - Children's</li> 
    <li>Any situation where the location is recorded as ""Recently returned"" but the item's permanent location is one of these ""Childrens"" locations</li> 
  </ul> 
  <br /> 
  <li>CKO_RENEW_OTHER includes items with these shelving locations:</li> 
  <ul> 
    <li>Cataloging</li> 
    <li>Processing Center</li> 
    <li>Any other situation where the recorded shelving location is ""Recently returned"" but the item's permanent location is ambiguous</li> 
    <li>Any items where the recorded shelving location is blank or unknown</li> 
  </ul> 
</ul> 
  <br /> 
<p></p> 
<p class=""updated"">This report and these notes updated on 2022.03.10</p> 
<p></p> 
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id= 3394"">Click here to download as a csv file</a></p> 
<p class= ""notetags"" style=""display: none;"">#monthly #statistics #item #details #ccode</p> 
<!-- html notes rendered on guided_reports.pl by jquery at https://wiki.koha-community.org/wiki/JQuery_Library#Render_patron_messages_as_HTML_and_in_Report_notes --> 
</div> 

----------
*/

","SELECT 
  branchccodes.branchname AS CHECK_OUT_LIBRARY, 
  branchccodes.lib AS COLLECTION_CODE, 
  Coalesce(SUM(all_lm.CKO_RENEW), ""0"") AS CKO_RENW_ALL, 
  Coalesce(SUM(adult_lm.CKO_RENEW), ""0"") AS CKO_RENEW_ADULT, 
  Coalesce(SUM(ya_lm.CKO_RENEW), ""0"") AS CKO_RENEW_YA, 
  Coalesce(SUM(childrens_lm.CKO_RENEW), ""0"") AS CKO_RENEW_CHILDRENS, 
  Coalesce(SUM(other_lm.CKO_RENEW), ""0"") AS CKO_RENEW_OTHER 
FROM 
    (SELECT 
      branches.branchcode, 
      authorised_values.authorised_value, 
      authorised_values.lib, 
      branches.branchname 
    FROM 
      branches, 
      authorised_values 
    WHERE 
      authorised_values.category = 'CCODE' AND 
      branches.branchcode LIKE ""%"" 
    ORDER BY 
      branches.branchcode, 
      authorised_values.lib
    ) branchccodes 
  LEFT JOIN 
    (SELECT 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch, 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) AS CCODE, 
      Count(*) AS CKO_RENEW 
    FROM 
      statistics 
    WHERE 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') 
    GROUP BY 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch), 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) 
    ) all_lm 
  ON all_lm.branch = branchccodes.branchcode AND 
    all_lm.CCODE = branchccodes.authorised_value LEFT JOIN 
    (SELECT 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch, 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) AS CCODE, 
      Count(*) AS CKO_RENEW 
    FROM 
      statistics LEFT JOIN 
      items ON items.itemnumber = statistics.itemnumber 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      If(    Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"") 
      ) LIKE ""%ADULT%"" 
    GROUP BY 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch), 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) 
    ) adult_lm 
  ON adult_lm.branch = branchccodes.branchcode AND 
    adult_lm.CCODE = branchccodes.authorised_value LEFT JOIN 
    (SELECT 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch, 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) AS CCODE, 
      Count(*) AS CKO_RENEW 
    FROM 
      statistics LEFT JOIN 
      items ON items.itemnumber = statistics.itemnumber 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      If(    Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"") 
      ) LIKE ""%YA%"" 
    GROUP BY 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch), 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) 
    ) ya_lm 
  ON ya_lm.branch = branchccodes.branchcode AND 
    ya_lm.CCODE = branchccodes.authorised_value LEFT JOIN 
    (SELECT 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch, 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) AS CCODE, 
      Count(*) AS CKO_RENEW 
    FROM 
      statistics LEFT JOIN 
      items ON items.itemnumber = statistics.itemnumber 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      If(    Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"") 
      ) LIKE ""%CHILD%"" 
    GROUP BY 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch), 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) 
    ) childrens_lm 
  ON childrens_lm.branch = branchccodes.branchcode AND 
    childrens_lm.CCODE = branchccodes.authorised_value LEFT JOIN 
    (SELECT 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch, 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) AS CCODE, 
      Count(*) AS CKO_RENEW 
    FROM 
      statistics LEFT JOIN 
      items ON items.itemnumber = statistics.itemnumber 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      If(    Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"") 
      ) NOT LIKE ""%ADULT%"" AND 
      If(    Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location,""PROC"") 
      ) NOT LIKE ""%YA%"" AND 
      If(    Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"") 
      ) NOT LIKE ""%CHILD%"" 
    GROUP BY 
      If(statistics.branch IS NULL, ""NEKLS"", statistics.branch), 
      If(statistics.ccode IS NULL, ""XXX"", statistics.ccode) 
    ) other_lm 
  ON other_lm.branch = branchccodes.branchcode AND 
    other_lm.CCODE = branchccodes.authorised_value 
GROUP BY 
  branchccodes.branchname, 
  branchccodes.lib 
ORDER BY 
  branchccodes.branchname, 
  branchccodes.lib ",,,,,,,,
R.003395,"/*
R.003395

----------

Name: GHW - Item type update - ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-01-01 12:02:56
Modified on: 2021-01-01 12:02:56
Date last run: 2021-01-01 18:16:08

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  items.itemnumber,
  items.itype
FROM
  items
WHERE  items.itype = <<itype>>",,,,,,,,
R.003396,"/*
R.003396

----------

Name: GHW - 942H ADMINREPORT - ASC
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-01-07 16:28:26
Modified on: 2021-01-08 11:16:54
Date last run: 2022-08-19 09:31:31

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  biblioitems.biblionumber,
  biblio.author,
  biblio.title,
  biblio.subtitle,
  biblio.medium,
  biblioitems.itemtype,
  biblioitems.cn_class,
  itemccode.Group_Concat_ccode
FROM
  biblio JOIN
  biblioitems ON biblioitems.biblionumber = biblio.biblionumber JOIN
  (SELECT
      items.biblionumber,
      GROUP_CONCAT(DISTINCT items.ccode ORDER BY items.ccode) AS
      Group_Concat_ccode
    FROM
      items
    GROUP BY
      items.biblionumber) itemccode ON itemccode.biblionumber =
      biblioitems.biblionumber
WHERE
  biblioitems.cn_class IS NULL AND
  itemccode.Group_Concat_ccode = 'NONFICTION'
GROUP BY
  biblioitems.biblionumber,
  biblio.author,
  biblio.title,
  biblio.subtitle,
  biblio.medium,
  biblioitems.itemtype,
  biblioitems.cn_class,
  itemccode.Group_Concat_ccode
ORDER BY
  biblioitems.biblionumber ASC
LIMIT 1000",,,,,,,,
R.003397,"/*
R.003397

----------

Name: GHW - 942H ADMINREPORT - DESC
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-01-08 11:16:37
Modified on: 2021-01-09 22:22:30
Date last run: 2022-08-19 09:32:15

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  biblioitems.biblionumber,
  biblio.author,
  biblio.title,
  biblio.subtitle,
  biblio.medium,
  biblioitems.itemtype,
  biblioitems.cn_class,
  itemccode.Group_Concat_ccode
FROM
  biblio JOIN
  biblioitems ON biblioitems.biblionumber = biblio.biblionumber JOIN
  (SELECT
      items.biblionumber,
      GROUP_CONCAT(DISTINCT items.ccode ORDER BY items.ccode) AS
      Group_Concat_ccode
    FROM
      items
    GROUP BY
      items.biblionumber) itemccode ON itemccode.biblionumber =
      biblioitems.biblionumber
WHERE
  biblioitems.cn_class IS NULL AND
  itemccode.Group_Concat_ccode = 'PAPERBACK'
GROUP BY
  biblioitems.biblionumber,
  biblio.author,
  biblio.title,
  biblio.subtitle,
  biblio.medium,
  biblioitems.itemtype,
  biblioitems.cn_class,
  itemccode.Group_Concat_ccode
ORDER BY
  biblioitems.biblionumber DESC
LIMIT 1000",,,,,,,,
R.003398,"/*
R.003398

----------

Name: GHW - Borrower count by age
Created by: George H Williams

----------

Group: Borrowers
     Patron attributes

Created on: 2021-01-11 16:32:52
Modified on: 2021-01-11 16:38:28
Date last run: 2022-06-24 20:03:22

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Counts borrowers at a library by age (in years) and gender indicator</p>
<ul><li>Counts current borrowers</li>
<li>where the borrowers home library matches the library you specify</li>
<li>grouped and sorted by borrowers home branch and age</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Counts in the ""BLANK_OR_BAD_CODE"" column represent borrowers where the gender radio button on their account is either not set, or is set to a data code that is no longer in use.</p>
<p></p>
<p></p>
<p>Partly replaces report 1081.</p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3398&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3398"">Click here to download as a csv file</a></p>
<p class= ""notetags"" style=""display: none;"">borrower count</p>
</div>

----------
*/

","SELECT
  branches.branchname,
  ages.BORROWER_AGE AS BORROWER_AGE,
  Coalesce(ages.COUNT_OF_BORROWERS, '-') AS TOTAL_BORROWERS,
  Coalesce(FEMALE.COUNT_OF_BORROWERS, '-') AS FEMALE,
  Coalesce(MALE.COUNT_OF_BORROWERS, '-') AS MALE,
  Coalesce(NAS.COUNT_OF_BORROWERS, '-') AS NOT_SPECIFIED,
  Coalesce(BLANK_OR_UNKNOWN.COUNT_OF_BORROWERS, '-') AS BLANK_OR_BAD_CODE
FROM
  branches JOIN
  (SELECT
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25), '-') AS BORROWER_AGE,
      Count(borrowers.borrowernumber) AS COUNT_OF_BORROWERS
    FROM
      borrowers
    GROUP BY
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25),
      '-')) ages ON ages.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25), '-') AS BORROWER_AGE,
      Count(borrowers.borrowernumber) AS COUNT_OF_BORROWERS
    FROM
      borrowers
    WHERE
      borrowers.sex LIKE 'N'
    GROUP BY
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25), '-')) NAS 
      ON NAS.branchcode = branches.branchcode AND
      NAS.BORROWER_AGE = ages.BORROWER_AGE LEFT JOIN
  (SELECT
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25), '-') AS BORROWER_AGE,
      Count(borrowers.borrowernumber) AS COUNT_OF_BORROWERS
    FROM
      borrowers
    WHERE
      borrowers.sex LIKE 'F'
    GROUP BY
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25), '-')) FEMALE 
      ON FEMALE.branchcode = branches.branchcode AND
      FEMALE.BORROWER_AGE = ages.BORROWER_AGE LEFT JOIN
  (SELECT
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25), '-') AS BORROWER_AGE,
      Count(borrowers.borrowernumber) AS COUNT_OF_BORROWERS
    FROM
      borrowers
    WHERE
      borrowers.sex LIKE 'M'
    GROUP BY
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25), '-')) MALE 
      ON MALE.branchcode = branches.branchcode AND
      MALE.BORROWER_AGE = ages.BORROWER_AGE LEFT JOIN
  (SELECT
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25), '-') AS BORROWER_AGE,
      Count(borrowers.borrowernumber) AS COUNT_OF_BORROWERS
    FROM
      borrowers
    WHERE
      (borrowers.sex IS NULL) OR
      (borrowers.sex <> 'N' AND
          borrowers.sex <> 'F' AND
          borrowers.sex <> 'M')
    GROUP BY
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25), '-')) BLANK_OR_UNKNOWN 
      ON BLANK_OR_UNKNOWN.branchcode =
      branches.branchcode AND
      BLANK_OR_UNKNOWN.BORROWER_AGE = ages.BORROWER_AGE
WHERE
  branches.branchcode LIKE <<Choose your library|ZBRAN>>
GROUP BY
  branches.branchname,
  ages.BORROWER_AGE
ORDER BY
  branches.branchcode,
  LPad(ages.BORROWER_AGE, 4, 0)",,,,,,,,
R.003399,"/*
R.003399

----------

Name: GHW - Borrower count by age and borrower category
Created by: George H Williams

----------

Group: Borrowers
     Patron Statistics

Created on: 2021-01-11 17:05:34
Modified on: 2021-05-21 16:57:42
Date last run: 2022-08-13 20:14:31

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Counts borrowers at a library by age (in years)</p>
<ul><li>Counts current borrowers</li>
<li>where the borrowers home library matches the library you specify and the borrower category matches the category you select</li>
<li>grouped and sorted by borrowers home branch, borrowers category, and age</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Counts in the ""BLANK_OR_BAD_CODE"" column represent borrowers where the gender radio button on their account is either not set, or is set to a data code that is no longer in use.</p>
<p></p>
<p></p>
<p>Replaces report 1081 and 2443</p>
<p class= ""notetags"" style=""display: none;"">borrower count age</p>
</div>

----------
*/

","SELECT
  branchescategories.branchname,
  branchescategories.description,
  ages.BORROWER_AGE AS BORROWER_AGE,
  Coalesce(ages.COUNT_OF_BORROWERS, '-') AS TOTAL_BORROWERS,
  FEMALE.COUNT_OF_BORROWERS AS FEMALE,
  MALE.COUNT_OF_BORROWERS AS MALE,
  NAS.COUNT_OF_BORROWERS AS NOT_SPECIFIED,
  BLANK_OR_UNKNOWN.COUNT_OF_BORROWERS AS BLANK_OR_BAD_CODE
FROM
  (SELECT
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25),
      '-') AS BORROWER_AGE,
      Count(borrowers.borrowernumber) AS COUNT_OF_BORROWERS,
      borrowers.categorycode
    FROM
      borrowers
    GROUP BY
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25), '-'),
      borrowers.categorycode) ages INNER JOIN
  (SELECT
      branches.branchname,
      branches.branchcode,
      categories.categorycode,
      categories.description
    FROM
      branches,
      categories) branchescategories ON
      ages.branchcode = branchescategories.branchcode AND
      ages.categorycode = branchescategories.categorycode LEFT JOIN
  (SELECT
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25),
      '-') AS BORROWER_AGE,
      Count(borrowers.borrowernumber) AS COUNT_OF_BORROWERS,
      borrowers.categorycode
    FROM
      borrowers
    WHERE
      borrowers.sex = 'F'
    GROUP BY
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25), '-'),
      borrowers.categorycode) FEMALE ON
      FEMALE.branchcode = branchescategories.branchcode AND
      FEMALE.categorycode = branchescategories.categorycode AND
      FEMALE.BORROWER_AGE = ages.BORROWER_AGE LEFT JOIN
  (SELECT
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25),
      '-') AS BORROWER_AGE,
      Count(borrowers.borrowernumber) AS COUNT_OF_BORROWERS,
      borrowers.categorycode
    FROM
      borrowers
    WHERE
      borrowers.sex = 'M'
    GROUP BY
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25), '-'),
      borrowers.categorycode) MALE ON
      MALE.branchcode = branchescategories.branchcode AND
      MALE.categorycode = branchescategories.categorycode AND
      MALE.BORROWER_AGE = ages.BORROWER_AGE LEFT JOIN
  (SELECT
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25),
      '-') AS BORROWER_AGE,
      Count(borrowers.borrowernumber) AS COUNT_OF_BORROWERS,
      borrowers.categorycode
    FROM
      borrowers
    WHERE
      borrowers.sex = 'N'
    GROUP BY
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25), '-'),
      borrowers.categorycode) NAS ON
      NAS.branchcode = branchescategories.branchcode AND
      NAS.categorycode = branchescategories.categorycode AND
      NAS.BORROWER_AGE = ages.BORROWER_AGE LEFT JOIN
  (SELECT
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25),
      '-') AS BORROWER_AGE,
      Count(borrowers.borrowernumber) AS COUNT_OF_BORROWERS,
      borrowers.categorycode
    FROM
      borrowers
    WHERE
      (borrowers.sex IS NULL) OR
      (borrowers.sex <> 'N' AND
          borrowers.sex <> 'F' AND
          borrowers.sex <> 'M')
    GROUP BY
      borrowers.branchcode,
      Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25), '-'),
      borrowers.categorycode) BLANK_OR_UNKNOWN ON BLANK_OR_UNKNOWN.branchcode =
      branchescategories.branchcode AND
      BLANK_OR_UNKNOWN.categorycode = branchescategories.categorycode AND
      BLANK_OR_UNKNOWN.BORROWER_AGE = ages.BORROWER_AGE
WHERE
  branchescategories.branchcode LIKE <<Choose your library|ZBRAN>> AND
  branchescategories.categorycode LIKE <<Choose a borrower category|LBORROWERCAT>>
GROUP BY
  branchescategories.branchname,
  branchescategories.description,
  ages.BORROWER_AGE,
  FEMALE.COUNT_OF_BORROWERS,
  MALE.COUNT_OF_BORROWERS,
  NAS.COUNT_OF_BORROWERS,
  BLANK_OR_UNKNOWN.COUNT_OF_BORROWERS
ORDER BY
  branchescategories.branchname,
  branchescategories.description,
  LPad(ages.BORROWER_AGE, 4, 0)",,,,,,,,
R.003405,"/*
R.003405

----------

Name: GHW - VIDEO items with a non-videodisc item type
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-01-14 16:51:37
Modified on: 2021-01-28 14:02:16
Date last run: 2021-01-28 13:46:39

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows list of items with a Video item type and a collection code other than DVD, Blu-ray, Combo, or TV Series</p>
<ul><li>Shows items currently in the system</li>
<li>at the library you specify</li>
<li>grouped by item number, location, collection code, and bibliographic number</li>
<li>sorted by the normal Next classification order</li>
<li>links to the bibliographic record and the edit item page</li>
</ul><br />
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3405&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">collection code cleanup</p>
</div>

----------
*/

","SELECT
  Concat(
    '<a class= ""clicked"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', 
    item_info.biblionumber, 
    '\"" target=""_blank"">', 
    item_info.biblionumber, 
    '</a>'
  ) AS LINK_TO_ITEM,
  Concat_Ws('<br />', 
    Concat(
      '<a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
      borrowers.borrowernumber, 
      '"" target=""_blank"">Go to patron account</a>'
    ),
    borrowers.cardnumber, 
    If(
      borrowers.othernames = '', 
      Concat(borrowers.surname, ', ', borrowers.firstname), 
      Concat(borrowers.surname, ', ',borrowers.firstname, ' (', borrowers.othernames, ')')
    ),
    borrowers.borrowernumber
  ) AS BORROWER,
  Concat_Ws(' &lt;br&gt;&lt;br&gt; ', 
    'LOST ITEM PROCESSING FEE: ', 
    Concat('Item barcode: ', item_info.barcode), 
    Concat('Owned by: ', item_info.homebranch),
    Concat('Location: ', item_info.PERM_LOCATION), 
    Concat('Item type: ', item_info.ITEM_TYPE), 
    Concat('Collection: ', item_info.COLLECTION_CODE),
    Concat('Call number: ', item_info.itemcallnumber), 
    Concat('Author: ', item_info.author), 
    Concat('Title: ', item_info.FULL_TITLE),
    Concat('Due date: ', old_checkouts.ORIGINAL_DUE_DATE), 
    Concat('Lost on: ', item_info.LOST_ON_DATE, '&lt;br&gt;&lt;br&gt;')
  ) AS FEE_NOTE
FROM
  (SELECT
     old_issues.itemnumber,
     Concat_Ws('-', 
       Year(old_issues.timestamp),
       LPad(Month(old_issues.timestamp), 2, 0), 
       LPad(Day(old_issues.timestamp), 2, 0)
     ) AS LOST_DATE,
     Concat_Ws('-', 
       Year(old_issues.date_due), 
       LPad(Month(old_issues.date_due), 2, 0), 
       LPad(Day(old_issues.date_due), 2, 0)
     ) AS ORIGINAL_DUE_DATE,
     old_issues.borrowernumber,
     old_issues.branchcode
   FROM
     old_issues
   WHERE
     old_issues.branchcode = 'SENECA') old_checkouts JOIN
  (SELECT
     items.biblionumber,
     items.itemnumber,
     items.barcode,
     items.homebranch,
     permanent_location.lib AS PERM_LOCATION,
     location.lib AS LOCATION,
     itypes.description AS ITEM_TYPE,
     collectioncodes.lib AS COLLECTION_CODE,
     items.itemcallnumber,
     biblio.author,
     Concat_Ws("" "", 
       biblio.title, 
       ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
       ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
       ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
       ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')
     ) AS FULL_TITLE,
     Concat_Ws('-', 
       Year(items.itemlost_on), 
       LPad(Month(items.itemlost_on), 2, 0), 
       LPad(Day(items.itemlost_on), 2, 0)
     ) AS LOST_ON_DATE
   FROM
     items JOIN
     biblio ON items.biblionumber = biblio.biblionumber JOIN
     biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
     LEFT JOIN
     (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'LOC') permanent_location ON
         permanent_location.authorised_value = items.permanent_location
     LEFT JOIN
     (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'LOC') location ON
         location.authorised_value = items.location LEFT JOIN
     (SELECT
        itemtypes.itemtype,
        itemtypes.description
      FROM
        itemtypes) itypes ON itypes.itemtype = items.itype LEFT JOIN
     (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'CCODE') collectioncodes ON
         collectioncodes.authorised_value = items.ccode
   WHERE
     items.itemlost = 2) item_info ON item_info.itemnumber =
      old_checkouts.itemnumber AND
      item_info.LOST_ON_DATE = old_checkouts.LOST_DATE JOIN
  borrowers ON borrowers.borrowernumber = old_checkouts.borrowernumber
GROUP BY
  old_checkouts.itemnumber
ORDER BY
  item_info.LOST_ON_DATE DESC",,,,,,,,
R.003413,"/*
R.003413

----------

Name: GHW - SENECA Lost item processing fee report
Created by: George H Williams

----------

Group:  SENECA
     -

Created on: 2021-01-26 17:01:42
Modified on: 2021-08-16 13:41:12
Date last run: 2021-03-31 18:01:11

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Identifies borrowers who need to be assessed a $20.00 lost item processing fee at SENECA</p>
<ul><li>Shows borrowers who borrowed items from SENECA and the item was marked as ""Lost (more than 45 days overdue)"" within the last XX days</li>
<li>Shows items checked out at SENECA regardless of the item's home library</li>
<li>grouped by the issue_id of the checkout</li>
<li>sorted by the date the item was lost</li>
<li>contains links to the item and links to the borrower</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Notes go here.</p>
<p></p>
<p>Should not be exported to a csv file.  This is customized to be run from the screen.</p>
<p class= ""notetags"" style=""display: none;"">#seneca, processing fee, </p>
</div>

----------
*/

","SELECT
  Concat(
    '<a class= ""clicked"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', 
    item_info.biblionumber, 
    '\"" target=""_blank"">', 
    item_info.biblionumber, 
    '</a>'
  ) AS LINK_TO_ITEM,
  item_info.LOST_ON_DATE,
  Concat_Ws('<br />', 
    Concat(
      '<a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
      borrowers.borrowernumber, 
      '"" target=""_blank"">Go to patron account</a>'
    ),
    borrowers.cardnumber, 
    If(
      borrowers.othernames = '', 
      Concat(borrowers.surname, ', ', borrowers.firstname), 
      Concat(borrowers.surname, ', ',borrowers.firstname, ' (', borrowers.othernames, ')')
    ),
    borrowers.borrowernumber
  ) AS BORROWER,
  Concat_Ws(' &lt;br &#47;&gt;&lt;br &#47;&gt; ', 
    'LOST ITEM PROCESSING FEE: ', 
    Concat('Item barcode: ', item_info.barcode), 
    Concat('Owned by: ', item_info.homebranch),
    Concat('Location: ', item_info.PERM_LOCATION), 
    Concat('Item type: ', item_info.ITEM_TYPE), 
    Concat('Collection: ', item_info.COLLECTION_CODE),
    Concat('Call number: ', item_info.itemcallnumber), 
    Concat('Author: ', item_info.author), 
    Concat('Title: ', item_info.FULL_TITLE),
    Concat('Due date: ', old_checkouts.ORIGINAL_DUE_DATE), 
    Concat('Lost on: ', item_info.LOST_ON_DATE, '&lt;br &#47;&gt;&lt;br &#47;&gt;')
  ) AS FEE_NOTE
FROM
  (SELECT
     old_issues.itemnumber,
     Concat_Ws('-', 
       Year(old_issues.timestamp),
       LPad(Month(old_issues.timestamp), 2, 0), 
       LPad(Day(old_issues.timestamp), 2, 0)
     ) AS LOST_DATE,
     Concat_Ws('-', 
       Year(old_issues.date_due), 
       LPad(Month(old_issues.date_due), 2, 0), 
       LPad(Day(old_issues.date_due), 2, 0)
     ) AS ORIGINAL_DUE_DATE,
     old_issues.borrowernumber,
     old_issues.branchcode
   FROM
     old_issues
   WHERE
     old_issues.branchcode = 'SENECA') old_checkouts JOIN
  (SELECT
     items.biblionumber,
     items.itemnumber,
     items.barcode,
     items.homebranch,
     permanent_location.lib AS PERM_LOCATION,
     location.lib AS LOCATION,
     itypes.description AS ITEM_TYPE,
     collectioncodes.lib AS COLLECTION_CODE,
     items.itemcallnumber,
     biblio.author,
     Concat_Ws("" "", 
       biblio.title, 
       ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
       ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
       ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
       ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')
     ) AS FULL_TITLE,
     Concat_Ws('-', 
       Year(items.itemlost_on), 
       LPad(Month(items.itemlost_on), 2, 0), 
       LPad(Day(items.itemlost_on), 2, 0)
     ) AS LOST_ON_DATE
   FROM
     items JOIN
     biblio ON items.biblionumber = biblio.biblionumber JOIN
     biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
     LEFT JOIN
     (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'LOC') permanent_location ON
         permanent_location.authorised_value = items.permanent_location
     LEFT JOIN
     (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'LOC') location ON
         location.authorised_value = items.location LEFT JOIN
     (SELECT
        itemtypes.itemtype,
        itemtypes.description
      FROM
        itemtypes) itypes ON itypes.itemtype = items.itype LEFT JOIN
     (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'CCODE') collectioncodes ON
         collectioncodes.authorised_value = items.ccode
   WHERE
     items.itemlost = 2) item_info ON item_info.itemnumber =
      old_checkouts.itemnumber AND
      item_info.LOST_ON_DATE = old_checkouts.LOST_DATE JOIN
  borrowers ON borrowers.borrowernumber = old_checkouts.borrowernumber
WHERE
  item_info.LOST_ON_DATE > (Now() - INTERVAL <<Only display items lost in the previous XX days|YNUMBER>> DAY)
GROUP BY
  old_checkouts.itemnumber
ORDER BY
  item_info.LOST_ON_DATE DESC",,,,,,,,
R.003415,"/*
R.003415

----------

Name: GHW - Flexible shelflist for specific item barcode numbers
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-02-01 10:32:30
Modified on: 2021-02-01 10:43:18
Date last run: 2022-08-05 10:35:16

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Generates a list of items on in the catalog by list of item barcode numbers</p>
<ul><li>Shows data regarding the supplied barcode numbers at the time the report was run</li>
<li>based on the home library of the item barcode numbers provided</li>
<li>grouped by item number, item type description, and collection code description</li>
<li>sorted by the normal Next Search Catalog classification scheme</li>
<li>links to the bibliographic record for each biblionumber and the edit item page for each item number</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>To run, ask nexthelp@nekls.org to set up the report for you -- you will need to supply a text file containing the barcode numbers of all of the items you wish to appear in the results</p>
<p>Currently set up for Kelly at PAOLA based on a list of 250 barcode numbers submitted on February 1, 2021.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3415&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">tag goes here</p>
</div>

----------
*/

","SELECT
  Concat(
    '<a class= ""clicked"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', 
    items.biblionumber, 
    '\"" target=""_blank"">', 
    items.biblionumber, 
    '</a>'
  ) AS LINK_TO_TITLE,
  items.biblionumber,
  items.itemnumber AS ITEM_NUMBER,
  Concat(""-"", Coalesce(items.barcode, ""-""), ""-"") AS BARCODE,
  items.homebranch,
  items.holdingbranch,
  Coalesce(items.permanent_location, ""-"") AS PERMANENT_LOCATION,
  Coalesce(items.location, ""-"") AS LOCATION,
  Coalesce(itypes.description, ""-"") AS ITYPE,
  Coalesce(ccodes.lib, ""-"") AS CCODE,
  items.itemcallnumber,
  biblio.author,
  Concat_Ws("" "", 
    biblio.title, 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')
  ) AS FULL_TITLE,
  biblioitems.publicationyear,
  items.dateaccessioned,
  items.datelastborrowed,
  items.datelastseen,
  items.issues,
  items.renewals,
  Sum((Coalesce(items.issues, 0)) + (Coalesce(items.renewals, 0))) AS
  CHECKOUTS_PLUS_RENEWALS,
  If(items.onloan IS NULL, 'No', 'Yes') AS CHECKED_OUT,
  If(
    Sum(
      Coalesce(items.damaged, 0) + 
      Coalesce(items.itemlost, 0) +  
      Coalesce(items.withdrawn, 0)
    ) = 0, 
    'No', 
    'Yes'
  ) AS STATUS_PROBLEMS,
  If(notloan.authorised_value = 0, ""-"", notloan.lib) AS NOT_FOR_LOAN,
  items.itemnotes,
  items.itemnotes_nonpublic,
  items.copynumber,
  items.replacementprice,
  localcounts.Count_itemnumber AS LOCAL_COPIES,
  systemcounts.Count_itemnumber AS SYSTEM_COPIES,
  Concat(
    '<a class= ""clicked"" href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=', 
    items.biblionumber, 
    '&itemnumber=', 
    items.itemnumber, 
    '#edititem\"" target=""_blank"">Edit item</a>'
  ) AS EDIT_ITEM
FROM
  items JOIN
  biblio ON items.biblionumber = biblio.biblionumber JOIN
  biblio_metadata ON items.biblionumber = biblio_metadata.biblionumber JOIN
  biblioitems ON items.biblioitemnumber = biblioitems.biblioitemnumber JOIN
  (SELECT
      items.biblionumber,
      items.homebranch,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    GROUP BY
      items.biblionumber,
      items.homebranch) localcounts ON items.biblionumber =
      localcounts.biblionumber AND
      items.homebranch = localcounts.homebranch JOIN
  (SELECT
      items.biblionumber,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    GROUP BY
      items.biblionumber) systemcounts ON items.biblionumber =
      systemcounts.biblionumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'NOT_LOAN'
    GROUP BY
      authorised_values.category,
      authorised_values.authorised_value) notloan ON notloan.authorised_value =
      items.notforloan LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      items.ccode LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itypes ON itypes.itemtype = items.itype
WHERE
  items.barcode = ""0003047003668"" OR
  items.barcode = ""0003047003774"" OR
  items.barcode = ""0003047003667"" OR
  items.barcode = ""0003047008869"" OR
  items.barcode = ""0003047003765"" OR
  items.barcode = ""0003047003766"" OR
  items.barcode = ""0003047003775"" OR
  items.barcode = ""0003047003800"" OR
  items.barcode = ""0003047003788"" OR
  items.barcode = ""0003047003799"" OR
  items.barcode = ""0003047003794"" OR
  items.barcode = ""0003047003787"" OR
  items.barcode = ""0003047003791"" OR
  items.barcode = ""0003047003783"" OR
  items.barcode = ""0003047003784"" OR
  items.barcode = ""0003047003803"" OR
  items.barcode = ""0003047003801"" OR
  items.barcode = ""0003047003793"" OR
  items.barcode = ""0003047003786"" OR
  items.barcode = ""0003047003796"" OR
  items.barcode = ""0003047004917"" OR
  items.barcode = ""0003047004918"" OR
  items.barcode = ""0003047004919"" OR
  items.barcode = ""0003047004922"" OR
  items.barcode = ""0003047004926"" OR
  items.barcode = ""0003047004127"" OR
  items.barcode = ""0003047004128"" OR
  items.barcode = ""0003047004129"" OR
  items.barcode = ""0003047004146"" OR
  items.barcode = ""0003047005776"" OR
  items.barcode = ""0003047005777"" OR
  items.barcode = ""0003047005778"" OR
  items.barcode = ""0003047005779"" OR
  items.barcode = ""0003047005137"" OR
  items.barcode = ""0003047005141"" OR
  items.barcode = ""0003047005780"" OR
  items.barcode = ""0003047005133"" OR
  items.barcode = ""0003047005886"" OR
  items.barcode = ""0003047030005"" OR
  items.barcode = ""0003047008918"" OR
  items.barcode = ""0003047008914"" OR
  items.barcode = ""0003047008926"" OR
  items.barcode = ""0003047009083"" OR
  items.barcode = ""0003047030013"" OR
  items.barcode = ""0003047009099"" OR
  items.barcode = ""0003047009288"" OR
  items.barcode = ""0003047009095"" OR
  items.barcode = ""0003047009466"" OR
  items.barcode = ""0003047009478"" OR
  items.barcode = ""0003047009481"" OR
  items.barcode = ""0003047009474"" OR
  items.barcode = ""0003047009438"" OR
  items.barcode = ""0003047009470"" OR
  items.barcode = ""0003047009064"" OR
  items.barcode = ""0003047009284"" OR
  items.barcode = ""0003047009056"" OR
  items.barcode = ""0003047009280"" OR
  items.barcode = ""0003047009060"" OR
  items.barcode = ""0003047009222"" OR
  items.barcode = ""0003047009218"" OR
  items.barcode = ""0003047009226"" OR
  items.barcode = ""0003047005713"" OR
  items.barcode = ""0003047005625"" OR
  items.barcode = ""0003047006004"" OR
  items.barcode = ""0003047006007"" OR
  items.barcode = ""0003047006006"" OR
  items.barcode = ""0003047005830"" OR
  items.barcode = ""0003047006031"" OR
  items.barcode = ""0003047006076"" OR
  items.barcode = ""0003047006068"" OR
  items.barcode = ""0003047006035"" OR
  items.barcode = ""0003047005611"" OR
  items.barcode = ""0003047005612"" OR
  items.barcode = ""0003047005615"" OR
  items.barcode = ""0003047005614"" OR
  items.barcode = ""0003047005613"" OR
  items.barcode = ""0003047005626"" OR
  items.barcode = ""0003047003266"" OR
  items.barcode = ""0003047000763"" OR
  items.barcode = ""0003047002408"" OR
  items.barcode = ""0003047000788"" OR
  items.barcode = ""0003047005657"" OR
  items.barcode = ""0003047005661"" OR
  items.barcode = ""0003047005796"" OR
  items.barcode = ""0003047005877"" OR
  items.barcode = ""0003047005792"" OR
  items.barcode = ""0003047004823"" OR
  items.barcode = ""0003047004843"" OR
  items.barcode = ""0003047004835"" OR
  items.barcode = ""0003047003720"" OR
  items.barcode = ""0003047004400"" OR
  items.barcode = ""0003047004533"" OR
  items.barcode = ""0003047004596"" OR
  items.barcode = ""0003047005447"" OR
  items.barcode = ""0003047005454"" OR
  items.barcode = ""0003047005455"" OR
  items.barcode = ""0003047005473"" OR
  items.barcode = ""0003047005488"" OR
  items.barcode = ""0003047005489"" OR
  items.barcode = ""0003047005510"" OR
  items.barcode = ""0003047007275"" OR
  items.barcode = ""0003047007317"" OR
  items.barcode = ""0003047008828"" OR
  items.barcode = ""0003047008827"" OR
  items.barcode = ""0003047008826"" OR
  items.barcode = ""0003047008829"" OR
  items.barcode = ""0003047008830"" OR
  items.barcode = ""0003047008832"" OR
  items.barcode = ""0003047008831"" OR
  items.barcode = ""0003047003309"" OR
  items.barcode = ""0003047003298"" OR
  items.barcode = ""0003047003302"" OR
  items.barcode = ""0003047009111"" OR
  items.barcode = ""0003047009165"" OR
  items.barcode = ""0003047009181"" OR
  items.barcode = ""0003047009359"" OR
  items.barcode = ""0003047009358"" OR
  items.barcode = ""0003047009366"" OR
  items.barcode = ""0003047009362"" OR
  items.barcode = ""0003047009347"" OR
  items.barcode = ""0003047010509"" OR
  items.barcode = ""0003047009355"" OR
  items.barcode = ""0003047009351"" OR
  items.barcode = ""0003047009370"" OR
  items.barcode = ""0003047009374"" OR
  items.barcode = ""0003047009386"" OR
  items.barcode = ""0003047009378"" OR
  items.barcode = ""0003047009382"" OR
  items.barcode = ""0003047009343"" OR
  items.barcode = ""0003047009130"" OR
  items.barcode = ""0003047009131"" OR
  items.barcode = ""0003047009133"" OR
  items.barcode = ""0003047009304"" OR
  items.barcode = ""0003047009581"" OR
  items.barcode = ""0003047009583"" OR
  items.barcode = ""0003047009586"" OR
  items.barcode = ""0003047009584"" OR
  items.barcode = ""0003047001801"" OR
  items.barcode = ""0003047009448"" OR
  items.barcode = ""0003047009483"" OR
  items.barcode = ""0003047009467"" OR
  items.barcode = ""0003047009471"" OR
  items.barcode = ""0003047009479"" OR
  items.barcode = ""0003047009440"" OR
  items.barcode = ""0003047009543"" OR
  items.barcode = ""0003047009539"" OR
  items.barcode = ""0003047009685"" OR
  items.barcode = ""0003047009704"" OR
  items.barcode = ""0003047009705"" OR
  items.barcode = ""0003047009703"" OR
  items.barcode = ""0003047009709"" OR
  items.barcode = ""0003047009711"" OR
  items.barcode = ""0003047009715"" OR
  items.barcode = ""0003047009708"" OR
  items.barcode = ""0003047009717"" OR
  items.barcode = ""0003047009718"" OR
  items.barcode = ""0003047009747"" OR
  items.barcode = ""0003047009760"" OR
  items.barcode = ""0003047009895"" OR
  items.barcode = ""0003047009898"" OR
  items.barcode = ""0003047009900"" OR
  items.barcode = ""0003047009896"" OR
  items.barcode = ""0003047009902"" OR
  items.barcode = ""0003047009903"" OR
  items.barcode = ""0003047009906"" OR
  items.barcode = ""0003047009892"" OR
  items.barcode = ""0003047009904"" OR
  items.barcode = ""0003047009899"" OR
  items.barcode = ""0003047009907"" OR
  items.barcode = ""0003047009911"" OR
  items.barcode = ""0003047009912"" OR
  items.barcode = ""0003047009986"" OR
  items.barcode = ""0003047003357"" OR
  items.barcode = ""0003047003353"" OR
  items.barcode = ""0003047003292"" OR
  items.barcode = ""0003047009521"" OR
  items.barcode = ""0003047009510"" OR
  items.barcode = ""0003047009494"" OR
  items.barcode = ""0003047009745"" OR
  items.barcode = ""0003047009506"" OR
  items.barcode = ""0003047004034"" OR
  items.barcode = ""0003047001089"" OR
  items.barcode = ""0003047009649"" OR
  items.barcode = ""0003047000862"" OR
  items.barcode = ""0003047010256"" OR
  items.barcode = ""0003047010262"" OR
  items.barcode = ""0003047010638"" OR
  items.barcode = ""0003047010669"" OR
  items.barcode = ""0003047007056"" OR
  items.barcode = ""0003047007046"" OR
  items.barcode = ""0003047000868"" OR
  items.barcode = ""0003047001956"" OR
  items.barcode = ""0003047001957"" OR
  items.barcode = ""0003047002062"" OR
  items.barcode = ""0003047031007"" OR
  items.barcode = ""0003047031920"" OR
  items.barcode = ""0003047001944"" OR
  items.barcode = ""0003047034873"" OR
  items.barcode = ""0003047001988"" OR
  items.barcode = ""0003047002023"" OR
  items.barcode = ""0003047007456"" OR
  items.barcode = ""0003047024778"" OR
  items.barcode = ""0003047014040"" OR
  items.barcode = ""0003047014050"" OR
  items.barcode = ""0003047014067"" OR
  items.barcode = ""0003047014142"" OR
  items.barcode = ""0003047014973"" OR
  items.barcode = ""0003047014993"" OR
  items.barcode = ""0003047014999"" OR
  items.barcode = ""0003047015000"" OR
  items.barcode = ""0003047015097"" OR
  items.barcode = ""0003047015096"" OR
  items.barcode = ""0003047015165"" OR
  items.barcode = ""0003047015166"" OR
  items.barcode = ""0003047015364"" OR
  items.barcode = ""0003047015360"" OR
  items.barcode = ""0003047015437"" OR
  items.barcode = ""0003047015450"" OR
  items.barcode = ""0003047016945"" OR
  items.barcode = ""0003047016897"" OR
  items.barcode = ""0003047016894"" OR
  items.barcode = ""0003047016895"" OR
  items.barcode = ""0003047017277"" OR
  items.barcode = ""0003047017261"" OR
  items.barcode = ""0003047020658"" OR
  items.barcode = ""0003047017427"" OR
  items.barcode = ""0003047026475"" OR
  items.barcode = ""0003047026435"" OR
  items.barcode = ""0003047026985"" OR
  items.barcode = ""0003047027149"" OR
  items.barcode = ""0003047027249"" OR
  items.barcode = ""0003047027253"" OR
  items.barcode = ""0003047027385"" OR
  items.barcode = ""0003047027397"" OR
  items.barcode = ""0003047027342"" OR
  items.barcode = ""0003047027321"" OR
  items.barcode = ""0003047027322"" OR
  items.barcode = ""0003047027338"" OR
  items.barcode = ""0003047028524"" OR
  items.barcode = ""0003047028390"" OR
  items.barcode = ""0003047028289"" OR
  items.barcode = ""0003047028382"" OR
  items.barcode = ""0003047027382"" OR
  items.barcode = ""0003047027399"" OR
  items.barcode = ""0003047027467"" OR
  items.barcode = ""0003047027956"" OR
  items.barcode = ""0003047006296"" OR
  items.barcode = ""0003047006083"" OR
  items.barcode = ""0003047006084"" OR
  items.barcode = ""0003047028520"" 
GROUP BY
  items.itemnumber,
  itypes.description,
  ccodes.lib
ORDER BY
  items.homebranch,
  LOCATION,
  ITYPE,
  CCODE,
  items.itemcallnumber,
  biblio.author,
  biblio.title",,,,,,,,
R.003416,"/*
R.003416

----------

Name: GHW - Multiple items on a bibliographic record
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-02-01 11:35:59
Modified on: 2021-02-01 12:11:44
Date last run: 2022-05-26 10:02:22

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat(
    '<a class= ""clicked"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', 
    items.biblionumber, 
    '\"" target=""_blank"">', 
    items.biblionumber, 
    '</a>'
  ) AS LINK_TO_TITLE,
  biblio.biblionumber,
  items.itemnumber,
  items.homebranch AS HOME,
  items.holdingbranch,
  If(
    items.permanent_location = items.location, 
    permlocationss.lib,
    Concat(permlocationss.lib, ' (', locationss.lib, ')')
  ) AS LOCATION,
  itypess.description AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber,
  biblio.author,
  Concat_Ws("" "", 
    biblio.title, 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),  
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),  
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),  
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')
  ) AS FULL_TITLE
FROM
  biblio JOIN
  biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber JOIN
  items ON items.biblionumber = biblio.biblionumber JOIN
  (SELECT
      items.biblionumber,
      items.homebranch,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    GROUP BY
      items.biblionumber,
      items.homebranch
    HAVING
      Count(items.itemnumber) > 1) itemcountss ON itemcountss.biblionumber =
      items.biblionumber AND
      itemcountss.homebranch = items.homebranch LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') permlocationss ON
      permlocationss.authorised_value = items.permanent_location LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') locationss ON
      locationss.authorised_value = items.location LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itypess ON itypess.itemtype = items.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE') ccodes ON ccodes.authorised_value =
      items.ccode
WHERE
  items.homebranch LIKE <<Item home library|ZBRAN>> AND
  items.permanent_location LIKE <<Item permanent location|LLOC>> AND
  items.itype LIKE <<Item type|LITYPES>> AND
  items.ccode LIKE <<Item collection code|LCCODE>>
GROUP BY
  biblio.biblionumber,
  items.itemnumber
ORDER BY
  HOME,
  ITYPE,
  CCODE,
  items.itemcallnumber,
  biblio.author,
  FULL_TITLE",,,,,,,,
R.003417,"/*
R.003417

----------

Name: GHW ADMINREPORT - replace 3333
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-02-03 11:36:54
Modified on: 2021-02-03 14:04:18
Date last run: 2021-02-03 14:03:51

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat_Ws(""<br />&#160;&#160;&#160;&#160;&#160;"", 
    clubs.name,
    branches.branchname, 
    club_templates.name
  ) AS CLUB_NAME,
  Concat_WS(""<br />"",
    liaisons.LIAISON,
    leaders.LEADER,
    frequencys.FREQUENCY,
    urls.URL,
    Concat(
      ""Number of members: "", 
      counts.Count_borrowernumber
    )
  ) AS CLUB_INFO,
  CONCAT(
    '<a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3335&phase=Run+this+report&param_name=Enter+club+ID+number&sql_params=', 
    clubs.id, 
    '"" target=""_blank"">Link to club roster for club members</a>'
  ) AS LINK_TO_ROSTER
FROM
  clubs JOIN
  club_templates ON clubs.club_template_id = club_templates.id  JOIN
  branches ON clubs.branchcode = branches.branchcode LEFT JOIN
  (SELECT
     club_fields.club_id,
     Concat_Ws("": "", 
       club_template_fields.name, 
       Coalesce(club_fields.value, ""-"")
     ) AS LIAISON,
     club_fields.club_template_field_id
   FROM
     club_fields  JOIN
     club_template_fields ON club_fields.club_template_field_id =
         club_template_fields.id
   WHERE
     (club_fields.club_template_field_id = 1 OR
         club_fields.club_template_field_id = 5)
   ORDER BY
     club_fields.club_id) liaisons ON liaisons.club_id = clubs.id LEFT JOIN
  (SELECT
     club_fields.club_id,
     Concat_Ws("": "", 
       club_template_fields.name, 
       Coalesce(club_fields.value, ""-"")
     ) AS LEADER,
     club_fields.club_template_field_id
   FROM
     club_fields JOIN
     club_template_fields ON club_fields.club_template_field_id =
         club_template_fields.id
   WHERE
     (club_fields.club_template_field_id = 2 OR
         club_fields.club_template_field_id = 6)
   ORDER BY
     club_fields.club_id) leaders ON leaders.club_id = clubs.id LEFT JOIN
  (SELECT
     club_fields.club_id,
     Concat_Ws("": "", 
       club_template_fields.name, 
       Coalesce(club_fields.value, ""-"")
     ) AS FREQUENCY,
     club_fields.club_template_field_id
   FROM
     club_fields JOIN
     club_template_fields ON club_fields.club_template_field_id =
         club_template_fields.id
   WHERE
     (club_fields.club_template_field_id = 3 OR
         club_fields.club_template_field_id = 7)
   ORDER BY
     club_fields.club_id) frequencys ON frequencys.club_id = clubs.id LEFT JOIN
  (SELECT
     club_fields.club_id,
     Concat_Ws("": "", 
       club_template_fields.name, 
       Coalesce(club_fields.value, ""-"")
     ) AS URL,
     club_fields.club_template_field_id
   FROM
     club_fields JOIN
     club_template_fields ON club_fields.club_template_field_id =
         club_template_fields.id
   WHERE
     (club_fields.club_template_field_id = 4 OR
         club_fields.club_template_field_id = 8)
   ORDER BY
     club_fields.club_id) urls ON urls.club_id = clubs.id LEFT JOIN
  (SELECT
     club_enrollments.club_id,
     Count(DISTINCT club_enrollments.borrowernumber) AS Count_borrowernumber
   FROM
     club_enrollments
   GROUP BY
     club_enrollments.club_id) counts ON counts.club_id = clubs.id
WHERE
  clubs.branchcode LIKE <<Choose your library|ZBRAN>>
GROUP BY
  liaisons.LIAISON,
  leaders.LEADER,
  frequencys.FREQUENCY,
  urls.URL,
  clubs.id
ORDER BY
  branches.branchname,
  clubs.name",,,,,,,,
R.003418,"/*
R.003418

----------

Name: GHW - A1 Monthly overview - Items and holdings  - Next Search Catalog
Created by: George H Williams

----------

Group: Statistics
     2022 beginning of month statistics

Created on: 2021-02-04 16:34:33
Modified on: 2022-03-10 14:59:30
Date last run: 2022-10-01 00:05:02

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint> 
<p>Monthly overview - collection statistics</p> 
<ul><li>Shows item and holding counts for the previous calendar month</li> 
<li>At all Next Search Catalog libraries</li> 
<li>grouped and sorted by branch name</li> 
</ul><br /> 
<p><ins>Notes:</ins></p> 
<p></p> 
<p>Generates data for:</p> 
<ul> 
  <li>START_I = number of items owned on the first of the month</li> 
  <li>END_I = number of items owned on the last day of the month</li> 
  <li>ITEMS_ADD_L_M = items added last month</li> 
  <li>ITEMS_DEL_L_M = items deleted last month</li> 
  <li>TOTAL_HOLDINGS = number of bibliographic records where at least 1 item was held at this library on the first of the month</li> 
</ul> 
<p></p> 
<p class=""updated"">This report and these notes updated on 2022.03.10</p> 
<p></p> 
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3418"">Click here to download as a csv file</a></p> 
<p class= ""notetags"" style=""display: none;"">#monthly #statistics #overview</p> 
<!-- html notes rendered on guided_reports.pl by jquery at https://wiki.koha-community.org/wiki/JQuery_Library#Render_patron_messages_as_HTML_and_in_Report_notes --> 
</div> 

----------
*/

","SELECT 
  branches.branchname AS BRANCH, 
  Coalesce(Sum(DISTINCT START_ITEMS.count), 0) AS START_I, 
  Coalesce(Sum(DISTINCT END_ITEMS.count), 0) AS END_I, 
  Coalesce(Sum(DISTINCT ITEMS_ADDED.count), 0) AS ITEMS_ADD_L_M, 
  Coalesce(ITEMS_DELETED.count, 0) AS ITEMS_DEL_L_M, 
  Coalesce(Sum(DISTINCT TOTAL_HOLDINGS.count), 0) AS TOTAL_HOLDINGS 
FROM 
  branches LEFT JOIN 
    (SELECT 
      items.homebranch, 
      Count(*) AS count 
    FROM 
      items 
    WHERE 
      items.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) 
    GROUP BY 
      items.homebranch 
    UNION 
    SELECT 
      deleteditems.homebranch, 
      Count(*) AS count 
    FROM 
      deleteditems 
    WHERE 
      deleteditems.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) AND 
      deleteditems.timestamp >= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) 
    GROUP BY 
      deleteditems.homebranch 
    ) START_ITEMS 
  ON branches.branchcode = START_ITEMS.homebranch LEFT JOIN 
    (SELECT 
      items.homebranch, 
      Count(*) AS count 
    FROM 
      items 
    WHERE 
      items.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) 
    GROUP BY 
      items.homebranch 
    UNION 
    SELECT 
      deleteditems.homebranch, 
      Count(*) AS count 
    FROM 
      deleteditems 
    WHERE 
      deleteditems.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) AND 
      deleteditems.timestamp >= AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) 
    GROUP BY 
      deleteditems.homebranch 
    ) END_ITEMS 
  ON branches.branchcode = END_ITEMS.homebranch LEFT JOIN 
    (SELECT 
      items.homebranch, 
      Count(*) AS count 
    FROM 
      items 
    WHERE 
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      items.homebranch 
    UNION 
    SELECT 
      deleteditems.homebranch, 
      Count(*) AS count 
    FROM 
      deleteditems 
    WHERE 
      Month(deleteditems.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(deleteditems.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      deleteditems.homebranch 
    ) ITEMS_ADDED 
  ON branches.branchcode = ITEMS_ADDED.homebranch LEFT JOIN 
    (SELECT 
      deleteditems.homebranch, 
      Count(*) AS count 
    FROM 
      deleteditems 
    WHERE 
      Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      deleteditems.homebranch 
    ) ITEMS_DELETED 
  ON branches.branchcode = ITEMS_DELETED.homebranch LEFT JOIN 
    (SELECT 
      items.homebranch, 
      Count(DISTINCT items.biblionumber) AS count 
    FROM 
      items 
    WHERE 
      items.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) 
    GROUP BY 
      items.homebranch 
    UNION 
    SELECT 
      deleteditems.homebranch, 
      Count(DISTINCT deleteditems.biblionumber) AS count 
    FROM 
      deleteditems 
    WHERE 
      deleteditems.dateaccessioned < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) AND 
      deleteditems.timestamp >= AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) 
    GROUP BY 
      deleteditems.homebranch 
    ) TOTAL_HOLDINGS 
  ON branches.branchcode = TOTAL_HOLDINGS.homebranch 
GROUP BY 
  branches.branchname 
ORDER BY 
  BRANCH ",,,,,,,,
R.003419,"/*
R.003419

----------

Name: GHW - A2 Monthly overview - Circulation - Next Search Catalog
Created by: George H Williams

----------

Group: Statistics
     2022 beginning of month statistics

Created on: 2021-02-04 16:59:13
Modified on: 2022-03-10 15:00:29
Date last run: 2022-10-01 00:10:02

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint> 
<p>Monthly overview - circulation statistics</p> 
<ul><li>Shows circulation and renewal counts for the previous calendar month</li> 
<li>At all Next Search Catalog libraries</li> 
<li>grouped and sorted by branch name</li> 
</ul><br /> 
<p><ins>Notes:</ins></p> 
<p></p> 
<p>Generates data for:</p> 
<ul> 
  <li>CHECKOUT_RENEW_LM = all items checked out or renewed at this library last month</li> 
  <li>CHECKOUT_LM = all items checked out at this library last month</li> 
  <li>RENEW_LM = all items renewed at this library last month</li> 
  <li>RETURN_LM = all items returned at this library last month</li> 
  <li>CR_ADULT_LM includes items with these shelving locations:</li> 
  <ul> 
    <li>Adult</li> 
    <li>~Display - BALDWIN - Adult</li> 
    <li>~Display - LEAVENWRTH - Adult</li> 
    <li>~Display - PAOLA - Adult</li> 
    <li>Any situation where the location is recorded as ""Recently returned"" but the item's permanent location is one of these ""Adult"" locations</li> 
  </ul> 
  <li>CR_YOUTH_LM includes items with these shelving locations:</li> 
  <ul> 
    <li>Young adult</li> 
    <li>~Display - BALDWIN - Young Adult</li> 
    <li>~Display - LEAVENWRTH - Young adult</li> 
    <li>~Display - PAOLA - Young adult</li> 
    <li>Any situation where the location is recorded as ""Recently returned"" but the item's permanent location is one of these ""Young adult"" locations</li> 
    <li>Childrens</li> 
    <li>~Display - BALDWIN - Childrens</li> 
    <li>~Display - LEAVENWRTH - Children's</li> 
    <li>~Display - PAOLA - Children's</li> 
    <li>Any situation where the location is recorded as ""Recently returned"" but the item's permanent location is one of these ""Childrens"" locations</li> 
    <li>Cataloging</li> 
    <li>Processing Center</li> 
    <li>Any other situation where the recorded shelving location is ""Recently returned"" but the item's permanent location is ambiguous</li> 
    <li>Any items where the recorded shelving location is blank or unknown</li> 
  </ul> 
</ul> 
<p></p> 
<p class=""updated"">SHELVING_LOCATION is based on the shelving location of the item at the time it was checked out *Unless the item had a ""Recently returned"" shelving location.*  This report falls back to the items' ""Permanent shelving location"" whenever the statistics data shows that the item's shelving location was ""Recently returned.""  If the shelving location is completely ambiguous, the circulation is counted as a ""Youth"" circulation in the CR_YOUTH_LM column.</p> 
<p></p> 
<p class=""updated"">This report and these notes updated on 2022.03.10</p> 
<p></p> 
<p></p> 
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3419"">Click here to download as a csv file</a></p> 
<p class= ""notetags"" style=""display: none;"">#monthly #statistics #overview</p> 
<!-- html notes rendered on guided_reports.pl by jquery at https://wiki.koha-community.org/wiki/JQuery_Library#Render_patron_messages_as_HTML_and_in_Report_notes --> 
</div> 

----------
*/

","SELECT 
  branches.branchname, 
  Coalesce(CIR_RENEW_LM.count, 0) AS CHECKOUT_RENEW_LM, 
  Coalesce(CKO_LM.count, 0) AS CHECKOUT_LM, 
  Coalesce(RENEW_LM.count, 0) AS RENEW_LM, 
  Coalesce(RETURN_LM.count, 0) AS RETURN_LM, 
  Coalesce(ADULT.count, 0) AS CR_ADULT_LM, 
  Coalesce(YOUTH.count, 0) AS CR_YOUTH_LM 
FROM 
  branches LEFT JOIN 
    (SELECT 
      statistics.branch, 
      Count(*) AS count 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      statistics.branch 
    ) CIR_RENEW_LM 
  ON branches.branchcode = CIR_RENEW_LM.branch LEFT JOIN 
    (SELECT 
      statistics.branch, 
      Count(*) AS count 
    FROM 
      statistics LEFT JOIN 
      items ON items.itemnumber = statistics.itemnumber 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      If( 
        Coalesce(statistics.location, ""ADULT"") = ""CART"", 
        items.permanent_location, 
        Coalesce(statistics.location, ""ADULT"") 
      ) LIKE ""%ADULT%"" 
    GROUP BY 
      statistics.branch 
    ) ADULT 
  ON branches.branchcode = ADULT.branch LEFT JOIN 
    (SELECT 
      statistics.branch, 
      Count(*) AS count 
    FROM 
      statistics LEFT JOIN 
      items ON items.itemnumber = statistics.itemnumber 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      If( 
        Coalesce(statistics.location, ""ADULT"") = ""CART"", 
        items.permanent_location, 
        Coalesce(statistics.location, ""ADULT"") 
      ) NOT LIKE ""%ADULT%"" 
    GROUP BY 
      statistics.branch 
    ) YOUTH 
  ON branches.branchcode = YOUTH.branch LEFT JOIN 
    (SELECT 
      statistics.branch, 
      Count(*) AS count 
    FROM 
      statistics 
    WHERE 
      statistics.type = 'issue' AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      statistics.branch 
    ) CKO_LM 
  ON CKO_LM.branch = branches.branchcode LEFT JOIN 
    (SELECT 
      statistics.branch, 
      Count(*) AS count 
    FROM 
      statistics 
    WHERE 
      statistics.type = 'renew' AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      statistics.branch 
    ) RENEW_LM 
  ON RENEW_LM.branch = branches.branchcode 
  LEFT JOIN 
    (SELECT 
      statistics.branch, 
      Count(*) AS count 
    FROM 
      statistics 
    WHERE 
      statistics.type = 'return' AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      statistics.branch 
    ) RETURN_LM 
  ON RETURN_LM.branch = branches.branchcode 
GROUP BY 
  branches.branchname 
ORDER BY 
  branches.branchname ",,,,,,,,
R.003420,"/*
R.003420

----------

Name: GHW - A3 Monthly overview - Borrowers - Next Search Catalog
Created by: George H Williams

----------

Group: Statistics
     2022 beginning of month statistics

Created on: 2021-02-04 17:10:37
Modified on: 2022-03-10 14:58:24
Date last run: 2022-10-01 00:15:02

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint> 
<p>Monthly overview - borrower statistics</p> 
<ul><li>Shows borrower counts for the previous calendar month</li> 
<li>At all Next Search Catalog libraries</li> 
<li>grouped and sorted by branch name</li> 
</ul><br /> 
<p><ins>Notes:</ins></p> 
<p></p> 
<p>Generates data for:</p> 
<ul> 
  <li>BORROWER_ACCT_USED_LM = number of borrower accounts used to check out materials last month</li> 
  <li>TOTAL_BORROWERS = number of total borrowers with this home library</li> 
  <li>B_ADDED_LM = number of borrowers with this home library added last month</li> 
  <li>B_RENEWED_LM = number of borrowers with this home library renewed last month</li> 
  <li>B_DELETED_LM = number of borrowers with this home library deleted last month</li> 
</ul> 
<p></p> 
<p>These counts are current at the time the report is run (which for Next Search Catalog is usually between 12:01 a.m. and 4:00 a.m. on the first day of the month).</p> 
<p></p> 
<p class=""updated"">This report and these notes updated on 2022.03.10</p> 
<p></p> 
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3420"">Click here to download as a csv file</a></p> 
<p class= ""notetags"" style=""display: none;"">#monthly #statistics #overview</p> 
<!-- html notes rendered on guided_reports.pl by jquery at https://wiki.koha-community.org/wiki/JQuery_Library#Render_patron_messages_as_HTML_and_in_Report_notes --> 
</div> 

----------
*/

","SELECT 
  branches.branchname, 
  Coalesce(ACCT_USED.count, 0) AS BORROWER_ACCT_USED_LM, 
  Coalesce(BORROWERS1.COUNT, 0) AS TOTAL_BORROWERS, 
  Coalesce(BORROWERSA.COUNT, 0) AS B_ADDED_LM, 
  Coalesce(BORROWERSR.COUNT, 0) AS B_RENEWED_LM, 
  Coalesce(BORROWESD.COUNT, 0) AS B_DELETED_LM 
FROM 
  branches LEFT JOIN 
    (SELECT 
      borrowers.branchcode, 
      Count(*) AS COUNT 
    FROM 
      borrowers 
    WHERE 
      borrowers.dateenrolled < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) 
    GROUP BY 
      borrowers.branchcode 
    ) BORROWERS1 
  ON branches.branchcode = BORROWERS1.branchcode LEFT JOIN 
    (SELECT 
      borrowers.branchcode, 
      Count(*) AS COUNT 
    FROM 
      borrowers 
    WHERE 
      Month(borrowers.dateenrolled) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(borrowers.dateenrolled) = Year(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      borrowers.branchcode 
    ) BORROWERSA 
  ON branches.branchcode = BORROWERSA.branchcode LEFT JOIN 
    (SELECT 
      deletedborrowers.branchcode, 
      Count(*) AS COUNT 
    FROM 
      action_logs JOIN 
      deletedborrowers ON deletedborrowers.borrowernumber = action_logs.object 
    WHERE 
      action_logs.module = 'MEMBERS' AND 
      Month(action_logs.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(action_logs.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND 
      action_logs.action LIKE 'DELET%' 
    GROUP BY 
      deletedborrowers.branchcode 
    ) BORROWESD 
  ON branches.branchcode = BORROWESD.branchcode LEFT JOIN 
    (SELECT 
      borrowers.branchcode, 
      Count(*) AS COUNT 
    FROM 
      borrowers 
    WHERE 
      Month(borrowers.date_renewed) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(borrowers.date_renewed) = Year(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      borrowers.branchcode 
    ) BORROWERSR 
  ON branches.branchcode = BORROWERSR.branchcode LEFT JOIN 
    (SELECT 
      statistics.branch, 
      Count(DISTINCT statistics.borrowernumber) AS count 
    FROM 
      statistics 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew' OR 
        statistics.type = 'localuse') AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      statistics.branch 
    ) ACCT_USED 
  ON ACCT_USED.branch = branches.branchcode 
GROUP BY 
  branches.branchname 
ORDER BY 
  branches.branchname ",,,,,,,,
R.003421,"/*
R.003421

----------

Name: GHW - A4 Monthly overview - Inter-Next loans and borrows - Next Search Catalog
Created by: George H Williams

----------

Group: Statistics
     2022 beginning of month statistics

Created on: 2021-02-04 17:45:36
Modified on: 2022-03-29 11:43:58
Date last run: 2022-10-01 00:20:01

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint> 
<p>Monthly overview - items loaned to and borrowed from other libraries in Next Search Catalog</p> 
<ul><li>Shows item transfer counts for the previous calendar month</li> 
<li>At all Next Search Catalog libraries</li> 
<li>grouped and sorted by branch name</li> 
</ul><br /> 
<p><ins>Notes:</ins></p> 
<p></p> 
<p>Generates data for:</p> 
<ul> 
  <li>NX_ILL_LOANED_LM = count of items your library loaned to another Next Search Catalog library last month</li> 
  <li>NX_ILL_BORROWED_LM = count of items your library borrowed from another Next Search Catalog library last month</li> 
</ul> 
<p></p> 
<p>These counts are are based on whether you shipped or received an item via the Kansas Library Express courier.  Whether or not the item was actually checked out to a borrower is irrelevant in this count because, whether or not loaned to a borrower, the item was loaned to another library or borrowed from your library.</p> 
<p></p> 
<p class=""updated"">This report and these notes updated on 2022.03.10</p> 
<p></p> 
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3421"">Click here to download as a csv file</a></p> 
<p class= ""notetags"" style=""display: none;"">#monthly #statistics #overview</p> 
<!-- html notes rendered on guided_reports.pl by jquery at https://wiki.koha-community.org/wiki/JQuery_Library#Render_patron_messages_as_HTML_and_in_Report_notes --> 
</div> 

----------
*/

","SELECT 
  branches.branchname, 
  Coalesce(ILL_LOANED.count, 0) AS NX_ILL_LOANED_LM, 
  Coalesce(ILL_BORROWED.count, 0) AS NX_ILL_BORROWED_LM 
FROM 
  branches LEFT JOIN 
    (SELECT 
      items.homebranch, 
      COUNT(*) AS count 
    FROM 
      branchtransfers LEFT JOIN 
      items ON branchtransfers.itemnumber = items.itemnumber 
    WHERE 
      items.homebranch <> branchtransfers.tobranch AND 
      Year(branchtransfers.datesent) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(branchtransfers.datesent) = Month(Now() - INTERVAL 1 MONTH) AND 
      branchtransfers.tobranch <> branchtransfers.frombranch AND 
      branchtransfers.comments IS NULL  AND
      branchtransfers.reason = 'reserve'
    GROUP BY 
      items.homebranch 
    ) ILL_LOANED 
  ON branches.branchcode = ILL_LOANED.homebranch LEFT JOIN 
    (SELECT 
      branchtransfers.tobranch, 
      COUNT(*) AS count 
    FROM 
      branchtransfers LEFT JOIN 
      items ON branchtransfers.itemnumber = items.itemnumber 
    WHERE 
      branchtransfers.tobranch <> items.homebranch AND 
      Month(branchtransfers.datearrived) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(branchtransfers.datearrived) = Year(Now() - INTERVAL 1 MONTH) AND 
      branchtransfers.frombranch <> branchtransfers.tobranch AND 
      branchtransfers.comments IS NULL  AND
      branchtransfers.reason = 'reserve'
    GROUP BY 
      branchtransfers.tobranch 
    ) ILL_BORROWED 
  ON branches.branchcode = ILL_BORROWED.tobranch 
GROUP BY 
  branches.branchname 
ORDER BY 
  branches.branchname ",,,,,,,,
R.003422,"/*
R.003422

----------

Name: GHW - A5 Monthly overview - Biblios total - Next Search Catalog
Created by: George H Williams

----------

Group: Statistics
     2022 beginning of month statistics

Created on: 2021-02-04 21:38:26
Modified on: 2022-03-10 15:02:17
Date last run: 2022-10-01 00:25:01

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint> 
<p>Monthly overview - total number of bibliographic records system-wide</p> 
<ul><li>Shows holdings count for the previous calendar month</li> 
<li>For the entire Next Search Catalog consortium</li> 
</ul><br /> 
<p><ins>Notes:</ins></p> 
<p></p> 
<p>Generates data for:</p> 
<ul> 
  <li>Total items owned on the last day of the month last month</li> 
</ul> 
<p></p> 
<p class=""updated"">This report and these notes updated on 2022.03.10</p> 
<p></p> 
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3422"">Click here to download as a csv file</a></p> 
<p class= ""notetags"" style=""display: none;"">#monthly #statistics #overview</p> 
<!-- html notes rendered on guided_reports.pl by jquery at https://wiki.koha-community.org/wiki/JQuery_Library#Render_patron_messages_as_HTML_and_in_Report_notes --> 
</div> 

----------
*/

","SELECT 
  'Total biblios on last day of last month' AS DESCRIPTION, 
  count(*) AS COUNT 
FROM 
  biblio 
WHERE 
  biblio.datecreated < AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1) ",,,,,,,,
R.003466,"/*
R.003466

----------

Name: GHW - Update bib locations desc
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-02-28 18:30:11
Modified on: 2021-02-28 19:41:52
Date last run: 2021-03-02 10:37:24

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  biblio_metadata.biblionumber,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""e""]') AS LOC
FROM
  biblio_metadata
WHERE
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""e""]') = 'YOUNGADULT'
ORDER BY
  biblio_metadata.biblionumber DESC
LIMIT 999",,,,,,,,
R.003467,"/*
R.003467

----------

Name: GHW - Update asc
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-02-28 19:40:20
Modified on: 2021-03-01 01:48:38
Date last run: 2021-03-01 21:25:27

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  items.itemnumber,
  items.permanent_location,
  items.location
FROM
  items
WHERE
  (items.permanent_location = 'BALDYA') OR
  (items.location = 'BALDYA')
GROUP BY
  items.itemnumber,
  items.permanent_location,
  items.location
LIMIT 1000",,,,,,,,
R.003469,"/*
R.003469

----------

Name: GHW - Synchronize locations
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-03-02 14:45:41
Modified on: 2021-03-02 14:45:41
Date last run: 2022-04-13 09:21:32

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat(
    '<a href=""/cgi-bin/koha/admin/authorised_values.pl?searchfield=', 
    locs.category, 
    '"" target=""_blank"">Link to LOC</a>'
  ) AS LINK_TO_LOC,
  If(
    locs.category IS NULL, 
    ""<span style='background-color: red; color: yellow'>Possible errror</span>"", 
    locs.category
  ) AS CATEGORY,
  locs.authorised_value AS LOC,
  If(
    llocs.category IS NULL, 
    ""<span style='background-color: red; color: yellow'>Possible errror</span>"", 
    llocs.category
  ) AS ALT_CATEGORY,
  Concat(
    '<a href=""/cgi-bin/koha/admin/authorised_values.pl?searchfield=', 
    llocs.category, 
    '"" target=""_blank"">Link to LLOC</a>'
  ) AS LINK_TO_LLOC,
  llocs.authorised_value AS LLOC
FROM
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') locs LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LLOC') llocs ON llocs.authorised_value =
      locs.authorised_value
UNION
SELECT
  Concat(
    '<a href=""/cgi-bin/koha/admin/authorised_values.pl?searchfield=', 
    locsx.category, 
    '"" target=""_blank"">Link to LOC</a>'
  ) AS LINK,
  If(
    locsx.category IS NULL, 
    ""<span style='background-color: red; color: yellow'>Possible errror</span>"", 
    locsx.category
  ) AS category,
  locsx.authorised_value,
  If(
    llocsx.category IS NULL, 
    ""<span style='background-color: red; color: yellow'>Possible errror</span>"", 
    llocsx.category
  ) AS category1,
  Concat(
    '<a href=""/cgi-bin/koha/admin/authorised_values.pl?searchfield=', 
    llocsx.category, 
    '"" target=""_blank"">Link to LLOC</a>'
  ) AS LINK1,
  llocsx.authorised_value AS authorised_value1
FROM
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') locsx RIGHT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LLOC') llocsx ON llocsx.authorised_value =
      locsx.authorised_value
ORDER BY
  LOC,
  LLOC
LIMIT 1000",,,,,,,,
R.003471,"/*
R.003471

----------

Name: GHW - Replacement cost of library materials by Collection Code
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-03-03 15:29:51
Modified on: 2021-03-03 16:04:05
Date last run: 2022-05-24 13:29:29

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows replacement cost of collection</p>
<ul><li>Results are based on materials currently in the catalog</li>
<li>at the library, shelving location, and collection code you specify</li>
<li>grouped and sorted by library, shelving location, and collection code</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report will only return values based on the ""Cost, replacement price"" field in the item record (Marc subfield 952$v).  If no value is entered in this field, the value for that item will be $0.00.  If that field has been incorrectly entered, that incorrect value will be a part of the total.</p><br />
<p>Report 3362 can show you items at your library with a blank or 0 value ""Cost, replacement price"" field: <a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3362&phase=Run%20this%20report"">click here to run report 3362</a></p>

<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3471&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">tag goes here</p>
</div>

----------
*/

","SELECT
  items.homebranch AS LIBRARY,
  locs.lib AS SHELVING_LOCATION,
  ccodes.lib AS COLLECTION_CODE,
  Count(items.itemnumber) AS ITEM_COUNT,
  Coalesce(Sum(items.replacementprice), 0) AS REPLACEMENT_COST
FROM
  items LEFT JOIN
  (SELECT
     authorised_values.category,
     authorised_values.authorised_value,
     authorised_values.lib
   FROM
     authorised_values
   WHERE
     authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      Coalesce(items.ccode, ""XXX"") LEFT JOIN
  (SELECT
     authorised_values.category,
     authorised_values.authorised_value,
     authorised_values.lib
   FROM
     authorised_values
   WHERE
     authorised_values.category = 'loc') locs ON locs.authorised_value =
      Coalesce(items.permanent_location, ""PROC"")
WHERE
  items.homebranch LIKE <<Choose your library|ZBRAN>> AND
  items.permanent_location LIKE <<Choose a permanent shelving location|LLOC>> AND
  items.ccode LIKE <<Choose a collection code|LCCODE>>
GROUP BY
  items.homebranch,
  locs.lib,
  ccodes.lib",,,,,,,,
R.003472,"/*
R.003472

----------

Name: GHW - Replacement cost of library materials by Item Type
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-03-03 15:41:42
Modified on: 2021-03-03 16:03:43
Date last run: 2022-08-23 12:36:27

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows replacement cost of collection</p>
<ul><li>Results are based on materials currently in the catalog</li>
<li>at the library, shelving location, and item type you specify</li>
<li>grouped and sorted by library, shelving location, and item type</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report will only return values based on the ""Cost, replacement price"" field in the item record (Marc subfield 952$v).  If no value is entered in this field, the value for that item will be $0.00.  If that field has been incorrectly entered, that incorrect value will be a part of the total.</p><br />
<p>Report 3362 can show you items at your library with a blank or 0 value ""Cost, replacement price"" field: <a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3362&phase=Run%20this%20report"">click here to run report 3362</a></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3472&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">tag goes here</p>
</div>

----------
*/

","SELECT
  items.homebranch AS LIBRARY,
  locs.lib AS SHELVING_LOCATION,
  itypess.description AS ITEM_TYPE,
  Count(items.itemnumber) AS ITEM_COUNT,
  Coalesce(Sum(items.replacementprice), 0) AS REPLACEMENT_COST
FROM
  items LEFT JOIN
  (SELECT
     authorised_values.category,
     authorised_values.authorised_value,
     authorised_values.lib
   FROM
     authorised_values
   WHERE
     authorised_values.category = 'loc') locs ON locs.authorised_value =
      Coalesce(items.permanent_location, 'PROC') LEFT JOIN
  (SELECT
     itemtypes.itemtype,
     itemtypes.description
   FROM
     itemtypes) itypess ON itypess.itemtype = Coalesce(items.itype, 'XXX')
WHERE
  items.homebranch LIKE <<Choose your library|ZBRAN>> AND
  items.permanent_location LIKE <<Choose a permanent shelving location|LLOC>> AND
  items.itype LIKE <<Choose an item type|LITYPES>>
GROUP BY
  items.homebranch,
  locs.lib,
  itypess.description",,,,,,,,
R.003473,"/*
R.003473

----------

Name: GHW- Median collection age ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-03-04 10:27:13
Modified on: 2021-03-04 20:12:50
Date last run: 2021-03-04 22:26:17

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  items.homebranch,
  biblioitems.publicationyear AS MEDIAN_COLLECTION_AGE
FROM
  biblioitems JOIN
  items ON items.biblioitemnumber = biblioitems.biblioitemnumber
WHERE
  items.homebranch = <<Choose your library|branches>> AND
  biblioitems.publicationyear < Year(Now()) AND
  biblioitems.publicationyear REGEXP '^[0-9]+$'
GROUP BY
  items.homebranch,
  biblioitems.publicationyear,
  items.itemnumber
ORDER BY
  MEDIAN_COLLECTION_AGE",,,,,,,,
R.003474,"/*
R.003474

----------

Name: GHW - ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-03-04 18:30:04
Modified on: 2021-03-04 19:23:30
Date last run: 2021-03-04 22:58:11

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  @1:=""5175"" AS ""expiry year"",
  branches.branchcode,
  Max(Query1.publicationyear) AS MEDIAN_COLLECTION_AGE
FROM
  branches JOIN
  (SELECT
      items.homebranch,
      items.itemnumber,
      biblioitems.publicationyear
    FROM
      biblioitems JOIN
      items ON items.biblioitemnumber = biblioitems.biblioitemnumber
    WHERE
      items.homebranch LIKE <<Choose your library|LBRANCH>> AND
      biblioitems.publicationyear < Year(Now()) AND
      biblioitems.publicationyear REGEXP '^[0-9]+$'
    GROUP BY
      items.homebranch,
      items.itemnumber,
      biblioitems.publicationyear
    ORDER BY
      biblioitems.publicationyear
    ) Query1 ON Query1.homebranch = branches.branchcode
GROUP BY
  branches.branchcode",,,,,,,,
R.003475,"/*
R.003475

----------

Name: GHW - Average age of entire collection with link to Median Age of entire collection
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-03-04 21:44:42
Modified on: 2021-03-24 21:08:11
Date last run: 2022-08-19 09:06:12

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>This report helps calculate the average age of a library's entire collection based on the publication year listed in the biblioitems.publicationyear field for that item's bibliographic record</p>
<ul><li>It helps make the calculation on items currently in the collection</li>
<li>at the library you specify</li>
<li>grouped and sorted by library, total item count, count of items with biblioitems.publicationyear data</li>
<li>contains links to report 3476 which calculates the same collection's median age</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>The statistical average age is calculated by calculating the sum of the biblioitems.publicationyear and dividing that number by the count of items with data in biblioitems.publicationyear and rounding that number down to 0 decimal places.</p>
<p></p>
<p>Bibliographic records which contain incorrect, incomplete, or incompatible data in the biblioitems.publicationyear field are not counted when calculating this data.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3475&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">collection statistics, median age, weeding</p>
</div>

----------
*/

","SELECT
  branches.branchcode,
  count_total.Count_itemnumber AS ITEMS_COUNT_TOTAL,
  count_with_pubyear.Count_itemnumber AS ITEMS_COUNT_W_PUBYEAR,
  FLOOR(Avg(average_age.publicationyear)) AS AVERAGE_AGE,
  Concat(
    '<a href=\""/cgi-bin/koha/reports/guided_reports.pl?reports=3476&phase=Run+this+report&param_name=Choose+your+library%7Cbranches&sql_params=', 
    branches.branchcode, 
    '&param_name=Enter+row+number&sql_params=',
    Floor(count_with_pubyear.Count_itemnumber / 2),
    '"" target=""_blank"">', 
    'Link to median age report', 
    '</a>'
  ) AS LINK_TO_MEDIAN_AGE
FROM
  branches LEFT JOIN
  (SELECT
     items.homebranch,
     Count(DISTINCT items.itemnumber) AS Count_itemnumber
   FROM
     items
   GROUP BY
     items.homebranch) count_total ON count_total.homebranch =
      branches.branchcode LEFT JOIN
  (SELECT
     items.homebranch,
     Count(DISTINCT items.itemnumber) AS Count_itemnumber
   FROM
     biblioitems JOIN
     items ON items.biblioitemnumber = biblioitems.biblioitemnumber
   WHERE
     biblioitems.publicationyear < Year(Now()) AND
     biblioitems.publicationyear REGEXP '^[0-9]+$'
   GROUP BY
     items.homebranch) count_with_pubyear ON count_with_pubyear.homebranch =
      branches.branchcode LEFT JOIN
  (SELECT
     items.homebranch,
     items.itemnumber,
     biblioitems.publicationyear
   FROM
     biblioitems JOIN
     items ON items.biblioitemnumber = biblioitems.biblioitemnumber
   WHERE
     biblioitems.publicationyear < Year(Now()) AND
     biblioitems.publicationyear REGEXP '^[0-9]+$'
   GROUP BY
     items.homebranch,
     items.itemnumber,
     biblioitems.publicationyear) average_age ON average_age.homebranch =
      branches.branchcode
WHERE
  branches.branchcode LIKE <<Choose your library|ZBRAN>>
GROUP BY
  branches.branchcode,
  count_total.Count_itemnumber,
  count_with_pubyear.Count_itemnumber
LIMIT 1000",,,,,,,,
R.003476,"/*
R.003476

----------

Name: GHW - Median age of entire collection (see instructions)
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-03-04 22:39:07
Modified on: 2021-03-24 23:35:55
Date last run: 2022-08-19 09:12:17

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<h3>This report cannot be run on its own.  You must run report 3475 and then click the link to trigger a meaningful result from this report</h3><br />
<p>This report helps calculate the median age of a library's entire collection based on the publication year listed in the biblioitems.publicationyear field for that item's bibliographic record</p>
<ul><li>It helps make the calculation on items currently in the collection</li>
<li>at the library you specify</li>
<li>grouped by item number and biblioitems.publicationyear</li>
<li>sorted by biblioitems.publicationyear</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>The statistical median age is calculated by listing the publication year of every item in a collection by publication year in order by publication year and then picking the publication year at the list's midpoint.</p>
<p></p>
<p>This report is designed to be run from report 3475.  Running report 3475 calculates the number of items for that collection with numeric data in biblioitems.publicationyear.  By clicking on the link in that report to run this one, you're telling that report to look at the middle row of this report, which should give you the statistical median age for the items in the same collection .</p>
<p></p>
<p>Bibliographic records which contain incorrect, incomplete, or incompatible data in the biblioitems.publicationyear field are not counted when calculating this data.</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">collection statistics, median age, weeding</p>
</div>

----------
*/

","SELECT
  (@row_number := @row_number + 1) AS ROW_NUM,
  MEDIAN_AGE.homebranch,
  MEDIAN_AGE.MEDIAN_COLLECTION_AGE
FROM
  (SELECT
     items.homebranch,
     biblioitems.publicationyear AS MEDIAN_COLLECTION_AGE,
     items.itemnumber
   FROM
     biblioitems JOIN
     items ON items.biblioitemnumber = biblioitems.biblioitemnumber
   WHERE
     items.homebranch = <<Choose your library|branches>> AND
     biblioitems.publicationyear < Year(Now()) AND
     biblioitems.publicationyear REGEXP '^[0-9]+$'
   GROUP BY
     items.homebranch,
     biblioitems.publicationyear,
     items.itemnumber
   ORDER BY
     MEDIAN_COLLECTION_AGE) MEDIAN_AGE,
  (SELECT
     @row_number := 0) t
GROUP BY
  MEDIAN_AGE.itemnumber,
  MEDIAN_AGE.homebranch,
  MEDIAN_AGE.MEDIAN_COLLECTION_AGE
HAVING
  ROW_NUM = <<Enter row number>>
ORDER BY
  MEDIAN_AGE.MEDIAN_COLLECTION_AGE ASC
",,,,,,,,
R.003477,"/*
R.003477

----------

Name: GHW - ADMINREPORT Average age of collection by permanent location
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-03-05 13:31:21
Modified on: 2021-03-25 01:49:45
Date last run: 2021-03-25 01:44:04

----------

Public: 0
Expiry: 300

----------

In progress

----------
*/

","SELECT
  branches_locations.branchcode,
  branches_locations.LOCATION_DESCRIPTION,
  count_total.Count_itemnumber AS ITEMS_COUNT_TOTAL,
  count_with_pubyear.Count_itemnumber AS ITEMS_COUNT_W_PUBYEAR,
  floor(Avg(average_age.publicationyear)) AS Avg_publicationyear
FROM
  (SELECT
      branches.branchcode,
      locations.lib AS LOCATION_DESCRIPTION,
      locations.category AS LOCATION_CATEGORY,
      locations.authorised_value AS LOCATION_CODE
    FROM
      branches,
      authorised_values locations
    WHERE
      locations.category = 'bibloc' AND
      locations.authorised_value <> 'YOUNGADULT' AND
      branches.branchcode LIKE <<Choose your library|ZBRAN>>) branches_locations LEFT JOIN
  (SELECT
      items.homebranch,
      Count(DISTINCT items.itemnumber) AS Count_itemnumber,
      If(items.permanent_location LIKE ""%YA%"", ""L_YA"",
        If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
          If(items.permanent_location LIKE ""%ADULT%"", ""ADULT"",
            If(items.permanent_location LIKE ""%PROC%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CART%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CATALOGING%"", ""L_YA"", items.permanent_location)
              )
            )
          )
        )
      ) AS LOCATION
    FROM
      items
    WHERE
      items.homebranch LIKE <<Choose your library|ZBRAN>> AND
      If(items.permanent_location LIKE ""%YA%"", ""L_YA"",
        If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
          If(items.permanent_location LIKE ""%ADULT%"", ""ADULT"",
            If(items.permanent_location LIKE ""%PROC%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CART%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CATALOGING%"", ""L_YA"", items.permanent_location)
              )
            )
          )
        )
      ) LIKE <<Choose a shelving location|lbibloc>>
    GROUP BY
      items.homebranch,
      If(items.permanent_location LIKE ""%YA%"", ""L_YA"",
        If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
          If(items.permanent_location LIKE ""%ADULT%"", ""ADULT"",
            If(items.permanent_location LIKE ""%PROC%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CART%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CATALOGING%"", ""L_YA"", items.permanent_location)
              )
            )
          )
        )
      )
    ) count_total ON count_total.homebranch = branches_locations.branchcode AND
      count_total.LOCATION = branches_locations.LOCATION_CODE LEFT JOIN
  (SELECT
      items.homebranch,
      Count(DISTINCT items.itemnumber) AS Count_itemnumber,
      If(items.permanent_location LIKE ""%YA%"", ""L_YA"",
        If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
          If(items.permanent_location LIKE ""%ADULT%"", ""ADULT"",
            If(items.permanent_location LIKE ""%PROC%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CART%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CATALOGING%"", ""L_YA"", items.permanent_location)
              )
            )
          )
        )
      ) AS LOCATION
    FROM
      biblioitems JOIN
      items ON items.biblioitemnumber = biblioitems.biblioitemnumber
    WHERE
      biblioitems.publicationyear < Year(Now()) AND
      biblioitems.publicationyear REGEXP '^[0-9]+$' AND
      items.homebranch LIKE <<Choose your library|ZBRAN>> AND
      If(items.permanent_location LIKE ""%YA%"", ""L_YA"",
        If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
          If(items.permanent_location LIKE ""%ADULT%"", ""ADULT"",
            If(items.permanent_location LIKE ""%PROC%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CART%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CATALOGING%"", ""L_YA"", items.permanent_location)
              )
            )
          )
        )
      ) LIKE <<Choose a shelving location|lbibloc>>
    GROUP BY
      items.homebranch,
      If(items.permanent_location LIKE ""%YA%"", ""L_YA"",
        If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
          If(items.permanent_location LIKE ""%ADULT%"", ""ADULT"",
            If(items.permanent_location LIKE ""%PROC%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CART%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CATALOGING%"", ""L_YA"", items.permanent_location)
              )
            )
          )
        )
      )
    ) count_with_pubyear ON
      count_with_pubyear.homebranch = branches_locations.branchcode AND
      count_with_pubyear.LOCATION = branches_locations.LOCATION_CODE LEFT JOIN
  (SELECT
      items.homebranch,
      items.itemnumber,
      biblioitems.publicationyear,
      If(items.permanent_location LIKE ""%YA%"", ""L_YA"",
        If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
          If(items.permanent_location LIKE ""%ADULT%"", ""ADULT"",
            If(items.permanent_location LIKE ""%PROC%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CART%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CATALOGING%"", ""L_YA"", items.permanent_location)
              )
            )
          )
        )
      ) AS LOCATION
    FROM
      biblioitems JOIN
      items ON items.biblioitemnumber = biblioitems.biblioitemnumber
    WHERE
      biblioitems.publicationyear < Year(Now()) AND
      biblioitems.publicationyear REGEXP '^[0-9]+$' AND
      items.homebranch LIKE <<Choose your library|ZBRAN>> AND
      If(items.permanent_location LIKE ""%YA%"", ""L_YA"",
        If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
          If(items.permanent_location LIKE ""%ADULT%"", ""ADULT"",
            If(items.permanent_location LIKE ""%PROC%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CART%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CATALOGING%"", ""L_YA"", items.permanent_location)
              )
            )
          )
        )
      ) LIKE <<Choose a shelving location|lbibloc>>
    GROUP BY
      items.homebranch,
      items.itemnumber,
      biblioitems.publicationyear,
      If(items.permanent_location LIKE ""%YA%"", ""L_YA"",
        If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
          If(items.permanent_location LIKE ""%ADULT%"", ""ADULT"",
            If(items.permanent_location LIKE ""%PROC%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CART%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CATALOGING%"", ""L_YA"", items.permanent_location)
              )
            )
          )
        )
      )
    ) average_age ON average_age.homebranch =
      branches_locations.branchcode AND
      average_age.LOCATION = branches_locations.LOCATION_CODE
WHERE
  branches_locations.branchcode LIKE <<Choose your library|ZBRAN>> AND
  branches_locations.LOCATION_CODE LIKE <<Choose a shelving location|lbibloc>>
GROUP BY
  branches_locations.branchcode,
  branches_locations.LOCATION_DESCRIPTION,
  count_total.Count_itemnumber,
  count_with_pubyear.Count_itemnumber",,,,,,,,
R.003478,"/*
R.003478

----------

Name: ADMINREPORT - PLACEHOLDER for Median age by location
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-03-05 14:03:59
Modified on: 2021-03-25 01:49:54
Date last run: 2021-03-05 14:04:02

----------

Public: 0
Expiry: 300

----------

In progress

----------
*/

","SELECT
  Concat('Placeholder')",,,,,,,,
R.003479,"/*
R.003479

----------

Name: GHW - Average by location and collection code
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-03-05 14:08:29
Modified on: 2021-03-05 17:16:03
Date last run: 2021-03-25 01:44:46

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branches_locations.branchcode,
  branches_locations.LOCATION_DESCRIPTION,
  branches_locations.CCODE_DESCRIPTION,
  count_total.Count_itemnumber AS ITEMS_COUNT_TOTAL,
  count_with_pubyear.Count_itemnumber AS ITEMS_COUNT_W_PUBYEAR,
  floor(Avg(average_age.publicationyear)) AS Avg_publicationyear
FROM
  (SELECT
      branches.branchcode,
      locations.lib AS LOCATION_DESCRIPTION,
      locations.category AS LOCATION_CATEGORY,
      locations.authorised_value AS LOCATION_CODE,
      ccodes.lib AS CCODE_DESCRIPTION,
      ccodes.category AS CCODE_CATEGORY,
      ccodes.authorised_value AS CCODE_CODE
    FROM
      branches,
      authorised_values locations,
      authorised_values ccodes
    WHERE
      locations.category = 'bibloc' AND
      locations.authorised_value <> 'YOUNGADULT' AND
      branches.branchcode LIKE <<Choose your library|ZBRAN>> AND
      ccodes.authorised_value = <<Choose a collection code|CCODE>>) branches_locations LEFT JOIN
  (SELECT
      items.homebranch,
      Count(DISTINCT items.itemnumber) AS Count_itemnumber,
      If(items.permanent_location LIKE ""%YA%"", ""L_YA"",
        If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
          If(items.permanent_location LIKE ""%ADULT%"", ""ADULT"",
            If(items.permanent_location LIKE ""%PROC%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CART%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CATALOGING%"", ""L_YA"", items.permanent_location)
              )
            )
          )
        )) AS LOCATION,
      Coalesce(items.ccode, ""XXX"") AS ccode
    FROM
      items
    WHERE
      items.homebranch LIKE <<Choose your library|ZBRAN>> AND
      If(items.permanent_location LIKE ""%YA%"", ""L_YA"",
        If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
          If(items.permanent_location LIKE ""%ADULT%"", ""ADULT"",
            If(items.permanent_location LIKE ""%PROC%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CART%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CATALOGING%"", ""L_YA"", items.permanent_location)
              )
            )
          )
        )
      ) LIKE <<Choose a shelving location|lbibloc>> AND
      Coalesce(items.ccode, ""XXX"") = <<Choose a collection code|CCODE>>
    GROUP BY
      items.homebranch,
      If(items.permanent_location LIKE ""%YA%"", ""L_YA"",
        If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
          If(items.permanent_location LIKE ""%ADULT%"", ""ADULT"",
            If(items.permanent_location LIKE ""%PROC%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CART%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CATALOGING%"", ""L_YA"", items.permanent_location)
              )
            )
          )
        )
      ),
      Coalesce(items.ccode, ""XXX"")) count_total ON count_total.homebranch =
      branches_locations.branchcode AND
      count_total.LOCATION = branches_locations.LOCATION_CODE AND
      count_total.ccode = branches_locations.CCODE_CODE LEFT JOIN
  (SELECT
      items.homebranch,
      Count(DISTINCT items.itemnumber) AS Count_itemnumber,
      If(items.permanent_location LIKE ""%YA%"", ""L_YA"",
        If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
          If(items.permanent_location LIKE ""%ADULT%"", ""ADULT"",
            If(items.permanent_location LIKE ""%PROC%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CART%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CATALOGING%"", ""L_YA"", items.permanent_location)
              )
            )
          )
        )
      ) AS LOCATION,
      Coalesce(items.ccode, ""XXX"") AS ccode
    FROM
      biblioitems JOIN
      items ON items.biblioitemnumber = biblioitems.biblioitemnumber
    WHERE
      biblioitems.publicationyear < Year(Now()) AND
      biblioitems.publicationyear REGEXP '^[0-9]+$' AND
      items.homebranch LIKE <<Choose your library|ZBRAN>> AND
      If(items.permanent_location LIKE ""%YA%"", ""L_YA"",
        If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
          If(items.permanent_location LIKE ""%ADULT%"", ""ADULT"",
            If(items.permanent_location LIKE ""%PROC%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CART%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CATALOGING%"", ""L_YA"", items.permanent_location)
              )
            )
          )
        )
      ) LIKE <<Choose a shelving location|lbibloc>> AND
      Coalesce(items.ccode, ""XXX"") = <<Choose a collection code|CCODE>>
    GROUP BY
      items.homebranch,
      If(items.permanent_location LIKE ""%YA%"", ""L_YA"",
        If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
          If(items.permanent_location LIKE ""%ADULT%"", ""ADULT"",
            If(items.permanent_location LIKE ""%PROC%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CART%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CATALOGING%"", ""L_YA"", items.permanent_location)
              )
            )
          )
        )
      )
    ) count_with_pubyear ON
      count_with_pubyear.homebranch = branches_locations.branchcode AND
      count_with_pubyear.LOCATION = branches_locations.LOCATION_CODE AND
      count_with_pubyear.ccode = branches_locations.CCODE_CODE LEFT JOIN
  (SELECT
      items.homebranch,
      items.itemnumber,
      biblioitems.publicationyear,
      If(items.permanent_location LIKE ""%YA%"", ""L_YA"",
        If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
          If(items.permanent_location LIKE ""%ADULT%"", ""ADULT"",
            If(items.permanent_location LIKE ""%PROC%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CART%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CATALOGING%"", ""L_YA"", items.permanent_location)
              )
            )
          )
        )
      ) AS LOCATION,
      Coalesce(items.ccode, ""XXX"") AS ccode
    FROM
      biblioitems JOIN
      items ON items.biblioitemnumber = biblioitems.biblioitemnumber
    WHERE
      biblioitems.publicationyear < Year(Now()) AND
      biblioitems.publicationyear REGEXP '^[0-9]+$' AND
      items.homebranch LIKE <<Choose your library|ZBRAN>> AND
      If(items.permanent_location LIKE ""%YA%"", ""L_YA"",
        If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
          If(items.permanent_location LIKE ""%ADULT%"", ""ADULT"",
            If(items.permanent_location LIKE ""%PROC%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CART%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CATALOGING%"", ""L_YA"", items.permanent_location)
              )
            )
          )
        )
      ) LIKE <<Choose a shelving location|lbibloc>> AND
      Coalesce(items.ccode, ""XXX"") = <<Choose a collection code|CCODE>>
    GROUP BY
      items.homebranch,
      items.itemnumber,
      biblioitems.publicationyear,
      If(items.permanent_location LIKE ""%YA%"", ""L_YA"",
        If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
          If(items.permanent_location LIKE ""%ADULT%"", ""ADULT"",
            If(items.permanent_location LIKE ""%PROC%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CART%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CATALOGING%"", ""L_YA"", items.permanent_location)
              )
            )
          )
        )
      )
    ) average_age ON average_age.homebranch =
      branches_locations.branchcode AND
      average_age.LOCATION = branches_locations.LOCATION_CODE AND
      average_age.ccode = branches_locations.CCODE_CODE
WHERE
  branches_locations.branchcode LIKE <<Choose your library|ZBRAN>> AND
  branches_locations.LOCATION_CODE LIKE <<Choose a shelving location|lbibloc>> AND
  branches_locations.CCODE_CODE = <<Choose a collection code|CCODE>>
GROUP BY
  branches_locations.branchcode,
  branches_locations.LOCATION_DESCRIPTION,
  branches_locations.CCODE_DESCRIPTION,
  count_total.Count_itemnumber,
  count_with_pubyear.Count_itemnumber,
  branches_locations.CCODE_CODE",,,,,,,,
R.003480,"/*
R.003480

----------

Name: ADMINREPORT - PLACEHOLDER for Median age by location and collection code
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-03-05 17:24:51
Modified on: 2021-03-25 01:50:02
Date last run: 2021-03-05 17:43:02

----------

Public: 0
Expiry: 300

----------

In progress

----------
*/

","SELECT
  Concat('Placeholder')",,,,,,,,
R.003482,"/*
R.003482

----------

Name: GHW - Phantom restrictions ADMINREPORT
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2021-03-10 14:54:38
Modified on: 2021-03-14 16:35:21
Date last run: 2022-04-04 13:56:38

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Searches for phantom restrictions</p>
<ul><li>Searches for current instances where data exists in borrowers.debarred but there is no corresponding entry in borrower_debarments.</li>
<li>grouped and sorted by borrowernumber</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Run once a week to identify borrowers with phantom restrictions.  Then use the batch patron editor to remove all restrictions from the accounts.</p>
<p></p>
<p><a href=""https://northeast-kansas-library-system.github.io/next/bugs/phantom_restrictions.html""   target=""_blank"">Training on this report</a></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3482&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">borrowers restrictions</p>
</div>

----------
*/

","SELECT
  borrowers.borrowernumber,
  borrowers.cardnumber,
  borrowers.debarred,
  borrowers.debarredcomment,
  borrower_debarments.borrower_debarment_id
FROM
  borrowers LEFT JOIN
  borrower_debarments ON borrower_debarments.borrowernumber =
      borrowers.borrowernumber
WHERE
  borrowers.debarred IS NOT NULL AND
  borrower_debarments.borrower_debarment_id IS NULL
GROUP BY
  borrowers.borrowernumber
ORDER BY
  borrowers.borrowernumber",,,,,,,,
R.003483,"/*
R.003483

----------

Name: GHW- Turnover in the previous 12 months by location and item type
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-03-16 23:02:31
Modified on: 2021-03-25 01:36:00
Date last run: 2021-04-19 16:18:36

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows turnover rate by location and item type</p>
<ul><li>in the previous 12 months</li>
<li>at the library you specify</li>
<li>grouped by library, location, and item type</li>
<li>sorted by library, location, and item type with an ""All locations"" and ""All item types"" grouping at the top of the results</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Developed for ""Collection development 2.0"" workshop</p>
<p></p>
<p>Please note that these calculations include all items checked out at your library regardless of which library owned the item.  If, for example, your library doesn't own any items with a ""Pamphlet"" item type but one from another library was checked out at your library to fill a request, that item will be counted in these calculations.</p>
<p></p>
<p>""CURRENT_ITEM_COUNT"" is based on an item's item type at the time the report was run.  ""CKO_RENEW_COUNT"" is based on an item's item type at the time it was checked out.  It an item's item type changes between the time it was checked out and the time this report is run, the results will be skewed.  This will be particularly true of items with the following temporary item types:</p>
<ul>
<li>Audiobook (new)</li>
<li>Book (new)</li>
<li>Book (no requests allowed)</li>
<li>BORROWED FROM ANOTHER LIBRARY</li>
<li>Magazine (new)</li>
<li>Video (Local requests only)</li>
<li>Video (New)</li>
<li>Video (No holds allowed)</li>
</ul>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3483&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">statistics, turnover, previous 12 months</p>
</div>

----------
*/

","SELECT
  Concat(""Today's date:"") AS branchcode,
  CURRENT_DATE() AS LOCATION,
  Concat('Report start date:') AS ITYPE,
  (AddDate(Last_Day(SubDate(Now(), INTERVAL 13 MONTH)), 1)) AS CURRENT_ITEM_COUNT, 
  Concat('Report end date:') AS CKO_RENEW_COUNT,
  ((AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1)) - INTERVAL 1 DAY) AS TURNOVER
UNION
SELECT
  Concat(""-"") AS branchcode,
  Concat(""-"") AS LOCATION,
  Concat(""-"") AS ITYPE,
  Concat(""-"") AS CURRENT_ITEM_COUNT,
  Concat(""-"") AS CKO_RENEW_COUNT,
  Concat(""-"") AS TURNOVER
UNION
SELECT
  branchess.branchcode,
  Concat(""All locations"") AS LOCATION,
  Concat(""All item types"") AS ITYPE,
  icounts.Count_itemnumber AS CURRENT_ITEM_COUNT,
  statcounts.COUNT AS CKO_RENEW_COUNT, 
  ROUND((statcounts.COUNT / icounts.Count_itemnumber), 2) AS TURNOVER
FROM
  (SELECT
     branches.branchcode
   FROM
     branches
   GROUP BY
     branches.branchcode
  ) branchess LEFT JOIN
  (SELECT
     items.homebranch,
     Count(items.itemnumber) AS Count_itemnumber
   FROM
     items
   GROUP BY
     items.homebranch
  ) icounts ON icounts.homebranch = branchess.branchcode
  LEFT JOIN
  (SELECT
     If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     (statistics.type = 'issue' OR
         statistics.type = 'renew') AND
     statistics.datetime BETWEEN 
       (AddDate(Last_Day(SubDate(Now(), INTERVAL 13 MONTH)), 1)) AND 
       (AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1))
   GROUP BY
     If(statistics.branch IS NULL, ""NEKLS"", statistics.branch)
  ) statcounts ON statcounts.branch = branchess.branchcode
WHERE
  branchess.branchcode LIKE <<Choose your library|ZBRAN>>
GROUP BY
  branchess.branchcode,
  icounts.Count_itemnumber,
  statcounts.COUNT
UNION
SELECT
  Concat('--') AS branchcode,
  Concat('--') AS LOCATION,
  Concat('--') AS ITYPE,
  Concat('--') AS CURRENT_ITEM_COUNT,
  Concat('--') AS CKO_RENEW_COUNT,
  Concat('--') AS TURNOVER
UNION
SELECT
  branchess.branchcode,
  branchess.lib AS LOCATION,
  Concat(""All item types"") AS ITYPE,
  icounts.Count_itemnumber AS CURRENT_ITEM_COUNT,
  statcounts.COUNT AS CKO_RENEW_COUNT,
  ROUND((statcounts.COUNT / icounts.Count_itemnumber), 2) AS TURNOVER
FROM
  (SELECT
     branches.branchcode,
     biblocs.authorised_value,
     biblocs.lib
   FROM
     branches,
     (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'bibloc' AND
        authorised_values.authorised_value <> ""YOUNGADULT""
     ) biblocs
  ) branchess
  LEFT JOIN
  (SELECT
     items.homebranch,
     If(items.permanent_location = ""BALDADULT"", ""ADULT"",
       If(items.permanent_location = ""LVPLADULT"", ""ADULT"",
         If(items.permanent_location = ""PAOLAADULT"", ""ADULT"",
           If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
             If(items.permanent_location LIKE ""%Y%"", ""L_YA"", 
               If(items.permanent_location LIKE ""%CA%"", ""ADULT"", 
                 If(items.permanent_location LIKE ""%PROC%"", ""ADULT"",
                   If(items.permanent_location IS NULL, ""ADULT"",
                     items.permanent_location
                   )
                 )
               )
             )
           )
         )
       )
     ) AS permanent_location,
     Count(items.itemnumber) AS Count_itemnumber
   FROM
     items
   GROUP BY
     items.homebranch,
     If(items.permanent_location = ""BALDADULT"", ""ADULT"",
       If(items.permanent_location = ""LVPLADULT"", ""ADULT"",
         If(items.permanent_location = ""PAOLAADULT"", ""ADULT"",
           If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
             If(items.permanent_location LIKE ""%Y%"", ""L_YA"", 
               If(items.permanent_location LIKE ""%CA%"", ""ADULT"", 
                 If(items.permanent_location LIKE ""%PROC%"", ""ADULT"",
                   If(items.permanent_location IS NULL, ""ADULT"", 
                     items.permanent_location
                   )
                 )
               )
             )
           )
         )
       )
     )
  ) icounts ON icounts.homebranch = branchess.branchcode AND
      icounts.permanent_location = branchess.authorised_value LEFT JOIN
  (SELECT
     If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch,
     If(statistics.location = ""BALDADULT"", ""ADULT"", 
       If(statistics.location = ""LVPLADULT"", ""ADULT"", 
         If(statistics.location = ""PAOLAADULT"", ""ADULT"",
           If(statistics.location LIKE ""%CHILD%"", ""CHILDRENS"", 
             If(statistics.location LIKE ""%Y%"", ""L_YA"", 
               If(statistics.location LIKE ""%CA%"", ""ADULT"",
                 If(statistics.location LIKE ""%PROC%"", ""ADULT"", 
                   If(statistics.location IS NULL, ""ADULT"", 
                     statistics.location
                   )
                 )
               )
             )
           )
         )
       )
     ) AS LOCATION,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     (statistics.type = 'issue' OR
         statistics.type = 'renew') AND
     statistics.datetime BETWEEN 
       (AddDate(Last_Day(SubDate(Now(), INTERVAL 13 MONTH)), 1)) AND 
       (AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1))
   GROUP BY
     If(statistics.branch IS NULL, ""NEKLS"", statistics.branch),
     If(statistics.location = ""BALDADULT"", ""ADULT"", 
       If(statistics.location = ""LVPLADULT"", ""ADULT"", 
         If(statistics.location = ""PAOLAADULT"", ""ADULT"",
           If(statistics.location LIKE ""%CHILD%"", ""CHILDRENS"", 
             If(statistics.location LIKE ""%Y%"", ""L_YA"", 
               If(statistics.location LIKE ""%CA%"", ""ADULT"",
                 If(statistics.location LIKE ""%PROC%"", ""ADULT"", 
                   If(statistics.location IS NULL, ""ADULT"", 
                     statistics.location
                   )
                 )
               )
             )
           )
         )
       )
     )
  ) statcounts ON statcounts.branch = branchess.branchcode AND
      statcounts.LOCATION = branchess.authorised_value
WHERE
  branchess.branchcode LIKE <<Choose your library|ZBRAN>>
GROUP BY
  branchess.branchcode,
  branchess.lib,
  icounts.Count_itemnumber,
  statcounts.COUNT
UNION
SELECT
  Concat('---') AS branchcode,
  Concat('---') AS LOCATION,
  Concat('---') AS ITYPE,
  Concat('---') AS CURRENT_ITEM_COUNT,
  Concat('---') AS CKO_RENEW_COUNT,
  Concat('---') AS TURNOVER
UNION
SELECT
  branchesitypes.branchcode,
  branchesitypes.lib AS LOCATION,
  branchesitypes.description AS ITYPE,
  icounts.Count_itemnumber AS CURRENT_ITEM_COUNT,
  statcounts.COUNT AS CKO_RENEW_COUNT,
  ROUND((statcounts.COUNT / icounts.Count_itemnumber), 2) AS TURNOVER
FROM
  (SELECT
     branches.branchcode,
     itemtypes.itemtype,
     itemtypes.description,
     biblocs.category,
     biblocs.authorised_value,
     biblocs.lib
   FROM
     branches,
     itemtypes,
     (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'bibloc' AND
        authorised_values.authorised_value <> ""YOUNGADULT""
     ) biblocs
  )
  branchesitypes LEFT JOIN
  (SELECT
     items.homebranch,
     If(items.permanent_location = ""BALDADULT"", ""ADULT"",
       If(items.permanent_location = ""LVPLADULT"", ""ADULT"",
         If(items.permanent_location = ""PAOLAADULT"", ""ADULT"",
           If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
             If(items.permanent_location LIKE ""%Y%"", ""L_YA"", 
               If(items.permanent_location LIKE ""%CA%"", ""ADULT"", 
                 If(items.permanent_location LIKE ""%PROC%"", ""ADULT"",
                   If(items.permanent_location IS NULL, ""ADULT"", 
                     items.permanent_location
                   )
                 )
               )
             )
           )
         )
       )
     ) AS permanent_location,
     items.itype,
     Count(items.itemnumber) AS Count_itemnumber
   FROM
     items
   GROUP BY
     items.homebranch,
     If(items.permanent_location = ""BALDADULT"", ""ADULT"",
       If(items.permanent_location = ""LVPLADULT"", ""ADULT"",
         If(items.permanent_location = ""PAOLAADULT"", ""ADULT"",
           If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
             If(items.permanent_location LIKE ""%Y%"", ""L_YA"", 
               If(items.permanent_location LIKE ""%CA%"", ""ADULT"", 
                 If(items.permanent_location LIKE ""%PROC%"", ""ADULT"",
                   If(items.permanent_location IS NULL, ""ADULT"", 
                     items.permanent_location
                   )
                 )
               )
             )
           )
         )
       )
     ),
     items.itype
  ) icounts ON icounts.homebranch = branchesitypes.branchcode AND
      icounts.permanent_location = branchesitypes.authorised_value AND
      icounts.itype = branchesitypes.itemtype LEFT JOIN
  (SELECT
     If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch,
     If(statistics.location = ""BALDADULT"", ""ADULT"", 
       If(statistics.location = ""LVPLADULT"", ""ADULT"", 
         If(statistics.location = ""PAOLAADULT"", ""ADULT"",
           If(statistics.location LIKE ""%CHILD%"", ""CHILDRENS"", 
             If(statistics.location LIKE ""%Y%"", ""L_YA"", 
               If(statistics.location LIKE ""%CA%"", ""ADULT"",
                 If(statistics.location LIKE ""%PROC%"", ""ADULT"", 
                   If(statistics.location IS NULL, ""ADULT"", 
                     statistics.location
                   )
                 )
               )
             )
           )
         )
       )
     ) AS LOCATION,
     If(statistics.itemtype IS NULL, ""PUNC"", statistics.itemtype) AS itemtype,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     (statistics.type = 'issue' OR
         statistics.type = 'renew') AND
     statistics.datetime BETWEEN 
       (AddDate(Last_Day(SubDate(Now(), INTERVAL 13 MONTH)), 1)) AND 
       (AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1))
   GROUP BY
     If(statistics.branch IS NULL, ""NEKLS"", statistics.branch),
     If(statistics.location = ""BALDADULT"", ""ADULT"", 
       If(statistics.location = ""LVPLADULT"", ""ADULT"", 
         If(statistics.location = ""PAOLAADULT"", ""ADULT"",
           If(statistics.location LIKE ""%CHILD%"", ""CHILDRENS"", 
             If(statistics.location LIKE ""%Y%"", ""L_YA"", 
               If(statistics.location LIKE ""%CA%"", ""ADULT"",
                 If(statistics.location LIKE ""%PROC%"", ""ADULT"", 
                   If(statistics.location IS NULL, ""ADULT"", statistics.location
                   )
                 )
               )
             )
           )
         )
       )
     ),
     If(statistics.itemtype IS NULL, ""PUNC"", statistics.itemtype)
  ) statcounts ON
      statcounts.branch = branchesitypes.branchcode AND
      statcounts.itemtype = branchesitypes.itemtype AND
      statcounts.LOCATION = branchesitypes.authorised_value
WHERE
  branchesitypes.branchcode LIKE <<Choose your library|ZBRAN>>
GROUP BY
  branchesitypes.branchcode,
  branchesitypes.lib,
  branchesitypes.description,
  icounts.Count_itemnumber,
  statcounts.COUNT
UNION
SELECT
  Concat('----') AS branchcode,
  Concat('----') AS LOCATION,
  Concat('----') AS ITYPE,
  Concat('----') AS CURRENT_ITEM_COUNT,
  Concat('----') AS CKO_RENEW_COUNT,
  Concat('----') AS TURNOVER
UNION
  SELECT
  If(branchess.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED', 
    If(branchess.branchcode LIKE 'PH%', 'PH_COMBINED', 
      branchess.branchcode
    )
  ) AS branchcode,
  Concat(""All locations"") AS LOCATION,
  Concat(""All item types"") AS ITYPE,
  icounts.Count_itemnumber AS CURRENT_ITEM_COUNT,
  statcounts.COUNT AS CKO_RENEW_COUNT,
  ROUND((statcounts.COUNT / icounts.Count_itemnumber), 2) AS TURNOVER
FROM
  (SELECT
      If(branches.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED',
        If(branches.branchcode LIKE 'PH%', 'PH_COMBINED', 
          branches.branchcode
        )
      ) AS branchcode
    FROM
      branches
    GROUP BY
      If(branches.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED',
        If(branches.branchcode LIKE 'PH%', 'PH_COMBINED', 
          branches.branchcode
        )
      )
    ) branchess LEFT JOIN
  (SELECT
      If(items.homebranch LIKE 'DONI%', 'DONIPHAN_COMBINED', 
        If(items.homebranch LIKE 'PH%', 'PH_COMBINED', 
          items.homebranch
        )
      ) AS homebranch,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    GROUP BY
      If(items.homebranch LIKE 'DONI%', 'DONIPHAN_COMBINED', 
        If(items.homebranch LIKE 'PH%', 'PH_COMBINED', 
          items.homebranch
        )
      )
  ) icounts ON icounts.homebranch = branchess.branchcode LEFT JOIN
  (SELECT
     If(statistics.branch LIKE 'DONI%', ""DONIPHAN_COMBINED"",
       If(statistics.branch LIKE 'PH%', 'PH_COMBINED', 
         statistics.branch
       )
     ) AS branch,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     (statistics.type = 'issue' OR
       statistics.type = 'renew') AND
     statistics.datetime BETWEEN
       (AddDate(Last_Day(SubDate(Now(), INTERVAL 13 MONTH)), 1)) AND 
       (AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1))
   GROUP BY
     If(statistics.branch LIKE 'DONI%', ""DONIPHAN_COMBINED"",
       If(statistics.branch LIKE 'PH%', 'PH_COMBINED', statistics.branch
       )
     )
  ) statcounts ON statcounts.branch = branchess.branchcode
WHERE
  If(branchess.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED',
    If(branchess.branchcode LIKE 'PH%', 'PH_COMBINED', 
      branchess.branchcode
    )
  ) LIKE <<Choose your library|ZBRAN>>
GROUP BY
  If(branchess.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED',
    If(branchess.branchcode LIKE 'PH%', 'PH_COMBINED', 
      branchess.branchcode
    )
  ),
  icounts.Count_itemnumber,
  statcounts.COUNT
UNION
SELECT
  Concat('-----') AS branchcode,
  Concat('-----') AS LOCATION,
  Concat('-----') AS ITYPE,
  Concat('-----') AS CURRENT_ITEM_COUNT,
  Concat('-----') AS CKO_RENEW_COUNT,
  Concat('-----') AS TURNOVER
UNION
SELECT
  If(branchess.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED',
    If(branchess.branchcode LIKE 'PH%', 'PH_COMBINED', 
      branchess.branchcode
    )
  ) AS branchcode,
  branchess.lib AS LOCATION,
  Concat(""All item types"") AS ITYPE,
  icounts.Count_itemnumber AS CURRENT_ITEM_COUNT,
  statcounts.COUNT AS CKO_RENEW_COUNT,
  ROUND((statcounts.COUNT / icounts.Count_itemnumber), 2) AS TURNOVER
FROM
  (SELECT
     If(branches.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED', 
       If(branches.branchcode LIKE 'PH%', 'PH_COMBINED', 
         branches.branchcode
       )
     ) AS branchcode,
     biblocs.authorised_value,
     biblocs.lib
   FROM
     branches,
     (SELECT
       authorised_values.category,
       authorised_values.authorised_value,
       authorised_values.lib
     FROM
       authorised_values
     WHERE
       authorised_values.category = 'bibloc' AND
       authorised_values.authorised_value <> ""YOUNGADULT""
     ) biblocs
  ) branchess LEFT JOIN
  (SELECT
     If(items.homebranch LIKE 'DONI%', 'DONIPHAN_COMBINED', If(items.homebranch LIKE 'PH%', 'PH_COMBINED', items.homebranch)) AS homebranch,
       If(items.permanent_location = ""BALDADULT"", ""ADULT"", 
         If(items.permanent_location = ""LVPLADULT"", ""ADULT"", 
           If(items.permanent_location = ""PAOLAADULT"", ""ADULT"", 
             If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"", 
               If(items.permanent_location LIKE ""%Y%"", ""L_YA"", 
                 If(items.permanent_location LIKE ""%CA%"", ""ADULT"", 
                   If(items.permanent_location LIKE ""%PROC%"", ""ADULT"", 
                     If(items.permanent_location IS NULL, ""ADULT"", 
                       items.permanent_location
                     )
                   )
                 )
               )
             )
           )
         )
       ) AS permanent_location,
     Count(items.itemnumber) AS Count_itemnumber
   FROM
     items
   GROUP BY
     If(items.homebranch LIKE 'DONI%', 'DONIPHAN_COMBINED', 
       If(items.homebranch LIKE 'PH%', 'PH_COMBINED', 
         items.homebranch
       )
     ),
     If(items.permanent_location = ""BALDADULT"", ""ADULT"", 
       If(items.permanent_location = ""LVPLADULT"", ""ADULT"", 
         If(items.permanent_location = ""PAOLAADULT"", ""ADULT"", 
           If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"", 
             If(items.permanent_location LIKE ""%Y%"", ""L_YA"", 
               If(items.permanent_location LIKE ""%CA%"", ""ADULT"", 
                 If(items.permanent_location LIKE ""%PROC%"", ""ADULT"", 
                   If(items.permanent_location IS NULL, ""ADULT"", 
                     items.permanent_location
                   )
                 )
               )
             )
           )
         )
       )
     )
  ) icounts ON icounts.homebranch = branchess.branchcode AND
      icounts.permanent_location = branchess.authorised_value LEFT JOIN
  (SELECT
    If(statistics.branch LIKE 'DONI%', ""DONIPHAN_COMBINED"",
      If(statistics.branch LIKE 'PH%', 'PH_COMBINED', 
        statistics.branch
      )
    ) AS branch, 
    If(statistics.location = ""BALDADULT"", ""ADULT"", 
      If(statistics.location = ""LVPLADULT"", ""ADULT"", 
        If(statistics.location = ""PAOLAADULT"", ""ADULT"", 
          If(statistics.location LIKE ""%CHILD%"", ""CHILDRENS"", 
            If(statistics.location LIKE ""%Y%"", ""L_YA"", 
              If(statistics.location LIKE ""%CA%"", ""ADULT"", 
                If(statistics.location LIKE ""%PROC%"", ""ADULT"", 
                  If(statistics.location IS NULL, ""ADULT"", statistics.location
                  )
                )
              )
            )
          )
        )
      )
    ) AS LOCATION,
    count(*) AS COUNT
  FROM
    statistics
  WHERE
    (statistics.type = 'issue' OR
      statistics.type = 'renew') AND
    statistics.datetime BETWEEN
      (AddDate(Last_Day(SubDate(Now(), INTERVAL 13 MONTH)), 1)) AND 
      (AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1))
  GROUP BY
    If(statistics.branch LIKE 'DONI%', ""DONIPHAN_COMBINED"",
      If(statistics.branch LIKE 'PH%', 'PH_COMBINED', 
        statistics.branch
      )
    ), 
    If(statistics.location = ""BALDADULT"", ""ADULT"", 
      If(statistics.location = ""LVPLADULT"", ""ADULT"", 
        If(statistics.location = ""PAOLAADULT"", ""ADULT"", 
          If(statistics.location LIKE ""%CHILD%"", ""CHILDRENS"", 
            If(statistics.location LIKE ""%Y%"", ""L_YA"", 
              If(statistics.location LIKE ""%CA%"", ""ADULT"", 
                If(statistics.location LIKE ""%PROC%"", ""ADULT"", 
                  If(statistics.location IS  NULL, ""ADULT"", 
                    statistics.location
                  )
                )
              )
            )
          )
        )
      )
    )
  ) statcounts ON
    statcounts.branch = branchess.branchcode AND
    statcounts.LOCATION = branchess.authorised_value
WHERE
  If(branchess.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED',
    If(branchess.branchcode LIKE 'PH%', 'PH_COMBINED', 
      branchess.branchcode
    )
  ) LIKE <<Choose your library|ZBRAN>>
GROUP BY
  If(branchess.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED',
    If(branchess.branchcode LIKE 'PH%', 'PH_COMBINED', 
      branchess.branchcode
    )
  ),
  branchess.lib,
  icounts.Count_itemnumber,
  statcounts.COUNT
UNION
SELECT
  Concat('------') AS branchcode,
  Concat('------') AS LOCATION,
  Concat('------') AS ITYPE,
  Concat('------') AS CURRENT_ITEM_COUNT,
  Concat('------') AS CKO_RENEW_COUNT,
  Concat('------') AS TURNOVER
UNION 
SELECT
  branchesitypes.branchcode,
  branchesitypes.lib AS LOCATION,
  branchesitypes.description AS ITYPE,
  icounts.Count_itemnumber AS CURRENT_ITEM_COUNT,
  statcounts.COUNT AS CKO_RENEW_COUNT,
  ROUND((statcounts.COUNT / icounts.Count_itemnumber), 2) AS TURNOVER
FROM
  (SELECT
    If(branches.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED',
      If(branches.branchcode LIKE 'PH%', 'PH_COMBINED', 
        branches.branchcode)) AS branchcode,
    itemtypes.itemtype,
    itemtypes.description,
    biblocs.category,
    biblocs.authorised_value,
    biblocs.lib
  FROM
    branches,
    itemtypes,
  (SELECT
    authorised_values.category,
    authorised_values.authorised_value,
    authorised_values.lib
  FROM
    authorised_values
  WHERE
    authorised_values.category = 'bibloc' AND
    authorised_values.authorised_value <> ""YOUNGADULT"") biblocs
  GROUP BY
    If(branches.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED',
      If(branches.branchcode LIKE 'PH%', 'PH_COMBINED', 
        branches.branchcode
      )
    ),
    itemtypes.itemtype,
    itemtypes.description,
    biblocs.category,
    biblocs.authorised_value,
    biblocs.lib
  ) branchesitypes LEFT JOIN
  (SELECT
    If(items.homebranch LIKE 'DONI%', 'DONIPHAN_COMBINED', 
      If(items.homebranch LIKE 'PH%', 'PH_COMBINED', 
        items.homebranch
      )
    ) AS homebranch,
    If(items.permanent_location = ""BALDADULT"", ""ADULT"",
      If(items.permanent_location = ""LVPLADULT"", ""ADULT"",
        If(items.permanent_location = ""PAOLAADULT"", ""ADULT"",
          If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
            If(items.permanent_location LIKE ""%Y%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CA%"", ""ADULT"",
                If(items.permanent_location LIKE ""%PROC%"", ""ADULT"",
                  If(items.permanent_location IS NULL, ""ADULT"",
                    items.permanent_location
                  )
                )
              )
            )
          )
        )
      )
    ) AS permanent_location,
    items.itype,
    Count(items.itemnumber) AS Count_itemnumber
  FROM
    items
  GROUP BY
    If(items.homebranch LIKE 'DONI%', 'DONIPHAN_COMBINED', 
      If(items.homebranch LIKE 'PH%', 'PH_COMBINED', 
        items.homebranch
      )
    ),
    If(items.permanent_location = ""BALDADULT"", ""ADULT"",
      If(items.permanent_location = ""LVPLADULT"", ""ADULT"",
        If(items.permanent_location = ""PAOLAADULT"", ""ADULT"",
          If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
            If(items.permanent_location LIKE ""%Y%"", ""L_YA"",
              If(items.permanent_location LIKE ""%CA%"", ""ADULT"",
                If(items.permanent_location LIKE ""%PROC%"", ""ADULT"",
                  If(items.permanent_location IS NULL, ""ADULT"",
                    items.permanent_location
                  )
                )
              )
            )
          )
        )
      )
    ),
    items.itype
  ) icounts ON icounts.homebranch = branchesitypes.branchcode AND
    icounts.permanent_location = branchesitypes.authorised_value AND
    icounts.itype = branchesitypes.itemtype LEFT JOIN
  (SELECT
    If(statistics.branch LIKE 'DONI%', ""DONIPHAN_COMBINED"",
      If(statistics.branch LIKE 'PH%', 'PH_COMBINED', 
        statistics.branch
      )
    ) AS branch,
    If(statistics.location = ""BALDADULT"", ""ADULT"", 
      If(statistics.location = ""LVPLADULT"", ""ADULT"", 
        If(statistics.location = ""PAOLAADULT"", ""ADULT"", 
          If(statistics.location LIKE ""%CHILD%"", ""CHILDRENS"", 
            If(statistics.location LIKE ""%Y%"", ""L_YA"", 
              If(statistics.location LIKE ""%CA%"", ""ADULT"", 
                If(statistics.location LIKE ""%PROC%"", ""ADULT"", 
                  If(statistics.location IS NULL, ""ADULT"", 
                    statistics.location
                  )
                )
              )
            )
          )
        )
      )
    ) AS LOCATION,
    If(statistics.itemtype IS NULL, ""PUNC"", statistics.itemtype) AS itemtype,
    count(*) AS COUNT
  FROM
    statistics
  WHERE
    (statistics.type = 'issue' OR
      statistics.type = 'renew') AND
    statistics.datetime BETWEEN 
      (AddDate(Last_Day(SubDate(Now(), INTERVAL 13 MONTH)), 1)) AND 
      (AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1))
  GROUP BY
    If(statistics.branch LIKE 'DONI%', ""DONIPHAN_COMBINED"",
      If(statistics.branch LIKE 'PH%', 'PH_COMBINED', 
        statistics.branch
      )
    ),
    If(statistics.location = ""BALDADULT"", ""ADULT"", 
      If(statistics.location = ""LVPLADULT"", ""ADULT"", 
        If(statistics.location = ""PAOLAADULT"", ""ADULT"", 
          If(statistics.location LIKE ""%CHILD%"", ""CHILDRENS"", 
            If(statistics.location LIKE ""%Y%"", ""L_YA"", 
              If(statistics.location LIKE ""%CA%"", ""ADULT"", 
                If(statistics.location LIKE ""%PROC%"", ""ADULT"", 
                  If(statistics.location IS NULL, ""ADULT"", 
                    statistics.location
                  )
                )
              )
            )
          )
        )
      )
    ),
    If(statistics.itemtype IS NULL, ""PUNC"", 
      statistics.itemtype
    )
  ) statcounts ON statcounts.branch = branchesitypes.branchcode AND
    statcounts.itemtype = branchesitypes.itemtype AND
    statcounts.LOCATION = branchesitypes.authorised_value
WHERE
  branchesitypes.branchcode LIKE <<Choose your library|ZBRAN>>
GROUP BY
  branchesitypes.branchcode,
  branchesitypes.lib,
  branchesitypes.description,
  icounts.Count_itemnumber,
  statcounts.COUNT",,,,,,,,
R.003484,"/*
R.003484

----------

Name: GHW- Turnover by location and collection code
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-03-17 22:51:30
Modified on: 2021-03-25 01:36:09
Date last run: 2022-04-01 12:53:29

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows turnover rate by location and collection code</p>
<ul><li>in the previous 12 months</li>
<li>at the library you specify</li>
<li>grouped by library, location, and collection code</li>
<li>sorted by library, location, and collection code with an ""All locations"" and ""All collection codes"" grouping at the top of the results</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Developed for ""Collection development 2.0"" workshop</p>
<p></p>
<p>Please note that these calculations include all items checked out at your library regardless of which library owned the item.  If, for example, your library doesn't own any items with a ""VG-Nintendo 3DS"" collection code but one from another library was checked out at your library to fill a request, that item will be counted in these calculations.</p>
<p></p>
<p>""CURRENT_ITEM_COUNT"" is based on an item's collection code at the time the report was run.  ""CKO_RENEW_COUNT"" is based on an item's collection code at the time it was checked out.  It an item's collection code changes between the time it was checked out and the time this report is run, the results will be skewed.  This can be particularly true with temporary items such as ILL items.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3484&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">statistics, turnover, previous 12 months</p>
</div>

----------
*/

","SELECT
  Concat(""Today's date:"") AS branchcode,
  CURRENT_DATE() AS LOCATION,
  Concat('Start date:') AS CCODE,
  (AddDate(Last_Day(SubDate(Now(), INTERVAL 13 MONTH)),
  1)) AS CURRENT_ITEM_COUNT,
  Concat('End date:') AS CKO_RENEW_COUNT,
  ((AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1)) - INTERVAL
  1 DAY) AS TURNOVER
UNION
SELECT
  Concat(""-"") AS branchcode,
  Concat(""-"") AS LOCATION,
  Concat(""-"") AS CCODE,
  Concat(""-"") AS CURRENT_ITEM_COUNT,
  Concat(""-"") AS CKO_RENEW_COUNT,
  Concat(""-"") AS TURNOVER
UNION
SELECT
  branchess.branchcode,
  Concat(""All locations"") AS LOCATION,
  Concat(""All collection codes"") AS CCODE,
  icounts.Count_itemnumber AS CURRENT_ITEM_COUNT,
  statcounts.COUNT AS CKO_RENEW_COUNT,
  round((statcounts.COUNT / icounts.Count_itemnumber), 2) AS TURNOVER
FROM
  (SELECT
     branches.branchcode
   FROM
     branches
   GROUP BY
     branches.branchcode) branchess LEFT JOIN
  (SELECT
     items.homebranch,
     Count(items.itemnumber) AS Count_itemnumber
   FROM
     items
   GROUP BY
     items.homebranch) icounts ON icounts.homebranch = branchess.branchcode
  LEFT JOIN
  (SELECT
     If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     (statistics.type = 'issue' OR
         statistics.type = 'renew') AND
     statistics.datetime BETWEEN (AddDate(Last_Day(SubDate(Now(), INTERVAL 13
     MONTH)), 1)) AND (AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1))
   GROUP BY
     If(statistics.branch IS NULL, ""NEKLS"", statistics.branch)) statcounts ON
      statcounts.branch = branchess.branchcode
WHERE
  branchess.branchcode LIKE <<Choose your library|ZBRAN>>
GROUP BY
  branchess.branchcode,
  icounts.Count_itemnumber,
  statcounts.COUNT
UNION
SELECT
  Concat('--') AS branchcode,
  Concat('--') AS LOCATION,
  Concat('--') AS CCODE,
  Concat('--') AS CURRENT_ITEM_COUNT,
  Concat('--') AS CKO_RENEW_COUNT,
  Concat('--') AS TURNOVER
UNION
SELECT
  branchess.branchcode,
  branchess.lib AS LOCATION,
  Concat(""All collection codes"") AS CCODE,
  icounts.Count_itemnumber AS CURRENT_ITEM_COUNT,
  statcounts.COUNT AS CKO_RENEW_COUNT,
  round((statcounts.COUNT / icounts.Count_itemnumber), 2) AS TURNOVER
FROM
  (SELECT
     branches.branchcode,
     biblocs.authorised_value,
     biblocs.lib
   FROM
     branches,
     (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'bibloc' AND
        authorised_values.authorised_value <> ""YOUNGADULT"") biblocs) branchess
  LEFT JOIN
  (SELECT
     items.homebranch,
     If(items.permanent_location = ""BALDADULT"", ""ADULT"",
       If(items.permanent_location = ""LVPLADULT"", ""ADULT"",
         If(items.permanent_location = ""PAOLAADULT"", ""ADULT"",
           If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
             If(items.permanent_location LIKE ""%Y%"", ""L_YA"", 
               If(items.permanent_location LIKE ""%CA%"", ""ADULT"", 
                 If(items.permanent_location LIKE ""%PROC%"", ""ADULT"",
                   If(items.permanent_location IS NULL, ""ADULT"",
                     items.permanent_location
                   )
                 )
               )
             )
           )
         )
       )
     ) AS permanent_location,
     Count(items.itemnumber) AS Count_itemnumber
   FROM
     items
   GROUP BY
     items.homebranch,
     If(items.permanent_location = ""BALDADULT"", ""ADULT"",
       If(items.permanent_location = ""LVPLADULT"", ""ADULT"",
         If(items.permanent_location = ""PAOLAADULT"", ""ADULT"",
           If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
             If(items.permanent_location LIKE ""%Y%"", ""L_YA"", 
               If(items.permanent_location LIKE ""%CA%"", ""ADULT"", 
                 If(items.permanent_location LIKE ""%PROC%"", ""ADULT"",
                   If(items.permanent_location IS NULL, ""ADULT"",
                     items.permanent_location
                   )
                 )
               )
             )
           )
         )
       )
     )
   ) icounts ON icounts.homebranch =
      branchess.branchcode AND
      icounts.permanent_location = branchess.authorised_value LEFT JOIN
  (SELECT
     If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch, 
     If(statistics.location = ""BALDADULT"", ""ADULT"", 
       If(statistics.location = ""LVPLADULT"", ""ADULT"", 
         If(statistics.location = ""PAOLAADULT"", ""ADULT"", 
           If(statistics.location LIKE ""%CHILD%"", ""CHILDRENS"", 
             If(statistics.location LIKE ""%Y%"", ""L_YA"", 
               If(statistics.location LIKE ""%CA%"", ""ADULT"", 
                 If(statistics.location LIKE ""%PROC%"", ""ADULT"", 
                   If(statistics.location IS NULL, ""ADULT"", statistics.location
                   )
                 )
               )
             )
           )
         )
       )
     ) AS LOCATION,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     (statistics.type = 'issue' OR
         statistics.type = 'renew') AND
     statistics.datetime BETWEEN (AddDate(Last_Day(SubDate(Now(), INTERVAL 13
     MONTH)), 1)) AND (AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1))
   GROUP BY
     If(statistics.branch IS NULL, ""NEKLS"", statistics.branch),
     If(statistics.location = ""BALDADULT"", ""ADULT"", 
       If(statistics.location =  ""LVPLADULT"", ""ADULT"", 
         If(statistics.location = ""PAOLAADULT"", ""ADULT"",  
           If(statistics.location LIKE ""%CHILD%"", ""CHILDRENS"", 
             If(statistics.location LIKE ""%Y%"", ""L_YA"", 
               If(statistics.location LIKE ""%CA%"", ""ADULT"", 
                 If(statistics.location LIKE ""%PROC%"", ""ADULT"", 
                   If(statistics.location IS  NULL, ""ADULT"", 
                     statistics.location
                   )
                 )
               )
             )
           )
         )
       )
     )
   ) statcounts ON
      statcounts.branch = branchess.branchcode AND
      statcounts.LOCATION = branchess.authorised_value
WHERE
  branchess.branchcode LIKE <<Choose your library|ZBRAN>>
GROUP BY
  branchess.branchcode,
  branchess.lib,
  icounts.Count_itemnumber,
  statcounts.COUNT
UNION
SELECT
  Concat('---') AS branchcode,
  Concat('---') AS LOCATION,
  Concat('---') AS CCODE,
  Concat('---') AS CURRENT_ITEM_COUNT,
  Concat('---') AS CKO_RENEW_COUNT,
  Concat('---') AS TURNOVER
UNION
SELECT
  branchesitypes.branchcode,
  branchesitypes.lib AS LOCATION,
  branchesitypes.lib1 AS CCODE,
  icounts.Count_itemnumber AS CURRENT_ITEM_COUNT,
  statcounts.COUNT AS CKO_RENEW_COUNT,
  round((statcounts.COUNT / icounts.Count_itemnumber), 2) AS TURNOVER
FROM
  (SELECT
     branches.branchcode,
     biblocs.category,
     biblocs.authorised_value,
     biblocs.lib,
     ccodes.authorised_value AS authorised_value1,
     ccodes.lib AS lib1
   FROM
     branches,
     (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'bibloc' AND
        authorised_values.authorised_value <> ""YOUNGADULT"") biblocs,
     (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'ccode') ccodes) branchesitypes LEFT JOIN
  (SELECT
     items.homebranch,
     If(items.permanent_location = ""BALDADULT"", ""ADULT"",
       If(items.permanent_location = ""LVPLADULT"", ""ADULT"",
         If(items.permanent_location = ""PAOLAADULT"", ""ADULT"",
           If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
             If(items.permanent_location LIKE ""%Y%"", ""L_YA"", 
               If(items.permanent_location LIKE ""%CA%"", ""ADULT"", 
                 If(items.permanent_location LIKE ""%PROC%"", ""ADULT"",
                   If(items.permanent_location IS NULL, ""ADULT"",
                     items.permanent_location
                   )
                 )
               )
             )
           )
         )
       )
     ) AS permanent_location,
     Coalesce(items.ccode, ""XXX"") AS ccode,
     Count(items.itemnumber) AS Count_itemnumber
   FROM
     items
   GROUP BY
     items.homebranch,
     If(items.permanent_location = ""BALDADULT"", ""ADULT"",
       If(items.permanent_location = ""LVPLADULT"", ""ADULT"",
         If(items.permanent_location = ""PAOLAADULT"", ""ADULT"",
           If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
             If(items.permanent_location LIKE ""%Y%"", ""L_YA"", 
               If(items.permanent_location  LIKE ""%CA%"", ""ADULT"", 
                 If(items.permanent_location LIKE ""%PROC%"", ""ADULT"",  
                   If(items.permanent_location IS NULL, ""ADULT"", 
                     items.permanent_location
                   )
                 )
               )
             )
           )
         )
       )
     ),
     Coalesce(items.ccode, ""XXX"")) icounts ON icounts.homebranch =
      branchesitypes.branchcode AND
      icounts.permanent_location = branchesitypes.authorised_value AND
      icounts.ccode = branchesitypes.authorised_value1 LEFT JOIN
  (SELECT
     If(statistics.branch IS NULL, ""NEKLS"", statistics.branch) AS branch,
     If(statistics.location = ""BALDADULT"", ""ADULT"", 
       If(statistics.location = ""LVPLADULT"", ""ADULT"", 
         If(statistics.location = ""PAOLAADULT"", ""ADULT"", 
           If(statistics.location LIKE ""%CHILD%"", ""CHILDRENS"", 
             If(statistics.location LIKE ""%Y%"", ""L_YA"", 
               If(statistics.location LIKE ""%CA%"", ""ADULT"", 
                 If(statistics.location LIKE ""%PROC%"", ""ADULT"", 
                   If(statistics.location IS NULL, ""ADULT"", statistics.location
                   )
                 )
               )
             )
           )
         )
       )
     ) AS LOCATION,
     Coalesce(statistics.ccode, ""XXX"") AS ccode,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     (statistics.type = 'issue' OR
         statistics.type = 'renew') AND
     statistics.datetime BETWEEN (AddDate(Last_Day(SubDate(Now(), INTERVAL 13
     MONTH)), 1)) AND (AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1))
   GROUP BY
     If(statistics.branch IS NULL, ""NEKLS"", statistics.branch), 
     If(statistics.location = ""BALDADULT"", ""ADULT"", 
       If(statistics.location = ""LVPLADULT"", ""ADULT"", 
         If(statistics.location = ""PAOLAADULT"", ""ADULT"", 
           If(statistics.location LIKE ""%CHILD%"", ""CHILDRENS"", 
             If(statistics.location LIKE ""%Y%"", ""L_YA"", 
               If(statistics.location LIKE ""%CA%"", ""ADULT"", 
                 If(statistics.location LIKE ""%PROC%"", ""ADULT"", 
                   If(statistics.location IS NULL, ""ADULT"", 
                     statistics.location
                   )
                 )
               )
             )
           )
         )
       )
     ),
     statistics.ccode) statcounts ON
      statcounts.branch = branchesitypes.branchcode AND
      statcounts.LOCATION = branchesitypes.authorised_value AND
      statcounts.ccode = branchesitypes.authorised_value1
WHERE
  branchesitypes.branchcode LIKE <<Choose your library|ZBRAN>>
GROUP BY
  branchesitypes.branchcode,
  branchesitypes.lib,
  branchesitypes.lib1,
  icounts.Count_itemnumber,
  statcounts.COUNT
UNION
SELECT
  Concat('----') AS branchcode,
  Concat('----') AS LOCATION,
  Concat('----') AS CCODE,
  Concat('----') AS CURRENT_ITEM_COUNT,
  Concat('----') AS CKO_RENEW_COUNT,
  Concat('----') AS TURNOVER
UNION
  SELECT
  If(branchess.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED', 
    If(branchess.branchcode LIKE 'PH%', 'PH_COMBINED', 
      branchess.branchcode
    )
  ) AS branchcode,
  Concat(""All locations"") AS LOCATION,
  Concat(""All collection codes"") AS CCODE,
  icounts.Count_itemnumber AS CURRENT_ITEM_COUNT,
  statcounts.COUNT AS CKO_RENEW_COUNT,
  ROUND((statcounts.COUNT / icounts.Count_itemnumber), 2) AS TURNOVER
FROM
  (SELECT
      If(branches.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED',
        If(branches.branchcode LIKE 'PH%', 'PH_COMBINED', 
          branches.branchcode
        )
      ) AS branchcode
    FROM
      branches
    GROUP BY
      If(branches.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED',
        If(branches.branchcode LIKE 'PH%', 'PH_COMBINED', 
          branches.branchcode
        )
      )
    ) branchess LEFT JOIN
  (SELECT
      If(items.homebranch LIKE 'DONI%', 'DONIPHAN_COMBINED', 
        If(items.homebranch LIKE 'PH%', 'PH_COMBINED', 
          items.homebranch
        )
      ) AS homebranch,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    GROUP BY
      If(items.homebranch LIKE 'DONI%', 'DONIPHAN_COMBINED', 
        If(items.homebranch LIKE 'PH%', 'PH_COMBINED', 
          items.homebranch
        )
      )
  ) icounts ON icounts.homebranch = branchess.branchcode LEFT JOIN
  (SELECT
     If(statistics.branch LIKE 'DONI%', ""DONIPHAN_COMBINED"",
       If(statistics.branch LIKE 'PH%', 'PH_COMBINED', 
         statistics.branch
       )
     ) AS branch,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     (statistics.type = 'issue' OR
       statistics.type = 'renew') AND
     statistics.datetime BETWEEN
       (AddDate(Last_Day(SubDate(Now(), INTERVAL 13 MONTH)), 1)) AND 
       (AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1))
   GROUP BY
     If(statistics.branch LIKE 'DONI%', ""DONIPHAN_COMBINED"",
       If(statistics.branch LIKE 'PH%', 'PH_COMBINED', statistics.branch
       )
     )
  ) statcounts ON statcounts.branch = branchess.branchcode
WHERE
  If(branchess.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED',
    If(branchess.branchcode LIKE 'PH%', 'PH_COMBINED', 
      branchess.branchcode
    )
  ) LIKE <<Choose your library|ZBRAN>>
GROUP BY
  If(branchess.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED',
    If(branchess.branchcode LIKE 'PH%', 'PH_COMBINED', 
      branchess.branchcode
    )
  ),
  icounts.Count_itemnumber,
  statcounts.COUNT
UNION
SELECT
  Concat('-----') AS branchcode,
  Concat('-----') AS LOCATION,
  Concat('-----') AS CCODE,
  Concat('-----') AS CURRENT_ITEM_COUNT,
  Concat('-----') AS CKO_RENEW_COUNT,
  Concat('-----') AS TURNOVER
UNION
SELECT
  If(branchess.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED',
    If(branchess.branchcode LIKE 'PH%', 'PH_COMBINED', 
      branchess.branchcode
    )
  ) AS branchcode,
  branchess.lib AS LOCATION,
  Concat(""All collection codes"") AS CCODE,
  icounts.Count_itemnumber AS CURRENT_ITEM_COUNT,
  statcounts.COUNT AS CKO_RENEW_COUNT,
  ROUND((statcounts.COUNT / icounts.Count_itemnumber), 2) AS TURNOVER
FROM
  (SELECT
     If(branches.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED', 
       If(branches.branchcode LIKE 'PH%', 'PH_COMBINED', 
         branches.branchcode
       )
     ) AS branchcode,
     biblocs.authorised_value,
     biblocs.lib
   FROM
     branches,
     (SELECT
       authorised_values.category,
       authorised_values.authorised_value,
       authorised_values.lib
     FROM
       authorised_values
     WHERE
       authorised_values.category = 'bibloc' AND
       authorised_values.authorised_value <> ""YOUNGADULT""
     ) biblocs
  ) branchess LEFT JOIN
  (SELECT
     If(items.homebranch LIKE 'DONI%', 'DONIPHAN_COMBINED', If(items.homebranch LIKE 'PH%', 'PH_COMBINED', items.homebranch)) AS homebranch,
       If(items.permanent_location = ""BALDADULT"", ""ADULT"", 
         If(items.permanent_location = ""LVPLADULT"", ""ADULT"", 
           If(items.permanent_location = ""PAOLAADULT"", ""ADULT"", 
             If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"", 
               If(items.permanent_location LIKE ""%Y%"", ""L_YA"", 
                 If(items.permanent_location LIKE ""%CA%"", ""ADULT"", 
                   If(items.permanent_location LIKE ""%PROC%"", ""ADULT"", 
                     If(items.permanent_location IS NULL, ""ADULT"", 
                       items.permanent_location
                     )
                   )
                 )
               )
             )
           )
         )
       ) AS permanent_location,
     Count(items.itemnumber) AS Count_itemnumber
   FROM
     items
   GROUP BY
     If(items.homebranch LIKE 'DONI%', 'DONIPHAN_COMBINED', 
       If(items.homebranch LIKE 'PH%', 'PH_COMBINED', 
         items.homebranch
       )
     ),
     If(items.permanent_location = ""BALDADULT"", ""ADULT"", 
       If(items.permanent_location = ""LVPLADULT"", ""ADULT"", 
         If(items.permanent_location = ""PAOLAADULT"", ""ADULT"", 
           If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"", 
             If(items.permanent_location LIKE ""%Y%"", ""L_YA"", 
               If(items.permanent_location LIKE ""%CA%"", ""ADULT"", 
                 If(items.permanent_location LIKE ""%PROC%"", ""ADULT"", 
                   If(items.permanent_location IS NULL, ""ADULT"", 
                     items.permanent_location
                   )
                 )
               )
             )
           )
         )
       )
     )
  ) icounts ON icounts.homebranch = branchess.branchcode AND
      icounts.permanent_location = branchess.authorised_value LEFT JOIN
  (SELECT
    If(statistics.branch LIKE 'DONI%', ""DONIPHAN_COMBINED"",
      If(statistics.branch LIKE 'PH%', 'PH_COMBINED', 
        statistics.branch
      )
    ) AS branch, 
    If(statistics.location = ""BALDADULT"", ""ADULT"", 
      If(statistics.location = ""LVPLADULT"", ""ADULT"", 
        If(statistics.location = ""PAOLAADULT"", ""ADULT"", 
          If(statistics.location LIKE ""%CHILD%"", ""CHILDRENS"", 
            If(statistics.location LIKE ""%Y%"", ""L_YA"", 
              If(statistics.location LIKE ""%CA%"", ""ADULT"", 
                If(statistics.location LIKE ""%PROC%"", ""ADULT"", 
                  If(statistics.location IS NULL, ""ADULT"", statistics.location
                  )
                )
              )
            )
          )
        )
      )
    ) AS LOCATION,
    count(*) AS COUNT
  FROM
    statistics
  WHERE
    (statistics.type = 'issue' OR
      statistics.type = 'renew') AND
    statistics.datetime BETWEEN
      (AddDate(Last_Day(SubDate(Now(), INTERVAL 13 MONTH)), 1)) AND 
      (AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1))
  GROUP BY
    If(statistics.branch LIKE 'DONI%', ""DONIPHAN_COMBINED"",
      If(statistics.branch LIKE 'PH%', 'PH_COMBINED', 
        statistics.branch
      )
    ), 
    If(statistics.location = ""BALDADULT"", ""ADULT"", 
      If(statistics.location = ""LVPLADULT"", ""ADULT"", 
        If(statistics.location = ""PAOLAADULT"", ""ADULT"", 
          If(statistics.location LIKE ""%CHILD%"", ""CHILDRENS"", 
            If(statistics.location LIKE ""%Y%"", ""L_YA"", 
              If(statistics.location LIKE ""%CA%"", ""ADULT"", 
                If(statistics.location LIKE ""%PROC%"", ""ADULT"", 
                  If(statistics.location IS  NULL, ""ADULT"", 
                    statistics.location
                  )
                )
              )
            )
          )
        )
      )
    )
  ) statcounts ON
    statcounts.branch = branchess.branchcode AND
    statcounts.LOCATION = branchess.authorised_value
WHERE
  If(branchess.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED',
    If(branchess.branchcode LIKE 'PH%', 'PH_COMBINED', 
      branchess.branchcode
    )
  ) LIKE <<Choose your library|ZBRAN>>
GROUP BY
  If(branchess.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED',
    If(branchess.branchcode LIKE 'PH%', 'PH_COMBINED', 
      branchess.branchcode
    )
  ),
  branchess.lib,
  icounts.Count_itemnumber,
  statcounts.COUNT
UNION 
SELECT
  Concat('------') AS branchcode,
  Concat('------') AS LOCATION,
  Concat('------') AS CCODE,
  Concat('------') AS CURRENT_ITEM_COUNT,
  Concat('------') AS CKO_RENEW_COUNT,
  Concat('------') AS TURNOVER
UNION 
SELECT
  branchesitypes.branchcode,
  branchesitypes.lib AS LOCATION,
  branchesitypes.lib1 AS CCODE,
  icounts.Count_itemnumber AS CURRENT_ITEM_COUNT,
  statcounts.COUNT AS CKO_RENEW_COUNT,
  round((statcounts.COUNT / icounts.Count_itemnumber), 2) AS TURNOVER
FROM
  (SELECT
      If(branches.branchcode LIKE 'DONI%', 'DONIPHAN_COMBINED',
        If(branches.branchcode LIKE 'PH%', 'PH_COMBINED', 
          branches.branchcode)) AS branchcode,
      biblocs.category,
      biblocs.authorised_value,
      biblocs.lib,
      ccodes.authorised_value AS authorised_value1,
      ccodes.lib AS lib1
    FROM
      branches,
      (SELECT
          authorised_values.category,
          authorised_values.authorised_value,
          authorised_values.lib
        FROM
          authorised_values
        WHERE
          authorised_values.category = 'bibloc' AND
          authorised_values.authorised_value <> ""YOUNGADULT"") biblocs,
      (SELECT
          authorised_values.category,
          authorised_values.authorised_value,
          authorised_values.lib
        FROM
          authorised_values
        WHERE
          authorised_values.category = 'ccode') ccodes) branchesitypes LEFT JOIN
  (SELECT
      If(items.homebranch LIKE 'DONI%', 'DONIPHAN_COMBINED', If(items.homebranch
      LIKE 'PH%', 'PH_COMBINED', items.homebranch)) AS homebranch,
      If(items.permanent_location = ""BALDADULT"", ""ADULT"",
        If(items.permanent_location = ""LVPLADULT"", ""ADULT"",
          If(items.permanent_location = ""PAOLAADULT"", ""ADULT"",
            If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
              If(items.permanent_location LIKE ""%Y%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CA%"", ""ADULT"",
                  If(items.permanent_location LIKE ""%PROC%"", ""ADULT"",
                    If(items.permanent_location IS NULL, ""ADULT"",
                      items.permanent_location
                    )
                  )
                )
              )
            )
          )
        )
      ) AS permanent_location,
      Coalesce(items.ccode, ""XXX"") AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    GROUP BY
      If(items.homebranch LIKE 'DONI%', 'DONIPHAN_COMBINED', 
        If(items.homebranch LIKE 'PH%', 'PH_COMBINED', 
          items.homebranch)),
      If(items.permanent_location = ""BALDADULT"", ""ADULT"",
        If(items.permanent_location = ""LVPLADULT"", ""ADULT"",
          If(items.permanent_location = ""PAOLAADULT"", ""ADULT"",
            If(items.permanent_location LIKE ""%CHILD%"", ""CHILDRENS"",
              If(items.permanent_location LIKE ""%Y%"", ""L_YA"",
                If(items.permanent_location LIKE ""%CA%"", ""ADULT"",
                  If(items.permanent_location LIKE ""%PROC%"", ""ADULT"",
                    If(items.permanent_location IS NULL, ""ADULT"",
                      items.permanent_location
                    )
                  )
                )
              )
            )
          )
        )
      ),
      Coalesce(items.ccode, ""XXX"")) icounts ON icounts.homebranch =
      branchesitypes.branchcode AND
      icounts.permanent_location = branchesitypes.authorised_value AND
      icounts.ccode = branchesitypes.authorised_value1 LEFT JOIN
  (SELECT
      If(statistics.branch LIKE 'DONI%', 'DONIPHAN_COMBINED',
        If(statistics.branch LIKE 'PH%', 'PH_COMBINED', 
          statistics.branch)) AS
      branch,
      If(statistics.location = ""BALDADULT"", ""ADULT"", 
        If(statistics.location = ""LVPLADULT"", ""ADULT"", 
          If(statistics.location = ""PAOLAADULT"", ""ADULT"",
            If(statistics.location LIKE ""%CHILD%"", ""CHILDRENS"", 
              If(statistics.location LIKE ""%Y%"", ""L_YA"", 
                If(statistics.location LIKE ""%CA%"", ""ADULT"",
                  If(statistics.location LIKE ""%PROC%"", ""ADULT"", 
                    If(statistics.location IS NULL, ""ADULT"", 
                      statistics.location
                    )
                  )
                )
              )
            )
          )
        )
      ) AS LOCATION,
      Coalesce(statistics.ccode, ""XXX"") AS ccode,
      count(*) AS COUNT
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      statistics.datetime BETWEEN 
        (AddDate(Last_Day(SubDate(Now(), INTERVAL 13 MONTH)), 1)) AND 
        (AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1))
    GROUP BY
      If(statistics.branch LIKE 'DONI%', 'DONIPHAN_COMBINED',
        If(statistics.branch LIKE 'PH%', 'PH_COMBINED', 
          statistics.branch)),
      If(statistics.location = ""BALDADULT"", ""ADULT"", 
        If(statistics.location = ""LVPLADULT"", ""ADULT"", 
          If(statistics.location = ""PAOLAADULT"", ""ADULT"", 
            If(statistics.location LIKE ""%CHILD%"", ""CHILDRENS"", 
              If(statistics.location LIKE ""%Y%"", ""L_YA"", 
                If(statistics.location LIKE ""%CA%"", ""ADULT"", 
                  If(statistics.location LIKE ""%PROC%"", ""ADULT"", 
                    If(statistics.location IS NULL, ""ADULT"", 
                      statistics.location
                    )
                  )
                )
              )
            )
          )
        )
      ),
      Coalesce(statistics.ccode, ""XXX"")) statcounts ON 
      statcounts.branch = branchesitypes.branchcode AND
      statcounts.LOCATION = branchesitypes.authorised_value AND
      statcounts.ccode = branchesitypes.authorised_value1
WHERE
  branchesitypes.branchcode LIKE <<Choose your library|ZBRAN>>
GROUP BY
  branchesitypes.branchcode,
  branchesitypes.lib,
  branchesitypes.lib1,
  icounts.Count_itemnumber,
  statcounts.COUNT",,,,,,,,
R.003486,"/*
R.003486

----------

Name: GHW - Circulation/fees/request rules 1 - circulation and renewal
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-03-30 09:13:51
Modified on: 2022-07-12 17:20:15
Date last run: 2022-10-03 09:06:40

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Verbose listing of circulation/fees/request rules regarding circulation and renewal rules</p>
<ul><li>Shows the current rules</li>
<li>at the library you specify</li>
<li>grouped and sorted by rule branchcode, borrower category, and item type</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Rules are applied from most specific to least specific and the rules in this report are set to display from most specific to least specific.  The higher a rule is in the results of this report, the higher its priority.</p>
<p></p>
<p>Rules regarding circulation are applied based on the library where the items are being checked out.  If an item is shipped from SENECA to OTTAWA to fill a request, it will follow the check-out and renewal rules at OTTAWA when it is checked out at OTTAWA.<br />(Based on the CircControl system preference - 2021.03.10)</p></p></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3486&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">rules, circulation</p>
</div>

----------
*/

","SELECT 
  branchess.branchcode, 
  categorytypes.BORROWER_CATEGORY, 
  categorytypes.ITEM_TYPE, 
  notes.rule_value AS NOTE, 
  If( 
    maxissueqty.rule_value = """", ""Unlimited"", maxissueqty.rule_value 
  ) AS CKOS_ALLOWED, 
  If( 
    maxonsiteissueqty.rule_value = """", ""Unlimited"", maxissueqty.rule_value 
  ) AS ONSITE_ALLOWED, 
  issuelength.rule_value AS LOAN_PERIOD, 
  lengthunit.rule_value AS LOAN_UNIT, 
  If( 
    hardduedate.rule_value = """", 
    """", 
    If( 
      hardduedatecompare.rule_value = ""-1"", 
      ""Before"", 
      If( 
        hardduedatecompare.rule_value = ""0"", 
        ""Exactly on"", 
        If( 
          hardduedatecompare.rule_value = ""1"", 
          ""After"", 
          hardduedatecompare.rule_value 
        ) 
      ) 
    ) 
  ) AS HDD_ITEMS_DUE, 
  hardduedate.rule_value AS HARD_DATE, 
  renewalsallowed.rule_value AS RENEWAL_ALLOWED, 
  renewalperiod.rule_value AS RENEWAL_PERIOD, 
  norenewalbefore.rule_value AS NO_RENEWAL_BEFORE, 
  If( 
    auto_renew.rule_value = 0, 
    ""Disabled"", 
    If( 
      auto_renew.rule_value = 1, 
      ""Enabled"", 
      auto_renew.rule_value 
    ) 
  ) AS AUTO_RENEW_ENABLED, 
  no_auto_renewal_after.rule_value AS NO_AUTO_RENEW_AFTER, 
  no_auto_renewal_after_hard_limit.rule_value AS AUTO_RENEW_HDD 
FROM 
  ( 
    SELECT 
      branches.branchcode, 
      branches.branchname 
    FROM 
      branches 
    UNION 
    SELECT 
      Concat('ALL') AS branchcode, 
      Concat('All libraries') AS branchname 
  ) branchess JOIN 
  ( 
    SELECT 
      If( 
        circulation_rules.branchcode IS NULL, 
        ""ALL"", 
        circulation_rules.branchcode 
      ) AS branchcode, 
      If( 
        circulation_rules.categorycode IS NULL, 
        ""ALL"", 
        circulation_rules.categorycode 
      ) AS categorycode, 
      If(categories.description IS NULL, ""All borrowers"", categories.description) AS BORROWER_CATEGORY, 
      If( 
        circulation_rules.itemtype IS NULL, 
        ""ALL"", 
        circulation_rules.itemtype 
      ) AS itemtype, 
      If(itemtypes.description IS NULL, ""All item types"", itemtypes.description) AS ITEM_TYPE 
    FROM 
      circulation_rules LEFT JOIN 
      categories ON circulation_rules.categorycode = categories.categorycode 
      LEFT JOIN 
      itemtypes ON circulation_rules.itemtype = itemtypes.itemtype 
    WHERE 
      circulation_rules.rule_name <> ""accountsent"" AND 
      circulation_rules.rule_name <> ""hold_fulfillment_policy"" AND 
      circulation_rules.rule_name <> ""holdallowed"" AND 
      circulation_rules.rule_name <> ""max_holds"" AND 
      circulation_rules.rule_name <> ""patron_maxissueqty"" AND 
      circulation_rules.rule_name <> ""patron_maxonsiteissueqty"" AND 
      circulation_rules.rule_name <> ""refund"" AND 
      circulation_rules.rule_name <> ""restrictedtype"" AND 
      circulation_rules.rule_name <> ""returnbranch"" 
    GROUP BY 
      If( 
        circulation_rules.branchcode IS NULL, 
        ""ALL"", 
        circulation_rules.branchcode 
      ), 
      If( 
        circulation_rules.categorycode IS NULL, 
        ""ALL"", 
        circulation_rules.categorycode 
      ), 
      If(categories.description IS NULL, ""All borrowers"", categories.description), 
      circulation_rules.itemtype, 
      itemtypes.description 
  ) categorytypes 
  ON categorytypes.branchcode = branchess.branchcode LEFT JOIN 
  ( 
    SELECT 
      If( 
        circulation_rules.branchcode IS NULL, 
        ""ALL"", 
        circulation_rules.branchcode 
      ) AS branchcode, 
      If( 
        circulation_rules.categorycode IS NULL, 
        ""ALL"", 
        circulation_rules.categorycode 
      ) AS categorycode, 
      If( 
        circulation_rules.itemtype IS NULL, 
        ""ALL"", 
        circulation_rules.itemtype 
      ) AS itemtype, 
      circulation_rules.rule_name, 
      circulation_rules.rule_value 
    FROM 
      circulation_rules 
    WHERE 
      circulation_rules.rule_name = 'note' 
  ) notes 
  ON notes.branchcode = categorytypes.branchcode AND 
    notes.categorycode = categorytypes.categorycode AND 
    notes.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
      If( 
        circulation_rules.branchcode IS NULL, 
        ""ALL"", 
        circulation_rules.branchcode 
      ) AS branchcode, 
      If( 
        circulation_rules.categorycode IS NULL, 
        ""ALL"", 
        circulation_rules.categorycode 
      ) AS categorycode, 
      If( 
        circulation_rules.itemtype IS NULL, 
        ""ALL"", 
        circulation_rules.itemtype 
      ) AS itemtype, 
      circulation_rules.rule_name, 
      circulation_rules.rule_value 
    FROM 
      circulation_rules 
    WHERE 
      circulation_rules.rule_name = 'maxissueqty' 
  ) maxissueqty 
  ON maxissueqty.branchcode = categorytypes.branchcode AND 
    maxissueqty.categorycode = categorytypes.categorycode AND 
    maxissueqty.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
      If( 
        circulation_rules.branchcode IS NULL, 
        ""ALL"", 
        circulation_rules.branchcode 
      ) AS branchcode, 
      If( 
        circulation_rules.categorycode IS NULL, 
        ""ALL"", 
        circulation_rules.categorycode 
      ) AS categorycode, 
      If( 
        circulation_rules.itemtype IS NULL, 
        ""ALL"", 
        circulation_rules.itemtype 
      ) AS itemtype, 
      circulation_rules.rule_name, 
      circulation_rules.rule_value 
    FROM 
      circulation_rules 
    WHERE 
      circulation_rules.rule_name = 'maxonsiteissueqty' 
  ) maxonsiteissueqty 
  ON maxonsiteissueqty.branchcode = categorytypes.branchcode AND 
    maxonsiteissueqty.categorycode = categorytypes.categorycode AND 
    maxonsiteissueqty.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
      If(
        circulation_rules.branchcode IS NULL, 
        ""ALL"", 
        circulation_rules.branchcode
      ) AS branchcode, 
      If( 
        circulation_rules.categorycode IS NULL, 
        ""ALL"", 
        circulation_rules.categorycode 
      ) AS categorycode, 
      If( 
        circulation_rules.itemtype IS NULL, 
        ""ALL"", 
        circulation_rules.itemtype 
      ) AS itemtype, 
      circulation_rules.rule_name, 
      circulation_rules.rule_value 
    FROM 
      circulation_rules 
    WHERE 
      circulation_rules.rule_name = 'issuelength' 
  ) issuelength 
  ON issuelength.branchcode = categorytypes.branchcode AND 
    issuelength.categorycode = categorytypes.categorycode AND 
    issuelength.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
      If( 
        circulation_rules.branchcode IS NULL, 
        ""ALL"", 
        circulation_rules.branchcode 
      ) AS branchcode, 
      If( 
        circulation_rules.categorycode IS NULL, 
        ""ALL"", 
        circulation_rules.categorycode 
      ) AS categorycode, 
      If( 
        circulation_rules.itemtype IS NULL, 
        ""ALL"", 
        circulation_rules.itemtype 
      ) AS itemtype, 
      circulation_rules.rule_name, 
      circulation_rules.rule_value 
    FROM 
      circulation_rules 
    WHERE 
      circulation_rules.rule_name = 'lengthunit' 
  ) lengthunit 
  ON lengthunit.branchcode = categorytypes.branchcode AND 
    lengthunit.categorycode = categorytypes.categorycode AND 
    lengthunit.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
      If( 
        circulation_rules.branchcode IS NULL, 
        ""ALL"", 
        circulation_rules.branchcode 
      ) AS branchcode, 
      If( 
        circulation_rules.categorycode IS NULL, 
        ""ALL"", 
        circulation_rules.categorycode 
      ) AS categorycode, 
      If( 
        circulation_rules.itemtype IS NULL, 
        ""ALL"", 
        circulation_rules.itemtype 
      ) AS itemtype, 
      circulation_rules.rule_name, 
      circulation_rules.rule_value 
    FROM 
      circulation_rules 
    WHERE 
      circulation_rules.rule_name = 'hardduedatecompare' 
  ) hardduedatecompare 
  ON hardduedatecompare.branchcode = categorytypes.branchcode AND 
    hardduedatecompare.categorycode = categorytypes.categorycode AND 
    hardduedatecompare.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
      If( 
        circulation_rules.branchcode IS NULL, 
        ""ALL"", 
        circulation_rules.branchcode 
      ) AS branchcode, 
      If( 
        circulation_rules.categorycode IS NULL, 
        ""ALL"", 
        circulation_rules.categorycode 
      ) AS categorycode, 
      If( 
        circulation_rules.itemtype IS NULL, 
        ""ALL"", 
        circulation_rules.itemtype 
      ) AS itemtype, 
      circulation_rules.rule_name, 
      circulation_rules.rule_value 
    FROM 
      circulation_rules 
    WHERE 
      circulation_rules.rule_name = 'hardduedate' 
  ) hardduedate 
  ON hardduedate.branchcode = categorytypes.branchcode AND 
    hardduedate.categorycode = categorytypes.categorycode AND 
    hardduedate.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
      If( 
        circulation_rules.branchcode IS NULL, 
        ""ALL"", 
        circulation_rules.branchcode 
      ) AS branchcode, 
      If( 
        circulation_rules.categorycode IS NULL, 
        ""ALL"", 
        circulation_rules.categorycode 
      ) AS categorycode, 
      If( 
        circulation_rules.itemtype IS NULL, 
        ""ALL"", 
        circulation_rules.itemtype 
      ) AS itemtype, 
      circulation_rules.rule_name, 
      circulation_rules.rule_value 
    FROM 
      circulation_rules 
    WHERE 
      circulation_rules.rule_name = 'renewalsallowed' 
  ) renewalsallowed 
  ON renewalsallowed.branchcode = categorytypes.branchcode AND 
    renewalsallowed.categorycode = categorytypes.categorycode AND 
    renewalsallowed.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
      If( 
        circulation_rules.branchcode IS NULL, 
        ""ALL"", 
        circulation_rules.branchcode 
      ) AS branchcode, 
      If( 
        circulation_rules.categorycode IS NULL, 
        ""ALL"", 
        circulation_rules.categorycode 
      ) AS categorycode, 
      If( 
        circulation_rules.itemtype IS NULL, 
        ""ALL"", 
        circulation_rules.itemtype 
      ) AS itemtype, 
      circulation_rules.rule_name, 
      circulation_rules.rule_value 
    FROM 
      circulation_rules 
    WHERE 
      circulation_rules.rule_name = 'renewalperiod' 
  ) renewalperiod 
  ON renewalperiod.branchcode = categorytypes.branchcode AND 
    renewalperiod.categorycode = categorytypes.categorycode AND 
    renewalperiod.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
      If( 
        circulation_rules.branchcode IS NULL, 
        ""ALL"", 
        circulation_rules.branchcode 
      ) AS branchcode, 
      If( 
        circulation_rules.categorycode IS NULL, 
        ""ALL"", 
        circulation_rules.categorycode 
      ) AS categorycode, 
      If( 
        circulation_rules.itemtype IS NULL, 
        ""ALL"", 
        circulation_rules.itemtype 
      ) AS itemtype, 
      circulation_rules.rule_name, 
      circulation_rules.rule_value 
    FROM 
      circulation_rules 
    WHERE 
      circulation_rules.rule_name = 'norenewalbefore' 
  ) norenewalbefore 
  ON norenewalbefore.branchcode = categorytypes.branchcode AND 
    norenewalbefore.categorycode = categorytypes.categorycode AND 
    norenewalbefore.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
      If( 
        circulation_rules.branchcode IS NULL, 
        ""ALL"", 
        circulation_rules.branchcode 
      ) AS branchcode, 
      If( 
        circulation_rules.categorycode IS NULL, 
        ""ALL"", 
        circulation_rules.categorycode 
      ) AS categorycode, 
      If( 
        circulation_rules.itemtype IS NULL, 
        ""ALL"", 
        circulation_rules.itemtype 
      ) AS itemtype, 
      circulation_rules.rule_name, 
      circulation_rules.rule_value 
    FROM 
      circulation_rules 
    WHERE 
      circulation_rules.rule_name = 'auto_renew' 
  ) auto_renew 
  ON auto_renew.branchcode = categorytypes.branchcode AND 
    auto_renew.categorycode = categorytypes.categorycode AND 
    auto_renew.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
      If( 
        circulation_rules.branchcode IS NULL, 
        ""ALL"", 
        circulation_rules.branchcode 
      ) AS branchcode, 
      If( 
        circulation_rules.categorycode IS NULL, 
        ""ALL"", 
        circulation_rules.categorycode 
      ) AS categorycode, 
      If( 
        circulation_rules.itemtype IS NULL, 
        ""ALL"", 
        circulation_rules.itemtype 
      ) AS itemtype, 
      circulation_rules.rule_name, 
      circulation_rules.rule_value 
    FROM 
      circulation_rules 
    WHERE 
      circulation_rules.rule_name = 'no_auto_renewal_after' 
  ) no_auto_renewal_after 
  ON no_auto_renewal_after.branchcode = categorytypes.branchcode AND 
    no_auto_renewal_after.categorycode = categorytypes.categorycode AND 
    no_auto_renewal_after.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
      If( 
        circulation_rules.branchcode IS NULL, 
        ""ALL"", 
        circulation_rules.branchcode 
      ) AS branchcode, 
      If( 
        circulation_rules.categorycode IS NULL, 
        ""ALL"", 
        circulation_rules.categorycode 
      ) AS categorycode, 
      If( 
        circulation_rules.itemtype IS NULL, 
        ""ALL"", 
        circulation_rules.itemtype 
      ) AS itemtype, 
      circulation_rules.rule_name, 
      circulation_rules.rule_value 
    FROM 
      circulation_rules 
    WHERE 
      circulation_rules.rule_name = 'no_auto_renewal_after_hard_limit' 
  ) no_auto_renewal_after_hard_limit 
  ON no_auto_renewal_after_hard_limit.branchcode = categorytypes.branchcode AND 
    no_auto_renewal_after_hard_limit.categorycode = categorytypes.categorycode AND 
    no_auto_renewal_after_hard_limit.itemtype = categorytypes.itemtype 
WHERE 
  (categorytypes.branchcode LIKE <<Choose your library|branches:all>> OR
    categorytypes.branchcode LIKE ""ALL"") 
GROUP BY 
  branchess.branchcode, 
  categorytypes.BORROWER_CATEGORY, 
  categorytypes.ITEM_TYPE 
ORDER BY 
  If( 
    branchess.branchcode = ""ALL"", 
    ""ZZZZZ"", 
    branchess.branchcode 
  ), 
  If( 
    categorytypes.BORROWER_CATEGORY = ""All borrowers"", 
    ""ZZZZZ"", 
    categorytypes.BORROWER_CATEGORY 
  ), 
  If( 
    categorytypes.ITEM_TYPE = ""All item types"", 
    ""ZZZZZ"", 
    categorytypes.ITEM_TYPE 
  )",,,,,,,,
R.003487,"/*
R.003487

----------

Name: GHW - Circulation/fees/request rules 2 - late fees and suspensions
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-03-30 09:23:49
Modified on: 2022-07-12 17:28:15
Date last run: 2022-08-18 15:15:54

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Verbose listing of circulation/fees/request rules regarding late fees and ""suspensions""</p>
<ul><li>Shows the current rules</li>
<li>at the library you specify</li>
<li>grouped and sorted by rule branchcode, borrower category, and item type</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Rules are applied from most specific to least specific and the rules in this report are set to display from most specific to least specific.  The higher a rule is in the results of this report, the higher its priority.</p>
<p></p>
<p>In Next Search Catalog, late fee rules follow the rules at the library where an item is checked out.  If an item is shipped from ATCHISON to SILVERLAKE to fill a request and it is kept overdue, the borrower will be billed following the rules at SILVERLAKE.<br />(Based on the CircControl system preference - 2021.03.12)</p></p>
<p></p>
<p>""Suspensions"" in the case of this report relate to a type of late ""fee"" we are not currently using.  Some libraries in Europe use ""Suspensions"" or ""Debarrments"" in place of library late fees.  If a borrower keeps a book overdue for 5 days, their account is ""suspended"" or ""debarred"" from borrowing materials for 5 days.  If they keep something overdue 18 days, their account is suspended for 18 days, etc. etc.</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3486&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">rules, circulation</p>
</div>

----------
*/

","SELECT 
  branchess.branchcode, 
  categorytypes.BORROWER_CATEGORY, 
  categorytypes.ITEM_TYPE, 
  Format(fine.rule_value, 2) AS LATE_FEE, 
  chargeperiod.rule_value AS FEE_PERIOD, 
  lengthunit.rule_value AS FEE_INTERVAL, 
  chargeperiod_charge_at.rule_value AS CHARGED_AT, 
  firstremind.rule_value AS GRACE_PERIOD, 
  lengthunit.rule_value AS GRACE_INTERVAL, 
  Concat( 
    If(overduefinescap.rule_value = 0, """", 
      Format(overduefinescap.rule_value, 2)), 
      cap_fine_to_replacement_price.rule_value 
    ) AS LATE_FEE_CAP, 
  finedays.rule_value AS SUSPENSION_DAYS, 
  maxsuspensiondays.rule_value AS MAX_SUSPENSION, 
  If(finedays.rule_value = """", """", suspension_chargeperiod.rule_value) AS SUSPENSION_INTERVAL 
FROM 
  ( 
    SELECT 
     branches.branchcode, 
     branches.branchname 
   FROM 
     branches 
   UNION 
   SELECT 
     Concat('ALL') AS branchcode, 
     Concat('All libraries') AS branchname 
  ) branchess JOIN 
  ( 
    SELECT 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ) AS branchcode, 
     If( 
     circulation_rules.categorycode IS NULL, 
     ""ALL"", 
     circulation_rules.categorycode 
   ) AS categorycode, 
     If(categories.description IS NULL, ""All borrowers"", categories.description) AS BORROWER_CATEGORY, 
     If( 
     circulation_rules.itemtype IS NULL, 
     ""ALL"", 
     circulation_rules.itemtype 
     ) AS itemtype, 
     If(itemtypes.description IS NULL, ""All item types"", itemtypes.description) AS ITEM_TYPE 
   FROM 
     circulation_rules LEFT JOIN 
     categories ON circulation_rules.categorycode = categories.categorycode 
     LEFT JOIN 
     itemtypes ON circulation_rules.itemtype = itemtypes.itemtype 
   WHERE 
     circulation_rules.rule_name <> ""accountsent"" AND 
     circulation_rules.rule_name <> ""hold_fulfillment_policy"" AND 
     circulation_rules.rule_name <> ""holdallowed"" AND 
     circulation_rules.rule_name <> ""max_holds"" AND 
     circulation_rules.rule_name <> ""patron_maxissueqty"" AND 
     circulation_rules.rule_name <> ""patron_maxonsiteissueqty"" AND 
     circulation_rules.rule_name <> ""refund"" AND 
     circulation_rules.rule_name <> ""restrictedtype"" AND 
     circulation_rules.rule_name <> ""returnbranch"" 
   GROUP BY 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ), 
     If( 
     circulation_rules.categorycode IS NULL, 
     ""ALL"", 
     circulation_rules.categorycode 
   ), 
     If(categories.description IS NULL, ""All borrowers"", categories.description), 
     circulation_rules.itemtype, 
     itemtypes.description 
  ) categorytypes 
  ON categorytypes.branchcode = branchess.branchcode LEFT JOIN 
  ( 
    SELECT 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ) AS branchcode, 
     If( 
     circulation_rules.categorycode IS NULL, 
     ""ALL"", 
     circulation_rules.categorycode 
   ) AS categorycode, 
     If( 
     circulation_rules.itemtype IS NULL, 
     ""ALL"", 
     circulation_rules.itemtype 
     ) AS itemtype, 
     circulation_rules.rule_name, 
     circulation_rules.rule_value 
   FROM 
     circulation_rules 
   WHERE 
     circulation_rules.rule_name = 'fine' 
  ) fine 
  ON fine.branchcode = categorytypes.branchcode AND 
    fine.categorycode = categorytypes.categorycode AND 
    fine.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ) AS branchcode, 
     If( 
     circulation_rules.categorycode IS NULL, 
     ""ALL"", 
     circulation_rules.categorycode 
   ) AS categorycode, 
     If( 
     circulation_rules.itemtype IS NULL, 
     ""ALL"", 
     circulation_rules.itemtype 
     ) AS itemtype, 
     circulation_rules.rule_name, 
     circulation_rules.rule_value 
   FROM 
     circulation_rules 
   WHERE 
     circulation_rules.rule_name = 'lengthunit' 
  ) lengthunit 
  ON lengthunit.branchcode = categorytypes.branchcode AND 
    lengthunit.categorycode = categorytypes.categorycode AND 
    lengthunit.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ) AS branchcode, 
     If( 
     circulation_rules.categorycode IS NULL, 
     ""ALL"", 
     circulation_rules.categorycode 
   ) AS categorycode, 
     If( 
     circulation_rules.itemtype IS NULL, 
     ""ALL"", 
     circulation_rules.itemtype 
     ) AS itemtype, 
     circulation_rules.rule_name, 
     circulation_rules.rule_value 
   FROM 
     circulation_rules 
   WHERE 
     circulation_rules.rule_name = 'chargeperiod' 
  ) chargeperiod 
  ON chargeperiod.branchcode = categorytypes.branchcode AND 
    chargeperiod.categorycode = categorytypes.categorycode AND 
    chargeperiod.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ) AS branchcode, 
     If( 
     circulation_rules.categorycode IS NULL, 
     ""ALL"", 
     circulation_rules.categorycode 
   ) AS categorycode, 
     If( 
     circulation_rules.itemtype IS NULL, 
     ""ALL"", 
     circulation_rules.itemtype 
     ) AS itemtype, 
     circulation_rules.rule_name, 
     If(circulation_rules.rule_value = 0, ""End of interval"", 
       If(circulation_rules.rule_value = 1, ""Start of interval"", 
         circulation_rules.rule_value 
       ) 
     ) AS rule_value 
   FROM 
     circulation_rules 
   WHERE 
     circulation_rules.rule_name = 'chargeperiod_charge_at' 
  ) chargeperiod_charge_at 
  ON chargeperiod_charge_at.branchcode = categorytypes.branchcode AND 
    chargeperiod_charge_at.categorycode = categorytypes.categorycode AND 
    chargeperiod_charge_at.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ) AS branchcode, 
     If( 
     circulation_rules.categorycode IS NULL, 
     ""ALL"", 
     circulation_rules.categorycode 
   ) AS categorycode, 
     If( 
     circulation_rules.itemtype IS NULL, 
     ""ALL"", 
     circulation_rules.itemtype 
     ) AS itemtype, 
     circulation_rules.rule_name, 
     circulation_rules.rule_value 
   FROM 
     circulation_rules 
   WHERE 
     circulation_rules.rule_name = 'firstremind' 
  ) firstremind 
  ON firstremind.branchcode = categorytypes.branchcode AND 
    firstremind.categorycode = categorytypes.categorycode AND 
    firstremind.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ) AS branchcode, 
     If( 
     circulation_rules.categorycode IS NULL, 
     ""ALL"", 
     circulation_rules.categorycode 
   ) AS categorycode, 
     If( 
     circulation_rules.itemtype IS NULL, 
     ""ALL"", 
     circulation_rules.itemtype 
     ) AS itemtype, 
     circulation_rules.rule_name, 
     circulation_rules.rule_value 
   FROM 
     circulation_rules 
   WHERE 
     circulation_rules.rule_name = 'overduefinescap' 
  ) overduefinescap 
  ON overduefinescap.branchcode = categorytypes.branchcode AND 
    overduefinescap.categorycode = categorytypes.categorycode AND 
    overduefinescap.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ) AS branchcode, 
     If( 
     circulation_rules.categorycode IS NULL, 
     ""ALL"", 
     circulation_rules.categorycode 
   ) AS categorycode, 
     If( 
     circulation_rules.itemtype IS NULL, 
     ""ALL"", 
     circulation_rules.itemtype 
     ) AS itemtype, 
     circulation_rules.rule_name, 
     If(circulation_rules.rule_value = 0, """", 
       If(circulation_rules.rule_value = 1, ""Item replacement cost"", 
         circulation_rules.rule_value 
       ) 
     ) AS rule_value 
   FROM 
     circulation_rules 
   WHERE 
     circulation_rules.rule_name = 'cap_fine_to_replacement_price' 
  ) cap_fine_to_replacement_price 
  ON cap_fine_to_replacement_price.branchcode = categorytypes.branchcode AND 
    cap_fine_to_replacement_price.categorycode = categorytypes.categorycode AND 
    cap_fine_to_replacement_price.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ) AS branchcode, 
     If( 
     circulation_rules.categorycode IS NULL, 
     ""ALL"", 
     circulation_rules.categorycode 
   ) AS categorycode, 
     If( 
     circulation_rules.itemtype IS NULL, 
     ""ALL"", 
     circulation_rules.itemtype 
     ) AS itemtype, 
     circulation_rules.rule_name, 
     circulation_rules.rule_value 
   FROM 
     circulation_rules 
   WHERE 
     circulation_rules.rule_name = 'finedays' 
  ) finedays 
  ON finedays.branchcode =  categorytypes.branchcode AND 
    finedays.categorycode = categorytypes.categorycode AND 
    finedays.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ) AS branchcode, 
     If( 
     circulation_rules.categorycode IS NULL, 
     ""ALL"", 
     circulation_rules.categorycode 
   ) AS categorycode, 
     If( 
     circulation_rules.itemtype IS NULL, 
     ""ALL"", 
     circulation_rules.itemtype 
     ) AS itemtype, 
     circulation_rules.rule_name, 
     circulation_rules.rule_value 
   FROM 
     circulation_rules 
   WHERE 
     circulation_rules.rule_name = 'maxsuspensiondays' 
  ) maxsuspensiondays 
  ON maxsuspensiondays.branchcode = categorytypes.branchcode AND 
    maxsuspensiondays.categorycode = categorytypes.categorycode AND 
    maxsuspensiondays.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ) AS branchcode, 
     If( 
     circulation_rules.categorycode IS NULL, 
     ""ALL"", 
     circulation_rules.categorycode 
   ) AS categorycode, 
     If( 
     circulation_rules.itemtype IS NULL, 
     ""ALL"", 
     circulation_rules.itemtype 
     ) AS itemtype, 
     circulation_rules.rule_name, 
     circulation_rules.rule_value 
   FROM 
     circulation_rules 
   WHERE 
     circulation_rules.rule_name = 'suspension_chargeperiod' 
  ) suspension_chargeperiod 
  ON suspension_chargeperiod.branchcode = categorytypes.branchcode AND 
    suspension_chargeperiod.categorycode = categorytypes.categorycode AND 
    suspension_chargeperiod.itemtype = categorytypes.itemtype 
WHERE 
  (categorytypes.branchcode LIKE <<Choose your library|branches:all>> OR 
    categorytypes.branchcode LIKE ""ALL"") 
GROUP BY 
  branchess.branchcode, 
  categorytypes.BORROWER_CATEGORY, 
  categorytypes.ITEM_TYPE 
  ORDER BY 
    If( 
      branchess.branchcode = ""ALL"", 
      ""ZZZZZ"", 
      branchess.branchcode 
    ), 
    If( 
      categorytypes.BORROWER_CATEGORY = ""All borrowers"", 
      ""ZZZZZ"", 
      categorytypes.BORROWER_CATEGORY 
    ), 
    If( 
      categorytypes.ITEM_TYPE = ""All item types"", 
      ""ZZZZZ"", 
      categorytypes.ITEM_TYPE 
    )",,,,,,,,
R.003488,"/*
R.003488

----------

Name: GHW - Circulation/fees/request rules 3 - requests and misceleaneous
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-03-30 09:53:38
Modified on: 2022-07-12 17:27:11
Date last run: 2022-08-18 15:17:09

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Verbose listing of circulation/fees/request rules regarding requests and some miscellaneous rules</p>
<ul><li>Shows the current rules</li>
<li>at the library you specify</li>
<li>grouped and sorted by rule branchcode, borrower category, and item type</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Rules are applied from most specific to least specific and the rules in this report are set to display from most specific to least specific.  The higher a rule is in the results of this report, the higher its priority.</p>
<p></p>
<p>In Next Search Catalog, rules for requests are applied following the rules at the library that owns an item.<br />(Based on the ReservesControlBranch system preference - 2021.03.10)</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3486&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">rules, circulation</p>
</div>

----------
*/

","SELECT 
  branchess.branchcode, 
  categorytypes.BORROWER_CATEGORY, 
  categorytypes.ITEM_TYPE, 
  reservesallowed.rule_value AS REQUESTS_ALLOWED, 
  holds_per_day.rule_value AS REQUESTS_PER_DAY, 
  holds_per_record.rule_value AS REQUESTS_PER_BIBLIO, 
  If(onshelfholds.rule_value = 1, ""Yes"", 
    If(onshelfholds.rule_value = 0, ""If any unavailable"", 
      If(onshelfholds.rule_value = 2, ""If all unavailable"", 
        onshelfholds.rule_value 
      ) 
    ) 
  ) AS ON_SHELF_REQUESTS, 
  If(opacitemholds.rule_value = ""N"", ""Don't allow"", 
    If(opacitemholds.rule_value = ""Y"", ""Allowed"", 
      If(opacitemholds.rule_value = ""F"", ""Required"", 
        opacitemholds.rule_value 
      ) 
    ) 
  ) AS OPAC_ITEM_LEVEL_REQUESTS, 
  article_requests.rule_value AS ARTICLE_REQUESTS, 
  rentaldiscount.rule_value AS RENTAL_DISCOUNT 
FROM 
  ( 
    SELECT 
     branches.branchcode, 
     branches.branchname 
   FROM 
     branches 
   UNION 
   SELECT 
     Concat('ALL') AS branchcode, 
     Concat('All libraries') AS branchname 
  ) branchess JOIN 
  ( 
    SELECT 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ) AS branchcode, 
     If( 
       circulation_rules.categorycode IS NULL, 
       ""ALL"", 
       circulation_rules.categorycode 
       ) AS categorycode, 
     If( 
       categories.description IS NULL, 
       ""All borrowers"", 
       categories.description 
     ) AS BORROWER_CATEGORY, 
     If(circulation_rules.itemtype IS NULL, ""ALL"", circulation_rules.itemtype) AS itemtype, 
     If(itemtypes.description IS NULL, ""All item types"", itemtypes.description) AS ITEM_TYPE 
   FROM 
     circulation_rules LEFT JOIN 
     categories ON circulation_rules.categorycode = categories.categorycode LEFT JOIN 
     itemtypes ON circulation_rules.itemtype = itemtypes.itemtype 
   WHERE 
     circulation_rules.rule_name <> ""accountsent"" AND 
     circulation_rules.rule_name <> ""hold_fulfillment_policy"" AND 
     circulation_rules.rule_name <> ""holdallowed"" AND 
     circulation_rules.rule_name <> ""max_holds"" AND 
     circulation_rules.rule_name <> ""patron_maxissueqty"" AND 
     circulation_rules.rule_name <> ""patron_maxonsiteissueqty"" AND 
     circulation_rules.rule_name <> ""refund"" AND 
     circulation_rules.rule_name <> ""restrictedtype"" AND 
     circulation_rules.rule_name <> ""returnbranch"" 
   GROUP BY 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ), 
     If( 
       circulation_rules.categorycode IS NULL, 
       ""ALL"", 
       circulation_rules.categorycode 
       ), 
     If( 
       categories.description IS NULL, 
       ""All borrowers"", 
       categories.description 
     ), 
     circulation_rules.itemtype, 
     itemtypes.description 
  ) categorytypes 
  ON categorytypes.branchcode = branchess.branchcode LEFT JOIN 
  ( 
    SELECT 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ) AS branchcode, 
     If( 
       circulation_rules.categorycode IS NULL, 
       ""ALL"", 
       circulation_rules.categorycode 
       ) AS categorycode, 
     If( 
       circulation_rules.itemtype IS NULL, 
       ""ALL"", 
       circulation_rules.itemtype 
     ) AS itemtype, 
     circulation_rules.rule_name, 
     circulation_rules.rule_value 
   FROM 
     circulation_rules 
   WHERE 
     circulation_rules.rule_name = 'reservesallowed' 
  ) reservesallowed 
  ON reservesallowed.branchcode = categorytypes.branchcode AND 
    reservesallowed.categorycode = categorytypes.categorycode AND 
    reservesallowed.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ) AS branchcode, 
     If( 
       circulation_rules.categorycode IS NULL, 
       ""ALL"", 
       circulation_rules.categorycode 
       ) AS categorycode, 
     If( 
       circulation_rules.itemtype IS NULL, 
       ""ALL"", 
       circulation_rules.itemtype 
     ) AS itemtype, 
     circulation_rules.rule_name, 
     circulation_rules.rule_value 
   FROM 
     circulation_rules 
   WHERE 
     circulation_rules.rule_name = 'holds_per_day' 
  ) holds_per_day 
  ON holds_per_day.branchcode = categorytypes.branchcode AND 
    holds_per_day.categorycode = categorytypes.categorycode AND 
    holds_per_day.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ) AS branchcode, 
     If( 
       circulation_rules.categorycode IS NULL, 
       ""ALL"", 
       circulation_rules.categorycode 
       ) AS categorycode, 
     If( 
       circulation_rules.itemtype IS NULL, 
       ""ALL"", 
       circulation_rules.itemtype 
     ) AS itemtype, 
     circulation_rules.rule_name, 
     circulation_rules.rule_value 
   FROM 
     circulation_rules 
   WHERE 
     circulation_rules.rule_name = 'holds_per_record' 
  ) holds_per_record 
  ON holds_per_record.branchcode = categorytypes.branchcode AND 
    holds_per_record.categorycode = categorytypes.categorycode AND 
    holds_per_record.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ) AS branchcode, 
     If( 
       circulation_rules.categorycode IS NULL, 
       ""ALL"", 
       circulation_rules.categorycode 
       ) AS categorycode, 
     If( 
       circulation_rules.itemtype IS NULL, 
       ""ALL"", 
       circulation_rules.itemtype 
     ) AS itemtype, 
     circulation_rules.rule_name, 
     circulation_rules.rule_value 
   FROM 
     circulation_rules 
   WHERE 
     circulation_rules.rule_name = 'onshelfholds' 
  ) onshelfholds 
  ON onshelfholds.branchcode = categorytypes.branchcode AND 
    onshelfholds.categorycode = categorytypes.categorycode AND 
    onshelfholds.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ) AS branchcode, 
     If( 
       circulation_rules.categorycode IS NULL, 
       ""ALL"", 
       circulation_rules.categorycode 
       ) AS categorycode, 
     If( 
       circulation_rules.itemtype IS NULL, 
       ""ALL"", 
       circulation_rules.itemtype 
     ) AS itemtype, 
     circulation_rules.rule_name, 
     circulation_rules.rule_value 
   FROM 
     circulation_rules 
   WHERE 
     circulation_rules.rule_name = 'opacitemholds' 
  ) opacitemholds 
  ON opacitemholds.branchcode = categorytypes.branchcode AND 
    opacitemholds.categorycode = categorytypes.categorycode AND 
    opacitemholds.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ) AS branchcode, 
     If( 
       circulation_rules.categorycode IS NULL, 
       ""ALL"", 
       circulation_rules.categorycode 
       ) AS categorycode, 
     If( 
       circulation_rules.itemtype IS NULL, 
       ""ALL"", 
       circulation_rules.itemtype 
     ) AS itemtype, 
     circulation_rules.rule_name, 
     circulation_rules.rule_value 
   FROM 
     circulation_rules 
   WHERE 
     circulation_rules.rule_name = 'article_requests' 
  ) article_requests 
  ON article_requests.branchcode = categorytypes.branchcode AND 
    article_requests.categorycode = categorytypes.categorycode AND 
    article_requests.itemtype = categorytypes.itemtype LEFT JOIN 
  ( 
    SELECT 
     If( 
       circulation_rules.branchcode IS NULL, 
       ""ALL"", 
       circulation_rules.branchcode 
     ) AS branchcode, 
     If( 
       circulation_rules.categorycode IS NULL, 
       ""ALL"", 
       circulation_rules.categorycode 
       ) AS categorycode, 
     If( 
       circulation_rules.itemtype IS NULL, 
       ""ALL"", 
       circulation_rules.itemtype 
     ) AS itemtype, 
     circulation_rules.rule_name, 
     circulation_rules.rule_value 
   FROM 
     circulation_rules 
   WHERE 
     circulation_rules.rule_name = 'rentaldiscount' 
  ) rentaldiscount 
  ON rentaldiscount.branchcode = categorytypes.branchcode AND 
    rentaldiscount.categorycode = categorytypes.categorycode AND 
    rentaldiscount.itemtype = categorytypes.itemtype 
WHERE 
  (categorytypes.branchcode LIKE <<Choose your library|branches:all>> OR 
    categorytypes.branchcode LIKE ""ALL"") 
GROUP BY 
  branchess.branchcode, 
  categorytypes.BORROWER_CATEGORY, 
  categorytypes.ITEM_TYPE 
  ORDER BY 
    If( 
      branchess.branchcode = ""ALL"", 
      ""ZZZZZ"", 
      branchess.branchcode 
    ), 
    If( 
      categorytypes.BORROWER_CATEGORY = ""All borrowers"", 
      ""ZZZZZ"", 
      categorytypes.BORROWER_CATEGORY 
    ), 
    If( 
      categorytypes.ITEM_TYPE = ""All item types"", 
      ""ZZZZZ"", 
      categorytypes.ITEM_TYPE 
    )",,,,,,,,
R.003489,"/*
R.003489

----------

Name: ADMINREPORT - From g
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-04-02 22:17:06
Modified on: 2021-04-11 17:03:14
Date last run: 2021-04-11 17:03:24

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  biblio.author,
  Concat_Ws("" "", 
    biblio.title, 
    biblio.subtitle, 
    biblioitems.number, 
    biblio.part_name
  ) AS FULL_TITLE,
  locs.lib AS BIB_LOCATION,
  itypess.description AS BIB_ITYPE,
  ccodes.lib AS CCODE,
  Date_Format(biblio.datecreated, ""%Y.%m.%d"") AS DATE_ADDED,
  biblio.biblionumber AS BIBLIO_NUMBER,
  biblioitems.isbn AS ISBN,
  Concat(
    '<a class= ""clicked"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', 
    biblio.biblionumber, 
    '\"" target=""_blank"">Go to title</a>'
  ) AS LINK_TO_TITLE,
  Group_Concat(icounts.Group_Concat_itemcallnumber) AS CNS,
  GROUP_CONCAT(
    icounts.LOCATIONS 
    ORDER BY icounts.LOCATIONS 
    DESC SEPARATOR
    "" | ""
  ) AS Group_Concat_LOCATIONS
FROM
  biblio JOIN
  biblioitems ON biblioitems.biblionumber = biblio.biblionumber LEFT JOIN
  (SELECT
     authorised_values.category,
     authorised_values.authorised_value,
     authorised_values.lib,
     authorised_values.lib_opac
   FROM
     authorised_values
   WHERE
     authorised_values.category = 'LOC') locs ON locs.authorised_value =
      biblioitems.agerestriction LEFT JOIN
  (SELECT
     itemtypes.itemtype,
     itemtypes.description
   FROM
     itemtypes) itypess ON itypess.itemtype = biblioitems.itemtype LEFT JOIN
  (SELECT
     authorised_values.category,
     authorised_values.authorised_value,
     authorised_values.lib,
     authorised_values.lib_opac
   FROM
     authorised_values
   WHERE
     authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      biblioitems.cn_class INNER JOIN
  (SELECT
     items.biblionumber,
     Concat_Ws("" - "", LPad(Count(DISTINCT items.itemnumber), 2, 0),
     items.permanent_location) AS LOCATIONS,
     Group_Concat(items.itemcallnumber) AS Group_Concat_itemcallnumber
   FROM
     items
   GROUP BY
     items.biblionumber,
     items.permanent_location) icounts ON icounts.biblionumber =
      biblio.biblionumber
WHERE
  locs.lib IS NULL
GROUP BY
  biblio.biblionumber
HAVING
  Group_Concat_LOCATIONS LIKE ""_____A%""",,,,,,,,
R.003490,"/*
R.003490

----------

Name: GHW - List of shelving location values
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-04-05 22:01:33
Modified on: 2021-04-05 22:02:14
Date last run: 2021-04-08 14:31:41

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  authorised_values.category,
  authorised_values.lib AS DESCRIPTION_STAFF,
  authorised_values.lib_opac AS DESCRIPTION_OPAC,
  authorised_values.authorised_value AS CODE,
  Group_Concat(authorised_values_branches.branchcode) AS LIMITED_BY_BRANCH
FROM
  authorised_values LEFT JOIN
  authorised_values_branches ON authorised_values_branches.av_id =
      authorised_values.id
WHERE
  authorised_values.category = 'LOC'
GROUP BY
  authorised_values.id
ORDER BY
  DESCRIPTION_STAFF",,,,,,,,
R.003491,"/*
R.003491

----------

Name: GHW - List of item types
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-04-05 22:44:57
Modified on: 2021-07-22 09:47:22
Date last run: 2022-04-19 11:03:59

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  itemtypes.description AS ITEM_TYPE_DESCRIPTION,
  itemtypes.itemtype AS ITEM_TYPE_CODE
FROM
  itemtypes
ORDER BY
  ITEM_TYPE_DESCRIPTION
LIMIT 500",,,,,,,,
R.003492,"/*
R.003492

----------

Name: GHW - Titles on a list with publication date and date added to the list
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-04-08 23:47:55
Modified on: 2021-04-09 08:58:43
Date last run: 2021-04-09 16:16:58

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  virtualshelves.shelfname,
  biblio_info.biblionumber,
  biblio_info.BIB_LOCATION,
  biblio_info.BIB_ITYPE,
  biblio_info.BIB_CCODE,
  biblio_info.author,
  biblio_info.TITLE,
  biblio_info.publicationyear,
  virtualshelfcontents.dateadded
FROM
  virtualshelfcontents  JOIN
  (SELECT
     biblio.biblionumber,
     bibloc.lib AS BIB_LOCATION,
     bibitype.description AS BIB_ITYPE,
     bibccode.lib AS BIB_CCODE,
     biblio.author,
     Concat_Ws("" "", biblio.title, biblio.subtitle, biblioitems.number,
     biblio.part_name) AS TITLE,
     biblioitems.publicationyear
   FROM
     biblio  JOIN
     biblioitems ON biblioitems.biblionumber = biblio.biblionumber LEFT JOIN
     (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib,
        authorised_values.lib_opac
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'loc') bibloc ON bibloc.authorised_value =
         biblioitems.agerestriction LEFT JOIN
     (SELECT
        itemtypes.itemtype,
        itemtypes.description
      FROM
        itemtypes) bibitype ON bibitype.itemtype = biblioitems.itemtype
     LEFT JOIN
     (SELECT
        authorised_values.category,
        authorised_values.authorised_value,
        authorised_values.lib,
        authorised_values.lib_opac
      FROM
        authorised_values
      WHERE
        authorised_values.category = 'ccode') bibccode ON
         bibccode.authorised_value = biblioitems.cn_class) biblio_info
    ON biblio_info.biblionumber = virtualshelfcontents.biblionumber  JOIN
  virtualshelves ON virtualshelfcontents.shelfnumber =
      virtualshelves.shelfnumber
WHERE
  virtualshelfcontents.shelfnumber = <<Enter list ID number>>",,,,,,,,
R.003493,"/*
R.003493

----------

Name: GHW - Export authorised_values table
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-04-13 15:14:34
Modified on: 2021-04-13 15:41:33
Date last run: 2022-10-03 14:25:40

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Outputs a backup of the authorised_values table to store on Github</p>
<ul><li>Shows the authorised_values at the time the report is run</li>
<li>Shows all authorised values system wide</li>
<li>sorted by category and value</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Run monthly and output data to Next SQL wiki</p>
<p></p>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3493"">Click here to download as a csv file</a></p>
<p class= ""notetags"" style=""display: none;"">authorised_values backup github</p>
</div>

----------
*/

","SELECT
  authorised_values.id,
  authorised_values.category,
  authorised_values.authorised_value,
  authorised_values.lib,
  authorised_values.imageurl,
  authorised_values.lib_opac
FROM
  authorised_values
ORDER BY
  authorised_values.category,
  authorised_values.authorised_value",,,,,,,,
R.003495,"/*
R.003495

----------

Name: GHW - LANSING patrons without Kanopy access
Created by: George H Williams

----------

Group:  LEAVENWRTH
     -

Created on: 2021-04-22 15:21:41
Modified on: 2022-07-07 14:52:33
Date last run: 2022-08-12 15:51:31

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows patrons with a LANSING home library but without a ""Kanopy (LANSING): Allowed . . ."" borrower attribute.</p>
<ul><li>Shows borrwoers that currently lack this attribute</li>
<li>grouped by categorycode and borrowernumber</li>
<li>sorted by library card number</li>
<li>links to the borrower account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Should be run monthly at LANSING so the attribute can be added to those accounts</p>
<p><a href=""https://northeast-kansas-library-system.github.io/next/branches/LANSING/kanopy.html#running-reports-to-manually-update-kanopy-permission"" target=""_blank"">Go to the training information for the Kanopy (LANSING) extended borrower attribute.</a></p>
<p></p>
<p class= ""notetags"" style=""display: none;"">kanopy; patron-extended-attributes; LANSING;</p>
</div>

----------
*/

","SELECT
  Concat(
    '<a href=""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=', 
    borrowers.borrowernumber, 
    '&step=4"" target=""_blank"">Go to patron account</a>'
  ) AS LINK,
  borrowers.cardnumber
FROM
  borrowers
  LEFT JOIN (
    SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute
    FROM
      borrower_attributes
    WHERE
      borrower_attributes.code = 'LANSKANOPY'
  ) kanopy
    ON kanopy.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode = 'LANSING' AND
  kanopy.attribute IS NULL AND
  borrowers.categorycode <> 'STAFF' AND
  borrowers.categorycode <> ""ILL"" AND
  borrowers.categorycode <> ""INHOUSE"" AND
  borrowers.categorycode <> ""STATISTIC"" AND
  borrowers.othernames <> 'SIP2 test account'
GROUP BY
  borrowers.categorycode,
  borrowers.borrowernumber
ORDER BY
  borrowers.cardnumber",,,,,,,,
R.003496,"/*
R.003496

----------

Name: GHW - Non-LANSING patrons with LANSING Kanopy access 
Created by: George H Williams

----------

Group:  LANSING
     -

Created on: 2021-04-22 16:55:19
Modified on: 2022-07-07 14:52:26
Date last run: 2022-08-12 15:50:47

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows patrons with a ""Kanopy (LANSING): Allowed . . ."" patron attribute but without a LANSING homebranch</p>
<ul><li>Shows borrwoers that currently have this attribute</li>
<li>grouped by categorycode and borrowernumber</li>
<li>sorted by library card number</li>
<li>links to the borrower account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Should be run monthly at LANSING so the attribute can be removed from those accounts</p>
<p><a href=""https://northeast-kansas-library-system.github.io/next/branches/LANSING/kanopy.html#running-reports-to-manually-update-kanopy-permission"" target=""_blank"">Go to the training information for the Kanopy (LANSING) extended borrower attribute.</a></p>
<p></p>
<p class= ""notetags"" style=""display: none;"">kanopy; patron-extended-attributes; LANSING;</p>
</div>

----------
*/

","SELECT
  Concat(
    '<a href=""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=', 
    borrowers.borrowernumber, 
    '&step=4"" target=""_blank"">Go to patron account</a>'
  ) AS LINK,
  borrowers.cardnumber
FROM
  borrowers
  LEFT JOIN (
    SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute
    FROM
      borrower_attributes
    WHERE
      borrower_attributes.code = 'LANSKANOPY'
  ) kanopy
    ON kanopy.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode <> 'LANSING' AND
  kanopy.attribute = 'LANSING' AND
  borrowers.othernames <> 'SIP2 test account'
GROUP BY
  borrowers.categorycode,
  borrowers.borrowernumber
ORDER BY
  borrowers.cardnumber",,,,,,,,
R.003497,"/*
R.003497

----------

Name: GHW - Borrowers expired for more than 730.5 days
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-04-28 14:48:37
Modified on: 2021-06-04 12:22:18
Date last run: 2022-09-15 16:54:06

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Lists borrower accounts that have been expired for more than 730.5 days (2 years) and includes any account expiration flags</p>
<ul><li>Shows accounts that are currently expired</li>
<li>at the home library you specify</li>
<li>grouped by borrowernumber</li>
<li>sorted by expiration, borrower home library, and borrower number</li>
<li>links to the borrower account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Replaces report 2495</p>
<p></p>
<p>Does not include STAFF, Hoopla, or SIP accounts.</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#expired borrowers</p>
</div>

----------
*/

","SELECT
  Concat(
    '<a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    borrowers.borrowernumber, 
    '"" target=""_blank"">Link to patron</a>'
  ) AS LINK_TO_PATRON,
  borrowers.borrowernumber,
  borrowers.cardnumber,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  AddDate(Last_Day(SubDate(borrowers.dateexpiry, INTERVAL -37 MONTH)), 1) + INTERVAL 14 DAY AS PROJECTED_DELETION_DATE,
  Coalesce(accountlinesx.DUE_SUM, 0) AS AMT_DUE,
  Coalesce(issuesx.ICOUNT, 0) AS CHECKOUTS,
  Coalesce(guaranteesx.GCOUNT, 0) AS GUARANTEES,
  Coalesce(requestsx.Count_reserve_id, 0) AS REQUESTS,
  expired_attribute.lib AS ATTRIBUTE
FROM
  borrowers LEFT JOIN
  (SELECT
     accountlines.borrowernumber,
     Format(Sum(accountlines.amountoutstanding), 2) AS DUE_SUM
   FROM
     accountlines
   GROUP BY
     accountlines.borrowernumber) accountlinesx ON borrowers.borrowernumber =
      accountlinesx.borrowernumber LEFT JOIN
  (SELECT
     issues.borrowernumber,
     Count(issues.issue_id) AS ICOUNT
   FROM
     issues
   GROUP BY
     issues.borrowernumber) issuesx ON borrowers.borrowernumber =
      issuesx.borrowernumber LEFT JOIN
  (SELECT
     reserves.borrowernumber,
     Count(reserves.reserve_id) AS Count_reserve_id
   FROM
     reserves
   GROUP BY
     reserves.borrowernumber) requestsx ON borrowers.borrowernumber =
      requestsx.borrowernumber LEFT JOIN
  (SELECT
     borrower_attributes.borrowernumber,
     borrower_attributes.code,
     borrower_attributes.attribute,
     authorised_values.lib,
     authorised_values.category
   FROM
     borrower_attributes JOIN
     authorised_values ON borrower_attributes.attribute =
         authorised_values.authorised_value
   WHERE
     borrower_attributes.code = 'expired' AND
     authorised_values.category = 'expired') expired_attribute ON
      borrowers.borrowernumber = expired_attribute.borrowernumber LEFT JOIN
  (SELECT
     borrower_relationships.guarantor_id,
     Count(borrower_relationships.guarantee_id) AS GCOUNT
   FROM
     borrower_relationships
   GROUP BY
     borrower_relationships.guarantor_id) guaranteesx ON
      guaranteesx.guarantor_id = borrowers.borrowernumber
WHERE
  borrowers.dateexpiry < CurDate() - INTERVAL 730.5 DAY AND
  borrowers.branchcode LIKE <<Choose your library|ZBRAN>> AND
  borrowers.othernames NOT LIKE ""%SIP%"" AND
  borrowers.categorycode <> 'STAFF' AND
  borrowers.categorycode <> 'ILL' AND
  borrowers.categorycode <> 'HOOPLA'
GROUP BY
  borrowers.borrowernumber
ORDER BY
  borrowers.dateexpiry,
  borrowers.branchcode,
  borrowers.borrowernumber",,,,,,,,
R.003498,"/*
R.003498

----------

Name: GHW - Bookshelves test report
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-04-29 11:50:12
Modified on: 2021-04-29 17:24:24
Date last run: 2022-10-01 19:42:36

----------

Public: 1
Expiry: 300

----------

Test report for Bookshelves Wordpress plugin.

Returns results for the 25 most recent items added to Next Search Catalog that have at least one 10 digit ISBN.

Add parameters to the ""where"" clauses to create a report for a specific library/location/itemtype/collection code.

----------
*/

","SELECT
IF(
    Length(Trim(SubString_Index(biblioitems.isbn, '|', 1))) = 10, 
    Trim(SubString_Index(biblioitems.isbn, '|', 1)), 
    IF(
      Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 2), '|', -1))) = 10, 
      Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 2), '|', -1)), 
      IF(
        Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 3), '|', -1))) = 10, 
        Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 3), '|', -1)), 
        IF(
          Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 4), '|', -1))) = 10, 
          Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 4), '|', -1)), 
          IF(
            Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 5), '|', -1))) = 10, 
            Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 5), '|', -1)), 
            IF(
              Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 6), '|', -1))) = 10, 
              Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 6), '|', -1)), 
              IF(
                Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 7), '|', -1))) = 10, 
                Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 7), '|', -1)), 
                IF(
                  Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 8), '|', -1))) = 10, 
                  Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 8), '|', -1)), 
                  IF(
                    Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 9), '|', -1))) = 10, 
                    Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 9), '|', -1)), 
                    IF(
                      Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 10), '|', -1))) = 10, 
                      Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 10), '|', -1)), 
                      'X'
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  ) AS isbns,
  biblio.title,
  biblio.author
FROM
  biblioitems JOIN
  biblio ON biblioitems.biblionumber = biblio.biblionumber JOIN
  items ON items.biblioitemnumber = biblioitems.biblioitemnumber
WHERE
  items.homebranch LIKE '%' AND
  biblioitems.isbn IS NOT NULL AND
  items.itype LIKE ""%"" AND
  items.permanent_location LIKE ""%"" AND
  items.ccode LIKE ""%"" AND
  items.notforloan = 0 AND
  items.damaged = 0 AND
  items.itemlost = '' AND
  items.withdrawn = 0
GROUP BY
  biblio.biblionumber
HAVING
  isbns <> 'X'
ORDER BY
  biblio.biblionumber DESC
LIMIT 25",,,,,,,,
R.003499,"/*
R.003499

----------

Name: GHW - B1 Circulation by library details - hourly statistics - Next Search Catalog
Created by: George H Williams

----------

Group: Statistics
     2022 beginning of month statistics

Created on: 2021-04-30 15:05:03
Modified on: 2022-04-05 15:29:38
Date last run: 2022-10-01 00:30:02

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint> 
<p>Circulation by library details spreadsheet report - hourly circulation</p> 
<ul><li>Shows counts of check-outs, renewals, and returns in the previous calendar month</li> 
<li>At all Next Search Catalog libraries</li> 
<li>grouped and sorted by library name, date, and hour</li> 
</ul><br /> 
<p><ins>Notes:</ins></p> 
<p></p> 
<ul> 
  <li>CKO =  number of items newly checked out</li> 
  <li>RENEW = number of items renewed</li> 
  <li>RETURNS = number of items checked in</li> 
  <li>TOTAL_CKO_RENEW_RETURN = sum of the previous 3 columns</li> 
  <li>CKO_BORROWERS = number of unique accounts used to check out the items in the CKO column</li> 
  <li>RENEW_BORROWERS = number of unique accounts used to renew the items in the RENEW column</li> 
  <li>CKO_AND_RENEW_BORROWERS = number of unique accounts used to check out and renew items</li> 
</ul> 
<p></p> 
<p>OPAC renewals are counted as occurring at the library where the item was originally checked out.  This is why you may see data for days and times that your library is closed.</p> 
<p></p> 
<p class=""updated"">This report and these notes updated on 2022.03.10</p> 
<p></p> 
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id= 3499"">Click here to download as a csv file</a></p> 
<p class= ""notetags"" style=""display: none;"">#monthly #statistics #library #details #hourly</p> 
<!-- html notes rendered on guided_reports.pl by jquery at https://wiki.koha-community.org/wiki/JQuery_Library#Render_patron_messages_as_HTML_and_in_Report_notes --> 
</div> 

----------
*/

","SELECT
  branchess.branchname,
  ALL_STATS.DATE,
  ALL_STATS.DAY,
  Concat(ALL_STATS.HOUR_OF_DAY, "":00 - "", ALL_STATS.HOUR_OF_DAY, "":59"") AS HOUR,
  Coalesce(CKO.COUNT, 0) AS CKO,
  Coalesce(RENEWALS.COUNT, 0) AS RENEW,
  Coalesce(RETURNS.COUNT, 0) AS RETURNS,
  ALL_STATS.COUNT AS TOTAL_CKO_RENEW_RETURN,
  Coalesce(ckoborrowers.Count_borrowernumber, 0) AS CKO_BORROWERS,
  Coalesce(renewborrowers.Count_borrowernumber, 0) AS RENEW_BORROWERS,
  totalborrowers.Count_borrowernumber AS CKO_AND_RENEW_BORROWERS
FROM
  (SELECT
     branches.branchcode,
     branches.branchname
   FROM
     branches) branchess LEFT JOIN
  (SELECT
     statistics.branch,
     DayName(statistics.datetime) AS DAY,
     Date_Format(statistics.datetime, '%Y-%m-%d') AS DATE,
     Hour(statistics.datetime) AS HOUR_OF_DAY,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     (statistics.type = 'issue' OR
         statistics.type = 'renew' OR
         statistics.type = 'return') AND
     Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
     Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH)
   GROUP BY
     statistics.branch,
     DayName(statistics.datetime),
     Date_Format(statistics.datetime, '%Y-%m-%d'),
     Hour(statistics.datetime)) ALL_STATS ON ALL_STATS.branch =
      branchess.branchcode LEFT JOIN
  (SELECT
     statistics.branch,
     DayName(statistics.datetime) AS DAY,
     Date_Format(statistics.datetime, '%Y-%m-%d') AS DATE,
     Hour(statistics.datetime) AS HOUR_OF_DAY,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     statistics.type = 'return' AND
     Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
     Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH)
   GROUP BY
     statistics.branch,
     DayName(statistics.datetime),
     Date_Format(statistics.datetime, '%Y-%m-%d'),
     Hour(statistics.datetime)) RETURNS ON RETURNS.branch = branchess.branchcode
      AND
      RETURNS.DATE = ALL_STATS.DATE AND
      RETURNS.HOUR_OF_DAY = ALL_STATS.HOUR_OF_DAY LEFT JOIN
  (SELECT
     statistics.branch,
     DayName(statistics.datetime) AS DAY,
     Date_Format(statistics.datetime, '%Y-%m-%d') AS DATE,
     Hour(statistics.datetime) AS HOUR_OF_DAY,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     statistics.type = 'issue' AND
     Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
     Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH)
   GROUP BY
     statistics.branch,
     DayName(statistics.datetime),
     Date_Format(statistics.datetime, '%Y-%m-%d'),
     Hour(statistics.datetime)) CKO ON CKO.branch = branchess.branchcode AND
      CKO.DATE = ALL_STATS.DATE AND
      CKO.HOUR_OF_DAY = ALL_STATS.HOUR_OF_DAY LEFT JOIN
  (SELECT
     statistics.branch,
     DayName(statistics.datetime) AS DAY,
     Date_Format(statistics.datetime, '%Y-%m-%d') AS DATE,
     Hour(statistics.datetime) AS HOUR_OF_DAY,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     statistics.type = 'renew' AND
     Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
     Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH)
   GROUP BY
     statistics.branch,
     DayName(statistics.datetime),
     Date_Format(statistics.datetime, '%Y-%m-%d'),
     Hour(statistics.datetime)) RENEWALS ON
      RENEWALS.branch = branchess.branchcode AND
      RENEWALS.DATE = ALL_STATS.DATE AND
      RENEWALS.HOUR_OF_DAY = ALL_STATS.HOUR_OF_DAY LEFT JOIN
  (SELECT
     statistics.branch,
     DayName(statistics.datetime) AS DAY,
     Date_Format(statistics.datetime, '%Y-%m-%d') AS DATE,
     Hour(statistics.datetime) AS HOUR_OF_DAY,
     Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber
   FROM
     statistics
   WHERE
     Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
     Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
     (statistics.type = 'issue' OR
         statistics.type = 'renew')
   GROUP BY
     statistics.branch,
     DayName(statistics.datetime),
     Date_Format(statistics.datetime, '%Y-%m-%d'),
     Hour(statistics.datetime)) totalborrowers ON totalborrowers.branch =
      branchess.branchcode AND
      totalborrowers.DATE = ALL_STATS.DATE AND
      totalborrowers.HOUR_OF_DAY = ALL_STATS.HOUR_OF_DAY LEFT JOIN
  (SELECT
     statistics.branch,
     DayName(statistics.datetime) AS DAY,
     Date_Format(statistics.datetime, '%Y-%m-%d') AS DATE,
     Hour(statistics.datetime) AS HOUR_OF_DAY,
     Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber
   FROM
     statistics
   WHERE
     Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
     Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
     statistics.type = 'issue'
   GROUP BY
     statistics.branch,
     DayName(statistics.datetime),
     Date_Format(statistics.datetime, '%Y-%m-%d'),
     Hour(statistics.datetime)) ckoborrowers ON ckoborrowers.branch =
      branchess.branchcode AND
      ckoborrowers.DATE = ALL_STATS.DATE AND
      ckoborrowers.HOUR_OF_DAY = ALL_STATS.HOUR_OF_DAY LEFT JOIN
  (SELECT
     statistics.branch,
     DayName(statistics.datetime) AS DAY,
     Date_Format(statistics.datetime, '%Y-%m-%d') AS DATE,
     Hour(statistics.datetime) AS HOUR_OF_DAY,
     Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber
   FROM
     statistics
   WHERE
     Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
     Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
     statistics.type = 'renew'
   GROUP BY
     statistics.branch,
     DayName(statistics.datetime),
     Date_Format(statistics.datetime, '%Y-%m-%d'),
     Hour(statistics.datetime)) renewborrowers ON renewborrowers.branch =
      branchess.branchcode AND
      renewborrowers.DATE = ALL_STATS.DATE AND
      renewborrowers.HOUR_OF_DAY = ALL_STATS.HOUR_OF_DAY
WHERE
  branchess.branchcode LIKE '%'
GROUP BY
  branchess.branchname,
  ALL_STATS.DATE,
  ALL_STATS.DAY,
  ALL_STATS.HOUR_OF_DAY
ORDER BY
  branchess.branchname,
  ALL_STATS.DATE,
  ALL_STATS.DAY,
  ALL_STATS.HOUR_OF_DAY",,,,,,,,
R.003500,"/*
R.003500

----------

Name: GHW - Monthly 610 Local checkouts and renewals last month by Item type
Created by: George H Williams

----------

Group: Statistics
     Last month's statistics - Next-wide

Created on: 2021-05-03 00:32:33
Modified on: 2021-12-03 16:38:16
Date last run: 2022-03-11 16:29:01

----------

Public: 0
Expiry: 300

----------

<p class=""updated"">SHELVING_LOCATION is based on the shelving location of the item at the time it was checked out *Unless the item had a ""Recently returned"" shelving location.*  This report falls back to the items' ""Permanent shelving location"" whenever the statistics data shows that the item's shelving location was ""Recently returned.""</p>

<p></p>
<p class=""updated"">Updated on 2021.10.20 to include changes based on the ""Recently returned"" shelving location.</p>
<p class=""updated"">Updated on 2021.12.03  to fix errors.</p>
<p></p>

----------
*/

","SELECT
  branch_itype.branchname,
  branch_itype.description,
  Coalesce(all_local_items.Count_datetime, 0) AS ALL_LOCAL_CKO_RENEW,
  Coalesce(all_local_adult.Count_datetime, 0) AS ALL_LOCAL_ADULT,
  Coalesce(all_local_ya.Count_datetime, 0) AS ALL_LOCAL_YA,
  Coalesce(all_local_child.Count_datetime, 0) AS ALL_LOCAL_CHILD,
  Coalesce(all_local_other.Count_datetime, 0) AS ALL_LOCAL_OTHER
FROM
  (
    SELECT
      branches.branchname,
      itemtypes.description,
      branches.branchcode,
      itemtypes.itemtype
    FROM
      branches,
      itemtypes
    WHERE
      branches.branchcode LIKE '%'
  ) branch_itype LEFT JOIN
  (
    SELECT
      Coalesce(statistics.branch, 'NEKLS') AS branch,
      Coalesce(statistics.itemtype, 'PUNC') AS itemtype,
      Count(statistics.datetime) AS Count_datetime
    FROM
      statistics JOIN
      items ON items.itemnumber = statistics.itemnumber
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      If(
        Coalesce(
          statistics.branch, 'NEKLS') LIKE 'DONI%', 
          'DONI%', 
          If(
            Coalesce(statistics.branch, 'NEKLS') LIKE 'PH%', 
            'PH%', 
            statistics.branch
          )
        ) = If(
        Coalesce(items.homebranch, 'NEKLS') LIKE 'DONI%', 
        'DONI%', 
        If(
          Coalesce(items.homebranch, 'NEKLS') LIKE 'PH%', 
          'PH%', 
          items.homebranch
        )
      ) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH)
    GROUP BY
      Coalesce(statistics.branch, 'NEKLS'),
      Coalesce(statistics.itemtype, 'PUNC')
  ) all_local_items ON all_local_items.branch = branch_itype.branchcode AND
      all_local_items.itemtype = branch_itype.itemtype LEFT JOIN
  (
    SELECT
      Coalesce(statistics.branch, 'NEKLS') AS branch,
      Coalesce(statistics.itemtype, 'PUNC') AS itemtype,
      Count(statistics.datetime) AS Count_datetime
    FROM
      statistics JOIN
      items ON items.itemnumber = statistics.itemnumber
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      If(
        Coalesce(
          statistics.branch, 'NEKLS') LIKE 'DONI%', 
          'DONI%', 
          If(
            Coalesce(statistics.branch, 'NEKLS') LIKE 'PH%', 
            'PH%', 
            statistics.branch
          )
        ) = If(
        Coalesce(items.homebranch, 'NEKLS') LIKE 'DONI%', 
        'DONI%', 
        If(
          Coalesce(items.homebranch, 'NEKLS') LIKE 'PH%', 
          'PH%', 
          items.homebranch
        )
      ) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND 
      If(
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"")
      ) LIKE ""%ADULT%""
    GROUP BY
      Coalesce(statistics.branch, 'NEKLS'),
      Coalesce(statistics.itemtype, 'PUNC')
  ) all_local_adult ON all_local_adult.branch = branch_itype.branchcode AND
      all_local_adult.itemtype = branch_itype.itemtype LEFT JOIN
  (
    SELECT
      Coalesce(statistics.branch, 'NEKLS') AS branch,
      Coalesce(statistics.itemtype, 'PUNC') AS itemtype,
      Count(statistics.datetime) AS Count_datetime
    FROM
      statistics JOIN
      items ON items.itemnumber = statistics.itemnumber
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      If(
        Coalesce(
          statistics.branch, 'NEKLS') LIKE 'DONI%', 
          'DONI%', 
          If(
            Coalesce(statistics.branch, 'NEKLS') LIKE 'PH%', 
            'PH%', 
            statistics.branch
          )
        ) = If(
        Coalesce(items.homebranch, 'NEKLS') LIKE 'DONI%', 
        'DONI%', 
        If(
          Coalesce(items.homebranch, 'NEKLS') LIKE 'PH%', 
          'PH%', 
          items.homebranch
        )
      ) AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      If(
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"")
      ) LIKE ""%YA%""
    GROUP BY
      Coalesce(statistics.branch, 'NEKLS'),
      Coalesce(statistics.itemtype, 'PUNC')
  ) all_local_ya ON all_local_ya.branch = branch_itype.branchcode AND
      all_local_ya.itemtype = branch_itype.itemtype LEFT JOIN
  (
    SELECT
      Coalesce(statistics.branch, 'NEKLS') AS branch,
      Coalesce(statistics.itemtype, 'PUNC') AS itemtype,
      Count(statistics.datetime) AS Count_datetime
    FROM
      statistics JOIN
      items ON items.itemnumber = statistics.itemnumber
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      If(
        Coalesce(
          statistics.branch, 'NEKLS') LIKE 'DONI%', 
          'DONI%', 
          If(
            Coalesce(statistics.branch, 'NEKLS') LIKE 'PH%', 
            'PH%', 
            statistics.branch
          )
        ) = If(
        Coalesce(items.homebranch, 'NEKLS') LIKE 'DONI%', 
        'DONI%', 
        If(
          Coalesce(items.homebranch, 'NEKLS') LIKE 'PH%', 
          'PH%', 
          items.homebranch
        )
      ) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      If(
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"")
      ) LIKE ""%CHILD%""
    GROUP BY
      Coalesce(statistics.branch, 'NEKLS'),
      Coalesce(statistics.itemtype, 'PUNC')
  ) all_local_child ON all_local_child.branch = branch_itype.branchcode AND
      all_local_child.itemtype = branch_itype.itemtype LEFT JOIN
  (
    SELECT
      Coalesce(statistics.branch, 'NEKLS') AS branch,
      Coalesce(statistics.itemtype, 'PUNC') AS itemtype,
      Count(statistics.datetime) AS Count_datetime
    FROM
      statistics JOIN
      items ON items.itemnumber = statistics.itemnumber
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      If(
        Coalesce(statistics.branch, 'NEKLS') LIKE 'DONI%', 
        'DONI%', 
        If(
          Coalesce(statistics.branch, 'NEKLS') LIKE 'PH%', 
          'PH%', 
          statistics.branch
        )
      ) = 
      If(
        Coalesce(items.homebranch, 'NEKLS') LIKE 'DONI%', 
        'DONI%', 
        If(
          Coalesce(items.homebranch, 'NEKLS') LIKE 'PH%', 
          'PH%', 
          items.homebranch
        )
      ) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      If(
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"")
      ) NOT LIKE ""%ADULT%"" AND
      If(
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"")
      ) NOT LIKE ""%YA%"" AND
      If(
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"")
      ) NOT LIKE ""%CHILD%""
    GROUP BY
      Coalesce(statistics.branch, 'NEKLS'),
      Coalesce(statistics.itemtype, 'PUNC')
  ) all_local_other ON all_local_other.branch = branch_itype.branchcode AND
      all_local_other.itemtype = branch_itype.itemtype
GROUP BY
  branch_itype.branchname,
  branch_itype.description,
  all_local_other.Count_datetime
ORDER BY
  branch_itype.branchname,
  branch_itype.description",,,,,,,,
R.003501,"/*
R.003501

----------

Name: GHW - Monthly 615 Local checkouts and renewals last month by Collection code
Created by: George H Williams

----------

Group: Statistics
     Last month's statistics - Next-wide

Created on: 2021-05-03 01:23:47
Modified on: 2021-12-03 17:36:41
Date last run: 2022-03-11 16:34:02

----------

Public: 0
Expiry: 300

----------

<p class=""updated"">SHELVING_LOCATION is based on the shelving location of the item at the time it was checked out *Unless the item had a ""Recently returned"" shelving location.*  This report falls back to the items' ""Permanent shelving location"" whenever the statistics data shows that the item's shelving location was ""Recently returned.""</p>

<p></p>
<p class=""updated"">Updated on 2021.10.20 to include changes based on the ""Recently returned"" shelving location.</p>
<p class=""updated"">Updated on 2021.12.03  to fix errors.</p>
<p></p>

----------
*/

","SELECT
  branch_ccode.branchname,
  branch_ccode.lib AS CCODE,
  Coalesce(all_local_items.Count_datetime, 0) AS ALL_LOCAL_CKO_RENEW,
  Coalesce(all_local_adult.count, 0) AS ALL_LOCAL_ADULT,
  Coalesce(all_local_ya.count, 0) AS ALL_LOCAL_YA,
  Coalesce(all_local_childrens.count, 0) AS ALL_LOCAL_CHILD,
  Coalesce(all_local_other.count, 0) AS ALL_LOCAL_OTHER
FROM
  (
    SELECT
      branches.branchname,
      branches.branchcode,
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      branches,
      authorised_values
    WHERE
      branches.branchcode LIKE '%' AND
      authorised_values.category = 'CCODE'
  ) branch_ccode LEFT JOIN
  (
    SELECT
      Coalesce(statistics.branch, 'NEKLS') AS branch,
      Coalesce(statistics.ccode, 'XXX') AS ccode,
      Count(statistics.datetime) AS Count_datetime
    FROM
      statistics JOIN
      items ON items.itemnumber = statistics.itemnumber
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      If(
        Coalesce(statistics.branch, 'NEKLS') LIKE 'DONI%', 'DONI%',
        If(
          Coalesce(statistics.branch, 'NEKLS') LIKE 'PH%', 
          'PH%',
          statistics.branch
        )
      ) = If(
        Coalesce(items.homebranch, 'NEKLS') LIKE 'DONI%',
        'DONI%', 
        If(
          Coalesce(items.homebranch, 'NEKLS') LIKE 'PH%', 
          'PH%', 
          items.homebranch
        )
      ) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH)
    GROUP BY
      Coalesce(statistics.branch, 'NEKLS'),
      Coalesce(statistics.ccode, 'XXX')) all_local_items ON
      all_local_items.branch = branch_ccode.branchcode AND
      all_local_items.ccode = branch_ccode.authorised_value LEFT JOIN
  (
    SELECT
      Coalesce(statistics.branch, 'NEKLS') AS branch,
      Coalesce(statistics.ccode, 'XXX') AS ccode,
      Count(*) AS count
    FROM
      statistics LEFT JOIN
      items ON items.itemnumber = statistics.itemnumber
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      If(
        Coalesce(statistics.branch, 'NEKLS') LIKE 'DONI%', 'DONI%',
        If(
          Coalesce(statistics.branch, 'NEKLS') LIKE 'PH%', 
          'PH%',
          statistics.branch
        )
      ) = If(
        Coalesce(items.homebranch, 'NEKLS') LIKE 'DONI%',
        'DONI%', 
        If(
          Coalesce(items.homebranch, 'NEKLS') LIKE 'PH%', 
          'PH%', 
          items.homebranch
        )
      ) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      If(
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"")
      ) LIKE ""%ADULT%""
    GROUP BY
      Coalesce(statistics.branch, 'NEKLS'),
      Coalesce(statistics.ccode, 'XXX')
  ) all_local_adult ON all_local_adult.branch = branch_ccode.branchcode AND
      all_local_adult.ccode = branch_ccode.authorised_value LEFT JOIN
  (
    SELECT
      Coalesce(statistics.branch, 'NEKLS') AS branch,
      Coalesce(statistics.ccode, 'XXX') AS ccode,
      Count(*) AS count
    FROM
      statistics LEFT JOIN
      items ON items.itemnumber = statistics.itemnumber
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      If(
        Coalesce(statistics.branch, 'NEKLS') LIKE 'DONI%', 'DONI%',
        If(
          Coalesce(statistics.branch, 'NEKLS') LIKE 'PH%', 
          'PH%',
          statistics.branch
        )
      ) = If(
        Coalesce(items.homebranch, 'NEKLS') LIKE 'DONI%',
        'DONI%', 
        If(
          Coalesce(items.homebranch, 'NEKLS') LIKE 'PH%', 
          'PH%', 
          items.homebranch
        )
      ) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      If(
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"")
      ) LIKE ""%YA%""
    GROUP BY
      Coalesce(statistics.branch, 'NEKLS'),
      Coalesce(statistics.ccode, 'XXX')
  ) all_local_ya ON all_local_ya.branch = branch_ccode.branchcode AND
      all_local_ya.ccode = branch_ccode.authorised_value LEFT JOIN
  (
    SELECT
      Coalesce(statistics.branch, 'NEKLS') AS branch,
      Coalesce(statistics.ccode, 'XXX') AS ccode,
      Count(*) AS count
    FROM
      statistics LEFT JOIN
      items ON items.itemnumber = statistics.itemnumber
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      If(
        Coalesce(statistics.branch, 'NEKLS') LIKE 'DONI%', 'DONI%',
        If(
          Coalesce(statistics.branch, 'NEKLS') LIKE 'PH%', 
          'PH%',
          statistics.branch
        )
      ) = If(
        Coalesce(items.homebranch, 'NEKLS') LIKE 'DONI%',
        'DONI%', 
        If(
          Coalesce(items.homebranch, 'NEKLS') LIKE 'PH%', 
          'PH%', 
          items.homebranch
        )
      ) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      If(
        Coalesce(statistics.location, ""PROC"") = ""CART"",
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"")
      ) LIKE ""%CHILD%""
    GROUP BY
      Coalesce(statistics.branch, 'NEKLS'),
      Coalesce(statistics.ccode, 'XXX')
  ) all_local_childrens ON all_local_childrens.branch = branch_ccode.branchcode AND
      all_local_childrens.ccode = branch_ccode.authorised_value LEFT JOIN
  (
    SELECT
      Coalesce(statistics.branch, 'NEKLS') AS branch,
      Coalesce(statistics.ccode, 'XXX') AS ccode,
      Count(*) AS count
    FROM
      statistics LEFT JOIN
      items ON items.itemnumber = statistics.itemnumber
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      If(
        Coalesce(statistics.branch, 'NEKLS') LIKE 'DONI%', 'DONI%',
        If(
          Coalesce(statistics.branch, 'NEKLS') LIKE 'PH%', 
          'PH%',
          statistics.branch
        )
      ) = If(
        Coalesce(items.homebranch, 'NEKLS') LIKE 'DONI%',
        'DONI%', 
        If(
          Coalesce(items.homebranch, 'NEKLS') LIKE 'PH%', 
          'PH%', 
          items.homebranch
        )
      ) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      If(
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"")
      ) NOT LIKE '%ADULT%' AND
      If(
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"")
      ) NOT LIKE '%YA%' AND
      If(
        Coalesce(statistics.location, ""PROC"") = ""CART"", 
        Coalesce(items.permanent_location, ""PROC""), 
        Coalesce(statistics.location, ""PROC"")
      ) NOT LIKE '%CHILD%'
    GROUP BY
      Coalesce(statistics.branch, 'NEKLS'),
      Coalesce(statistics.ccode, 'XXX')
  ) all_local_other ON all_local_other.branch = branch_ccode.branchcode AND
      all_local_other.ccode = branch_ccode.authorised_value
GROUP BY
  branch_ccode.branchname,
  branch_ccode.lib
ORDER BY
  branch_ccode.branchname,
  CCODE",,,,,,,,
R.003502,"/*
R.003502

----------

Name: GHW - Bookshelves report for ROSSVILLE - ADULT
Created by: George H Williams

----------

Group:  ROSSVILLE
     -

Created on: 2021-05-07 15:11:43
Modified on: 2021-08-16 22:00:38
Date last run: 2022-10-02 18:20:52

----------

Public: 1
Expiry: 300

----------



----------
*/

","SELECT
IF(
    Length(Trim(SubString_Index(biblioitems.isbn, '|', 1))) = 10, 
    Trim(SubString_Index(biblioitems.isbn, '|', 1)), 
    IF(
      Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 2), '|', -1))) = 10, 
      Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 2), '|', -1)), 
      IF(
        Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 3), '|', -1))) = 10, 
        Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 3), '|', -1)), 
        IF(
          Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 4), '|', -1))) = 10, 
          Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 4), '|', -1)), 
          IF(
            Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 5), '|', -1))) = 10, 
            Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 5), '|', -1)), 
            IF(
              Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 6), '|', -1))) = 10, 
              Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 6), '|', -1)), 
              IF(
                Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 7), '|', -1))) = 10, 
                Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 7), '|', -1)), 
                IF(
                  Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 8), '|', -1))) = 10, 
                  Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 8), '|', -1)), 
                  IF(
                    Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 9), '|', -1))) = 10, 
                    Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 9), '|', -1)), 
                    IF(
                      Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 10), '|', -1))) = 10, 
                      Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 10), '|', -1)), 
                      'X'
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  ) AS isbns,
  biblio.title,
  biblio.author
FROM
  biblioitems JOIN
  biblio ON biblioitems.biblionumber = biblio.biblionumber JOIN
  items ON items.biblioitemnumber = biblioitems.biblioitemnumber
WHERE
  items.homebranch LIKE 'ROSSVILLE' AND
  biblioitems.isbn IS NOT NULL AND
  items.itype LIKE 'BOOK' AND
  items.permanent_location LIKE 'ADULT' AND
  items.ccode LIKE ""%"" AND
  items.notforloan = 0 AND
  items.damaged = 0 AND
  items.itemlost = '' AND
  items.withdrawn = 0
GROUP BY
  biblio.biblionumber
HAVING
  isbns <> 'X'
ORDER BY
  biblio.biblionumber DESC
LIMIT 25",,,,,,,,
R.003503,"/*
R.003503

----------

Name: GHW - Bookshelves report for ROSSVILLE - CHILDRENS
Created by: George H Williams

----------

Group:  ROSSVILLE
     -

Created on: 2021-05-07 15:45:28
Modified on: 2021-08-16 22:00:25
Date last run: 2022-10-02 18:20:52

----------

Public: 1
Expiry: 300

----------



----------
*/

","SELECT
IF(
    Length(Trim(SubString_Index(biblioitems.isbn, '|', 1))) = 10, 
    Trim(SubString_Index(biblioitems.isbn, '|', 1)), 
    IF(
      Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 2), '|', -1))) = 10, 
      Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 2), '|', -1)), 
      IF(
        Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 3), '|', -1))) = 10, 
        Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 3), '|', -1)), 
        IF(
          Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 4), '|', -1))) = 10, 
          Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 4), '|', -1)), 
          IF(
            Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 5), '|', -1))) = 10, 
            Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 5), '|', -1)), 
            IF(
              Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 6), '|', -1))) = 10, 
              Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 6), '|', -1)), 
              IF(
                Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 7), '|', -1))) = 10, 
                Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 7), '|', -1)), 
                IF(
                  Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 8), '|', -1))) = 10, 
                  Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 8), '|', -1)), 
                  IF(
                    Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 9), '|', -1))) = 10, 
                    Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 9), '|', -1)), 
                    IF(
                      Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 10), '|', -1))) = 10, 
                      Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 10), '|', -1)), 
                      'X'
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  ) AS isbns,
  biblio.title,
  biblio.author
FROM
  biblioitems JOIN
  biblio ON biblioitems.biblionumber = biblio.biblionumber JOIN
  items ON items.biblioitemnumber = biblioitems.biblioitemnumber
WHERE
  items.homebranch LIKE 'ROSSVILLE' AND
  biblioitems.isbn IS NOT NULL AND
  items.itype LIKE 'BOOK' AND
  items.permanent_location LIKE 'CHILDRENS' AND
  items.ccode LIKE ""%"" AND
  items.notforloan = 0 AND
  items.damaged = 0 AND
  items.itemlost = '' AND
  items.withdrawn = 0
GROUP BY
  biblio.biblionumber
HAVING
  isbns <> 'X'
ORDER BY
  biblio.biblionumber DESC
LIMIT 25",,,,,,,,
R.003504,"/*
R.003504

----------

Name: GHW - Borrower count by zipcode
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-05-12 16:55:32
Modified on: 2021-05-12 20:36:04
Date last run: 2022-04-05 13:26:21

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Counts borrowers by zip code</p>
<ul><li>Shows current data</li>
<li>with the home library you specify</li>
<li>grouped and sorted by borrower home library and zip code</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3504&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
<p class= ""notetags"" style=""display: none;"">tag goes here</p>
</div>

----------
*/

","SELECT
  borrowers.branchcode,
  LEFT(borrowers.zipcode, 5) as zipcode,
  Count(borrowers.borrowernumber) AS Count_borrowernumber
FROM
  borrowers
WHERE
  borrowers.branchcode LIKE <<Choose a library|LBRANCH>>
GROUP BY
  borrowers.branchcode,
  LEFT(borrowers.zipcode, 5)
ORDER BY
  borrowers.branchcode,
  LEFT(borrowers.zipcode, 5)",,,,,,,,
R.003505,"/*
R.003505

----------

Name: GHW - D2 Circulation by borrower details - circulation by zipcode - Next Search Catalog
Created by: George H Williams

----------

Group: Statistics
     2022 beginning of month statistics

Created on: 2021-05-12 20:58:05
Modified on: 2022-09-06 15:47:00
Date last run: 2022-10-01 00:50:01

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint> 
<p>Circulation by borrower details - checkouts and renewals by check-out library and zipcode</p> 
<ul><li>during the previous calendar month</li> 
<li>at all system libraries</li> 
<li>grouped and sorted by checkout-library and borrower zipcode</li> 
</ul><br /> 
<p><ins>Notes:</ins></p> 
<p></p> 
<ul> 
  <li>Zip codes on borrower records are only as accurate as the staff members who entered those zip codes into the borrower records.  There are hundreds of incorrect and non-standard zip codes in the borrower data.</li> 
  <li>All zip codes are trimmed to 5 digits</li>  
  <li>If BORROWER_ZIPCODE = ""-"" that means there are less than 10 borrowers with that zip code system-wide<br />in order to protect borrower privacy, if there are fewer than 10 borrowers in a zip code, that zip code will be hidden.</li> 
  <li>If BORROWER_ZIPCODE = ""0"" that means that the zipdcode that has been left blank, that zipcode contains nothing but spaces, or that zipcode is set to zero</li> 
</ul> 
<p></p> 
<p class=""updated"">This report and these notes updated on 2022.03.10</p> 
<p></p> 
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id= 3505"">Click here to download as a csv file</a></p> 
<p class= ""notetags"" style=""display: none;"">#monthly #statistics #borrower #details #zipcode</p> 
<!-- html notes rendered on guided_reports.pl by jquery at https://wiki.koha-community.org/wiki/JQuery_Library#Render_patron_messages_as_HTML_and_in_Report_notes --> 
</div> 

----------
*/

","SELECT 
  branches.branchname AS 'Library', 
  If( 
    zipcounts.Count_borrowernumber < 10, 
    '-', 
    If( 
      circcounts.BORROWER_ZIPCODE = '', 
      '0', 
      circcounts.BORROWER_ZIPCODE 
    ) 
  ) AS 'Borrower zipcode', 
  Sum(circcounts.CKO_RENEW) AS 'Checkouts + renewals' 
FROM 
    (SELECT 
      statistics.branch AS CKO_BRANCH, 
      Left(Trim(borrowers.zipcode), 5) AS BORROWER_ZIPCODE, 
      COUNT(*) AS CKO_RENEW 
    FROM 
      statistics LEFT JOIN 
      borrowers ON borrowers.borrowernumber = statistics.borrowernumber 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      statistics.branch, 
      Left(Trim(borrowers.zipcode), 5) 
    ORDER BY 
      CKO_BRANCH, 
      BORROWER_ZIPCODE 
    ) circcounts 
  LEFT JOIN 
    (SELECT 
      Left(Trim(borrowers.zipcode), 5) AS ZIP, 
      Count(DISTINCT borrowers.borrowernumber) AS Count_borrowernumber 
    FROM 
      borrowers 
    GROUP BY 
      Left(Trim(borrowers.zipcode), 5) 
    ) zipcounts 
  ON zipcounts.ZIP = circcounts.BORROWER_ZIPCODE 
  JOIN branches ON circcounts.CKO_BRANCH = branches.branchcode 
GROUP BY 
  branches.branchname, 
  If( 
    zipcounts.Count_borrowernumber < 10, 
    '-', 
    If( 
      circcounts.BORROWER_ZIPCODE = '', 
      '0', 
      circcounts.BORROWER_ZIPCODE 
    ) 
  ) 
ORDER BY 
  branches.branchname, 
  BORROWER_ZIPCODE ",,,,,,,,
R.003507,"/*
R.003507

----------

Name: GHW - Request turnaround time
Created by: George H Williams

----------

Group: Statistics
     -

Created on: 2021-05-20 15:40:51
Modified on: 2021-05-20 18:28:43
Date last run: 2021-05-23 23:43:35

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Counts delay in days between a request's waiting date and the date it's checked out</p>
<ul><li>Only shows requests that were picked up in the previous calendar month</li>
<li>at the library you specify</li>
<li>grouped and sorted by the library name and the number of days</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report will only work if the system preference ""HoldsLog"" is set to ""Log.""</p>
<p></p>
</div>

----------
*/

","SELECT 
  branches.branchcode, 
  ckoturnaround.PICKUP_DELAY_DAYS, 
  Coalesce(ckoturnaround.ITEMS_PICKED_UP, 0) AS ITEMS_PICKED_UP_COUNT 
FROM 
  branches LEFT JOIN 
  (SELECT 
      old_reserves.branchcode, 
      DateDiff( 
        ckodates.cko_date, 
        Coalesce(old_reserves.waitingdate, CAST(old_reserves.timestamp AS DATE)) 
      ) AS PICKUP_DELAY_DAYS, 
      Count(old_reserves.reserve_id) AS ITEMS_PICKED_UP 
    FROM 
      old_reserves JOIN 
      (SELECT 
          action_logs.action_id, 
          action_logs.timestamp, 
          action_logs.user, 
          action_logs.module, 
          action_logs.action, 
          action_logs.object, 
          action_logs.info, 
          action_logs.interface, 
          CAST(action_logs.timestamp AS DATE) AS cko_date 
        FROM 
          action_logs 
        WHERE 
          action_logs.module = 'HOLDS' AND 
          Month(action_logs.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND 
          Year(action_logs.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND 
          action_logs.action = Concat('D', 'ELETE') 
      ) ckodates 
      ON ckodates.object = old_reserves.reserve_id 
    WHERE 
      old_reserves.found = 'F'
    GROUP BY 
      old_reserves.branchcode, 
      DateDiff( 
        ckodates.cko_date, 
        Coalesce(old_reserves.waitingdate, CAST(old_reserves.timestamp AS DATE)) 
      ) 
  ) ckoturnaround ON 
      ckoturnaround.branchcode = branches.branchcode 
WHERE 
  branches.branchcode LIKE <<Choose your library|LBRANCH>> 
GROUP BY 
  branches.branchcode, 
  ckoturnaround.PICKUP_DELAY_DAYS, 
  ITEMS_PICKED_UP_COUNT ",,,,,,,,
R.003508,"/*
R.003508

----------

Name: GHW - Request cancellation turnaround time
Created by: George H Williams

----------

Group: Statistics
     -

Created on: 2021-05-20 15:59:21
Modified on: 2021-05-20 18:29:47
Date last run: 2021-06-16 16:51:24

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Counts delay in days between a request's waiting date and the date the request is cancelled</p>
<ul><li>Only shows requests that were cancelled in the previous calendar month</li>
<li>at the library you specify</li>
<li>grouped and sorted by the library name and the number of days</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report will only requests that were waiting for pickup - if the request is cancelled before the item makes it to the hold shelf, it will not be counted.</p>
<p></p>
</div>

----------
*/

","SELECT 
  branches.branchcode, 
  cnx_turnaround.CNX_DELAY_DAYS, 
  Coalesce(cnx_turnaround.ITEMS_CNX, 0) AS ITEMS_CNX 
FROM 
  branches LEFT JOIN 
  (SELECT 
      old_reserves.branchcode, 
      DateDiff( 
        old_reserves.cancellationdate, 
        old_reserves.waitingdate 
      ) 
      CNX_DELAY_DAYS, 
      Count(old_reserves.reserve_id) AS ITEMS_CNX 
    FROM 
      old_reserves 
    WHERE 
      Month(old_reserves.cancellationdate) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(old_reserves.cancellationdate) = Year(Now() - INTERVAL 1 MONTH) AND 
      old_reserves.waitingdate IS NOT NULL 
    GROUP BY 
      old_reserves.branchcode, 
      DateDiff( 
        old_reserves.cancellationdate, 
        old_reserves.waitingdate 
      ) 
  ) 
  cnx_turnaround 
  ON cnx_turnaround.branchcode = branches.branchcode 
WHERE 
  branches.branchcode LIKE <<Choose your library|LBRANCH>> 
GROUP BY 
  branches.branchcode, 
  cnx_turnaround.CNX_DELAY_DAYS",,,,,,,,
R.003510,"/*
R.003510

----------

Name: GHW - Tempsville ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-05-21 17:00:57
Modified on: 2021-05-21 17:00:57
Date last run: 2021-06-06 19:10:53

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.borrowernumber,
  borrowers.cardnumber,
  borrowers.branchcode,
  borrowers.categorycode
FROM
  borrowers
WHERE
  borrowers.branchcode = 'OTTAWA' AND
  borrowers.categorycode = 'ASSOCIATE'",,,,,,,,
R.003511,"/*
R.003511

----------

Name: 942e - ADULT
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-05-27 22:10:53
Modified on: 2021-10-19 10:20:32
Date last run: 2022-10-03 09:04:29

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  biblio.author,
  Concat_Ws("" "", 
    biblio.title, 
    biblio.subtitle, 
    biblioitems.number,
    biblio.part_name
  ) AS FULL_TITLE,
  locs.lib AS BIB_LOCATION,
  itypess.description AS BIB_ITYPE,
  ccodes.lib AS CCODE,
  Date_Format(biblio.datecreated, ""%Y.%m.%d"") AS DATE_ADDED,
  biblio.biblionumber,
  Concat(
    '<a class= ""clicked"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', 
    biblio.biblionumber, 
    '\"" target=""_blank"">Go to title</a>'
  ) AS LINK_TO_TITLE,
  bib_locations.COUNT,
  bib_locations.Group_Concat_permanent_location
FROM
  biblio JOIN
  biblioitems ON biblioitems.biblionumber = biblio.biblionumber LEFT JOIN
  (SELECT
     authorised_values.category,
     authorised_values.authorised_value,
     authorised_values.lib,
     authorised_values.lib_opac
   FROM
     authorised_values
   WHERE
     authorised_values.category = 'LOC') locs ON locs.authorised_value =
      biblioitems.agerestriction LEFT JOIN
  (SELECT
     itemtypes.itemtype,
     itemtypes.description
   FROM
     itemtypes) itypess ON itypess.itemtype = biblioitems.itemtype LEFT JOIN
  (SELECT
     authorised_values.category,
     authorised_values.authorised_value,
     authorised_values.lib,
     authorised_values.lib_opac
   FROM
     authorised_values
   WHERE
     authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      biblioitems.cn_class JOIN
  (SELECT
     items.biblionumber,
     Count(DISTINCT items.permanent_location) AS COUNT,
     Group_Concat(DISTINCT items.permanent_location) AS
     Group_Concat_permanent_location
   FROM
     items
   GROUP BY
     items.biblionumber
   HAVING
     Count(DISTINCT items.permanent_location) = '1') bib_locations ON
      bib_locations.biblionumber = biblio.biblionumber
WHERE
  (locs.lib NOT LIKE '%ADULT%' AND
  locs.lib NOT LIKE '%CHILD%' AND
  bib_locations.Group_Concat_permanent_location LIKE '%ADULT%') OR 
  ((locs.lib is null OR
  locs.lib = """") AND 
  (bib_locations.Group_Concat_permanent_location LIKE '%ADULT%'))
GROUP BY
  biblio.biblionumber,
  bib_locations.COUNT,
  bib_locations.Group_Concat_permanent_location
LIMIT 500",,,,,,,,
R.003512,"/*
R.003512

----------

Name: 942e - Children
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-05-27 22:11:35
Modified on: 2021-10-19 10:22:38
Date last run: 2022-10-03 09:04:30

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  biblio.author,
  Concat_Ws("" "", 
    biblio.title, 
    biblio.subtitle, 
    biblioitems.number,
    biblio.part_name
  ) AS FULL_TITLE,
  locs.lib AS BIB_LOCATION,
  itypess.description AS BIB_ITYPE,
  ccodes.lib AS CCODE,
  Date_Format(biblio.datecreated, ""%Y.%m.%d"") AS DATE_ADDED,
  biblio.biblionumber,
  Concat(
    '<a class= ""clicked"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', 
    biblio.biblionumber, 
    '\"" target=""_blank"">Go to title</a>'
  ) AS LINK_TO_TITLE,
  bib_locations.COUNT,
  bib_locations.Group_Concat_permanent_location
FROM
  biblio JOIN
  biblioitems ON biblioitems.biblionumber = biblio.biblionumber LEFT JOIN
  (SELECT
     authorised_values.category,
     authorised_values.authorised_value,
     authorised_values.lib,
     authorised_values.lib_opac
   FROM
     authorised_values
   WHERE
     authorised_values.category = 'LOC') locs ON locs.authorised_value =
      biblioitems.agerestriction LEFT JOIN
  (SELECT
     itemtypes.itemtype,
     itemtypes.description
   FROM
     itemtypes) itypess ON itypess.itemtype = biblioitems.itemtype LEFT JOIN
  (SELECT
     authorised_values.category,
     authorised_values.authorised_value,
     authorised_values.lib,
     authorised_values.lib_opac
   FROM
     authorised_values
   WHERE
     authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      biblioitems.cn_class JOIN
  (SELECT
     items.biblionumber,
     Count(DISTINCT items.permanent_location) AS COUNT,
     Group_Concat(DISTINCT items.permanent_location) AS
     Group_Concat_permanent_location
   FROM
     items
   GROUP BY
     items.biblionumber
   HAVING
     Count(DISTINCT items.permanent_location) = '1') bib_locations ON
      bib_locations.biblionumber = biblio.biblionumber
WHERE
  (locs.lib NOT LIKE '%ADULT%' AND
  locs.lib NOT LIKE '%CHILD%' AND
  bib_locations.Group_Concat_permanent_location LIKE '%ADULT%') OR 
  ((locs.lib is null OR
  locs.lib = """") AND 
  (bib_locations.Group_Concat_permanent_location LIKE '%CHILD%'))
GROUP BY
  biblio.biblionumber,
  bib_locations.COUNT,
  bib_locations.Group_Concat_permanent_location
LIMIT 500",,,,,,,,
R.003513,"/*
R.003513

----------

Name: 942e - YA
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-05-27 22:12:05
Modified on: 2021-10-19 10:23:10
Date last run: 2022-10-03 09:04:30

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  biblio.author,
  Concat_Ws("" "", 
    biblio.title, 
    biblio.subtitle, 
    biblioitems.number,
    biblio.part_name
  ) AS FULL_TITLE,
  locs.lib AS BIB_LOCATION,
  itypess.description AS BIB_ITYPE,
  ccodes.lib AS CCODE,
  Date_Format(biblio.datecreated, ""%Y.%m.%d"") AS DATE_ADDED,
  biblio.biblionumber,
  Concat(
    '<a class= ""clicked"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', 
    biblio.biblionumber, 
    '\"" target=""_blank"">Go to title</a>'
  ) AS LINK_TO_TITLE,
  bib_locations.COUNT,
  bib_locations.Group_Concat_permanent_location
FROM
  biblio JOIN
  biblioitems ON biblioitems.biblionumber = biblio.biblionumber LEFT JOIN
  (SELECT
     authorised_values.category,
     authorised_values.authorised_value,
     authorised_values.lib,
     authorised_values.lib_opac
   FROM
     authorised_values
   WHERE
     authorised_values.category = 'LOC') locs ON locs.authorised_value =
      biblioitems.agerestriction LEFT JOIN
  (SELECT
     itemtypes.itemtype,
     itemtypes.description
   FROM
     itemtypes) itypess ON itypess.itemtype = biblioitems.itemtype LEFT JOIN
  (SELECT
     authorised_values.category,
     authorised_values.authorised_value,
     authorised_values.lib,
     authorised_values.lib_opac
   FROM
     authorised_values
   WHERE
     authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      biblioitems.cn_class JOIN
  (SELECT
     items.biblionumber,
     Count(DISTINCT items.permanent_location) AS COUNT,
     Group_Concat(DISTINCT items.permanent_location) AS
     Group_Concat_permanent_location
   FROM
     items
   GROUP BY
     items.biblionumber
   HAVING
     Count(DISTINCT items.permanent_location) = '1') bib_locations ON
      bib_locations.biblionumber = biblio.biblionumber
WHERE
  (locs.lib NOT LIKE '%ADULT%' AND
  locs.lib NOT LIKE '%CHILD%' AND
  bib_locations.Group_Concat_permanent_location LIKE '%YA%') OR 
  ((locs.lib is null OR
  locs.lib = """") AND 
  (bib_locations.Group_Concat_permanent_location LIKE '%YA%'))
GROUP BY
  biblio.biblionumber,
  bib_locations.COUNT,
  bib_locations.Group_Concat_permanent_location
LIMIT 500",,,,,,,,
R.003514,"/*
R.003514

----------

Name: CCODE changer
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-06-01 10:53:32
Modified on: 2021-07-29 15:52:04
Date last run: 2021-07-29 15:52:07

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  items.itemnumber,
  items.ccode,
  items.itype,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]') AS GMD
FROM
  items JOIN
  biblio_metadata ON biblio_metadata.biblionumber = items.biblionumber
WHERE
  items.ccode LIKE '%DVD%' AND
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]') LIKE ""%(DVD)%""",,,,,,,,
R.003515,"/*
R.003515

----------

Name: GHW - 942H update
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-06-01 14:14:17
Modified on: 2021-06-03 22:00:17
Date last run: 2021-06-03 22:00:21

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  biblio.biblionumber,
  biblio.medium,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]') AS GMD,
  biblioitems.cn_class,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""h""]') AS CCODEX
FROM
  biblio JOIN
  biblioitems ON biblioitems.biblionumber = biblio.biblionumber JOIN
  biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
WHERE
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""h""]') LIKE ""%VIDPLAYER%""",,,,,,,,
R.003516,"/*
R.003516

----------

Name: GHW - experimental - Holds queue report for receipt printer
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-06-04 08:59:07
Modified on: 2021-07-16 16:45:36
Date last run: 2021-07-20 08:45:44

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat_Ws(""<br />----------------------<br />"",
    ""<style type='text/css'>.receipt {width: 45mm; min-height: 297mm; padding: 2mm; color: black;}</style><span class='receipt'>"", 
    Concat_Ws('<br />', 
      Concat('Current: ', hold_fill_targets.source_branchcode), 
      Concat('Owned by: ', items.homebranch), 
      Concat('Last seen: ', items.datelastseen)
    ), 
    Concat_Ws('<br />', 
      If(LOCATIONS.lib = PERM_LOCATIONS.lib, LOCATIONS.lib, Concat(PERM_LOCATIONS.lib, "" ("", LOCATIONS.lib, "")"")), 
      ITEMTYPESS.description, 
      CCODES.lib, 
      items.itemcallnumber, 
      items.copynumber
    ), 
    Concat_Ws('<br />', 
      biblio.author, 
      (Concat_Ws('', 
        biblio.title, 
        If(
          ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]') = """", 
          """", 
          Concat(""<br />"", ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'))
        ), 
        If(
          ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]') = """", 
          """", 
          Concat(""<br />"", ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'))
        ), 
        If(
          ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]') = """", 
          """", 
          Concat(""<br />"", ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'))
        ), 
        If(
          ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]') = """", 
          """", 
          Concat(""<br />"", ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')))
        )
    )
    ), 
    Concat_Ws('<br />', 
      (Concat(
        '<img style=""width: 75px; height: 75px;"" src=""/cgi-bin/koha/svc/barcode?barcode=', 
        Upper(items.barcode), 
        '&type=QRcode""></img>')
      ), 
      items.barcode, 
      ""<br />==============================</span>""
    )
  ) AS HOLDS_QUEUE
FROM
  biblio LEFT JOIN
  ((hold_fill_targets LEFT JOIN
  items ON hold_fill_targets.itemnumber = items.itemnumber) LEFT JOIN
  biblio_metadata ON items.biblionumber = biblio_metadata.biblionumber) ON
      biblio.biblionumber = biblio_metadata.biblionumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE') CCODES ON CCODES.authorised_value =
      items.ccode LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') PERM_LOCATIONS ON
      PERM_LOCATIONS.authorised_value = items.permanent_location LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') LOCATIONS ON
      LOCATIONS.authorised_value = items.location LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) ITEMTYPESS ON ITEMTYPESS.itemtype = items.itype
WHERE
  hold_fill_targets.source_branchcode LIKE <<Choose your library|branches>>
GROUP BY
  hold_fill_targets.itemnumber
ORDER BY
  items.homebranch,
  PERM_LOCATIONS.lib,
  ITEMTYPESS.description,
  CCODES.lib,
  biblio.author,
  biblio.title,
  items.itemcallnumber",,,,,,,,
R.003517,"/*
R.003517

----------

Name: GHW - Borrower Categories List
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-06-08 16:41:55
Modified on: 2021-06-08 16:41:55
Date last run: 2022-08-18 13:44:20

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Report version of the patron category summary page</p>
<ul><li>Shows current patron categories</li>
<li>shows all borrower categories system-wide</li>
<li>grouped by category code</li>
<li>sorted by category description</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p></p>
<p></p>
<p class= ""notetags"" style=""display: none;"">tag goes here</p>
</div>

----------
*/

","SELECT 
  categories.categorycode AS CODE, 
  categories.description AS CATEGORY_NAME, 
  If( 
    categories.category_type = 'A', 'Adult', 
    If( 
      categories.category_type = 'C', 'Minor', 
      If( 
        categories.category_type = 'S', 'Staff', 
        If( 
          categories.category_type = 'I', 'Organization', 
          If( 
            categories.category_type = 'P', 'Professional', 
            If( 
              categories.category_type = 'X', 'Statistical', 
              categories.category_type 
            ) 
          ) 
        ) 
      ) 
    ) 
  ) AS TYPE, 
  If( 
    categories.enrolmentperiod IS NULL, 
    Concat(""Until "", categories.enrolmentperioddate), 
    Concat(categories.enrolmentperiod, "" months"") 
  ) AS ENROLLMENT_PERIOD, 
  If( 
    Concat(categories.dateofbirthrequired, categories.upperagelimit) = 0999, 
    ""Any age"", 
    If( 
      Concat(categories.dateofbirthrequired, categories.upperagelimit) LIKE ""1_999"", 
      Concat(categories.dateofbirthrequired, "" or older""), 
      Concat_Ws("" -- "", categories.dateofbirthrequired, categories.upperagelimit) 
    ) 
  ) AS AGE_RANGE, 
  categories.enrolmentfee AS ENROLLMENT_FEE, 
  If( 
    categories.overduenoticerequired = 0, 
    ""No"", 
    ""Yes"" 
  ) AS OVERDUE, 
  If( 
    categories.hidelostitems = 0, 
    ""Shown"", 
    ""Hidden by default"" 
  ) AS LOST_ITEMS, 
  categories.reservefee AS HOLD_FEE, 
  GROUP_CONCAT( 
    DISTINCT messaging_preferences.message 
    ORDER BY messaging_preferences.message_attribute_id 
    SEPARATOR "" | "" 
  ) AS DEFAULT_MESSAGING, 
  GROUP_CONCAT( 
    DISTINCT categories_branchess.branchcode 
    SEPARATOR "" | "" 
  ) AS BRANCH_LIMITATIONS, 
  categories.default_privacy AS DEFAULT_PRIVACY 
FROM categories 
  LEFT JOIN 
    (SELECT 
      borrower_message_preferences.categorycode, 
      Concat_Ws("" "", 
        If( 
          message_attributes.message_name = ""Item_Checkout"", 
          ""Email check-out/renewal receipt "", 
          message_attributes.message_name 
        ), 
        Concat( 
          "": "", 
          borrower_message_transport_preferences.message_transport_type), 
          If( 
            borrower_message_preferences.wants_digest = 1, 
            ""Digest"", 
            """" 
          ), 
          Concat( 
            borrower_message_preferences.days_in_advance, 
            "" days in advance"" 
          ) 
        ) AS message, 
        borrower_message_preferences.message_attribute_id 
    FROM borrower_message_preferences 
    JOIN borrower_message_transport_preferences 
      ON borrower_message_transport_preferences.borrower_message_preference_id = borrower_message_preferences.borrower_message_preference_id 
    JOIN message_attributes 
      ON borrower_message_preferences.message_attribute_id = message_attributes.message_attribute_id 
    WHERE borrower_message_preferences.borrowernumber IS NULL 
    ORDER BY 
      borrower_message_preferences.categorycode, 
      borrower_message_preferences.message_attribute_id) messaging_preferences 
  ON messaging_preferences.categorycode = categories.categorycode 
  LEFT JOIN 
    (SELECT categories_branches.categorycode, 
            categories_branches.branchcode 
     FROM categories_branches) categories_branchess 
  ON categories_branchess.categorycode = categories.categorycode 
GROUP BY 
  categories.categorycode 
ORDER BY 
  categories.description",,,,,,,,
R.003518,"/*
R.003518

----------

Name: GHW - CIrculation rules - Checkout and hold policy
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-06-10 14:33:05
Modified on: 2021-06-10 15:57:07
Date last run: 2022-09-28 10:02:33

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branches_categoriess.branchname AS BRANCH,
  branches_categoriess.description AS CATEGORY,
  patron_maxissueqty.rule_value AS MAX_CKO,
  patron_maxonsiteissueqty.rule_value AS MAX_ONSITE,
  max_holds.rule_value AS MAX_REQUESTS,
  If(
    categories_branches.branchcode IS NOT NULL, 
    'Yes',
    ''
  ) AS STAFF_CAN_CREATE_NEW_BORROWERS
FROM
  (SELECT
      branchess.branchcode,
      branchess.branchname,
      categoriess.categorycode,
      categoriess.description
    FROM
      (SELECT
          branches.branchcode,
          branches.branchname
        FROM
          branches
        UNION
        SELECT
          Concat('*') AS branchcode,
          Concat(' All libraries') AS branchname
        FROM
          branches) branchess,
      (SELECT
          categories.categorycode,
          categories.description
        FROM
          categories
        UNION
        SELECT
          Concat('*') AS categorycode,
          Concat(' All borrower categories') AS description
        FROM
          categories) categoriess) branches_categoriess LEFT JOIN
  (SELECT
      circulation_rules.id,
      Coalesce(circulation_rules.branchcode, '*') AS branchcode,
      Coalesce(circulation_rules.categorycode, '*') AS categorycode,
      circulation_rules.itemtype,
      circulation_rules.rule_name,
      circulation_rules.rule_value
    FROM
      circulation_rules
    WHERE
      circulation_rules.rule_name = 'patron_maxissueqty') patron_maxissueqty ON
      patron_maxissueqty.branchcode = branches_categoriess.branchcode AND
      patron_maxissueqty.categorycode = branches_categoriess.categorycode
  LEFT JOIN
  (SELECT
      circulation_rules.id,
      Coalesce(circulation_rules.branchcode, '*') AS branchcode,
      Coalesce(circulation_rules.categorycode, '*') AS categorycode,
      circulation_rules.itemtype,
      circulation_rules.rule_name,
      circulation_rules.rule_value
    FROM
      circulation_rules
    WHERE
      circulation_rules.rule_name = 'patron_maxonsiteissueqty')
  patron_maxonsiteissueqty ON patron_maxonsiteissueqty.branchcode =
      branches_categoriess.branchcode AND
      patron_maxonsiteissueqty.categorycode = branches_categoriess.categorycode
  LEFT JOIN
  (SELECT
      circulation_rules.id,
      Coalesce(circulation_rules.branchcode, '*') AS branchcode,
      Coalesce(circulation_rules.categorycode, '*') AS categorycode,
      circulation_rules.itemtype,
      circulation_rules.rule_name,
      circulation_rules.rule_value
    FROM
      circulation_rules
    WHERE
      circulation_rules.rule_name = 'max_holds') max_holds ON
      max_holds.branchcode = branches_categoriess.branchcode AND
      max_holds.categorycode = branches_categoriess.categorycode LEFT JOIN
  categories_branches ON categories_branches.branchcode =
      branches_categoriess.branchcode AND
      categories_branches.categorycode = branches_categoriess.categorycode
GROUP BY
  branches_categoriess.branchname,
  branches_categoriess.description
ORDER BY
  BRANCH,
  CATEGORY",,,,,,,,
R.003519,"/*
R.003519

----------

Name: sandbox
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-06-11 09:57:11
Modified on: 2022-07-26 14:44:53
Date last run: 2022-07-26 15:43:37

----------

Public: 0
Expiry: 300

----------

Setup for 942 cleanup - item type = NVIDEO


----------
*/

","SELECT
  message_queue.message_id,
  Concat(
    '<a href=\""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    borrowers.borrowernumber, 
    '\"" target=""_blank"">', 
    borrowers.borrowernumber,
    '</a>'
  ) AS LINK_TO_BORROWER,
  borrowers.borrowernumber,
  borrowers.branchcode,
  message_queue.subject,
  Replace(message_queue.content, '<', '&lt;')  AS CONTENT, 
  message_queue.metadata,
  message_queue.letter_code,
  message_queue.message_transport_type,
  message_queue.status,
  message_queue.time_queued,
  message_queue.to_address,
  message_queue.from_address,
  message_queue.content_type
FROM
  message_queue LEFT JOIN
  borrowers ON borrowers.borrowernumber = message_queue.borrowernumber
WHERE
  borrowers.branchcode = <<choose branch|branches>>
GROUP BY
  message_queue.message_id
ORDER BY
  message_queue.time_queued DESC",,,,,,,,
R.003520,"/*
R.003520

----------

Name: GHW - ATCHISON patrons without Kanopy access
Created by: George H Williams

----------

Group:  ATCHISON
     -

Created on: 2021-06-14 11:27:37
Modified on: 2021-07-20 13:53:21
Date last run: 2022-07-08 19:34:08

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows patrons with a ATCHISON home library but without a ""Kanopy (ATCHISON): Allowed . . ."" borrower attribute.</p>
<ul><li>Shows borrwoers that currently lack this attribute</li>
<li>grouped by categorycode and borrowernumber</li>
<li>sorted by library card number</li>
<li>links to the borrower account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Should be run monthly at ATCHISON so the attribute can be added to those accounts</p>
<p><a href=""https://northeast-kansas-library-system.github.io/next/branches/ATCHISON/kanopy.html#running-reports-to-manually-update-kanopy-permission"" target=""_blank"">Go to the training information for the Kanopy (ATCHISON) extended borrower attribute.</a></p>
<p></p>
<p class= ""notetags"" style=""display: none;"">kanopy; patron-extended-attributes; ATCHISON;</p>
</div>

----------
*/

","SELECT
  Concat(
    '<a href=""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=', 
    borrowers.borrowernumber, 
    '&step=4"" target=""_blank"">Go to patron account</a>'
  ) AS LINK,
  borrowers.cardnumber
FROM
  borrowers
  LEFT JOIN (
    SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute
    FROM
      borrower_attributes
    WHERE
      borrower_attributes.code = 'ATCHKANOPY'
  ) kanopy
    ON kanopy.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode = 'ATCHISON' AND
  kanopy.attribute IS NULL AND
  borrowers.categorycode <> 'STAFF' AND
  borrowers.categorycode <> ""ILL"" AND
  borrowers.categorycode <> ""INHOUSE"" AND
  borrowers.categorycode <> ""STATISTIC"" AND
  borrowers.othernames <> 'SIP2 test account'
GROUP BY
  borrowers.categorycode,
  borrowers.borrowernumber
ORDER BY
  borrowers.cardnumber",,,,,,,,
R.003521,"/*
R.003521

----------

Name: GHW - Non-ATCHISON patrons with ATCHISON Kanopy access 
Created by: George H Williams

----------

Group:  ATCHISON
     -

Created on: 2021-06-14 11:30:27
Modified on: 2021-07-20 13:53:56
Date last run: 2022-07-08 19:40:56

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows patrons with a ""Kanopy (ATCHISON): Allowed . . ."" patron attribute but without a ATCHISON homebranch</p>
<ul><li>Shows borrwowers that currently have this attribute</li>
<li>grouped by categorycode and borrowernumber</li>
<li>sorted by library card number</li>
<li>links to the borrower account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Should be run monthly at ATCHISON so the attribute can be removed from those accounts</p>
<p><a href=""https://northeast-kansas-library-system.github.io/next/branches/ATCHISON/kanopy.html#running-reports-to-manually-update-kanopy-permission"" target=""_blank"">Go to the training information for the Kanopy (ATCHISON) extended borrower attribute.</a></p>
<p></p>
<p class= ""notetags"" style=""display: none;"">kanopy; patron-extended-attributes; ATCHISON;</p>
</div>

----------
*/

","SELECT
  Concat(
    '<a href=""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=', 
    borrowers.borrowernumber, 
    '&step=4"" target=""_blank"">Go to patron account</a>'
  ) AS LINK,
  borrowers.cardnumber
FROM
  borrowers
  LEFT JOIN (
    SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute
    FROM
      borrower_attributes
    WHERE
      borrower_attributes.code = 'ATCHKANOPY'
  ) kanopy
    ON kanopy.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode <> 'ATCHISON' AND
  kanopy.attribute = 'ATCHISON' AND
  borrowers.othernames <> 'SIP2 test account'
GROUP BY
  borrowers.categorycode,
  borrowers.borrowernumber
ORDER BY
  borrowers.cardnumber",,,,,,,,
R.003522,"/*
R.003522

----------

Name: GHW - BASEHOR patrons without Kanopy access
Created by: George H Williams

----------

Group:  BASEHOR
     -

Created on: 2021-06-14 11:39:47
Modified on: 2021-08-16 20:43:53
Date last run: 2021-10-09 16:31:22

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows patrons with a BASEHOR home library but without a ""Kanopy (BASEHOR): Allowed . . ."" borrower attribute.</p>
<ul><li>Shows borrwoers that currently lack this attribute</li>
<li>grouped by categorycode and borrowernumber</li>
<li>sorted by library card number</li>
<li>links to the borrower account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Should be run monthly at BASEHOR so the attribute can be added to those accounts</p>
<p><a href=""https://northeast-kansas-library-system.github.io/next/branches/BASEHOR/kanopy.html#running-reports-to-manually-update-kanopy-permission"" target=""_blank"">Go to the training information for the Kanopy (BASEHOR) extended borrower attribute.</a></p>
<p></p>
<p class= ""notetags"" style=""display: none;"">kanopy; patron-extended-attributes; BASEHOR;</p>
</div>

----------
*/

","SELECT
  Concat(
    '<a href=""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=', 
    borrowers.borrowernumber, 
    '&step=4"" target=""_blank"">Go to patron account</a>'
  ) AS LINK,
  borrowers.cardnumber
FROM
  borrowers
  LEFT JOIN (
    SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute
    FROM
      borrower_attributes
    WHERE
      borrower_attributes.code = 'BASEKANOPY'
  ) kanopy
    ON kanopy.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode = 'BASEHOR' AND
  kanopy.attribute IS NULL AND
  borrowers.categorycode <> 'STAFF' AND
  borrowers.categorycode <> ""ILL"" AND
  borrowers.categorycode <> ""INHOUSE"" AND
  borrowers.categorycode <> ""STATISTIC"" AND
  borrowers.othernames <> 'SIP2 test account'
GROUP BY
  borrowers.categorycode,
  borrowers.borrowernumber
ORDER BY
  borrowers.cardnumber",,,,,,,,
R.003523,"/*
R.003523

----------

Name: GHW - Non-BASEHOR patrons with BASEHOR Kanopy access 
Created by: George H Williams

----------

Group:  BASEHOR
     -

Created on: 2021-06-14 11:44:12
Modified on: 2021-08-16 20:44:02
Date last run: 2022-07-08 19:45:32

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows patrons with a ""Kanopy (BASEHOR): Allowed . . ."" patron attribute but without a BASEHOR homebranch</p>
<ul><li>Shows borrwoers that currently have this attribute</li>
<li>grouped by categorycode and borrowernumber</li>
<li>sorted by library card number</li>
<li>links to the borrower account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Should be run monthly at BASEHOR so the attribute can be removed from those accounts</p>
<p><a href=""https://northeast-kansas-library-system.github.io/next/branches/BASEHOR/kanopy.html#running-reports-to-manually-update-kanopy-permission"" target=""_blank"">Go to the training information for the Kanopy (BASEHOR) extended borrower attribute.</a></p>
<p></p>
<p class= ""notetags"" style=""display: none;"">kanopy; patron-extended-attributes; BASEHOR;</p>
</div>

----------
*/

","SELECT
  Concat(
    '<a href=""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=', 
    borrowers.borrowernumber, 
    '&step=4"" target=""_blank"">Go to patron account</a>'
  ) AS LINK,
  borrowers.cardnumber
FROM
  borrowers
  LEFT JOIN (
    SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute
    FROM
      borrower_attributes
    WHERE
      borrower_attributes.code = 'BASEKANOPY'
  ) kanopy
    ON kanopy.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode <> 'BASEHOR' AND
  kanopy.attribute = 'BASEHOR' AND
  borrowers.othernames <> 'SIP2 test account'
GROUP BY
  borrowers.categorycode,
  borrowers.borrowernumber
ORDER BY
  borrowers.cardnumber",,,,,,,,
R.003525,"/*
R.003525

----------

Name: GHW - Borrower category update
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-06-15 23:51:19
Modified on: 2021-06-16 00:09:41
Date last run: 2022-08-13 19:59:48

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.borrowernumber,
  borrowers.cardnumber,
  borrowers.surname,
  borrowers.dateofbirth,
  borrowers.branchcode,
  borrowers.categorycode,
  Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25), '-') AS AGE
FROM
  borrowers
WHERE
  borrowers.branchcode = 'SILVERLAKE' AND
  borrowers.categorycode LIKE 'CHILD' AND
  Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25), '-') < 18
GROUP BY
  borrowers.surname,
  borrowers.firstname,
  borrowers.dateofbirth,
  borrowers.branchcode,
  borrowers.categorycode,
  Coalesce(floor(DateDiff(CurDate(), borrowers.dateofbirth) / 365.25), '-')",,,,,,,,
R.003526,"/*
R.003526

----------

Name: GHW - Borrowers with unresolved credits
Created by: George H Williams

----------

Group: Fines/Fees
     -

Created on: 2021-07-15 17:11:05
Modified on: 2021-07-15 17:11:05
Date last run: 2021-07-15 17:14:55

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Generates a list of unresolved credits</p>
<ul><li>Shows currently unresolved credits</li>
<li>at the library you specify</li>
<li>grouped by borrower id number</li>
<li>sorted by library and borrower barcode number</li>
<li>links to the borrower's accounts tab</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>replaces report 831</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#tested #updated  #gk</p>
</div>

----------
*/

","SELECT
  branchess.branchname,
  borrowers.cardnumber,
  Format(outstanding_credits.Sum_amountoutstanding, 2) AS TOTAL_UNRESOLVED_CREDITS,
  Concat(
    '<a href=\""/cgi-bin/koha/members/pay.pl?borrowernumber=',
    outstanding_credits.borrowernumber,
    '\"" target=""_blank"">patron fine records</a>'
  ) AS LINK
FROM
  borrowers JOIN
  (SELECT
      accountlines.borrowernumber,
      Sum(accountlines.amountoutstanding) AS Sum_amountoutstanding
    FROM
      accountlines
    WHERE
      accountlines.amountoutstanding < 0
    GROUP BY
      accountlines.borrowernumber) outstanding_credits ON
      outstanding_credits.borrowernumber = borrowers.borrowernumber JOIN
  (SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches) branchess ON branchess.branchcode = borrowers.branchcode
WHERE
  borrowers.branchcode LIKE <<Choose borrower home library|LBRANCH>>
GROUP BY
  borrowers.borrowernumber
ORDER BY
  branchess.branchname,
  borrowers.cardnumber",,,,,,,,
R.003527,"/*
R.003527

----------

Name: GHW - Borrowers with unresolved debits
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-07-15 17:13:25
Modified on: 2021-07-15 17:13:25
Date last run: 2021-07-15 17:13:31

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Generates a list of unresolved debits</p>
<ul><li>Shows currently unresolved debits</li>
<li>at the library you specify</li>
<li>grouped by borrower id number</li>
<li>sorted by library and borrower barcode number</li>
<li>links to the borrower's accounts tab</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#tested #updated  #gk</p>
</div>

----------
*/

","SELECT
  branchess.branchname,
  borrowers.cardnumber,
  Format(outstanding_debits.Sum_amountoutstanding, 2) AS TOTAL_UNRESOLVED_DEBITS,
  Concat(
    '<a href=\""/cgi-bin/koha/members/pay.pl?borrowernumber=',
    outstanding_debits.borrowernumber,
    '\"" target=""_blank"">patron fine records</a>'
  ) AS LINK
FROM
  borrowers JOIN
  (SELECT
      accountlines.borrowernumber,
      Sum(accountlines.amountoutstanding) AS Sum_amountoutstanding
    FROM
      accountlines
    WHERE
      accountlines.amountoutstanding > 0
    GROUP BY
      accountlines.borrowernumber) outstanding_debits ON
      outstanding_debits.borrowernumber = borrowers.borrowernumber INNER JOIN
  (SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches) branchess ON branchess.branchcode = borrowers.branchcode
WHERE
  borrowers.branchcode LIKE <<Choose borrower home library|LBRANCH>>
GROUP BY
  borrowers.borrowernumber
ORDER BY
  branchess.branchname,
  borrowers.cardnumber",,,,,,,,
R.003528,"/*
R.003528

----------

Name: GHW - Borrowers with unresolved credits, unresolved debits, and a 0.00 balance
Created by: George H Williams

----------

Group: Fines/Fees
     -

Created on: 2021-07-15 17:20:32
Modified on: 2021-07-15 17:23:54
Date last run: 2021-11-03 19:30:43

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Generates a list of borrowers with unresolved credits and debits that generate a $0.00 balance</p>
<ul><li>Shows currently unresolved credits and debits</li>
<li>at the library you specify</li>
<li>grouped by borrower id number</li>
<li>sorted by library and borrower barcode number</li>
<li>links to the borrower's accounts tab</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#tested #updated  #gk</p>
</div>

----------
*/

","SELECT
  branchess.branchname,
  borrowers.cardnumber,
  Format(outstanding_credits.Sum_amountoutstanding, 2) AS TOTAL_UNRESOLVED_CREDITS,
  Format(outstanding_debits.Sum_amountoutstanding, 2) AS TOTAL_UNRESOLVED_DEBITS,
  Format((outstanding_credits.Sum_amountoutstanding + outstanding_debits.Sum_amountoutstanding), 2) AS BALANCE,
  Concat(
    '<a href=\""/cgi-bin/koha/members/pay.pl?borrowernumber=',
    outstanding_debits.borrowernumber,
    '\"" target=""_blank"">patron fine records</a>'
  ) AS LINK
FROM
  borrowers JOIN
  (SELECT
      accountlines.borrowernumber,
      Sum(accountlines.amountoutstanding) AS Sum_amountoutstanding
    FROM
      accountlines
    WHERE
      accountlines.amountoutstanding > 0
    GROUP BY
      accountlines.borrowernumber) outstanding_debits ON
      outstanding_debits.borrowernumber = borrowers.borrowernumber INNER JOIN
  (SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches) branchess ON branchess.branchcode = borrowers.branchcode JOIN
  (SELECT
      accountlines.borrowernumber,
      Sum(accountlines.amountoutstanding) AS Sum_amountoutstanding
    FROM
      accountlines
    WHERE
      accountlines.amountoutstanding < 0
    GROUP BY
      accountlines.borrowernumber) outstanding_credits ON
      outstanding_credits.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Choose borrower home library|LBRANCH>> AND
  Format((outstanding_credits.Sum_amountoutstanding + outstanding_debits.Sum_amountoutstanding), 2) = 0
GROUP BY
  borrowers.borrowernumber
ORDER BY
  branchess.branchname,
  borrowers.cardnumber",,,,,,,,
R.003529,"/*
R.003529

----------

Name: GHW - Patron Purge 105
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-07-19 16:10:29
Modified on: 2021-11-10 09:35:36
Date last run: 2022-10-03 09:04:29

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Part 5 of the patron purge process - part 5 - botched patrons - remove the expired attribute because staff forgot to.</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#PP05 #patron_purge</p>
</div>

----------
*/

","SELECT
  Concat(
    '<a href=""/cgi-bin/koha/circ/circulation.pl?borrowernumber=',
    borrowers.borrowernumber, 
    '"" target=""_blank"">Link to patron</a>'
  ) AS
  LINK_TO_PATRON,
  borrowers.borrowernumber,
  borrowers.cardnumber,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  Coalesce(accountlinesx.DUE_SUM, 0) AS AMT_DUE,
  Coalesce(issuesx.ICOUNT, 0) AS CHECKOUTS,
  Coalesce(guaranteesx.GCOUNT, 0) AS GUARANTEES,
  Coalesce(requestsx.Count_reserve_id, 0) AS REQUESTS,
  Coalesce(expired_attribute.attribute, 0) AS ATTRIBUTE_VALUE,
  expired_attribute.lib AS ATTRIBUTE
FROM
  borrowers LEFT JOIN
  (SELECT
      accountlines.borrowernumber,
      Format(Sum(accountlines.amountoutstanding), 2) AS DUE_SUM
    FROM
      accountlines
    GROUP BY
      accountlines.borrowernumber) accountlinesx ON borrowers.borrowernumber =
      accountlinesx.borrowernumber LEFT JOIN
  (SELECT
      issues.borrowernumber,
      Count(issues.issue_id) AS ICOUNT
    FROM
      issues
    GROUP BY
      issues.borrowernumber) issuesx ON borrowers.borrowernumber =
      issuesx.borrowernumber LEFT JOIN
  (SELECT
      reserves.borrowernumber,
      Count(reserves.reserve_id) AS Count_reserve_id
    FROM
      reserves
    GROUP BY
      reserves.borrowernumber) requestsx ON borrowers.borrowernumber =
      requestsx.borrowernumber LEFT JOIN
  (SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute,
      authorised_values.lib,
      authorised_values.category
    FROM
      borrower_attributes JOIN
      authorised_values ON borrower_attributes.attribute =
          authorised_values.authorised_value
    WHERE
      borrower_attributes.code = 'expired' AND
      authorised_values.category = 'expired') expired_attribute ON
      borrowers.borrowernumber = expired_attribute.borrowernumber LEFT JOIN
  (SELECT
      borrower_relationships.guarantor_id,
      Count(borrower_relationships.guarantee_id) AS GCOUNT
    FROM
      borrower_relationships
    GROUP BY
      borrower_relationships.guarantor_id) guaranteesx ON
      guaranteesx.guarantor_id = borrowers.borrowernumber
WHERE
  borrowers.dateexpiry > CURRENT_DATE() - INTERVAL 730.5 DAY AND
  borrowers.branchcode LIKE '%' AND
  Coalesce(borrowers.othernames, ""0"") NOT LIKE ""%SIP%"" AND
  borrowers.categorycode <> 'STAFF' AND
  borrowers.categorycode <> 'ILL' AND
  borrowers.categorycode <> 'HOOPLA' AND
  Coalesce(expired_attribute.attribute, 0) <> 0
GROUP BY
  borrowers.borrowernumber
ORDER BY
  borrowers.dateexpiry,
  borrowers.branchcode,
  borrowers.surname,
  borrowers.firstname,
  borrowers.borrowernumber",,,,,,,,
R.003530,"/*
R.003530

----------

Name: GHW - F2 Items and holdings statistics - item count by item type - Next Search Catalog
Created by: George H Williams

----------

Group: Statistics
     2022 beginning of month statistics

Created on: 2021-07-26 11:25:35
Modified on: 2022-06-09 16:16:29
Date last run: 2022-10-01 01:10:02

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint> 
<p>Items and holdings statistics - item count by item type</p> 
<ul><li>Generates a count of items all items owned at the time the report is run plus items added and deleted in the previous calendar month</li> 
<li>columns are grouped by shelving locations</li> 
<li>at all system libraries</li> 
<li>grouped and sorted by item home library</li> 
</ul><br /> 
<p><ins>Notes:</ins></p> 
<p></p> 
<p>Items with blank item types are counted as ""(Unclassified).""</p> 
<ul> 
  <li>""ADULT"" includes items with these permanent shelving locations:</li> 
  <ul> 
    <li>Adult</li> 
    <li>~Display - BALDWIN - Adult</li> 
    <li>~Display - LEAVENWRTH - Adult</li> 
    <li>~Display - PAOLA - Adult</li> 
    <li>Cataloging</li> 
    <li>Processing Center</li> 
    <li>Any items where the permanent shelving location is blank or ambiguous</li> 
  </ul> 
  <br /> 
  <li>""YOUNG ADULT"" includes items with these permanent shelving locations:</li> 
  <ul> 
    <li>Young adult</li> 
    <li>~Display - BALDWIN - Young Adult</li> 
    <li>~Display - LEAVENWRTH - Young adult</li> 
    <li>~Display - PAOLA - Young adult</li> 
    <li>Any situation where the location is recorded as ""Recently returned"" but the item's permanent location is one of these ""Young adult"" locations</li> 
  </ul> 
  <br /> 
  <li>""JUVENILE"" includes items with these permanent shelving locations:</li> 
  <ul> 
    <li>Childrens</li> 
    <li>~Display - BALDWIN - Childrens</li> 
    <li>~Display - LEAVENWRTH - Children's</li> 
    <li>~Display - PAOLA - Children's</li> 
    <li>Any situation where the location is recorded as ""Recently returned"" but the item's permanent location is one of these ""Childrens"" locations</li> 
  </ul> 
</ul> 
 <br /> 
<p class=""updated"">This report and these notes updated on 2022.03.10</p> 
<p></p> 
<p>This report cannot track changes made to existing records over time.  Therefore, if staff change the home library, location, or item type of an item, those changes will not be reflected in the additions or deletions columns.  This means that the numbers may look inconsistent from month to month if changes are made to item records.</p> 
<p></p> 
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3530"">Click here to download as a csv file</a></p> 
<p class= ""notetags"" style=""display: none;"">#monthly #statistics #item #count #item type</p> 
<!-- html notes rendered on guided_reports.pl by jquery at https://wiki.koha-community.org/wiki/JQuery_Library#Render_patron_messages_as_HTML_and_in_Report_notes --> 
</div> 

----------
*/

","SELECT 
  branchtypes.branchname, 
  branchtypes.description AS 'ITEM TYPE', 
  Sum(itemss.Count_itemnumber) AS 'TOTAL ITEMS', 
  Sum(adultitems.Count_itemnumber) AS 'ADULT ITEMS', 
  Sum(yaitems.Count_itemnumber) AS 'YOUNG ADULT ITEMS', 
  Sum(juvenileitems.Count_itemnumber) AS 'JUVENILE ITEMS', 
  Sum(items_added.Count_itemnumber) AS 'TOTAL ADDED LM', 
  Sum(adult_added.Count_itemnumber) AS 'ADULT ADDED LM', 
  Sum(ya_added.Count_itemnumber) AS 'YOUNG ADULT ADDED LM', 
  Sum(juvenile_added.Count_itemnumber) AS 'JUVENILE ADDED LM', 
  Sum(items_deleted.Count_itemnumber) AS 'TOTAL DELETED LM', 
  Sum(adult_deleted.Count_itemnumber) AS 'ADULT DELETED LM', 
  Sum(ya_deleted.Count_itemnumber) AS 'YOUNG ADULT DELETED LM', 
  Sum(juvenile_deleted.Count_itemnumber) AS 'JUVENILE DELETED LM' 
FROM 
    (SELECT 
      branches.branchcode, 
      branches.branchname, 
      itemtypes.itemtype, 
      itemtypes.description 
    FROM 
      itemtypes, 
      branches 
    WHERE 
      branches.branchcode LIKE '%' 
    ) branchtypes 
  LEFT JOIN 
    (SELECT 
      items.homebranch, 
      If( 
        items.itype IS NULL, 
        'XXX', 
        items.itype 
      ) AS itype, 
      Count(items.itemnumber) AS Count_itemnumber 
    FROM 
      items 
    GROUP BY 
      items.homebranch, 
      If( 
        items.itype IS NULL, 
        'XXX', 
        items.itype 
      ) 
    ) itemss 
  ON itemss.homebranch = branchtypes.branchcode AND 
    itemss.itype = branchtypes.itemtype LEFT JOIN 
    (SELECT 
      items.homebranch, 
      If( 
        items.itype IS NULL, 
        'XXX', 
        items.itype 
      ) AS itype, 
      Count(items.itemnumber) AS Count_itemnumber 
    FROM 
      items 
    WHERE 
      (items.permanent_location LIKE '%ADULT%' OR 
        items.permanent_location = 'CART' OR 
        items.permanent_location = 'CATALOGING' OR 
        items.permanent_location = 'PROC' OR 
        items.permanent_location IS NULL) 
    GROUP BY 
      items.homebranch, 
      If( 
        items.itype IS NULL, 
        'XXX', 
        items.itype 
      ) 
    ) adultitems 
  ON adultitems.homebranch = branchtypes.branchcode AND 
    adultitems.itype = branchtypes.itemtype LEFT JOIN 
    (SELECT 
      items.homebranch, 
      If( 
        items.itype IS NULL, 
        'XXX', 
        items.itype 
      ) AS itype, 
      Count(items.itemnumber) AS Count_itemnumber 
    FROM 
      items 
    WHERE 
      items.permanent_location LIKE '%CHILD%' 
    GROUP BY 
      items.homebranch, 
      If( 
        items.itype IS NULL, 
        'XXX', 
        items.itype 
      ) 
    ) juvenileitems 
  ON juvenileitems.homebranch = branchtypes.branchcode AND 
    juvenileitems.itype = branchtypes.itemtype LEFT JOIN 
    (SELECT 
      items.homebranch, 
      If( 
        items.itype IS NULL, 
        'XXX', 
        items.itype 
      ) AS itype, 
      Count(items.itemnumber) AS Count_itemnumber 
    FROM 
      items 
    WHERE 
      items.permanent_location LIKE '%YA%' 
    GROUP BY 
      items.homebranch, 
      If( 
        items.itype IS NULL, 
        'XXX', 
        items.itype 
      ) 
    ) yaitems 
  ON yaitems.homebranch = branchtypes.branchcode AND 
    yaitems.itype = branchtypes.itemtype LEFT JOIN 
    (SELECT 
      items.homebranch, 
      If( 
        items.itype IS NULL, 
        'XXX', 
        items.itype 
      ) AS itype, 
      Count(items.itemnumber) AS Count_itemnumber 
    FROM 
      items 
    WHERE 
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      items.homebranch, 
      If( 
        items.itype IS NULL, 
        'XXX', 
        items.itype 
      ) 
    ) items_added 
  ON items_added.homebranch = branchtypes.branchcode AND 
    items_added.itype = branchtypes.itemtype LEFT JOIN 
    (SELECT 
      items.homebranch, 
      If( 
        items.itype IS NULL, 
        'XXX', 
        items.itype 
      ) AS itype, 
      Count(items.itemnumber) AS Count_itemnumber 
    FROM 
      items 
    WHERE 
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND 
      (items.permanent_location LIKE '%ADULT%' OR 
        items.permanent_location = 'CART' OR 
        items.permanent_location = 'CATALOGING' OR 
        items.permanent_location = 'PROC' OR 
        items.permanent_location IS NULL) 
    GROUP BY 
      items.homebranch, 
      If( 
        items.itype IS NULL, 
        'XXX', 
        items.itype 
      ) 
    ) adult_added 
  ON adult_added.homebranch = branchtypes.branchcode AND 
    adult_added.itype = branchtypes.itemtype LEFT JOIN 
    (SELECT 
      items.homebranch, 
      If( 
        items.itype IS NULL, 
        'XXX', 
        items.itype 
      ) AS itype, 
      Count(items.itemnumber) AS Count_itemnumber 
    FROM 
      items 
    WHERE 
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND 
      items.permanent_location LIKE '%CHILD%' 
    GROUP BY 
      items.homebranch, 
      If( 
        items.itype IS NULL, 
        'XXX', 
        items.itype 
      ) 
    ) juvenile_added 
  ON juvenile_added.homebranch = branchtypes.branchcode AND 
    juvenile_added.itype = branchtypes.itemtype LEFT JOIN 
    (SELECT 
      items.homebranch, 
      If( 
        items.itype IS NULL, 
        'XXX', 
        items.itype 
      ) AS itype, 
      Count(items.itemnumber) AS Count_itemnumber 
    FROM 
      items 
    WHERE 
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND 
      items.permanent_location LIKE '%YA%' 
    GROUP BY 
      items.homebranch, 
      If( 
        items.itype IS NULL, 
        'XXX', 
        items.itype 
      ) 
    ) ya_added 
  ON ya_added.homebranch = branchtypes.branchcode AND 
    ya_added.itype = branchtypes.itemtype LEFT JOIN 
    (SELECT 
      deleteditems.homebranch, 
      If( 
        deleteditems.itype IS NULL, 
        'XXX', 
        If( 
          deleteditems.itype = '', 
          'XXX', 
          deleteditems.itype 
        ) 
      ) AS ccode, 
      Count(deleteditems.itemnumber) AS Count_itemnumber 
    FROM 
      deleteditems 
    WHERE 
      Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      deleteditems.homebranch, 
      If( 
        deleteditems.itype IS NULL, 
        'XXX', 
        If( 
          deleteditems.itype = '', 
          'XXX', 
          deleteditems.itype 
        ) 
      ) 
    ) items_deleted 
  ON items_deleted.homebranch = branchtypes.branchcode AND 
    items_deleted.ccode = branchtypes.itemtype LEFT JOIN 
    (SELECT 
      deleteditems.homebranch, 
      If( 
        deleteditems.itype IS NULL, 
        'XXX', 
        If( 
          deleteditems.itype = '', 
          'XXX', 
          deleteditems.itype 
        ) 
      ) AS ccode, 
      Count(deleteditems.itemnumber) AS Count_itemnumber 
    FROM 
      deleteditems 
    WHERE 
      Month(deleteditems.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(deleteditems.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND 
      (deleteditems.permanent_location LIKE '%ADULT%' OR 
        deleteditems.permanent_location = 'CART' OR 
        deleteditems.permanent_location = 'CATALOGING' OR 
        deleteditems.permanent_location = 'PROC' OR 
        deleteditems.permanent_location IS NULL) 
    GROUP BY 
      deleteditems.homebranch, 
      If( 
        deleteditems.itype IS NULL, 
        'XXX', 
        If( 
          deleteditems.itype = '', 
          'XXX', 
          deleteditems.itype 
        ) 
      ) 
    ) adult_deleted 
  ON adult_deleted.homebranch = branchtypes.branchcode AND 
    adult_deleted.ccode = branchtypes.itemtype LEFT JOIN 
    (SELECT 
      deleteditems.homebranch, 
      If( 
        deleteditems.itype IS NULL, 
        'XXX', 
        If( 
          deleteditems.itype = '', 
          'XXX', 
          deleteditems.itype 
        ) 
      ) AS ccode, 
      Count(deleteditems.itemnumber) AS Count_itemnumber 
    FROM 
      deleteditems 
    WHERE 
      Month(deleteditems.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(deleteditems.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND 
      deleteditems.permanent_location LIKE '%CHILD%' 
    GROUP BY 
      deleteditems.homebranch, 
      If( 
        deleteditems.itype IS NULL, 
        'XXX', 
        If( 
          deleteditems.itype = '', 
          'XXX', 
          deleteditems.itype 
        ) 
      ) 
    ) juvenile_deleted 
  ON juvenile_deleted.homebranch = branchtypes.branchcode AND 
    juvenile_deleted.ccode = branchtypes.itemtype LEFT JOIN 
    (SELECT 
      deleteditems.homebranch, 
      If( 
        deleteditems.itype IS NULL, 
        'XXX', 
        If( 
          deleteditems.itype = '', 
          'XXX', 
          deleteditems.itype 
        ) 
      ) AS ccode, 
      Count(deleteditems.itemnumber) AS Count_itemnumber 
    FROM 
      deleteditems 
    WHERE 
      Month(deleteditems.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(deleteditems.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND 
      deleteditems.permanent_location LIKE '%YA%' 
    GROUP BY 
      deleteditems.homebranch, 
      If( 
        deleteditems.itype IS NULL, 
        'XXX', 
        If( 
          deleteditems.itype = '', 
          'XXX', 
          deleteditems.itype 
        ) 
      ) 
    ) ya_deleted 
  ON ya_deleted.homebranch = branchtypes.branchcode AND 
    ya_deleted.ccode = branchtypes.itemtype 
GROUP BY 
  branchtypes.branchname, 
  branchtypes.description 
ORDER BY 
  branchtypes.branchname, 
  'ITEM TYPE' ",,,,,,,,
R.003531,"/*
R.003531

----------

Name: GHW - Item count by item type -and- collection code
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-07-26 12:32:27
Modified on: 2021-07-26 14:42:50
Date last run: 2021-07-26 14:34:22

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Count items by home library, item type, and collection code.</p>
<ul><li>Counts items at the time that the report is run</li>
<li>at the library you specify</li>
<li>grouped and sorted by item home library, item type, and collection code</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Gives an extreme amount of information on the collection at the library you specify.</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#countitems, item count, item type, collection code, itype, ccode, homebranch</p>
</div>


----------
*/

","SELECT
  branchestypescodes.branchname,
  branchestypescodes.description AS ""ITEM TYPE"",
  branchestypescodes.lib AS ""COLLECTION CODE"",
  itemss.Count_itemnumber AS ""TOTAL ITEMS"",
  adultitems.Count_itemnumber AS ""ADULT ITEMS"",
  juvenileitems.Count_itemnumber AS ""JUVENILE ITEMS"",
  yaitems.Count_itemnumber AS ""YOUNG ADULT ITEMS"",
  items_added.Count_itemnumber AS ""TOTAL ADDED LM"",
  adult_added.Count_itemnumber AS ""ADULT ADDED LM"",
  juvenile_added.Count_itemnumber AS ""JUVENILE ADDED LM"",
  ya_added.Count_itemnumber AS ""YOUNG ADULT ADDED LM"",
  items_deleted.Count_itemnumber AS ""TOTAL DELETED LM"",
  adult_deleted.Count_itemnumber AS ""ADULT DELETED LM"",
  juvenile_deleted.Count_itemnumber AS ""JUVENILE DELETED LM"",
  ya_deleted.Count_itemnumber AS ""YOUNG ADULT DELETED LM""
FROM
  (SELECT
      branches.branchcode,
      branches.branchname,
      itemtypes.itemtype,
      itemtypes.description,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      branches,
      itemtypes,
      authorised_values
    WHERE
      authorised_values.category = 'ccode') branchestypescodes LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype,
      If(items.ccode IS NULL, ""XXX"", If(items.ccode = """", ""XXX"", items.ccode))
      AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    GROUP BY
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype),
      If(items.ccode IS NULL, ""XXX"", items.ccode)) itemss ON itemss.homebranch =
      branchestypescodes.branchcode AND
      itemss.itype = branchestypescodes.itemtype AND
      itemss.ccode = branchestypescodes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype,
      If(items.ccode IS NULL, ""XXX"", If(items.ccode = """", ""XXX"", items.ccode))
      AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      (items.permanent_location LIKE '%ADULT%' OR
        items.permanent_location = 'CART' OR
        items.permanent_location = 'CATALOGING' OR
        items.permanent_location = 'PROC' OR
        items.permanent_location IS NULL)
    GROUP BY
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype),
      If(items.ccode IS NULL, ""XXX"", items.ccode)) adultitems ON
      adultitems.itype = branchestypescodes.itemtype AND
      adultitems.homebranch = branchestypescodes.branchcode AND
      adultitems.ccode = branchestypescodes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype,
      If(items.ccode IS NULL, ""XXX"", If(items.ccode = """", ""XXX"", items.ccode))
      AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      items.permanent_location LIKE '%CHILD%'
    GROUP BY
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype),
      If(items.ccode IS NULL, ""XXX"", items.ccode)) juvenileitems ON
      juvenileitems.itype = branchestypescodes.itemtype AND
      juvenileitems.homebranch = branchestypescodes.branchcode AND
      juvenileitems.ccode = branchestypescodes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype,
      If(items.ccode IS NULL, ""XXX"", If(items.ccode = """", ""XXX"", items.ccode))
      AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      items.permanent_location LIKE '%YA%'
    GROUP BY
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype),
      If(items.ccode IS NULL, ""XXX"", items.ccode)) yaitems ON
      yaitems.itype = branchestypescodes.itemtype AND
      yaitems.homebranch = branchestypescodes.branchcode AND
      yaitems.ccode = branchestypescodes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype,
      If(items.ccode IS NULL, ""XXX"", If(items.ccode = """", ""XXX"", items.ccode))
      AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH)
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", If(items.ccode = """", ""XXX"", items.ccode)))
  items_added ON items_added.itype = branchestypescodes.itemtype AND
      items_added.homebranch = branchestypescodes.branchcode AND
      items_added.ccode = branchestypescodes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype,
      If(items.ccode IS NULL, ""XXX"", If(items.ccode = """", ""XXX"", items.ccode))
      AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      (items.permanent_location LIKE '%ADULT%' OR
        items.permanent_location = 'CART' OR
        items.permanent_location = 'CATALOGING' OR
        items.permanent_location = 'PROC' OR
        items.permanent_location IS NULL OR
        items.permanent_location = """")
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", If(items.ccode = """", ""XXX"", items.ccode)))
  adult_added ON adult_added.itype = branchestypescodes.itemtype AND
      adult_added.homebranch = branchestypescodes.branchcode AND
      adult_added.ccode = branchestypescodes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype,
      If(items.ccode IS NULL, ""XXX"", If(items.ccode = """", ""XXX"", items.ccode))
      AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      items.permanent_location LIKE ""%CHILD%""
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) juvenile_added ON
      juvenile_added.itype = branchestypescodes.itemtype AND
      juvenile_added.homebranch = branchestypescodes.branchcode AND
      juvenile_added.ccode = branchestypescodes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype,
      If(items.ccode IS NULL, ""XXX"", If(items.ccode = """", ""XXX"", items.ccode))
      AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      items.permanent_location LIKE ""%YA%""
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) ya_added ON
      ya_added.itype = branchestypescodes.itemtype AND
      ya_added.homebranch = branchestypescodes.branchcode AND
      ya_added.ccode = branchestypescodes.authorised_value LEFT JOIN
  (SELECT
      deleteditems.homebranch,
      If(deleteditems.itype IS NULL, ""XXX"", deleteditems.itype) AS itype,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode)) AS ccode,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 MONTH)
    GROUP BY
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode))) items_deleted ON items_deleted.itype =
      branchestypescodes.itemtype AND
      items_deleted.homebranch = branchestypescodes.branchcode AND
      items_deleted.ccode = branchestypescodes.authorised_value LEFT JOIN
  (SELECT
      deleteditems.homebranch,
      If(deleteditems.itype IS NULL, ""XXX"", deleteditems.itype) AS itype,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode)) AS ccode,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND
      (deleteditems.permanent_location LIKE '%ADULT%' OR
        deleteditems.permanent_location = 'CART' OR
        deleteditems.permanent_location = 'CATALOGING' OR
        deleteditems.permanent_location = 'PROC' OR
        deleteditems.permanent_location IS NULL OR
        deleteditems.permanent_location = """")
    GROUP BY
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode))) adult_deleted ON adult_deleted.itype =
      branchestypescodes.itemtype AND
      adult_deleted.homebranch = branchestypescodes.branchcode AND
      adult_deleted.ccode = branchestypescodes.authorised_value LEFT JOIN
  (SELECT
      deleteditems.homebranch,
      If(deleteditems.itype IS NULL, ""XXX"", deleteditems.itype) AS itype,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode)) AS ccode,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND
      deleteditems.permanent_location LIKE '%CHILD%'
    GROUP BY
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode))) juvenile_deleted ON juvenile_deleted.itype =
      branchestypescodes.itemtype AND
      juvenile_deleted.homebranch = branchestypescodes.branchcode AND
      juvenile_deleted.ccode = branchestypescodes.authorised_value LEFT JOIN
  (SELECT
      deleteditems.homebranch,
      If(deleteditems.itype IS NULL, ""XXX"", deleteditems.itype) AS itype,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode)) AS ccode,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND
      deleteditems.permanent_location LIKE '%YA%'
    GROUP BY
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode))) ya_deleted ON
      ya_deleted.itype = branchestypescodes.itemtype AND
      ya_deleted.homebranch = branchestypescodes.branchcode AND
      ya_deleted.ccode = branchestypescodes.authorised_value
WHERE
  branchestypescodes.branchcode LIKE <<Choose your library|branches>> AND
  branchestypescodes.itemtype LIKE <<Choose a specific item type|itemtypes:all>> AND
  branchestypescodes.authorised_value LIKE <<OR - choose a specific collection code|CCODE:all>>
GROUP BY
  branchestypescodes.branchname,
  branchestypescodes.description,
  branchestypescodes.lib
ORDER BY
  branchestypescodes.branchname,
  branchestypescodes.description,
  branchestypescodes.lib",,,,,,,,
R.003532,"/*
R.003532

----------

Name: GHW - Item count by library and/or collection code
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-07-26 15:37:59
Modified on: 2021-07-26 23:07:06
Date last run: 2022-08-11 23:15:32

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Item count by collection code</p>
<ul><li>Counts items currently in the collection</li>
<li>At the library you specify - or with the collection code you specify</li>
<li>grouped and sorted by library name and collection code</li>
<li>links to report 2731 to generate a shelflist for the items being counted</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Non-standard shelving locations are counted as ""Adult"" locations.</p>
<p>Items with blank collection codes are counted as ""(Unclassified).""</p>
<p></p>
<p><strong>Replaces all other item count by collection code reports.</strong></p>
<ul>
  <li>716 - Count of Yearly New items added by CCode</li>
  <li>808 - Collection size by Collection Code & Location (per branch)</li>
  <li>1666 - Collection size by Collection Code</li>
  <li>2970 - GHW - Collection Statistics - Items at a library</li>
  <li>3172 - GHW - Collection code count by Library</li>
  <li>3180 - GHW - CCODE count by library</li>
</ul>
<p class= ""notetags"" style=""display: none;"">#ultimate #itemcount #ccode item count collection code ccode</p>
</div>

----------
*/

","SELECT
  branchccodes.branchname,
  branchccodes.lib AS ""COLLECTION CODE"",
  itemss.Count_itemnumber AS ""TOTAL ITEMS"",
  adultitems.Count_itemnumber AS ""ADULT ITEMS"",
  juvenileitems.Count_itemnumber AS ""JUVENILE ITEMS"",
  yaitems.Count_itemnumber AS ""YOUNG ADULT ITEMS"",
  If(branchlimits.branchcode IS NULL, """", ""Yes"") AS ""THIS LIB CAN USE/MAKE"",
  Concat(
    '<a class= ""clicked"" href=\""/cgi-bin/koha/reports/guided_reports.pl?reports=2731&phase=Run+this+report', 
    '&param_name=Item+home+library%7CZBRAN&sql_params=', 
    branchccodes.branchcode, 
    '&param_name=Item+permanent+shelving+location%7CLLOC&sql_params=%25', 
    '&param_name=Item+type%7CLITYPES&sql_params=%25', 
    '&param_name=Item+collection+code%7CLCCODE&sql_params=', 
    branchccodes.authorised_value, 
    '&param_name=Enter+first+part+of+call+number+or+a+%25+symbol&sql_params=%25', 
    '&param_name=Not+for+loan+status%7CLNOT_LOAN&sql_params=%25', 
    '&param_name=Item+added+between+date1%7Cdate&sql_params=01%2F01%2F1900&', 'param_name=and+date2%7Cdate&sql_params=12%2F31%2F2099', 
    '&param_name=Item+last+borrowed+between+date1%7Cdate&sql_params=01%2F01%2F1900', 
    '&param_name=and++date2%7Cdate&sql_params=12%2F31%2F2099&', 'param_name=Item+last+seen+between+date1%7Cdate&sql_params=01%2F01%2F1900', 
    '&param_name=and+++date2%7Cdate&sql_params=12%2F31%2F2099', 
    '&param_name=With+X+or+fewer+checkouts%7CZNUMBERS&sql_params=999999999999', 
    '&param_name=Display+checked+out+items%7CZYES_NO&sql_params=%25', 
    '&param_name=Display+lost%2C+missing%2C+and+withdrawn+items%7CZYES_NO&sql_params=%25', 
    '&param_name=With+X+or+more+copies+at+this+library%7CYNUMBER&sql_params=0', 
    '&param_name=With+X+or+more+copies+at+throughout+the+catalog%7CYNUMBER&sql_params=0""', ' target=""_blank"">', 'Shelflist for these items</a>'
  ) AS SHELFLIST
FROM
  (SELECT
      branches.branchcode,
      authorised_values.authorised_value,
      authorised_values.lib,
      branches.branchname,
      authorised_values.id
    FROM
      branches,
      authorised_values
    WHERE
      authorised_values.category = 'CCODE') branchccodes LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode) AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) itemss ON itemss.homebranch =
      branchccodes.branchcode AND
      itemss.ccode = branchccodes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode) AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      (items.permanent_location LIKE '%ADULT%' OR
        items.permanent_location = 'CART' OR
        items.permanent_location = 'CATALOGING' OR
        items.permanent_location = 'PROC' OR
        items.permanent_location IS NULL)
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) adultitems ON
      adultitems.homebranch = branchccodes.branchcode AND
      adultitems.ccode = branchccodes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode) AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      items.permanent_location LIKE ""%CHILD%""
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) juvenileitems ON
      juvenileitems.homebranch = branchccodes.branchcode AND
      juvenileitems.ccode = branchccodes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode) AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      items.permanent_location LIKE ""%YA%""
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) yaitems ON
      yaitems.homebranch = branchccodes.branchcode AND
      yaitems.ccode = branchccodes.authorised_value LEFT JOIN
  (SELECT
      authorised_values_branches.av_id,
      authorised_values_branches.branchcode
    FROM
      authorised_values_branches) branchlimits ON branchlimits.av_id =
      branchccodes.id AND
      branchlimits.branchcode = branchccodes.branchcode
WHERE
  branchccodes.branchcode LIKE <<Choose your library and leave collection code as ""All""|branches:all>> AND
  branchccodes.authorised_value LIKE <<Or leave library as ""All"" and choose a collection code|CCODE:all>>
GROUP BY
  branchccodes.branchcode,
  branchccodes.authorised_value
ORDER BY
  branchccodes.branchname,
  branchccodes.lib",,,,,,,,
R.003533,"/*
R.003533

----------

Name: GHW - Item count by library and/or item type
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-07-26 16:27:18
Modified on: 2022-07-25 11:41:17
Date last run: 2022-08-11 23:18:01

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Item count by item type</p>
<ul><li>Counts items currently in the collection</li>
<li>At the library you specify - and/or - with the item type you specify</li>
<li>grouped and sorted by library name and item type</li>
<li>links to report 2731 to generate a shelflist for the items being counted</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Non-standard shelving locations are counted as ""Adult"" locations.</p>
<p>Items with blank item types are counted as ""(Unclassified).""</p>
<p></p>
<p><strong>Replaces all other item count by item type reports.</strong></p>
<ul>
  <li>1124 - Collection size by Item Type</li>
  <li>1179 - Entire Collection Size by IType</li>
  <li>1413 - Collection Size by Item Type & Location (per branch)</li>
  <li>1811 - Itemtypes in use at Prairie Hills Schools</li>
</ul>
<p class= ""notetags"" style=""display: none;"">#ultimate #itemcount #itype #itemtype item count type</p>
</div>

----------
*/

","SELECT 
  branchtypes.branchname, 
  branchtypes.description AS ""ITEM TYPE"", 
  itemss.Count_itemnumber AS ""TOTAL ITEMS"", 
  adultitems.Count_itemnumber AS ""ADULT ITEMS"", 
  juvenileitems.Count_itemnumber AS ""JUVENILE ITEMS"", 
  yaitems.Count_itemnumber AS ""YOUNG ADULT ITEMS"", 
  Concat( 
    '<a class=""btn btn-default""', 
    'href=\""', 
    '/cgi-bin/koha/reports/guided_reports.pl?reports=2731&phase=Run+this+report', 
    '&param_name=Item+home+library%7CZBRAN&sql_params=', 
    branchtypes.branchcode, 
    '&param_name=Item+permanent+shelving+location%7CLLOC&sql_params=%25', 
    '&param_name=Item+type%7CLITYPES&sql_params=', 
    branchtypes.itemtype, 
    '&param_name=Item+collection+code%7CLCCODE&sql_params=%25', 
    '&param_name=Enter+first+part+of+call+number+or+a+%25+symbol&sql_params=%25', 
    '&param_name=Not+for+loan+status%7CLNOT_LOAN&sql_params=%25', 
    '&param_name=Item+added+between+date1%7Cdate&sql_params=01%2F01%2F1900&', 'param_name=and+date2%7Cdate&sql_params=12%2F31%2F2099', 
    '&param_name=Item+last+borrowed+between+date1%7Cdate&sql_params=01%2F01%2F1900', 
    '&param_name=and++date2%7Cdate&sql_params=12%2F31%2F2099&', 'param_name=Item+last+seen+between+date1%7Cdate&sql_params=01%2F01%2F1900', 
    '&param_name=and+++date2%7Cdate&sql_params=12%2F31%2F2099', 
    '&param_name=With+X+or+fewer+checkouts%7CZNUMBERS&sql_params=999999999999', 
    '&param_name=Display+checked+out+items%7CZYES_NO&sql_params=%25', 
    '&param_name=Display+lost%2C+missing%2C+and+withdrawn+items%7CZYES_NO&sql_params=%25', 
    '&param_name=With+X+or+more+copies+at+this+library%7CYNUMBER&sql_params=0', 
    '&param_name=With+X+or+more+copies+at+throughout+the+catalog%7CYNUMBER&sql_params=0"" ', 
    'target=""_blank"">', 
    'Shelflist for these items</a>' 
  ) AS SHELFLIST 
FROM 
  (SELECT 
      branches.branchcode, 
      branches.branchname, 
      itemtypes.itemtype, 
      itemtypes.description 
    FROM 
      itemtypes, 
      branches) branchtypes LEFT JOIN 
  (SELECT 
      items.homebranch, 
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype, 
      Count(items.itemnumber) AS Count_itemnumber 
    FROM 
      items 
    GROUP BY 
      items.homebranch, 
      If(items.itype IS NULL, ""XXX"", items.itype)) itemss ON itemss.homebranch = 
      branchtypes.branchcode AND 
      itemss.itype = branchtypes.itemtype LEFT JOIN 
  (SELECT 
      items.homebranch, 
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype, 
      Count(items.itemnumber) AS Count_itemnumber 
    FROM 
      items 
    WHERE 
      (items.permanent_location LIKE '%ADULT%' OR 
        items.permanent_location = 'CART' OR 
        items.permanent_location = 'CATALOGING' OR 
        items.permanent_location = 'PROC' OR 
        items.permanent_location IS NULL) 
    GROUP BY 
      items.homebranch, 
      If(items.itype IS NULL, ""XXX"", items.itype)) adultitems ON 
      adultitems.homebranch = branchtypes.branchcode AND 
      adultitems.itype = branchtypes.itemtype LEFT JOIN 
  (SELECT 
      items.homebranch, 
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype, 
      Count(items.itemnumber) AS Count_itemnumber 
    FROM 
      items 
    WHERE 
      items.permanent_location LIKE ""%CHILD%"" 
    GROUP BY 
      items.homebranch, 
      If(items.itype IS NULL, ""XXX"", items.itype)) juvenileitems ON 
      juvenileitems.homebranch = branchtypes.branchcode AND 
      juvenileitems.itype = branchtypes.itemtype LEFT JOIN 
  (SELECT 
      items.homebranch, 
      If(items.itype IS NULL, ""XXX"", items.itype) AS itype, 
      Count(items.itemnumber) AS Count_itemnumber 
    FROM 
      items 
    WHERE 
      items.permanent_location LIKE ""%YA%"" 
    GROUP BY 
      items.homebranch, 
      If(items.itype IS NULL, ""XXX"", items.itype)) yaitems ON 
      yaitems.homebranch = branchtypes.branchcode AND 
      yaitems.itype = branchtypes.itemtype 
WHERE 
  branchtypes.branchcode LIKE <<Choose your library and leave item type as ""All""|branches:all>> AND 
  branchtypes.itemtype LIKE <<Or leave library as ""All"" and choose an item type|itemtypes:all>> 
GROUP BY 
  branchtypes.branchname, 
  branchtypes.description 
ORDER BY 
  branchtypes.branchname, 
  branchtypes.description 
LIMIT 500 ",,,,,,,,
R.003534,"/*
R.003534

----------

Name: GHW - Items with a ""Not for loan"" status
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-07-28 15:14:53
Modified on: 2021-07-28 15:30:11
Date last run: 2022-07-25 16:08:00

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Lists items with a specific ""Not for loan"" status</p>
<ul><li>Shows items that currently have a ""Not for loan"" status</li>
<li>at the library you specify</li>
<li>grouped by biblio.biblionumber and items.itemnumber</li>
<li>sorted by the standard Next Search Catalog classification scheme</li>
<li>links to the bibliographic record for the item</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p>Not for loan statuses include:
  <ul>
    <li>Download or Online Access (5)</li>
    <li>In Processing (7)</li>
    <li>Migration (3)</li>
    <li>Not For Loan (1)</li>
    <li>Online Access (6)</li>
    <li>Ordered (-1)</li>
    <li>Paola processing (-9)</li>
    <li>Paola repair/mending (-8)</li>
    <li>Staff Collection (2)</li>
  </ul>
</p>
<p></p>
<p>This report replaces the following reports:
  <ul>
    <li>1307 - Not For Loan Items</li>
    <li>1407 - Not For Loan Status</li>
    <li>1412 - All items in a specific not for loan status</li>
  </ul>
</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#ultimate #notloan not for loan</p>
</div>

----------
*/

","SELECT
  CONCAT('<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=',biblio.biblionumber, ' "" target=""_blank"">Link</a>') AS LINK,
  items.homebranch,
  If(
    items.permanent_location = items.location, 
    permlocs.lib,
    Concat(permlocs.lib, ' (', locs.lib, ')')
  ) AS LOCATION,
  itypes.description AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber,
  biblio.author,
  Concat_Ws("" "", 
    biblio.title, 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""c""]')
  ) AS FULL_TITLE,
  items.barcode,
  not_loans.lib AS NOT_FOR_LOAN,
  items.dateaccessioned AS DATE_ADDED,
  items.onloan AS DATE_DUE
FROM
  biblio JOIN
  biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
   JOIN
  items ON items.biblionumber = biblio.biblionumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') permlocs ON
      permlocs.authorised_value = items.permanent_location LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') locs ON locs.authorised_value =
      items.location LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itypes ON itypes.itemtype = items.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      items.ccode LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'NOT_LOAN') not_loans ON
      not_loans.authorised_value = items.notforloan
WHERE
  items.homebranch LIKE <<Choose your library|LBRANCH>> AND
  (items.notforloan LIKE <<Not for loan status|NOT_LOAN:all>> AND
   items.notforloan <> '')
GROUP BY
  biblio.biblionumber,
  items.itemnumber
ORDER BY
  items.homebranch,
  permlocs.lib,
  ITYPE,
  CCODE,
  items.itemcallnumber,
  biblio.author,
  FULL_TITLE,
  items.barcode",,,,,,,,
R.003535,"/*
R.003535

----------

Name: GHW - Template Toolkit creator - Borrower home library address
Created by: George H Williams

----------

Group: Administrative Reports
     Template Toolkit

Created on: 2021-07-28 16:42:30
Modified on: 2021-07-29 15:37:44
Date last run: 2021-07-29 15:25:54

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Creates the Template Toolkit code for inserting a library address into a notice for the borrower's home library (in cases where the home library is needed rather than the library that's sending the e-mail notice)</p>
<ul><li>Creates code based on current library information in Koha</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Generates code for Template Toolkit use.</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#TT #templatetoolkit</p>
</div>

----------
*/

","SELECT
  Concat_Ws("""", 
    ""[% IF (borrower.branchcode == '"", 
    branches.branchcode,
    ""') %] <p>"", 
    branches.branchname, 
    ""<br />"", 
    branches.branchaddress1, 
    ""<br />"",
    branches.branchcity, 
    "", "", 
    branches.branchstate, 
    "" "", 
    Left(branches.branchzip,5), 
    ""</p> [% END %]""
  ) AS TT_HOMELIBRARY_ADDRESS
FROM
  branches",,,,,,,,
R.003536,"/*
R.003536

----------

Name: GHW - Template Toolkit creator - Borrower home library phone
Created by: George H Williams

----------

Group: Administrative Reports
     Template Toolkit

Created on: 2021-07-28 16:44:03
Modified on: 2021-07-29 15:37:30
Date last run: 2021-07-28 16:45:47

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Creates the Template Toolkit code for inserting a library phone number into a notice for the borrower's home library (in cases where the home library is needed rather than the library that's sending the e-mail notice)</p>
<ul><li>Creates code based on current library information in Koha</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Generates code for Template Toolkit use.</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#TT #templatetoolkit</p>
</div>

----------
*/

","SELECT
  Concat_Ws("""", 
    ""[% IF (borrower.branchcode == '"", 
    branches.branchcode,
    ""') %]"", 
    branches.branchphone, 
    ""[% END %]""
  ) AS TT_HOMELIBRARY_ADDRESS
FROM
  branches",,,,,,,,
R.003537,"/*
R.003537

----------

Name: GHW - F1 Items and holdings statistics - item count by collection code - Next Search Catalog
Created by: George H Williams

----------

Group: Statistics
     Last month's statistics - Next-wide

Created on: 2021-07-29 16:35:30
Modified on: 2022-03-10 17:22:07
Date last run: 2022-09-27 16:38:59

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Gives a count of how many items are at the selected library based on collection code and Adult/Juvenile/YA permanent shelving locations.</p>
<ul><li>Shows count at the time the report is run</li>
<li>for all items system-wide</li>
<li>grouped and sorted by item home library and collection code</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Non-standard shelving locations are counted as ""Adult"" locations.</p>
<p>Items with blank collection codes are counted as ""(Unclassified).""</p>
<p></p>
<p>This report cannot track changes made to existing records over time.  Therefore, if staff change the home library, location, or collection code of an item, those changes will not be reflected in the additions or deletions columns.  This means that the numbers may look inconsistent from month to month if changes are made to item records.</p>
</div>

----------
*/

","SELECT
  branchtypes.branchname,
  branchtypes.lib AS `""COLLECTION CODE""`,
  Sum(itemss.Count_itemnumber) AS ""TOTAL ITEMS"",
  Sum(adultitems.Count_itemnumber) AS ""ADULT ITEMS"",
  Sum(yaitems.Count_itemnumber) AS ""YOUNG ADULT ITEMS"",
  Sum(juvenileitems.Count_itemnumber) AS ""JUVENILE ITEMS"",
  Sum(items_added.Count_itemnumber) AS ""TOTAL ADDED LM"",
  Sum(adult_added.Count_itemnumber) AS ""ADULT ADDED LM"",
  Sum(ya_added.Count_itemnumber) AS ""YOUNG ADULT ADDED LM"",
  Sum(juvenile_added.Count_itemnumber) AS ""JUVENILE ADDED LM"",
  Sum(items_deleted.Count_itemnumber) AS ""TOTAL DELETED LM"",
  Sum(adult_deleted.Count_itemnumber) AS ""ADULT DELETED LM"",
  Sum(ya_deleted.Count_itemnumber) AS ""YOUNG ADULT DELETED LM"",
  Sum(juvenile_deleted.Count_itemnumber) AS ""JUVENILE DELETED LM""
FROM
  (SELECT
      branches.branchcode,
      branches.branchname,
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      branches,
      authorised_values
    WHERE
      branches.branchcode LIKE '%' AND
      authorised_values.category = 'CCODE') branchtypes LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode) AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) itemss ON itemss.homebranch =
      branchtypes.branchcode AND
      itemss.ccode = branchtypes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode) AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      (items.permanent_location LIKE '%ADULT%' OR
        items.permanent_location = 'CART' OR
        items.permanent_location = 'CATALOGING' OR
        items.permanent_location = 'PROC' OR
        items.permanent_location IS NULL)
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) adultitems ON
      adultitems.homebranch = branchtypes.branchcode AND
      adultitems.ccode = branchtypes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode) AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      items.permanent_location LIKE ""%CHILD%""
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) juvenileitems ON
      juvenileitems.homebranch = branchtypes.branchcode AND
      juvenileitems.ccode = branchtypes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode) AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      items.permanent_location LIKE ""%YA%""
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) yaitems ON
      yaitems.homebranch = branchtypes.branchcode AND
      yaitems.ccode = branchtypes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode) AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH)
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) items_added ON
      items_added.homebranch = branchtypes.branchcode AND
      items_added.ccode = branchtypes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode) AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      (items.permanent_location LIKE '%ADULT%' OR
        items.permanent_location = 'CART' OR
        items.permanent_location = 'CATALOGING' OR
        items.permanent_location = 'PROC' OR
        items.permanent_location IS NULL)
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) adult_added ON
      adult_added.homebranch = branchtypes.branchcode AND
      adult_added.ccode = branchtypes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode) AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      items.permanent_location LIKE ""%CHILD%""
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) juvenile_added ON
      juvenile_added.homebranch = branchtypes.branchcode AND
      juvenile_added.ccode = branchtypes.authorised_value LEFT JOIN
  (SELECT
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode) AS ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    WHERE
      Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      items.permanent_location LIKE ""%YA%""
    GROUP BY
      items.homebranch,
      If(items.ccode IS NULL, ""XXX"", items.ccode)) ya_added ON
      ya_added.homebranch = branchtypes.branchcode AND
      ya_added.ccode = branchtypes.authorised_value LEFT JOIN
  (SELECT
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode)) AS ccode,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 MONTH)
    GROUP BY
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode))) items_deleted ON items_deleted.homebranch =
      branchtypes.branchcode AND
      items_deleted.ccode = branchtypes.authorised_value LEFT JOIN
  (SELECT
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode)) AS ccode,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      (deleteditems.permanent_location LIKE '%ADULT%' OR
        deleteditems.permanent_location = 'CART' OR
        deleteditems.permanent_location = 'CATALOGING' OR
        deleteditems.permanent_location = 'PROC' OR
        deleteditems.permanent_location IS NULL)
    GROUP BY
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode))) adult_deleted ON adult_deleted.homebranch =
      branchtypes.branchcode AND
      adult_deleted.ccode = branchtypes.authorised_value LEFT JOIN
  (SELECT
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode)) AS ccode,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      deleteditems.permanent_location LIKE ""%CHILD%""
    GROUP BY
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode))) juvenile_deleted ON juvenile_deleted.homebranch =
      branchtypes.branchcode AND
      juvenile_deleted.ccode = branchtypes.authorised_value LEFT JOIN
  (SELECT
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode)) AS ccode,
      Count(deleteditems.itemnumber) AS Count_itemnumber
    FROM
      deleteditems
    WHERE
      Month(deleteditems.dateaccessioned) = Month(Now() - INTERVAL 1 MONTH) AND
      Year(deleteditems.dateaccessioned) = Year(Now() - INTERVAL 1 MONTH) AND
      deleteditems.permanent_location LIKE ""%YA%""
    GROUP BY
      deleteditems.homebranch,
      If(deleteditems.ccode IS NULL, ""XXX"", If(deleteditems.ccode = """", ""XXX"",
      deleteditems.ccode))) ya_deleted ON ya_deleted.homebranch =
      branchtypes.branchcode AND
      ya_deleted.ccode = branchtypes.authorised_value
GROUP BY
  branchtypes.branchname,
  branchtypes.lib
ORDER BY
  branchtypes.branchname",,,,,,,,
R.003538,"/*
R.003538

----------

Name: GHW - Build report schedule links
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-07-30 11:10:44
Modified on: 2021-07-30 11:12:13
Date last run: 2021-07-30 11:12:16

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat_Ws("""",
    ""https://staff.nextkansas.org/cgi-bin/koha/tools/scheduler.pl?id="",
    saved_sql.id
  ) AS RAW_URL,
  Concat_Ws("""", 
   ""george@nekls.org --subject='"", 
   SubString(saved_sql.report_name FROM 7), 
   ""' --format=csv --csv-header -a""
  ) AS INFO
FROM
  saved_sql
WHERE
  saved_sql.report_subgroup = 'STAT_LM'
ORDER BY
  saved_sql.report_name DESC",,,,,,,,
R.003539,"/*
R.003539

----------

Name: GHW - E1 Borrower statistics - Detailed count of borrowers
Created by: George H Williams

----------

Group: Statistics
     2022 beginning of month statistics

Created on: 2021-08-03 09:12:55
Modified on: 2022-03-10 15:32:42
Date last run: 2022-10-01 01:00:02

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint> 
<p>Borrower statistics - borrower counts by category</p> 
<ul><li>during the previous calendar month</li> 
<li>at all system libraries</li> 
<li>grouped and sorted by borrower home library and borrower category</li> 
</ul><br /> 
<p><ins>Notes:</ins></p> 
<p></p> 
<p class=""updated"">This report and these notes updated on 2022.03.10</p> 
<p></p> 
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id= 3539"">Click here to download as a csv file</a></p> 
<p class= ""notetags"" style=""display: none;"">#monthly #statistics #borrower #statistics #category</p> 
<!-- html notes rendered on guided_reports.pl by jquery at https://wiki.koha-community.org/wiki/JQuery_Library#Render_patron_messages_as_HTML_and_in_Report_notes --> 
</div> 

----------
*/

","SELECT 
  branches_categories.branchname AS LIBRARY, 
  branches_categories.description AS BORROWER_CATEGORY, 
  total.Count_borrowernumber AS ""TOTAL BORROWERS"", 
  renewed_lm.Count_borrowernumber AS ""BORROWERS RENEWED LAST MONTH"", 
  added_lm.Count_borrowernumber AS ""BORROWERS ADDED LAST MONTH"", 
  deleted_lm.Count_borrowernumber AS ""BORROWERS DELETED LAST MONTH"", 
  If(limitationss.categorycode <> """", ""Yes"", """") AS ""THIS LIBRARY CAN ACCESS THIS CATEGORY"" 
FROM 
    (SELECT 
      branches.branchcode, 
      branches.branchname, 
      categories.categorycode, 
      categories.description 
    FROM 
      branches, 
      categories
    ) branches_categories 
  LEFT JOIN 
    (SELECT 
      borrowers.branchcode, 
      borrowers.categorycode, 
      Count(borrowers.borrowernumber) AS Count_borrowernumber 
    FROM 
      borrowers 
    GROUP BY 
      borrowers.branchcode, 
      borrowers.categorycode
    ) total 
  ON total.branchcode = branches_categories.branchcode AND 
    total.categorycode = branches_categories.categorycode LEFT JOIN 
    (SELECT 
      borrowers.branchcode, 
      borrowers.categorycode, 
      Count(borrowers.borrowernumber) AS Count_borrowernumber 
    FROM 
      borrowers 
    WHERE 
      Year(borrowers.dateenrolled) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(borrowers.dateenrolled) = Month(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      borrowers.branchcode, 
      borrowers.categorycode
    ) added_lm 
  ON added_lm.branchcode = branches_categories.branchcode AND 
    added_lm.categorycode = branches_categories.categorycode LEFT JOIN 
    (SELECT 
      borrowers.branchcode, 
      borrowers.categorycode, 
      Count(borrowers.borrowernumber) AS Count_borrowernumber 
    FROM 
      borrowers 
    WHERE 
      Year(borrowers.date_renewed) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(borrowers.date_renewed) = Month(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      borrowers.branchcode, 
      borrowers.categorycode
    ) renewed_lm 
  ON renewed_lm.branchcode = branches_categories.branchcode AND 
    renewed_lm.categorycode = branches_categories.categorycode LEFT JOIN 
    (SELECT 
      deletedborrowers.branchcode, 
      deletedborrowers.categorycode, 
      Count(deletedborrowers.borrowernumber) AS Count_borrowernumber 
    FROM 
      action_logs JOIN 
      deletedborrowers ON deletedborrowers.borrowernumber = action_logs.object 
    WHERE 
      action_logs.module = 'MEMBERS' AND 
      Month(action_logs.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(action_logs.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND 
      action_logs.action LIKE 'DELET%' 
    GROUP BY 
      deletedborrowers.branchcode, 
      deletedborrowers.categorycode
    ) deleted_lm 
  ON deleted_lm.branchcode = branches_categories.branchcode AND 
    deleted_lm.categorycode = branches_categories.categorycode LEFT JOIN 
    (SELECT 
      categories_branches.categorycode, 
      categories_branches.branchcode 
    FROM 
      categories_branches
    ) limitationss 
  ON limitationss.branchcode = branches_categories.branchcode AND 
    limitationss.categorycode = branches_categories.categorycode 
GROUP BY 
  branches_categories.branchname, 
  branches_categories.description 
ORDER BY 
  branches_categories.branchname, 
  branches_categories.description 
  ",,,,,,,,
R.003547,"/*
R.003547

----------

Name: GHW - Circulation statistics by biblio number and item home library
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-08-03 16:04:25
Modified on: 2021-08-03 16:04:25
Date last run: 2021-08-03 16:05:30

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  biblio.biblionumber,
  biblio.title,
  Count(statistics.datetime) AS Count_datetime
FROM
  biblio JOIN
  items ON items.biblionumber = biblio.biblionumber JOIN
  statistics ON statistics.itemnumber = items.itemnumber
WHERE
  (statistics.type = 'issue' OR
    statistics.type = 'renew') AND
  Year(statistics.datetime) = 2021 AND
  Month(statistics.datetime) = 6 AND
  biblio.biblionumber LIKE <<Enter a biblio number>> AND
  items.homebranch Like <<Choose the items' home library|LBRANCH>>
GROUP BY
  biblio.biblionumber,
  biblio.title",,,,,,,,
R.003548,"/*
R.003548

----------

Name: GHW - E2 Borrower statistics - borrower count by zip code - Next Search Catalog
Created by: George H Williams

----------

Group: Statistics
     2022 beginning of month statistics

Created on: 2021-08-04 16:23:25
Modified on: 2022-03-10 17:21:49
Date last run: 2022-10-01 01:05:01

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint> 
<p>Borrower statistics - borrower count by zip code</p> 
<ul><li>during the previous calendar month</li> 
<li>at all system libraries</li> 
<li>grouped and sorted by checkout-library and borrower zipcode</li> 
</ul><br /> 
<p><ins>Notes:</ins></p> 
<p></p> 
<ul> 
  <li>ZIPCODE = borrower's zip code trimmed to 5 digits</li> 
  <li>BORROWER_COUNT = count of all borrowers with this home library and this zip code</li> 
  <li>RENEWED_LM= count of borrowers with this home library that were renewed last month</li> 
  <li>ADDED_LM = count of borrowers with this home library that were added last month</li> 
  <li>DELETED_LM = count of borrowers with this home library that were deleted last month</li> 
</ul> 
<p></p> 
<ul> 
  <li>Zip codes on borrower records are only as accurate as the staff members who entered those zip codes into the borrower records.  There are hundreds of incorrect and non-standard zip codes in the borrower data.</li> 
  <li>All zip codes are trimmed to 5 digits</li> 
  <li>If BORROWER_ZIPCODE = ""-"" that means there are less than 10 borrowers with that zip code system-wide<br />in order to protect borrower privacy, if there are fewer than 10 borrowers in a zip code, that zip code will be hidden.</li> 
  <li>If BORROWER_ZIPCODE = ""0"" that means that the zipdcode that has been left blank, that zipcode contains nothing but spaces, or that zipcode is set to zero</li> 
</ul> 
<p></p> 
<p class=""updated"">This report and these notes updated on 2022.03.10</p> 
<p></p> 
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3548"">Click here to download as a csv file</a></p> 
<p class= ""notetags"" style=""display: none;"">#monthly #statistics #borrower #count #zipcode</p> 
<!-- html notes rendered on guided_reports.pl by jquery at https://wiki.koha-community.org/wiki/JQuery_Library#Render_patron_messages_as_HTML_and_in_Report_notes --> 
</div> 

----------
*/

","SELECT 
  branches.branchname, 
  If( 
    zipcounts.Count_borrowernumber < 10, 
    '-', 
    If( 
      branchcodeszipss.ZIPCODE = '', 
      '0', 
      branchcodeszipss.ZIPCODE 
    ) 
  ) AS ZIP_CODE, 
  Sum(DISTINCT Coalesce(totals.Count_borrowernumber, 0)) AS BORROWER_COUNT, 
  Sum(DISTINCT renewed_lm.Count_borrowernumber) AS RENEWED_LM, 
  Sum(DISTINCT added_lm.Count_borrowernumber) AS ADDED_LM, 
  Sum(DISTINCT deleted_lm.Count_borrowernumber) AS DELETED_LM 
FROM 
    (SELECT 
      borrowers.branchcode AS BRANCHCODE, 
      Left(Trim(borrowers.zipcode), 5) AS ZIPCODE 
    FROM 
      borrowers 
    GROUP BY 
      borrowers.branchcode, 
      Left(Trim(borrowers.zipcode), 5) 
    UNION 
    SELECT 
      deletedborrowers.branchcode AS BRANCHCODE, 
      Left(Trim(deletedborrowers.zipcode), 5) AS ZIPCODE 
    FROM 
      action_logs JOIN 
      deletedborrowers ON deletedborrowers.borrowernumber = action_logs.object 
    WHERE 
      action_logs.module = 'MEMBERS' AND 
      Month(action_logs.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(action_logs.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND 
      action_logs.action LIKE 'DELET%' 
    GROUP BY 
      deletedborrowers.branchcode, 
      Left(Trim(deletedborrowers.zipcode), 5) 
    ORDER BY 
      BRANCHCODE, 
      ZIPCODE 
    ) branchcodeszipss 
  JOIN branches ON 
    branchcodeszipss.BRANCHCODE = branches.branchcode LEFT JOIN 
    (SELECT 
      borrowers.branchcode, 
      Left(Trim(borrowers.zipcode), 5) AS zipcode, 
      Count(borrowers.borrowernumber) AS Count_borrowernumber 
    FROM 
      borrowers 
    GROUP BY 
      borrowers.branchcode, 
      Left(Trim(borrowers.zipcode), 5)) totals ON totals.branchcode = 
      branchcodeszipss.BRANCHCODE AND 
      totals.zipcode = branchcodeszipss.ZIPCODE LEFT JOIN 
    (SELECT 
      borrowers.branchcode, 
      Left(Trim(borrowers.zipcode), 5) AS zipcode, 
      Count(borrowers.borrowernumber) AS Count_borrowernumber 
    FROM 
      borrowers 
    WHERE 
      Year(borrowers.dateenrolled) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(borrowers.dateenrolled) = Month(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      borrowers.branchcode, 
      Left(Trim(borrowers.zipcode), 5) 
    ) added_lm 
  ON added_lm.branchcode = branchcodeszipss.BRANCHCODE AND 
    added_lm.zipcode = branchcodeszipss.ZIPCODE LEFT JOIN 
    (SELECT 
      deletedborrowers.branchcode, 
      Left(Trim(deletedborrowers.zipcode), 5) AS zipcode, 
      Count(deletedborrowers.borrowernumber) AS Count_borrowernumber 
    FROM 
      action_logs JOIN 
      deletedborrowers ON deletedborrowers.borrowernumber = action_logs.object 
    WHERE 
      action_logs.module = 'MEMBERS' AND 
      Month(action_logs.timestamp) = Month(Now() - INTERVAL 1 MONTH) AND 
      Year(action_logs.timestamp) = Year(Now() - INTERVAL 1 MONTH) AND 
      action_logs.action LIKE 'DELET%' 
    GROUP BY 
      deletedborrowers.branchcode, 
      Left(Trim(deletedborrowers.zipcode), 5) 
    ) deleted_lm 
  ON deleted_lm.branchcode = branchcodeszipss.BRANCHCODE AND 
    deleted_lm.zipcode = branchcodeszipss.ZIPCODE LEFT JOIN 
    (SELECT 
      borrowers.branchcode, 
      Left(Trim(borrowers.zipcode), 5) AS zipcode, 
      Count(borrowers.borrowernumber) AS Count_borrowernumber 
    FROM 
      borrowers 
    WHERE 
      Year(borrowers.date_renewed) = Year(Now() - INTERVAL 1 MONTH) AND 
      Month(borrowers.date_renewed) = Month(Now() - INTERVAL 1 MONTH) 
    GROUP BY 
      borrowers.branchcode, 
      Left(Trim(borrowers.zipcode), 5) 
    ) renewed_lm 
  ON renewed_lm.branchcode = branchcodeszipss.BRANCHCODE AND 
    renewed_lm.zipcode = branchcodeszipss.ZIPCODE JOIN 
    (SELECT 
      Left(Trim(borrowers.zipcode), 5) AS ZIP, 
      Count(DISTINCT borrowers.borrowernumber) AS Count_borrowernumber 
    FROM 
      borrowers 
    GROUP BY 
      Left(Trim(borrowers.zipcode), 5) 
  ) zipcounts ON zipcounts.ZIP = branchcodeszipss.ZIPCODE 
GROUP BY 
  branches.branchname, 
  If( 
    zipcounts.Count_borrowernumber < 10, 
    '-', 
    If( 
      branchcodeszipss.ZIPCODE = '', 
      '0', 
      branchcodeszipss.ZIPCODE 
    ) 
  ) ",,,,,,,,
R.003549,"/*
R.003549

----------

Name: 942e - Blank or way off
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-08-06 11:01:19
Modified on: 2021-10-19 10:10:01
Date last run: 2022-10-03 09:04:30

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  biblioitems.biblionumber,
  biblioitems.agerestriction,
  Group_Concat(items.permanent_location) AS Group_Concat_permanent_location
FROM
  biblioitems JOIN
  items ON items.biblioitemnumber = biblioitems.biblioitemnumber
WHERE
  biblioitems.agerestriction LIKE """" OR
  biblioitems.agerestriction is null OR
  (biblioitems.agerestriction NOT LIKE ""%ADULT%"" AND
  biblioitems.agerestriction NOT LIKE ""%YA%"" AND
  biblioitems.agerestriction NOT LIKE ""%CHILD%"")
GROUP BY
  biblioitems.biblionumber,
  biblioitems.agerestriction
/*
HAVING Group_Concat_permanent_location like ""%ADULT%""
HAVING Group_Concat_permanent_location like ""%CHILD%""
HAVING Group_Concat_permanent_location like ""%YA%""
*/
ORDER BY
  biblioitems.agerestriction",,,,,,,,
R.003550,"/*
R.003550

----------

Name: GHW - Biblio reconciliation Last months adds
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-08-09 16:23:24
Modified on: 2021-09-01 08:09:57
Date last run: 2022-02-04 10:26:33

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  biblio.biblionumber,
  biblio.datecreated,
  biblio.author,
  biblio.title,
  biblioitems.agerestriction AS ""Bib location"",
  GROUP_CONCAT(
    DISTINCT 
    items.permanent_location 
    ORDER BY items.permanent_location 
    SEPARATOR "" / ""
  ) AS ""Item permanent location"", 
  biblioitems.itemtype as ""Bib itype"", 
  GROUP_CONCAT(
    DISTINCT items.itype 
    ORDER BY items.itype 
    SEPARATOR "" / ""
  ) AS ""Item itype"",
  biblioitems.cn_class as ""Bib CCODE"",
  GROUP_CONCAT(
    DISTINCT items.ccode 
    ORDER BY items.ccode SEPARATOR "" / ""
  ) AS ""Item CCODE""
FROM
  biblio JOIN
  biblioitems ON biblioitems.biblionumber = biblio.biblionumber JOIN
  items ON items.biblionumber = biblio.biblionumber
WHERE
  Year(biblio.datecreated) = Year(Now() - INTERVAL 1 MONTH) AND
  Month(biblio.datecreated) = Month(Now() - INTERVAL 1 MONTH) AND
  Coalesce(biblioitems.agerestriction, ""-"") LIKE ""%"" AND
  Coalesce(biblioitems.itemtype, ""-"") LIKE ""%"" AND
  Coalesce(biblioitems.cn_class, ""-"") LIKE ""%""
GROUP BY
  biblio.biblionumber,
  biblioitems.biblionumber,
  items.biblionumber
ORDER BY
  biblio.biblionumber DESC",,,,,,,,
R.003551,"/*
R.003551

----------

Name: GHW - Output letter templates as .md files
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2021-08-23 11:13:33
Modified on: 2021-08-23 11:22:19
Date last run: 2021-08-23 11:22:21

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat(Lower(letter.code), "".rst"") AS FILENAME,
  Concat(
    "".. include:: /images.rst"", 
    Char(13), Char(10), 
    Char(13), Char(10),
    letter.name, 
    Char(13), Char(10), 
    ""=========="", 
    Char(13), Char(10), 
    Char(13), Char(10), 
    ""Notice information"", 
    Char(13), Char(10), 
    ""----------"", 
    Char(13), Char(10), 
    Char(13), Char(10), 
    ""Description in progress"", 
    Char(13), Char(10), 
    Char(10), Char(13), 
    ""Notice details:"", 
    Char(13), Char(10), 
    ""----------"", 
    Char(13), Char(10), 
    Char(13), Char(10), 
    ""- General"", 
    Char(13), Char(10), 
    ""   - Library: "", 
    If(letter.branchcode = """", ""* All libraries (default)"", letter.branchcode), 
    Char(13), Char(10), 
    ""   - Module: "", 
    letter.module, 
    Char(13), Char(10), 
    ""   - Code: "", 
    letter.code, 
    Char(13), Char(10), 
    ""   - Name: "", 
    letter.name, 
    Char(13), Char(10), 
    Char(13), Char(10), 
    ""- Email"", 
    Char(13), Char(10), 
    ""   - Type: "", 
    If(letter.is_html = 1, ""HTML"", ""Plain text""), 
    Char(13), Char(10), 
    ""   - Message subject: "", 
    letter.title, 
    Char(13), Char(10), 
    Char(13), Char(10), 
    Char(13), Char(10), 
    ""Message template:"", 
    Char(13), Char(10), 
    ""^^^^^^^^^^^"", 
    Char(13), Char(10), 
    Char(13), Char(10), 
    "".. code-block:: html"", 
    Char(13), Char(10), 
    Char(13), Char(10), 
    letter.content, 
    Char(13), Char(10)
  ) AS INFO
FROM
  letter
WHERE
  letter.branchcode = """" AND
  letter.message_transport_type = 'email'
GROUP BY
  letter.code
ORDER BY
  FILENAME",,,,,,,,
R.003552,"/*
R.003552

----------

Name: GHW - Libraries charging late fees
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-08-31 18:42:23
Modified on: 2021-10-07 09:30:55
Date last run: 2022-08-18 15:19:17

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Generates a list of libraries that still charge late fees</p>
<ul><li>Generates a current list including the item types that are subject to late fees</li>
<li>grouped and sorted by whether the library charges fees on all items or if they charge a late fee on just a few item types</li>
</ul><br />
<p></p>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3552"">Click here to download as a csv file</a></p>
<p class= ""notetags"" style=""display: none;"">#late fees; #fines</p>
</div>

----------
*/

","SELECT
  Concat(""----"") AS LIBRARY,
  Concat(""Almost all items have late fees"") AS ITEM_TYPE
UNION
SELECT
  branches.branchname AS LIBRARY,
  If(Group_Concat(DISTINCT Coalesce(itypess.description, ""All"")) LIKE ""All%"",
  ""All items with some category and type variations"", GROUP_CONCAT(DISTINCT
  itypess.description SEPARATOR "" | "")) AS ITEM_TYPE
FROM
  (SELECT
      circulation_rules.branchcode,
      If(circulation_rules.itemtype LIKE ""%VID%"", ""NVIDEO"",
      circulation_rules.itemtype) AS itemtype,
      circulation_rules.rule_name,
      circulation_rules.rule_value
    FROM
      circulation_rules
    WHERE
      circulation_rules.rule_name = 'fine' AND
      circulation_rules.rule_value > 0) ruless LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itypess ON itypess.itemtype = ruless.itemtype INNER JOIN
  branches ON branches.branchcode = ruless.branchcode
GROUP BY
  branches.branchname
HAVING
  ITEM_TYPE LIKE ""All%""
UNION
SELECT
  Concat(""----"") AS branchcode,
  Concat(""----"") AS ITEM_TYPE
UNION
SELECT
  Concat(""-----"") AS branchcode,
  Concat(""Some item types have late fees"") AS ITEM_TYPE
UNION
SELECT
  branches.branchname,
  If(Group_Concat(DISTINCT Coalesce(itypess.description, ""All"")) LIKE ""All%"",
  ""All items with some category and type variations"", GROUP_CONCAT(DISTINCT
  itypess.description SEPARATOR "" | "")) AS ITEM_TYPE
FROM
  (SELECT
      circulation_rules.branchcode,
      If(circulation_rules.itemtype LIKE ""%VID%"", ""NVIDEO"",
      circulation_rules.itemtype) AS itemtype,
      circulation_rules.rule_name,
      circulation_rules.rule_value
    FROM
      circulation_rules
    WHERE
      circulation_rules.rule_name = 'fine' AND
      circulation_rules.rule_value > 0) ruless LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itypess ON itypess.itemtype = ruless.itemtype INNER JOIN
  branches ON branches.branchcode = ruless.branchcode
GROUP BY
  branches.branchname
HAVING
  ITEM_TYPE NOT LIKE ""All%""
LIMIT 500",,,,,,,,
R.003556,"/*
R.003556

----------

Name: SANDBOX
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-09-07 12:04:47
Modified on: 2022-05-04 15:50:04
Date last run: 2022-05-04 15:50:06

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT 
  Concat( 
    Concat(Replace(branches.branchname, ' - ', '<br />'), '<p><ins>Mailing address:</ins><br />', 
    Concat_Ws('<br />', branches.branchaddress1, Concat(branches.branchcity, ', ', branches.branchstate, ' ', branches.branchzip)), '</p>'), 
    Concat('<ins>Street address:</ins><br />', Concat_Ws('<br />', If(branches.branchaddress2 = ' ', branches.branchaddress1, branches.branchaddress2), 
    Concat(branches.branchcity, ', ', branches.branchstate, '<br />'))) 
  ) AS Library, 
  Concat_Ws('<p>', 
    Concat('<p>Phone: ', branches.branchphone, '</p>'), 
    Concat('Fax: ', branches.branchfax, '</p>'), 
    Concat('e-mail: ', branches.branchemail, '</p>'), 
    Concat('Website: <a href=""', branches.branchurl, '"" target=""_blank"">Click here</a></p>'), 
    Concat('Courier route #: ', branches.branchcountry, '</p>') 
  ) AS ""Contact information"", 
  Concat_Ws('<br />', 
    Replace( 
      Replace( 
        Replace( 
          branches.branchaddress3, '|', '<br /><br />' 
        ), 
        'Director:', '<span style=""background: yellow; text-decoration: underline; font-size: 120%;"">Director:</span><br />' 
      ), 
      'Accreditation:', '<span style=""background: aqua; text-decoration: underline; font-size: 120%;"">Type:</span><br />' 
    ), 
    ' ', 
    Concat('<span style=""background: wheat; text-decoration: underline;"">Registered borrowers:</span> ', total_borrowerss.TOTAL_REGISTERED), 
    Concat('<span style=""background: wheat; text-decoration: underline;"">Active borrowers - previous 12 months:</span> ', active_one.ACTIVE_ONE), 
    Concat('<span style=""background: wheat; text-decoration: underline;"">Active borrowers - previous 24 months:</span> ', active_two.ACTIVE_TWO), 
    ' ', 
    Concat('<span style=""background: wheat; text-decoration: underline;"">Total titles:</span> ', Count(DISTINCT items.biblionumber)), 
    Concat('<span style=""background: wheat; text-decoration: underline;"">Total items:</span> ', Count(DISTINCT items.itemnumber)), 
    ' ', 
    Concat('Last updated: ', Now()) 
  ) AS ""Staff contacts / holdings"" 
FROM 
  branches LEFT JOIN 
  items ON items.homebranch = branches.branchcode LEFT JOIN 
  ( 
    SELECT 
      borrowers.branchcode, 
      Count(DISTINCT borrowers.borrowernumber) AS TOTAL_REGISTERED 
    FROM 
      borrowers 
    GROUP BY 
      borrowers.branchcode 
  ) total_borrowerss 
  ON total_borrowerss.branchcode = branches.branchcode LEFT JOIN 
  ( 
    SELECT 
      Coalesce(borrowers.branchcode, deletedborrowers.branchcode) AS branchcode, 
      Count(DISTINCT statistics.borrowernumber) AS ACTIVE_ONE 
    FROM 
      statistics LEFT JOIN 
      borrowers ON borrowers.borrowernumber = statistics.borrowernumber 
      LEFT JOIN 
      deletedborrowers ON deletedborrowers.borrowernumber = 
          statistics.borrowernumber 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      statistics.datetime BETWEEN CurDate() - INTERVAL 1 YEAR AND CurDate() 
    GROUP BY 
      Coalesce(borrowers.branchcode, deletedborrowers.branchcode) 
  ) active_one 
  ON active_one.branchcode = branches.branchcode LEFT JOIN 
  ( 
    SELECT 
      Coalesce(borrowers.branchcode, deletedborrowers.branchcode) AS branchcode, 
      Count(DISTINCT statistics.borrowernumber) AS ACTIVE_TWO 
    FROM 
      statistics LEFT JOIN 
      borrowers ON borrowers.borrowernumber = statistics.borrowernumber 
      LEFT JOIN 
      deletedborrowers ON deletedborrowers.borrowernumber = 
          statistics.borrowernumber 
    WHERE 
      (statistics.type = 'issue' OR 
        statistics.type = 'renew') AND 
      statistics.datetime BETWEEN CurDate() - INTERVAL 2 YEAR AND CurDate() 
    GROUP BY 
      Coalesce(borrowers.branchcode, deletedborrowers.branchcode) 
  ) active_two 
  ON active_two.branchcode = branches.branchcode 
WHERE 
  branches.branchcode LIKE ""%"" 
GROUP BY 
  branches.branchcode 
ORDER BY 
  Library 
LIMIT 500",,,,,,,,
R.003557,"/*
R.003557

----------

Name: GHW - Items with a specific barcode number length
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-09-08 16:13:34
Modified on: 2021-09-08 17:56:27
Date last run: 2021-09-08 17:56:57

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Lists all items at a library with a specific item barcode number length</p>
<ul><li>Shows items currently in the catalog</li>
<li>At the library you specify and with the item barcode number length you specify</li>
<li>grouped by itemnumber and biblionumber</li>
<li>sorted by the standard Next Search Catalog classification scheme</li>
<li>contains links to the bibliographic record</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>The easiest way to run this report is to run report 3558 for your library and then choose which length barcode for your library you want to list from the right hand column.</p>
<p class= ""notetags"" style=""display: none;"">#item #barcode #length #count</p>
</div>

----------
*/

","SELECT
  Concat(
    ""<a href='/cgi-bin/koha/catalogue/detail.pl?biblionumber="",
    biblio.biblionumber, 
    ""' target='_blank'>go to the bibliographic record</a>""
  )
  AS LINK,
  biblio.biblionumber,
  items.itemnumber,
  items.barcode,
  items.homebranch,
  items.holdingbranch,
  plocs.lib AS ""PERMANENT LOCATION"",
  locs.lib AS LOCATION,
  itypes.description AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber AS ""Call number"",
  items.copynumber,
  biblio.author,
  Concat_Ws("" "", 
    biblio.title, 
    biblio.subtitle, 
    biblioitems.number, 
    biblio.part_name
  ) AS ""Full title"",
  items.dateaccessioned AS ""Date added"",
  Coalesce(Length(items.barcode), 0) AS ""Barcode length""
FROM
  items JOIN
  biblio ON items.biblionumber = biblio.biblionumber JOIN
  biblioitems ON biblioitems.biblionumber = biblio.biblionumber AND
      items.biblioitemnumber = biblioitems.biblioitemnumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') plocs ON plocs.authorised_value =
      items.permanent_location LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') locs ON locs.authorised_value =
      items.location LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      items.ccode LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itypes ON itypes.itemtype = items.itype
WHERE
    items.homebranch LIKE <<Choose your library|ZBRAN>> AND
    Coalesce(Length(items.barcode), 0) LIKE <<Enter barcode length>>
GROUP BY
  biblio.biblionumber,
  items.itemnumber,
  Coalesce(Length(items.barcode), 0)
ORDER BY
  items.homebranch,
  ""PERMANENT LOCATION"",
  ITYPE,
  CCODE,
  ""Call number"",
  items.copynumber,
  biblio.author,
  ""Full title""",,,,,,,,
R.003558,"/*
R.003558

----------

Name: GHW - Count of items by barcode number length
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-09-08 16:19:14
Modified on: 2021-09-08 17:52:29
Date last run: 2021-09-08 17:56:40

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Counts all items at a library based on the length of their barcode numbers</p>
<ul><li>Lists current data</li>
<li>At the library you specify</li>
<li>grouped and sorted by the name of the library and the length of the barcode numbers</li>
<li>links to report 3557 which lists all of the items at a library with a specified barcode number length</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Can be used to identified errors made when items are entered with an incorrect barcode number</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#item barcode #length #barcode count</p>
</div>

----------
*/

","SELECT
  branches.branchname,
  Coalesce(Length(items.barcode), 0) AS ITEM_BARCODE_LENGTH,
  Count(DISTINCT items.itemnumber) AS ITEM_BARCODE_COUNT,
  CONCAT(
    '<a class= ""clicked"" href=\""/cgi-bin/koha/reports/guided_reports.pl?reports=3557&phase=Run+this+report&param_name=Choose+your+library|ZBRAN&sql_params=',
    items.homebranch,
    '&param_name=Enter+barcode+length&sql_params=',
    Coalesce(Length(items.barcode), 0),
    '"" target=""_blank"">List of items</a>'
  ) AS LINK_TO_FULL_LIST
FROM
  items JOIN
  branches ON items.homebranch = branches.branchcode
WHERE
  items.homebranch LIKE <<Choose your library|ZBRAN>>
GROUP BY
  branches.branchname,
  Length(items.barcode)",,,,,,,,
R.003570,"/*
R.003570

----------

Name: GHW - BPE ADMINREPORT
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-10-05 18:00:59
Modified on: 2021-10-06 12:24:30
Date last run: 2021-10-11 22:22:14

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Outputs borrower address in a way that can be easily imported back into Koha via the patron import tool</p>
<ul><li>Shows current borrowers</li>
<li>at the library you specify</li>
<li>designed to be flexible</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Notes go here.</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">hidden flexible openrefine</p>
</div>

----------
*/

","SELECT
  borrowers.cardnumber,
  borrowers.surname,
  borrowers.firstname,
  borrowers.address,
  borrowers.address2,
  borrowers.city,
  borrowers.state,
  borrowers.zipcode,
  borrowers.country,
  borrowers.branchcode,
  borrowers.categorycode
FROM
  borrowers
WHERE
  borrowers.branchcode LIKE <<Choose a library|branches:all>> AND
  borrowers.address LIKE Concat(<<Address>> ,""%"") AND
  borrowers.city LIKE Concat(<<City>>, ""%"") AND
  borrowers.state LIKE Concat(<<State>>, ""%"") AND
  borrowers.zipcode LIKE Concat(<<Zipcode>>, ""%"") AND 
  borrowers.zipcode <> Concat(<<Not this zipcode>>)
ORDER BY
  borrowers.zipcode",,,,,,,,
R.003572,"/*
R.003572

----------

Name: LibraryIQ - Item File (full) - BONNERSPGS
Created by: George H Williams

----------

Group: LibraryIQ
     BONNERSPGS

Created on: 2021-10-05 23:43:32
Modified on: 2021-11-12 12:03:09
Date last run: 2022-04-17 00:45:03

----------

Public: 0
Expiry: 300

----------

#libraryiq #item #full #bonnerspgs #weekly

----------
*/

","SELECT
  items.itemnumber AS RecordID,
  items.barcode AS Barcode,
  items.biblionumber AS BibRecordID,
  biblioitems.isbn AS ISBN,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""024""]/subfield[@code=""a""]') AS UPC,
  Concat_Ws(' | ', 
    items.permanent_location, 
    itemtypes.description,
    ccodes.lib
  ) AS `Collection Code`,
  itemtypes.description AS `Material Type`,
  items.holdingbranch AS `Branch Location`,
  items.homebranch AS `Owning Branch`,
  items.itemcallnumber AS `Call Number`,
  locs.lib AS `Shelf Location`,
  items.dateaccessioned AS ItemCreationDate,
  Concat_Ws("" "", 
    nfl.lib, 
    damageds.lib, 
    losts.lib, 
    withdrawns.lib, 
    if(items.onloan > 0, ""Checked out"", """")
  ) AS `Current Item Status`,
  items.datelastborrowed AS `Last Checkout Date`,
  items.datelastseen AS `Check In Date`,
  items.onloan AS `Due Date`,
  statisticss.Count_datetime AS `YTD Circ Count`,
  (Coalesce(items.issues, 0) + Coalesce(items.renewals, 0)) AS `Lifetime Circ Count`,
  CurDate() AS `Report Date`
FROM
  items JOIN
  biblioitems ON items.biblioitemnumber = biblioitems.biblioitemnumber JOIN
  biblio_metadata ON biblio_metadata.biblionumber = items.biblionumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      items.ccode JOIN
  itemtypes ON itemtypes.itemtype = items.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'not_loan') nfl ON nfl.authorised_value =
      items.notforloan LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'damage') damageds ON
      damageds.authorised_value = items.damaged LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'lost') losts ON losts.authorised_value =
      items.itemlost LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'withdrawn') withdrawns ON
      withdrawns.authorised_value = items.withdrawn LEFT JOIN
  (SELECT
      statistics.itemnumber,
      Count(statistics.datetime) AS Count_datetime,
      statistics.type
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      statistics.datetime > CurDate() - INTERVAL 1 YEAR
    GROUP BY
      statistics.itemnumber) statisticss ON statisticss.itemnumber =
      items.itemnumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'loc') locs ON locs.authorised_value =
      items.permanent_location
WHERE
  items.homebranch = 'BONNERSPGS'
GROUP BY
  items.itemnumber",,,,,,,,
R.003577,"/*
R.003577

----------

Name: LibraryIQ - Patron Data File (full) - BONNERSPGS
Created by: George H Williams

----------

Group: LibraryIQ
     BONNERSPGS

Created on: 2021-10-05 23:55:10
Modified on: 2021-11-12 12:04:41
Date last run: 2022-04-17 00:40:03

----------

Public: 0
Expiry: 300

----------

#libraryiq #borrowers #full #bonnerspgs #weekly

----------
*/

","SELECT
  borrowers.borrowernumber AS UserID,
  borrowers.dateexpiry AS ExpirationDate,
  borrowers.branchcode AS `Patron Branch`,
  If(borrowers.debarred IS NOT NULL, ""Restricted"", """") AS Status,
  cko_count_ty.COUNT AS YTDYearCount,
  cko_count_py.COUNT AS PreviousYearCount,
  Concat(""NA"") AS LifetimeCount,
  Concat(""NA"") AS LastActivityDate,
  last_checkout.Min_datetime AS LastCheckoutDate,
  borrowers.dateenrolled AS RegistrationDate,
  borrowers.address AS StreetOne,
  borrowers.address2 AS AddressLn2,
  borrowers.city AS AddressCity,
  borrowers.state AS AddressState,
  borrowers.zipcode AS AddressZip,
  CurDate() AS `Report Date`
FROM
  borrowers LEFT JOIN
  (SELECT
     statistics.borrowernumber,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     statistics.datetime > CurDate() - INTERVAL 1 YEAR
   GROUP BY
     statistics.borrowernumber) cko_count_ty ON cko_count_ty.borrowernumber =
      borrowers.borrowernumber LEFT JOIN
  (SELECT
     statistics.borrowernumber,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     statistics.datetime BETWEEN CurDate() - INTERVAL 2 YEAR AND CurDate() -
     INTERVAL 1 YEAR
   GROUP BY
     statistics.borrowernumber) cko_count_py ON cko_count_py.borrowernumber =
      borrowers.borrowernumber LEFT JOIN
  (SELECT
     statistics.borrowernumber,
     Min(statistics.datetime) AS Min_datetime
   FROM
     statistics
   WHERE
     (statistics.type = 'issue' OR
         statistics.type = 'renew')
   GROUP BY
     statistics.borrowernumber) last_checkout ON last_checkout.borrowernumber =
      borrowers.borrowernumber
WHERE
  borrowers.branchcode = 'BONNERSPGS'
GROUP BY
  borrowers.borrowernumber",,,,,,,,
R.003578,"/*
R.003578

----------

Name: LibraryIQ - Holds File (full) - BONNERSPGS
Created by: George H Williams

----------

Group: LibraryIQ
     BONNERSPGS

Created on: 2021-10-05 23:56:43
Modified on: 2021-11-12 12:01:40
Date last run: 2021-12-09 11:20:01

----------

Public: 0
Expiry: 300

----------

#libraryiq #item #full #bonnerspgs #weekly

----------
*/

","SELECT
  reserves.biblionumber AS BibRecordID,
  reserves.branchcode AS Branch,
  rcounts.Count_reserve_id AS `Number of Requests`,
  CurDate() AS `Report Date`
FROM
  reserves LEFT JOIN
  (SELECT
     reserves.biblionumber,
     Count(reserves.reserve_id) AS Count_reserve_id
   FROM
     reserves
   GROUP BY
     reserves.biblionumber) rcounts ON rcounts.biblionumber =
      reserves.biblionumber
WHERE
  reserves.branchcode = 'BONNERSPGS'
GROUP BY
  reserves.biblionumber,
  reserves.branchcode,
  rcounts.Count_reserve_id",,,,,,,,
R.003579,"/*
R.003579

----------

Name: LibraryIQ - Circulation File (yesterday) - BONNERSPGS
Created by: George H Williams

----------

Group: LibraryIQ
     BONNERSPGS

Created on: 2021-10-11 10:38:17
Modified on: 2021-11-12 11:59:33
Date last run: 2022-04-20 00:05:03

----------

Public: 0
Expiry: 300

----------

#libraryiq #circulation #added #bonnerspgs #daily

----------
*/

","SELECT
  issues.itemnumber AS RecordID,
  items.barcode AS Barcode,
  items.biblionumber AS BibRecordID,
  issues.issuedate AS `Checkout Date`,
  issues.branchcode AS `Check Out Branch`,
  issues.borrowernumber AS UserID,
  issues.date_due AS `Due Date`,
  CurDate() AS `Report Date`
FROM
  issues JOIN
  items ON issues.itemnumber = items.itemnumber
WHERE
  issues.branchcode = 'BONNERSPGS' AND
  Year(issues.issuedate) = Year(Now() - INTERVAL 1 DAY) AND
  Month(issues.issuedate) = Month(Now() - INTERVAL 1 DAY) AND
  Day(issues.issuedate) = Day(Now() - INTERVAL 1 DAY)
GROUP BY
  issues.issue_id
UNION
SELECT
  old_issues.itemnumber AS RecordID,
  Coalesce(items.barcode, deleteditems.barcode) AS Barcode,
  Coalesce(items.biblionumber, deleteditems.biblionumber) AS BibRecordID,
  old_issues.issuedate AS `Checkout Date`,
  old_issues.branchcode AS `Check Out Branch`,
  old_issues.borrowernumber AS UserID,
  old_issues.date_due AS `Due Date`,
  Concat('-') AS `Report Date`
FROM
  old_issues LEFT JOIN
  items ON old_issues.itemnumber = items.itemnumber LEFT JOIN
  deleteditems ON deleteditems.itemnumber = old_issues.itemnumber
WHERE
  old_issues.branchcode = 'BONNERSPGS' AND
  Year(old_issues.issuedate) = Year(Now() - INTERVAL 1 DAY) AND
  Month(old_issues.issuedate) = Month(Now() - INTERVAL 1 DAY) AND
  Day(old_issues.issuedate) = Day(Now() - INTERVAL 1 DAY)
GROUP BY
  old_issues.issue_id",,,,,,,,
R.003580,"/*
R.003580

----------

Name: LibraryIQ - Basic circulation rules (setup)
Created by: George H Williams

----------

Group: LibraryIQ
     Setup

Created on: 2021-10-11 11:06:21
Modified on: 2021-10-13 11:10:55
Date last run: 2021-11-17 16:25:01

----------

Public: 0
Expiry: 300

----------

#libraryiq #setup

----------
*/

","SELECT
  circulation_rules.branchcode,
  Coalesce(categories.description, ""All borrowers not specified above"") AS
  BORROWER_CATEGORY,
  Coalesce(itemtypes.description, ""All item types not specified above"") AS
  ITEM_TYPE,
  circulation_rules.rule_value AS `Loan period`,
  CurDate() AS `Report Date`
FROM
  circulation_rules LEFT JOIN
  categories ON circulation_rules.categorycode = categories.categorycode
  LEFT JOIN
  itemtypes ON circulation_rules.itemtype = itemtypes.itemtype
WHERE
  circulation_rules.branchcode = <<Choose your library|branches>> AND
  circulation_rules.rule_name = 'issuelength'
ORDER BY
  circulation_rules.branchcode,
  Coalesce(categories.description, ""Z""),
  Coalesce(itemtypes.description, ""Z"")",,,,,,,,
R.003581,"/*
R.003581

----------

Name: LibraryIQ - Circulation rules (in use) (setup)
Created by: George H Williams

----------

Group: LibraryIQ
     Setup

Created on: 2021-10-11 14:07:34
Modified on: 2021-10-13 11:11:17
Date last run: 2021-11-17 16:23:55

----------

Public: 0
Expiry: 300

----------

#libraryiq #setup

----------
*/

","SELECT
  Concat_Ws(' | ', locs.lib, itemtypes.description, ccodes.lib) AS `Collection code (permanent location | item type | collection code)`,
  Concat('') AS Description,
  circulation_ruless.rule_value1 AS `Default (all borrowers) loan period at Bonner Springs`,
  Concat('ALL') AS `Branch/Library ID or ALL`,
  CurDate() AS `Report Date`
FROM
  (SELECT
      If(items.permanent_location LIKE ""%ADULT%"", 
        ""ADULT"",
        If(items.permanent_location LIKE ""%CHILD%"", 
          ""CHILDRENS"",
          If(items.permanent_location LIKE ""%YA%"", 
            ""L_YA"",
            If(items.permanent_location LIKE ""%CATALOGING%"", 
              ""ADULT"",
              If(items.permanent_location LIKE ""%CART%"", 
                ""ADULT"",
                If(items.permanent_location LIKE ""%PROC%"", 
                  ""ADULT"", 
                  items.permanent_location
                )
              )
            )
          )
        )
      ) AS PERM,
      Coalesce(items.itype, ""BOOK"") AS itype,
      items.ccode,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    GROUP BY
      If(items.permanent_location LIKE ""%ADULT%"", 
        ""ADULT"",
        If(items.permanent_location LIKE ""%CHILD%"", 
          ""CHILDRENS"",
          If(items.permanent_location LIKE ""%YA%"", 
            ""L_YA"",
            If(items.permanent_location LIKE ""%CATALOGING%"", 
              ""ADULT"",
              If(items.permanent_location LIKE ""%CART%"", 
                ""ADULT"",
                If(items.permanent_location LIKE ""%PROC%"", 
                  ""ADULT"", 
                  items.permanent_location
                )
              )
            )
          )
        )
      ),
      Coalesce(items.itype, ""BOOK""),
      items.ccode
    ORDER BY
      PERM,
      itype,
      items.ccode) item_counts LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'loc') locs ON locs.authorised_value =
      item_counts.PERM LEFT JOIN
  itemtypes ON itemtypes.itemtype = item_counts.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      item_counts.ccode LEFT JOIN
  (SELECT
      ruless.itemtype,
      ruless.description,
      ruless.rule_value1
    FROM
      (SELECT
          itemtypes.description,
          Coalesce(all_specific_rules.rule_value, all_all_rules.rule_value) AS
          rule_value1,
          itemtypes.itemtype
        FROM
          (SELECT
              circulation_rules.branchcode,
              circulation_rules.categorycode,
              circulation_rules.itemtype,
              circulation_rules.rule_name,
              circulation_rules.rule_value
            FROM
              circulation_rules
            WHERE
              circulation_rules.branchcode = 'BONNERSPGS' AND
              circulation_rules.rule_name = 'issuelength' AND
              circulation_rules.categorycode IS NULL AND
              circulation_rules.itemtype IS NULL) all_all_rules,
          itemtypes LEFT JOIN
          (SELECT
              circulation_rules.branchcode,
              circulation_rules.categorycode,
              circulation_rules.itemtype,
              circulation_rules.rule_name,
              circulation_rules.rule_value
            FROM
              circulation_rules
            WHERE
              circulation_rules.branchcode = <<Choose your library|branches>> AND
              circulation_rules.rule_name = 'issuelength' AND
              circulation_rules.categorycode IS NULL AND
              circulation_rules.itemtype IS NOT NULL) all_specific_rules ON
              all_specific_rules.itemtype = itemtypes.itemtype
        ORDER BY
          itemtypes.description) ruless) circulation_ruless ON
      circulation_ruless.itemtype = itemtypes.itemtype
GROUP BY
  Concat_Ws(' | ', locs.lib, itemtypes.description, ccodes.lib),
  circulation_ruless.rule_value1
ORDER BY
  `Collection code (permanent location | item type | collection code)`",,,,,,,,
R.003582,"/*
R.003582

----------

Name: LibraryIQ - Data Validation tab (setup)
Created by: George H Williams

----------

Group: LibraryIQ
     Setup

Created on: 2021-10-11 16:52:07
Modified on: 2021-10-13 11:11:43
Date last run: 2021-11-12 16:05:28

----------

Public: 0
Expiry: 300

----------

#libraryiq #setup

----------
*/

","SELECT
  branches.branchname AS Library,
  branches.branchcode AS `Library ID`,
  item_count.Count_itemnumber AS `Total Collection Size`,
  cko_renew_365.cko_renew_count AS `Total Circulation for the most recent 12 months`,
  items_added_365.Sum_Count_itemnumber AS `Additions for the most recent 12 months`,
  items_added_730_365.Sum_Count_itemnumber AS `Previous Year Additions - the preceeding 12 months`,
  borrower_count.Count_borrowernumber AS `Total Patrons`,
  activer_borrower_count.Count_borrowernumber AS `Total Active Patrons (Active -IN KOHA- in the previous 12 months)`,
  CurDate() AS `Report Date`
FROM
  branches JOIN
  (SELECT
      items.homebranch,
      Count(items.itemnumber) AS Count_itemnumber
    FROM
      items
    GROUP BY
      items.homebranch) item_count ON item_count.homebranch =
      branches.branchcode JOIN
  (SELECT
      statistics.branch,
      count(*) AS cko_renew_count
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      statistics.datetime >= CurDate() - INTERVAL 1 YEAR
    GROUP BY
      statistics.branch) cko_renew_365 ON cko_renew_365.branch =
      branches.branchcode JOIN
  (SELECT
      branches.branchcode,
      Sum(icount_365_raw.Count_itemnumber) AS Sum_Count_itemnumber
    FROM
      branches JOIN
      (SELECT
          items.homebranch,
          Count(items.itemnumber) AS Count_itemnumber
        FROM
          items
        WHERE
          items.dateaccessioned >= CurDate() - INTERVAL 1 YEAR
        GROUP BY
          items.homebranch
        UNION
        SELECT
          deleteditems.homebranch,
          Count(deleteditems.itemnumber) AS Count_itemnumber
        FROM
          deleteditems
        WHERE
          deleteditems.dateaccessioned >= CurDate() - INTERVAL 1 YEAR
        GROUP BY
          deleteditems.homebranch) icount_365_raw ON icount_365_raw.homebranch =
          branches.branchcode
    GROUP BY
      branches.branchcode) items_added_365 ON items_added_365.branchcode =
      branches.branchcode JOIN
  (SELECT
      branches.branchcode,
      Sum(icount_730_365_raw.Count_itemnumber) AS Sum_Count_itemnumber
    FROM
      branches JOIN
      (SELECT
          items.homebranch,
          Count(items.itemnumber) AS Count_itemnumber
        FROM
          items
        WHERE
          items.dateaccessioned BETWEEN (CurDate() - INTERVAL 2 YEAR) AND (CurDate() - INTERVAL 1 YEAR)
        GROUP BY
          items.homebranch
        UNION
        SELECT
          deleteditems.homebranch,
          Count(deleteditems.itemnumber) AS Count_itemnumber
        FROM
          deleteditems
        WHERE
          deleteditems.dateaccessioned BETWEEN (CurDate() - INTERVAL 2 YEAR) AND (CurDate() - INTERVAL 1 YEAR)
        GROUP BY
          deleteditems.homebranch) icount_730_365_raw ON
          icount_730_365_raw.homebranch = branches.branchcode
    GROUP BY
      branches.branchcode) items_added_730_365 ON items_added_730_365.branchcode
      = branches.branchcode JOIN
  (SELECT
      borrowers.branchcode,
      Count(borrowers.borrowernumber) AS Count_borrowernumber
    FROM
      borrowers
    GROUP BY
      borrowers.branchcode) borrower_count ON borrower_count.branchcode =
      branches.branchcode JOIN
  (SELECT
      statistics.branch,
      Count(DISTINCT statistics.borrowernumber) AS Count_borrowernumber
    FROM
      statistics
    WHERE
      statistics.datetime >= CurDate() - INTERVAL 1 YEAR
    GROUP BY
      statistics.branch) activer_borrower_count ON activer_borrower_count.branch
      = branches.branchcode
WHERE
  branches.branchcode = <<Choose your library|branches>>
GROUP BY
  branches.branchcode",,,,,,,,
R.003583,"/*
R.003583

----------

Name: LibraryIQ - Other tab (setup)
Created by: George H Williams

----------

Group: LibraryIQ
     Setup

Created on: 2021-10-11 17:43:01
Modified on: 2021-10-13 11:08:25
Date last run: 2021-11-12 16:09:51

----------

Public: 0
Expiry: 300

----------

#libraryiq #setup

----------
*/

","SELECT
  Concat('Damaged statuses') AS STATUS_TYPE,
  Concat('-') AS STATUS_CODE,
  Concat('-') AS STAFF_DESCRIPTION,
  Concat('-') AS OPAC_DESCRIPTION,
  Concat('-') AS `Report Date`
UNION
SELECT
  Concat(''),
  authorised_values.authorised_value,
  authorised_values.lib,
  authorised_values.lib_opac,
  DATE_FORMAT(CurDate(), ""%Y.%m.%d"") AS `Data collected on`
FROM
  authorised_values
WHERE
  authorised_values.category = 'DAMAGED'
GROUP BY
  authorised_values.authorised_value,
  authorised_values.lib,
  authorised_values.lib_opac
UNION
SELECT
  Concat('Lost statuses') AS STATUS_TYPE,
  Concat('-') AS STATUS_CODE,
  Concat('-') AS STAFF_DESCRIPTION,
  Concat('-') AS OPAC_DESCRIPTION,
  Concat('-') AS DATA_COLLECTED_ON
UNION
SELECT
  Concat(''),
  authorised_values.authorised_value,
  authorised_values.lib,
  authorised_values.lib_opac,
  DATE_FORMAT(CurDate(), ""%Y.%m.%d"") AS `Data collected on`
FROM
  authorised_values
WHERE
  authorised_values.category = 'LOST'
GROUP BY
  authorised_values.authorised_value,
  authorised_values.lib,
  authorised_values.lib_opac
UNION
SELECT
  Concat('Not for loan statuses') AS STATUS_TYPE,
  Concat('-') AS STATUS_CODE,
  Concat('-') AS STAFF_DESCRIPTION,
  Concat('-') AS OPAC_DESCRIPTION,
  Concat('-') AS DATA_COLLECTED_ON
UNION
SELECT
  Concat(''),
  authorised_values.authorised_value,
  authorised_values.lib,
  authorised_values.lib_opac,
  DATE_FORMAT(CurDate(), ""%Y.%m.%d"") AS `Data collected on`
FROM
  authorised_values
WHERE
  authorised_values.category = 'NOT_LOAN'
GROUP BY
  authorised_values.authorised_value,
  authorised_values.lib,
  authorised_values.lib_opac
UNION
SELECT
  Concat('Withdrawan statuses') AS STATUS_TYPE,
  Concat('-') AS STATUS_CODE,
  Concat('-') AS STAFF_DESCRIPTION,
  Concat('-') AS OPAC_DESCRIPTION,
  Concat('-') AS DATA_COLLECTED_ON
UNION
SELECT
  Concat(''),
  authorised_values.authorised_value,
  authorised_values.lib,
  authorised_values.lib_opac,
  DATE_FORMAT(CurDate(), ""%Y.%m.%d"") AS `Data collected on`
FROM
  authorised_values
WHERE
  authorised_values.category = 'WITHDRAWN'
GROUP BY
  authorised_values.authorised_value,
  authorised_values.lib,
  authorised_values.lib_opac",,,,,,,,
R.003584,"/*
R.003584

----------

Name: LibraryIQ - Location codes tab (setup)
Created by: George H Williams

----------

Group: LibraryIQ
     Setup

Created on: 2021-10-11 17:52:44
Modified on: 2021-10-13 11:08:18
Date last run: 2021-11-12 16:08:05

----------

Public: 0
Expiry: 300

----------

#libraryiq #setup

----------
*/

","SELECT
  Concat('Permanent Shelving Locations') AS Type,
  Concat('-') AS CODE,
  Concat('-') AS STAFF_DESCRIPTION,
  Concat('-') AS OPAC_DESCRIPTION,
  Concat('-') AS `Report Date`
UNION
SELECT
  Concat(''),
  authorised_values.authorised_value,
  authorised_values.lib,
  authorised_values.lib_opac,
  DATE_FORMAT(CurDate(), ""%Y.%m.%d"")
FROM
  authorised_values
WHERE
  authorised_values.category = 'LOC'
UNION
SELECT
  Concat('Item types') AS Type,
  Concat('-') AS CODE,
  Concat('-') AS STAFF_DESCRIPTION,
  Concat('-') AS OPAC_DESCRIPTION,
  Concat('-') AS DATA_COLLECTED_ON
UNION
SELECT
  Concat(''),
  itemtypes.itemtype,
  itemtypes.description,
  itemtypes.description AS description1,
  DATE_FORMAT(CurDate(), ""%Y.%m.%d"")
FROM
  itemtypes
UNION
SELECT
  Concat('Collection codes') AS Type,
  Concat('-') AS CODE,
  Concat('-') AS STAFF_DESCRIPTION,
  Concat('-') AS OPAC_DESCRIPTION,
  Concat('-') AS DATA_COLLECTED_ON
UNION
SELECT
  Concat(''),
  authorised_values.authorised_value,
  authorised_values.lib,
  authorised_values.lib_opac,
  DATE_FORMAT(CurDate(), ""%Y.%m.%d"")
FROM
  authorised_values
WHERE
  authorised_values.category = 'CCODE'",,,,,,,,
R.003585,"/*
R.003585

----------

Name: GHW - All borrower messaging preferences
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-10-12 15:37:55
Modified on: 2021-10-26 00:54:31
Date last run: 2022-03-29 16:10:37

----------

Public: 0
Expiry: 300

----------

Shows messaging preferences for all borrowers in simple spreadsheet layout.  Includes email and SMS preferences.

----------
*/

","SELECT
  borrowers.cardnumber,
  borrowers.branchcode,
  Group_concat(borrowers.email, borrowers.emailpro) as email,
  Coalesce(
    If(
      If(borrowers.email = """", borrowers.emailpro, borrowers.email) = """", 
      ""-"", 
      due_email.DUE
    ), 
    ""-""
  ) AS DUE_EMAIL,
  Coalesce(
    If(
      If(borrowers.email = """", borrowers.emailpro, borrowers.email) = """", 
      ""-"", 
      predue_email.PREDUE
    ), 
    ""-""
  ) AS PREDUE_EMAIL,
  Coalesce(
    If(
      If(borrowers.email = """", borrowers.emailpro, borrowers.email) = """", 
      ""-"", 
      hold_email.HOLD
    ), 
    ""-""
  ) AS HOLD_EMAIL,
  Coalesce(
    If(
      If(borrowers.email = """", borrowers.emailpro, borrowers.email) = """", 
      ""-"", 
      checkin_email.CHECKIN
    ), 
    ""-""
  ) AS CHECKIN_EMAIL,
  Coalesce(
    If(
      If(borrowers.email = """", borrowers.emailpro, borrowers.email) = """", 
      ""-"", 
      checkout_email.CHECKOUT
    ), 
    ""-""
  ) AS CHECKOUT_EMAIL,
  Coalesce(due_sms.DUE, ""-"") AS DUE_SMS,
  Coalesce(predue_sms.PREDUE, ""-"") AS PREDUE_SMS,
  Coalesce(hold_sms.HOLD, ""-"") AS HOLD_SMS,
  Coalesce(checkin_sms.CHECKIN, ""-"") AS CHECKIN_SMS,
  Coalesce(checkout_sms.CHECKOUT, ""-"") AS CHECKOUT_SMS
FROM
  borrowers LEFT JOIN
  (SELECT
      borrower_message_preferences.borrower_message_preference_id,
      borrower_message_preferences.borrowernumber,
      borrower_message_preferences.categorycode,
      borrower_message_preferences.message_attribute_id,
      borrower_message_preferences.days_in_advance,
      borrower_message_preferences.wants_digest,
      borrower_message_transport_preferences.message_transport_type,
      ""HOLD"" AS HOLD
    FROM
      borrower_message_preferences JOIN
      borrower_message_transport_preferences ON
          borrower_message_transport_preferences.borrower_message_preference_id
          = borrower_message_preferences.borrower_message_preference_id
    WHERE
      borrower_message_preferences.message_attribute_id = 4 AND
      borrower_message_transport_preferences.message_transport_type = 'email'
    GROUP BY
      borrower_message_preferences.borrower_message_preference_id) hold_email ON
      hold_email.borrowernumber = borrowers.borrowernumber LEFT JOIN
  (SELECT
      borrower_message_preferences.borrower_message_preference_id,
      borrower_message_preferences.borrowernumber,
      borrower_message_preferences.categorycode,
      borrower_message_preferences.message_attribute_id,
      borrower_message_preferences.days_in_advance,
      borrower_message_preferences.wants_digest,
      borrower_message_transport_preferences.message_transport_type,
      If(borrower_message_preferences.wants_digest = 1, ""DUEDGST"", ""DUE"") AS DUE
    FROM
      borrower_message_preferences JOIN
      borrower_message_transport_preferences ON
          borrower_message_transport_preferences.borrower_message_preference_id
          = borrower_message_preferences.borrower_message_preference_id
    WHERE
      borrower_message_preferences.message_attribute_id = 1 AND
      borrower_message_transport_preferences.message_transport_type = 'email'
    GROUP BY
      borrower_message_preferences.borrower_message_preference_id) due_email ON
      due_email.borrowernumber = borrowers.borrowernumber LEFT JOIN
  (SELECT
      borrower_message_preferences.borrower_message_preference_id,
      borrower_message_preferences.borrowernumber,
      borrower_message_preferences.categorycode,
      borrower_message_preferences.message_attribute_id,
      borrower_message_preferences.days_in_advance,
      borrower_message_preferences.wants_digest,
      borrower_message_transport_preferences.message_transport_type,
      If(
        borrower_message_preferences.wants_digest = 1, 
        Concat(""PREDUEDGST: "", borrower_message_preferences.days_in_advance, "" day advance""), 
        Concat(""PREDUE: "", borrower_message_preferences.days_in_advance, "" day advance"")
      ) AS PREDUE
    FROM
      borrower_message_preferences JOIN
      borrower_message_transport_preferences ON
          borrower_message_transport_preferences.borrower_message_preference_id
          = borrower_message_preferences.borrower_message_preference_id
    WHERE
      borrower_message_preferences.message_attribute_id = 2 AND
      borrower_message_transport_preferences.message_transport_type = 'email'
    GROUP BY
      borrower_message_preferences.borrower_message_preference_id) predue_email
    ON predue_email.borrowernumber = borrowers.borrowernumber LEFT JOIN
  (SELECT
      borrower_message_preferences.borrower_message_preference_id,
      borrower_message_preferences.borrowernumber,
      borrower_message_preferences.categorycode,
      borrower_message_preferences.message_attribute_id,
      borrower_message_preferences.days_in_advance,
      borrower_message_preferences.wants_digest,
      borrower_message_transport_preferences.message_transport_type,
      ""CHECKIN"" AS CHECKIN
    FROM
      borrower_message_preferences JOIN
      borrower_message_transport_preferences ON
          borrower_message_transport_preferences.borrower_message_preference_id
          = borrower_message_preferences.borrower_message_preference_id
    WHERE
      borrower_message_preferences.message_attribute_id = 5 AND
      borrower_message_transport_preferences.message_transport_type = 'email'
    GROUP BY
      borrower_message_preferences.borrower_message_preference_id) checkin_email
    ON checkin_email.borrowernumber = borrowers.borrowernumber LEFT JOIN
  (SELECT
      borrower_message_preferences.borrower_message_preference_id,
      borrower_message_preferences.borrowernumber,
      borrower_message_preferences.categorycode,
      borrower_message_preferences.message_attribute_id,
      borrower_message_preferences.days_in_advance,
      borrower_message_preferences.wants_digest,
      borrower_message_transport_preferences.message_transport_type,
      ""CHECKOUT"" AS CHECKOUT
    FROM
      borrower_message_preferences JOIN
      borrower_message_transport_preferences ON
          borrower_message_transport_preferences.borrower_message_preference_id
          = borrower_message_preferences.borrower_message_preference_id
    WHERE
      borrower_message_preferences.message_attribute_id = 6 AND
      borrower_message_transport_preferences.message_transport_type = 'email'
    GROUP BY
      borrower_message_preferences.borrower_message_preference_id)
  checkout_email ON checkout_email.borrowernumber = borrowers.borrowernumber
  LEFT JOIN
  (SELECT
      borrower_message_preferences.borrower_message_preference_id,
      borrower_message_preferences.borrowernumber,
      borrower_message_preferences.categorycode,
      borrower_message_preferences.message_attribute_id,
      borrower_message_preferences.days_in_advance,
      borrower_message_preferences.wants_digest,
      borrower_message_transport_preferences.message_transport_type,
      If(borrower_message_preferences.wants_digest = 1, ""DUEDGST"", ""DUE"") AS DUE
    FROM
      borrower_message_preferences JOIN
      borrower_message_transport_preferences ON
          borrower_message_transport_preferences.borrower_message_preference_id
          = borrower_message_preferences.borrower_message_preference_id
    WHERE
      borrower_message_preferences.message_attribute_id = 1 AND
      borrower_message_transport_preferences.message_transport_type = 'SMS'
    GROUP BY
      borrower_message_preferences.borrower_message_preference_id) due_sms ON
      due_sms.borrowernumber = borrowers.borrowernumber LEFT JOIN
  (SELECT
      borrower_message_preferences.borrower_message_preference_id,
      borrower_message_preferences.borrowernumber,
      borrower_message_preferences.categorycode,
      borrower_message_preferences.message_attribute_id,
      borrower_message_preferences.days_in_advance,
      borrower_message_preferences.wants_digest,
      borrower_message_transport_preferences.message_transport_type,
      If(
        borrower_message_preferences.wants_digest = 1, 
        Concat(""PREDUEDGST: "", borrower_message_preferences.days_in_advance, "" day advance""), 
        Concat(""PREDUE: "", borrower_message_preferences.days_in_advance, "" day advance"")
      ) AS PREDUE
    FROM
      borrower_message_preferences JOIN
      borrower_message_transport_preferences ON
          borrower_message_transport_preferences.borrower_message_preference_id
          = borrower_message_preferences.borrower_message_preference_id
    WHERE
      borrower_message_preferences.message_attribute_id = 2 AND
      borrower_message_transport_preferences.message_transport_type = 'SMS'
    GROUP BY
      borrower_message_preferences.borrower_message_preference_id) predue_sms ON
      predue_sms.borrowernumber = borrowers.borrowernumber LEFT JOIN
  (SELECT
      borrower_message_preferences.borrower_message_preference_id,
      borrower_message_preferences.borrowernumber,
      borrower_message_preferences.categorycode,
      borrower_message_preferences.message_attribute_id,
      borrower_message_preferences.days_in_advance,
      borrower_message_preferences.wants_digest,
      borrower_message_transport_preferences.message_transport_type,
      ""HOLD"" AS HOLD
    FROM
      borrower_message_preferences JOIN
      borrower_message_transport_preferences ON
          borrower_message_transport_preferences.borrower_message_preference_id
          = borrower_message_preferences.borrower_message_preference_id
    WHERE
      borrower_message_preferences.message_attribute_id = 4 AND
      borrower_message_transport_preferences.message_transport_type = 'sms'
    GROUP BY
      borrower_message_preferences.borrower_message_preference_id) hold_sms ON
      hold_sms.borrowernumber = borrowers.borrowernumber LEFT JOIN
  (SELECT
      borrower_message_preferences.borrower_message_preference_id,
      borrower_message_preferences.borrowernumber,
      borrower_message_preferences.categorycode,
      borrower_message_preferences.message_attribute_id,
      borrower_message_preferences.days_in_advance,
      borrower_message_preferences.wants_digest,
      borrower_message_transport_preferences.message_transport_type,
      ""CHECKIN"" AS CHECKIN
    FROM
      borrower_message_preferences JOIN
      borrower_message_transport_preferences ON
          borrower_message_transport_preferences.borrower_message_preference_id
          = borrower_message_preferences.borrower_message_preference_id
    WHERE
      borrower_message_preferences.message_attribute_id = 5 AND
      borrower_message_transport_preferences.message_transport_type = 'sms'
    GROUP BY
      borrower_message_preferences.borrower_message_preference_id) checkin_sms
    ON checkin_sms.borrowernumber = borrowers.borrowernumber LEFT JOIN
  (SELECT
      borrower_message_preferences.borrower_message_preference_id,
      borrower_message_preferences.borrowernumber,
      borrower_message_preferences.categorycode,
      borrower_message_preferences.message_attribute_id,
      borrower_message_preferences.days_in_advance,
      borrower_message_preferences.wants_digest,
      borrower_message_transport_preferences.message_transport_type,
      ""CHECKOUT"" AS CHECKOUT
    FROM
      borrower_message_preferences JOIN
      borrower_message_transport_preferences ON
          borrower_message_transport_preferences.borrower_message_preference_id
          = borrower_message_preferences.borrower_message_preference_id
    WHERE
      borrower_message_preferences.message_attribute_id = 6 AND
      borrower_message_transport_preferences.message_transport_type = 'SMS'
    GROUP BY
      borrower_message_preferences.borrower_message_preference_id) checkout_sms
    ON checkout_sms.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Choose your library|branches:all>> AND
  borrowers.categorycode LIKE <<Category|categorycode>>
GROUP BY
  borrowers.borrowernumber
ORDER BY
  borrowers.cardnumber",,,,,,,,
R.003586,"/*
R.003586

----------

Name: Identify records with mismatched 008 vs Copyright/Publication date 
Created by: -

----------

Group: -
     -

Created on: -
Modified on: 2021-10-12 16:22:00
Date last run: 2022-08-01 01:15:03

----------

Public: 0
Expiry: 300

----------

This report shows records that have a mismatch between the 008 publication date and the catalogued biblio.copyrightdate. This report can help identify records that have incorrect 008 fields so that the sorting by publication date remains consistent.

----------
*/

","SELECT
  CONCAT('<a target=""new"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', biblio.biblionumber, '\"" target=""_blank"">LINK</a>') AS LINK,
  eight.DATE,
  biblioitems.publicationyear
FROM
  biblio JOIN
  (SELECT
      biblio_metadata.biblionumber,
      SUBSTR(ExtractValue(biblio_metadata.metadata,
      '//controlfield[@tag=""008""]'), 8, 4) AS DATE
    FROM
      biblio_metadata) eight ON eight.biblionumber = biblio.biblionumber
  JOIN
  biblioitems ON biblioitems.biblionumber = biblio.biblionumber
WHERE
  eight.DATE <> biblioitems.publicationyear",,,,,,,,
R.003587,"/*
R.003587

----------

Name: LibraryIQ - Circulation File (based on statistics table - last 2 years) (setup)
Created by: George H Williams

----------

Group: LibraryIQ
     Setup

Created on: 2021-10-12 22:21:50
Modified on: 2021-10-13 11:13:52
Date last run: 2021-11-12 16:48:39

----------

Public: 0
Expiry: 300

----------

#libraryiq #setup 

----------
*/

","SELECT
  statistics.itemnumber AS RecordID,
  Coalesce(items.barcode, deleteditems.barcode) AS Barcode,
  items.biblionumber AS BibRecordID,
  statistics.datetime AS `Checkout Date`,
  statistics.branch AS `Check Out Branch`,
  statistics.borrowernumber AS UserID,
  CurDate() AS `Report Date`
FROM
  statistics LEFT JOIN
  items ON items.itemnumber = statistics.itemnumber LEFT JOIN
  deleteditems ON deleteditems.itemnumber = statistics.itemnumber
WHERE
  statistics.branch = <<Choose your library|branches>> AND
  (statistics.type = 'issue' OR
      statistics.type = 'renew') AND
  statistics.datetime > CurDate() - INTERVAL 2 YEAR",,,,,,,,
R.003588,"/*
R.003588

----------

Name: LibraryIQ - Bibliographic File (added yesterday) - BONNERSPGS
Created by: George H Williams

----------

Group: LibraryIQ
     BONNERSPGS

Created on: 2021-10-13 08:15:38
Modified on: 2021-12-01 12:48:49
Date last run: 2022-04-20 00:10:02

----------

Public: 0
Expiry: 300

----------

#libraryiq #bibliographic #added #bonnerspgs #daily

----------
*/

","SELECT
  biblio.biblionumber AS BibliographicRecordID,
  biblioitems.isbn AS ISBN,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""024""]/subfield[@code=""a""]') AS UPC,
  itemtypess.description AS `Material Type`,
  biblio.title AS Title,
  biblio.author AS Author,
  biblioitems.publicationyear `Publish Date`,
  biblioitems.publishercode Publisher,
  CurDate() AS `Report Date`
FROM
  biblio JOIN
  biblioitems ON biblioitems.biblionumber = biblio.biblionumber JOIN
  biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber JOIN
  items ON items.biblionumber = biblio.biblionumber JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itemtypess ON itemtypess.itemtype = items.itype
WHERE
  items.homebranch = 'BONNERSPGS' AND
  Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 DAY) AND
  Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 DAY) AND
  Day(items.dateaccessioned) = Day(Now() - INTERVAL 1 DAY)
GROUP BY
  biblio.biblionumber",,,,,,,,
R.003589,"/*
R.003589

----------

Name: LibraryIQ - Bibliographic File (deleted yesterday) - BONNERSPGS
Created by: George H Williams

----------

Group: LibraryIQ
     BONNERSPGS

Created on: 2021-10-13 08:30:10
Modified on: 2021-12-01 12:54:42
Date last run: 2022-04-20 00:15:03

----------

Public: 0
Expiry: 300

----------

#libraryiq #bibliographic #deleted #bonnerspgs #daily

----------
*/

","SELECT
  deletedbiblio.biblionumber AS BibliographicRecordID,
  deletedbiblioitems.isbn AS ISBN,
  ExtractValue(deletedbiblio_metadata.metadata, '//datafield[@tag=""024""]/subfield[@code=""a""]') AS UPC,
  itemtypess.description AS `Material Type`,
  deletedbiblio.title AS Title,
  deletedbiblio.author AS Author,
  deletedbiblioitems.publicationyear `Publish Date`,
  deletedbiblioitems.publishercode Publisher,
  CurDate() AS `Report Date`
FROM
  deletedbiblio JOIN
  deletedbiblioitems ON deletedbiblioitems.biblionumber =
      deletedbiblio.biblionumber JOIN
  deletedbiblio_metadata ON deletedbiblio_metadata.biblionumber =
      deletedbiblio.biblionumber JOIN
  deleteditems ON deleteditems.biblionumber = deletedbiblio.biblionumber JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itemtypess ON itemtypess.itemtype = deleteditems.itype
WHERE
  deleteditems.homebranch = 'BONNERSPGS' AND
  Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 DAY) AND
  Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 DAY) AND
  Day(deleteditems.timestamp) = Day(Now() - INTERVAL 1 DAY)
GROUP BY
  deletedbiblio.biblionumber",,,,,,,,
R.003590,"/*
R.003590

----------

Name: LibraryIQ - Item File (added yesterday) - BONNERSPGS
Created by: George H Williams

----------

Group: LibraryIQ
     BONNERSPGS

Created on: 2021-10-13 09:55:09
Modified on: 2021-11-12 12:02:09
Date last run: 2022-04-20 00:20:02

----------

Public: 0
Expiry: 300

----------

#libraryiq #item #added #bonnerspgs #daily

----------
*/

","SELECT
  items.itemnumber AS RecordID,
  items.barcode AS Barcode,
  items.biblionumber AS BibRecordID,
  biblioitems.isbn AS ISBN,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""024""]/subfield[@code=""a""]') AS UPC,
  Concat_Ws(' | ', 
    items.permanent_location, 
    itemtypes.description,
    ccodes.lib
  ) AS `Collection Code`,
  itemtypes.description AS `Material Type`,
  items.holdingbranch AS `Branch Location`,
  items.homebranch AS `Owning Branch`,
  items.itemcallnumber AS `Call Number`,
  locs.lib AS `Shelf Location`,
  items.dateaccessioned AS ItemCreationDate,
  Concat_Ws("" "", 
    nfl.lib, 
    damageds.lib, 
    losts.lib, 
    withdrawns.lib, 
    if(items.onloan > 0, ""Checked out"", """")
  ) AS `Current Item Status`,
  items.datelastborrowed AS `Last Checkout Date`,
  items.datelastseen AS `Check In Date`,
  items.onloan AS `Due Date`,
  statisticss.Count_datetime AS `YTD Circ Count`,
  (Coalesce(items.issues, 0) + Coalesce(items.renewals, 0)) AS `Lifetime Circ Count`,
  CurDate() AS `Report Date`
FROM
  items JOIN
  biblioitems ON items.biblioitemnumber = biblioitems.biblioitemnumber JOIN
  biblio_metadata ON biblio_metadata.biblionumber = items.biblionumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      items.ccode JOIN
  itemtypes ON itemtypes.itemtype = items.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'not_loan') nfl ON nfl.authorised_value =
      items.notforloan LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'damage') damageds ON
      damageds.authorised_value = items.damaged LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'lost') losts ON losts.authorised_value =
      items.itemlost LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'withdrawn') withdrawns ON
      withdrawns.authorised_value = items.withdrawn LEFT JOIN
  (SELECT
      statistics.itemnumber,
      Count(statistics.datetime) AS Count_datetime,
      statistics.type
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      statistics.datetime > CurDate() - INTERVAL 1 YEAR
    GROUP BY
      statistics.itemnumber) statisticss ON statisticss.itemnumber =
      items.itemnumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'loc') locs ON locs.authorised_value =
      items.permanent_location
WHERE
  items.homebranch = 'BONNERSPGS' AND
  Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 DAY) AND
  Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 DAY) AND
  Day(items.dateaccessioned) = Day(Now() - INTERVAL 1 DAY)
GROUP BY
  items.itemnumber",,,,,,,,
R.003591,"/*
R.003591

----------

Name: LibraryIQ - Item File (deleted yesterday) - BONNERSPGS
Created by: George H Williams

----------

Group: LibraryIQ
     BONNERSPGS

Created on: 2021-10-13 10:20:01
Modified on: 2021-11-12 12:02:40
Date last run: 2022-04-20 00:25:03

----------

Public: 0
Expiry: 300

----------

#libraryiq #item #deleted #bonnerspgs #daily

----------
*/

","SELECT
  deleteditems.itemnumber AS RecordID,
  deleteditems.barcode AS Barcode,
  deleteditems.biblionumber AS BibRecordID,
  Coalesce(biblioitems.isbn, deletedbiblioitems.isbn) AS ISBN,
  Coalesce(
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""024""]/subfield[@code=""a""]'), 
    ExtractValue(deletedbiblio_metadata.metadata, '//datafield[@tag=""024""]/subfield[@code=""a""]')
  ) AS UPC,
  Concat_Ws(' | ', 
    deleteditems.permanent_location, 
    itemtypes.description,
    ccodes.lib
  ) AS `Collection Code`,
  itemtypes.description AS `Material Type`,
  deleteditems.holdingbranch AS `Branch Location`,
  deleteditems.homebranch AS `Owning Branch`,
  deleteditems.itemcallnumber AS `Call Number`,
  locs.lib AS `Shelf Location`,
  deleteditems.dateaccessioned AS ItemCreationDate,
  Concat_Ws("" "", 
    nfl.lib, 
    damageds.lib, 
    losts.lib, 
    withdrawns.lib,
    if(deleteditems.onloan > 0, ""Checked out"", """")
  ) AS `Current Item Statusdeleteditems.onloan`,
  deleteditems.datelastseen AS `Check In Date`,
  deleteditems.onloan AS `Due Date`,
  statisticss.Count_datetime AS `YTD Circ Count`,
  (Coalesce(deleteditems.issues, 0) + Coalesce(deleteditems.renewals, 0)) AS `Lifetime Circ Count`,
  CurDate() AS `Report Date`
FROM
  deleteditems LEFT JOIN
  biblioitems ON deleteditems.biblioitemnumber = biblioitems.biblioitemnumber
  LEFT JOIN
  biblio_metadata ON biblio_metadata.biblionumber = deleteditems.biblionumber
  LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      deleteditems.ccode JOIN
  itemtypes ON itemtypes.itemtype = deleteditems.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'not_loan') nfl ON nfl.authorised_value =
      deleteditems.notforloan LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'damage') damageds ON
      damageds.authorised_value = deleteditems.damaged LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'lost') losts ON losts.authorised_value =
      deleteditems.itemlost LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'withdrawn') withdrawns ON
      withdrawns.authorised_value = deleteditems.withdrawn LEFT JOIN
  (SELECT
      statistics.itemnumber,
      Count(statistics.datetime) AS Count_datetime,
      statistics.type
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      statistics.datetime > CurDate() - INTERVAL 1 YEAR
    GROUP BY
      statistics.itemnumber) statisticss ON statisticss.itemnumber =
      deleteditems.itemnumber LEFT JOIN
  deletedbiblioitems ON deletedbiblioitems.biblioitemnumber =
      deleteditems.biblioitemnumber LEFT JOIN
  deletedbiblio_metadata ON deletedbiblio_metadata.biblionumber =
      deleteditems.biblionumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'loc') locs ON locs.authorised_value =
      deleteditems.permanent_location
WHERE
  deleteditems.homebranch = 'BONNERSPGS' AND
  Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 DAY) AND
  Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 DAY) AND
  Day(deleteditems.timestamp) = Day(Now() - INTERVAL 1 DAY)
GROUP BY
  deleteditems.itemnumber",,,,,,,,
R.003592,"/*
R.003592

----------

Name: LibraryIQ - Patron Data File (added yesterday) - BONNERSPGS
Created by: George H Williams

----------

Group: LibraryIQ
     BONNERSPGS

Created on: 2021-10-13 10:44:37
Modified on: 2021-11-12 12:03:43
Date last run: 2022-04-20 00:30:03

----------

Public: 0
Expiry: 300

----------

#libraryiq #item #added #bonnerspgs #daily

----------
*/

","SELECT
  borrowers.borrowernumber AS UserID,
  borrowers.dateexpiry AS ExpirationDate,
  borrowers.branchcode AS `Patron Branch`,
  If(borrowers.debarred IS NOT NULL, ""Restricted"", """") AS Status,
  cko_count_ty.COUNT AS YTDYearCount,
  cko_count_py.COUNT AS PreviousYearCount,
  Concat(""NA"") AS LifetimeCount,
  Concat(""NA"") AS LastActivityDate,
  last_checkout.Min_datetime AS LastCheckoutDate,
  borrowers.dateenrolled AS RegistrationDate,
  borrowers.address AS StreetOne,
  borrowers.address2 AS AddressLn2,
  borrowers.city AS AddressCity,
  borrowers.state AS AddressState,
  borrowers.zipcode AS AddressZip,
  CurDate() AS `Report Date`
FROM
  borrowers LEFT JOIN
  (SELECT
      statistics.borrowernumber,
      count(*) AS COUNT
    FROM
      statistics
    WHERE
      statistics.datetime > CurDate() - INTERVAL 1 YEAR
    GROUP BY
      statistics.borrowernumber) cko_count_ty ON cko_count_ty.borrowernumber =
      borrowers.borrowernumber LEFT JOIN
  (SELECT
      statistics.borrowernumber,
      count(*) AS COUNT
    FROM
      statistics
    WHERE
      statistics.datetime BETWEEN CurDate() - INTERVAL 2 YEAR AND CurDate() - INTERVAL 1 YEAR
    GROUP BY
      statistics.borrowernumber) cko_count_py ON cko_count_py.borrowernumber =
      borrowers.borrowernumber LEFT JOIN
  (SELECT
      statistics.borrowernumber,
      Min(statistics.datetime) AS Min_datetime
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew')
    GROUP BY
      statistics.borrowernumber) last_checkout ON last_checkout.borrowernumber =
      borrowers.borrowernumber
WHERE
  borrowers.branchcode = 'BONNERSPGS' AND 
  Year(borrowers.dateenrolled) = Year(Now() - interval 1 day) AND
  Month(borrowers.dateenrolled) = Month(Now() - interval 1 day) AND
  Day(borrowers.dateenrolled) = Day(Now() - interval 1 day)
GROUP BY
  borrowers.borrowernumber",,,,,,,,
R.003593,"/*
R.003593

----------

Name: LibraryIQ - Patron Data File (deleted yesterday) - BONNERSPGS
Created by: George H Williams

----------

Group: LibraryIQ
     BONNERSPGS

Created on: 2021-10-13 10:51:10
Modified on: 2021-11-12 12:04:11
Date last run: 2022-04-20 00:35:03

----------

Public: 0
Expiry: 300

----------

#libraryiq #item #deleted #bonnerspgs #daily

----------
*/

","SELECT
  deletedborrowers.borrowernumber AS UserID,
  deletedborrowers.dateexpiry AS ExpirationDate,
  deletedborrowers.branchcode AS `Patron Branch`,
  If(deletedborrowers.debarred IS NOT NULL, ""Restricted"", """") AS Status,
  cko_count_ty.COUNT AS YTDYearCount,
  cko_count_py.COUNT AS PreviousYearCount,
  Concat(""NA"") AS LifetimeCount,
  Concat(""NA"") AS LastActivityDate,
  last_checkout.Min_datetime AS LastCheckoutDate,
  deletedborrowers.dateenrolled AS RegistrationDate,
  deletedborrowers.address AS StreetOne,
  deletedborrowers.address2 AS AddressLn2,
  deletedborrowers.city AS AddressCity,
  deletedborrowers.state AS AddressState,
  deletedborrowers.zipcode AS AddressZip,
  CurDate() AS `Report Date`
FROM
  deletedborrowers LEFT JOIN
  (SELECT
      statistics.borrowernumber,
      count(*) AS COUNT
    FROM
      statistics
    WHERE
      statistics.datetime > CurDate() - INTERVAL 1 YEAR
    GROUP BY
      statistics.borrowernumber) cko_count_ty ON cko_count_ty.borrowernumber =
      deletedborrowers.borrowernumber LEFT JOIN
  (SELECT
      statistics.borrowernumber,
      count(*) AS COUNT
    FROM
      statistics
    WHERE
      statistics.datetime BETWEEN CurDate() - INTERVAL 2 YEAR AND CurDate() -
      INTERVAL 1 YEAR
    GROUP BY
      statistics.borrowernumber) cko_count_py ON cko_count_py.borrowernumber =
      deletedborrowers.borrowernumber LEFT JOIN
  (SELECT
      statistics.borrowernumber,
      Min(statistics.datetime) AS Min_datetime
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew')
    GROUP BY
      statistics.borrowernumber) last_checkout ON last_checkout.borrowernumber =
      deletedborrowers.borrowernumber
WHERE
  deletedborrowers.branchcode = 'BONNERSPGS' AND
  Year(deletedborrowers.updated_on) = Year(Now() - INTERVAL 1 DAY) AND
  Month(deletedborrowers.updated_on) = Month(Now() - INTERVAL 1 DAY) AND
  Day(deletedborrowers.updated_on) = Day(Now() - INTERVAL 1 DAY)
GROUP BY
  deletedborrowers.borrowernumber",,,,,,,,
R.003594,"/*
R.003594

----------

Name: LibraryIQ - Holds File (added yesterday) - BONNERSPGS
Created by: George H Williams

----------

Group: LibraryIQ
     BONNERSPGS

Created on: 2021-10-13 10:59:59
Modified on: 2021-11-12 12:00:10
Date last run: 2021-12-09 11:24:54

----------

Public: 0
Expiry: 300

----------

#libraryiq #item #added #bonnerspgs #daily

----------
*/

","SELECT
  reserves.biblionumber AS BibRecordID,
  reserves.branchcode AS Branch,
  rcounts.Count_reserve_id AS `Number of Requests`,
  CurDate() AS `Report Date`
FROM
  reserves LEFT JOIN
  (SELECT
      reserves.biblionumber,
      Count(reserves.reserve_id) AS Count_reserve_id
    FROM
      reserves
    GROUP BY
      reserves.biblionumber) rcounts ON rcounts.biblionumber =
      reserves.biblionumber
WHERE
  reserves.branchcode = 'BONNERSPGS' AND
  Year(reserves.reservedate) = Year(Now() - INTERVAL 1 DAY) AND
  Month(reserves.reservedate) = Month(Now() - INTERVAL 1 DAY) AND
  Day(reserves.reservedate) = Day(Now() - INTERVAL 1 DAY)
GROUP BY
  reserves.biblionumber,
  reserves.branchcode,
  rcounts.Count_reserve_id",,,,,,,,
R.003595,"/*
R.003595

----------

Name: LibraryIQ - Holds File (cancelled/deleted/filled/expired yesterday) - BONNERSPGS
Created by: George H Williams

----------

Group: LibraryIQ
     BONNERSPGS

Created on: 2021-10-13 11:04:17
Modified on: 2021-11-12 12:01:10
Date last run: 2021-12-09 11:24:56

----------

Public: 0
Expiry: 300

----------

#libraryiq #item #deleted #bonnerspgs #daily

----------
*/

","SELECT
  old_reserves.biblionumber AS BibRecordID,
  old_reserves.branchcode AS Branch,
  rcounts.Count_reserve_id AS `Number of Requests`,
  CurDate() AS `Report Date`
FROM
  old_reserves LEFT JOIN
  (SELECT
      old_reserves.biblionumber,
      Count(old_reserves.reserve_id) AS Count_reserve_id
    FROM
      old_reserves
    GROUP BY
      old_reserves.biblionumber) rcounts ON rcounts.biblionumber =
      old_reserves.biblionumber
WHERE
  old_reserves.branchcode = 'BONNERSPGS' AND
  Year(old_reserves.timestamp) = Year(Now() - INTERVAL 1 DAY) AND
  Month(old_reserves.timestamp) = Month(Now() - INTERVAL 1 DAY) AND
  Day(old_reserves.timestamp) = Day(Now() - INTERVAL 1 DAY)
GROUP BY
  old_reserves.biblionumber,
  old_reserves.branchcode,
  rcounts.Count_reserve_id",,,,,,,,
R.003596,"/*
R.003596

----------

Name: GHW - Backups - system preferences
Created by: George H Williams

----------

Group: Administrative Reports
     -

Created on: 2021-10-16 14:23:35
Modified on: 2021-10-16 16:29:17
Date last run: 2021-10-29 18:15:02

----------

Public: 0
Expiry: 300

----------



<div id=reportinfo class=noprint>
<p>See Northeast Kansas Library Sytem/system_preference_backup on Github for full instructions</p>
<p></p>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3596"">Click here to download as a csv file</a></p>
<p class= ""notetags"" style=""display: none;"">#backups #monthly #sysprefs</p>
</div>

----------
*/

","SELECT 
  Concat(If(Length(systempreferences.value) > 30000, ""XX."", ""SP.""), Replace(systempreferences.variable, "":"", ""_"")) AS FILE_NAME, 
  Concat_Ws("""", 
    Concat(If(Length(systempreferences.value) > 30000, ""XX."", ""SP.""), systempreferences.variable, "".txt""), 
    Char(13), Char(10), Char(13), Char(10), 
    ""----------"", 
    Char(13), Char(10), Char(13), Char(10), 
    ""Preference name: "", systempreferences.variable, 
    Char(13), Char(10), Char(13), Char(10), 
    ""Type: "", systempreferences.type, 
    Char(13), Char(10), Char(13), Char(10), 
    ""Options: "", systempreferences.options, 
    Char(13), Char(10), Char(13), Char(10), 
    ""----------"", 
    Char(13), Char(10), Char(13), Char(10), 
    ""Preference value: "", 
    Char(13), Char(10), Char(13), Char(10) 
  ) AS INFO, 
  SubString(systempreferences.value FROM 1 FOR 30000 ) AS PART_ONE, 
  If(Length(systempreferences.value) > 30000, ""||AAAAA||"", """") AS SEP_ONE, 
  SubString(systempreferences.value FROM 30001 FOR 30000 ) AS PART_TWO, 
  If(Length(systempreferences.value) > 60000, ""||AAAAA||"", """") AS SEP_TWO, 
  SubString(systempreferences.value FROM 60001 FOR 30000 ) AS PART_THREE, 
  If(Length(systempreferences.value) > 90000, ""||AAAAA||"", """") AS SEP_THREE, 
  SubString(systempreferences.value FROM 90001 FOR 30000 ) AS PART_FOUR, 
  If(Length(systempreferences.value) > 120000, ""||AAAAA||"", """") AS SEP_FOUR, 
  SubString(systempreferences.value FROM 120001 FOR 30000 ) AS PART_FIVE 
FROM 
  systempreferences 
GROUP BY 
  systempreferences.variable ",,,,,,,,
R.003598,"/*
R.003598

----------

Name: GHW - Bookshelves report for LINWOOD - ADULT
Created by: George H Williams

----------

Group:  LINWOOD
     -

Created on: 2021-10-20 15:31:44
Modified on: 2021-10-20 15:32:49
Date last run: 2022-10-02 18:20:49

----------

Public: 1
Expiry: 300

----------



----------
*/

","SELECT
IF(
    Length(Trim(SubString_Index(biblioitems.isbn, '|', 1))) = 10, 
    Trim(SubString_Index(biblioitems.isbn, '|', 1)), 
    IF(
      Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 2), '|', -1))) = 10, 
      Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 2), '|', -1)), 
      IF(
        Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 3), '|', -1))) = 10, 
        Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 3), '|', -1)), 
        IF(
          Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 4), '|', -1))) = 10, 
          Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 4), '|', -1)), 
          IF(
            Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 5), '|', -1))) = 10, 
            Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 5), '|', -1)), 
            IF(
              Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 6), '|', -1))) = 10, 
              Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 6), '|', -1)), 
              IF(
                Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 7), '|', -1))) = 10, 
                Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 7), '|', -1)), 
                IF(
                  Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 8), '|', -1))) = 10, 
                  Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 8), '|', -1)), 
                  IF(
                    Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 9), '|', -1))) = 10, 
                    Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 9), '|', -1)), 
                    IF(
                      Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 10), '|', -1))) = 10, 
                      Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 10), '|', -1)), 
                      'X'
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  ) AS isbns,
  biblio.title,
  biblio.author
FROM
  biblioitems JOIN
  biblio ON biblioitems.biblionumber = biblio.biblionumber JOIN
  items ON items.biblioitemnumber = biblioitems.biblioitemnumber
WHERE
  items.homebranch LIKE 'LINWOOD' AND
  biblioitems.isbn IS NOT NULL AND
  items.itype LIKE 'BOOK' AND
  items.permanent_location LIKE 'ADULT' AND
  items.ccode LIKE ""%"" AND
  items.notforloan = 0 AND
  items.damaged = 0 AND
  items.itemlost = '' AND
  items.withdrawn = 0
GROUP BY
  biblio.biblionumber
HAVING
  isbns <> 'X'
ORDER BY
  biblio.biblionumber DESC
LIMIT 25",,,,,,,,
R.003599,"/*
R.003599

----------

Name: GHW - Bookshelves report for LINWOOD - CHILDRENS
Created by: George H Williams

----------

Group:  LINWOOD
     -

Created on: 2021-10-20 15:32:03
Modified on: 2021-10-20 15:32:54
Date last run: 2022-10-03 13:12:22

----------

Public: 1
Expiry: 300

----------



----------
*/

","SELECT
IF(
    Length(Trim(SubString_Index(biblioitems.isbn, '|', 1))) = 10, 
    Trim(SubString_Index(biblioitems.isbn, '|', 1)), 
    IF(
      Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 2), '|', -1))) = 10, 
      Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 2), '|', -1)), 
      IF(
        Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 3), '|', -1))) = 10, 
        Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 3), '|', -1)), 
        IF(
          Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 4), '|', -1))) = 10, 
          Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 4), '|', -1)), 
          IF(
            Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 5), '|', -1))) = 10, 
            Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 5), '|', -1)), 
            IF(
              Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 6), '|', -1))) = 10, 
              Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 6), '|', -1)), 
              IF(
                Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 7), '|', -1))) = 10, 
                Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 7), '|', -1)), 
                IF(
                  Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 8), '|', -1))) = 10, 
                  Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 8), '|', -1)), 
                  IF(
                    Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 9), '|', -1))) = 10, 
                    Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 9), '|', -1)), 
                    IF(
                      Length(Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 10), '|', -1))) = 10, 
                      Trim(SubString_Index(SubString_Index(biblioitems.isbn, '|', 10), '|', -1)), 
                      'X'
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  ) AS isbns,
  biblio.title,
  biblio.author
FROM
  biblioitems JOIN
  biblio ON biblioitems.biblionumber = biblio.biblionumber JOIN
  items ON items.biblioitemnumber = biblioitems.biblioitemnumber
WHERE
  items.homebranch LIKE 'LINWOOD' AND
  biblioitems.isbn IS NOT NULL AND
  items.itype LIKE 'BOOK' AND
  items.permanent_location LIKE 'CHILDRENS' AND
  items.ccode LIKE ""%"" AND
  items.notforloan = 0 AND
  items.damaged = 0 AND
  items.itemlost = '' AND
  items.withdrawn = 0
GROUP BY
  biblio.biblionumber
HAVING
  isbns <> 'X'
ORDER BY
  biblio.biblionumber DESC
LIMIT 25",,,,,,,,
R.003600,"/*
R.003600

----------

Name: GHW - 260 > 264 needed
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-10-25 12:41:40
Modified on: 2022-09-06 10:19:24
Date last run: 2022-10-02 21:42:04

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p id=""rquickdown""><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=1&phase=Export&format=csv&report_id=3600"">Click here to download as a csv file</a></p>
</div>



----------
*/

","SELECT 
  biblioitems.biblionumber 
FROM 
  biblioitems JOIN 
  items ON 
    items.biblioitemnumber = biblioitems.biblioitemnumber JOIN 
    biblio_metadata ON 
      biblio_metadata.biblionumber = biblioitems.biblionumber 
WHERE 
  ( 
    biblioitems.publicationyear IS NULL AND 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""260""]/subfield[@code=""c""]') <> '' 
  ) OR 
  ( 
    biblioitems.publishercode IS NULL AND 
    ExtractValue(biblio_metadata.metadata,'//datafield[@tag=""260""]/subfield[@code=""b""]') <> '' 
  ) OR 
  ( 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""260""]/subfield[@code=""a""]') <> '' 
  ) 
GROUP BY 
  biblioitems.biblionumber 
LIMIT 1000 ",,,,,,,,
R.003602,"/*
R.003602

----------

Name: LibraryIQ - Bibliographic File (full) - BONNERSPGS
Created by: George H Williams

----------

Group: LibraryIQ
     BONNERSPGS

Created on: 2021-10-29 16:34:48
Modified on: 2021-12-01 12:31:40
Date last run: 2022-04-17 00:50:02

----------

Public: 0
Expiry: 300

----------

#libraryiq #bibliographic #full #bonnerspgs #weekly

----------
*/

","SELECT
  biblio.biblionumber AS BibliographicRecordID,
  biblioitems.isbn AS ISBN,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""024""]/subfield[@code=""a""]') AS UPC,
  itemtypess.description AS `Material Type`,
  biblio.title AS Title,
  biblio.author AS Author,
  biblioitems.publicationyear `Publish Date`,
  biblioitems.publishercode Publisher,
  CurDate() AS `Report Date`
FROM
  biblio JOIN
  biblioitems ON biblioitems.biblionumber = biblio.biblionumber JOIN
  biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber JOIN
  items ON items.biblionumber = biblio.biblionumber JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itemtypess ON itemtypess.itemtype = items.itype
WHERE
  items.homebranch = 'BONNERSPGS'
GROUP BY
  biblio.biblionumber",,,,,,,,
R.003603,"/*
R.003603

----------

Name: LibraryIQ - Bibliographic File (full) - BONNERSPGS
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-10-29 16:39:24
Modified on: 2021-10-29 16:39:24
Date last run: 2021-10-29 16:41:45

----------

Public: 0
Expiry: 300

----------

Notes: #libraryiq #bibliographic #full #bonnerspgs #monthly 

----------
*/

","SELECT
  items.biblionumber AS BibliographicRecordID,
  biblioitems.isbn AS ISBN,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""024""]/subfield[@code=""a""]') AS UPC,
  itemtypes.description AS `Material Type`,
  biblio.title AS Title,
  biblio.author AS Author,
  biblioitems.publicationyear AS `Publish Date`,
  biblioitems.publishercode AS Publisher,
  CurDate() AS `Report Date`
FROM
  items JOIN
  biblio ON items.biblionumber = biblio.biblionumber  JOIN
  itemtypes ON itemtypes.itemtype = items.itype  JOIN
  biblioitems ON biblioitems.biblioitemnumber = biblio.biblionumber  JOIN
  biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
WHERE
  items.homebranch = 'BONNERSPGS'
GROUP BY
  items.biblionumber",,,,,,,,
R.003606,"/*
R.003606

----------

Name: GHW - Unique notices
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-11-04 01:02:08
Modified on: 2021-11-07 12:39:37
Date last run: 2021-12-20 17:28:50

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  letter.code,
  letter.message_transport_type,
  letter.is_html,
  REPLACE(letter.content, ""<"", ""&lt;"")  AS CONTENT, 
  GROUP_CONCAT(
    DISTINCT 
    If(letter.branchcode = """", ""All libraries"", letter.branchcode) 
    ORDER BY If(letter.branchcode = """", ""All libraries"", letter.branchcode) 
    SEPARATOR "" | ""
  ) AS BRANCHES
FROM
  letter
WHERE
  letter.message_transport_type = ""email"" AND 
  letter.code LIKE ""%DUE%""
GROUP BY
  letter.code,
  letter.message_transport_type,
  letter.content,
  letter.is_html,
  Hex(letter.content)",,,,,,,,
R.003607,"/*
R.003607

----------

Name: LibraryIQ - Item File (full) - BASEHOR
Created by: George H Williams

----------

Group: LibraryIQ
     BASEHOR

Created on: 2021-11-08 10:51:34
Modified on: 2021-11-12 11:37:57
Date last run: 2022-04-17 00:50:02

----------

Public: 0
Expiry: 300

----------

#libraryiq #item #full #basehor #weekly

----------
*/

","SELECT
  items.itemnumber AS RecordID,
  items.barcode AS Barcode,
  items.biblionumber AS BibRecordID,
  biblioitems.isbn AS ISBN,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""024""]/subfield[@code=""a""]') AS UPC,
  Concat_Ws(' | ', 
    items.permanent_location, 
    itemtypes.description,
    ccodes.lib
  ) AS `Collection Code`,
  itemtypes.description AS `Material Type`,
  items.holdingbranch AS `Branch Location`,
  items.homebranch AS `Owning Branch`,
  items.itemcallnumber AS `Call Number`,
  locs.lib AS `Shelf Location`,
  items.dateaccessioned AS ItemCreationDate,
  Concat_Ws("" "", 
    nfl.lib, 
    damageds.lib, 
    losts.lib, 
    withdrawns.lib, 
    if(items.onloan > 0, ""Checked out"", """")
  ) AS `Current Item Status`,
  items.datelastborrowed AS `Last Checkout Date`,
  items.datelastseen AS `Check In Date`,
  items.onloan AS `Due Date`,
  statisticss.Count_datetime AS `YTD Circ Count`,
  (Coalesce(items.issues, 0) + Coalesce(items.renewals, 0)) AS `Lifetime Circ Count`,
  CurDate() AS `Report Date`
FROM
  items JOIN
  biblioitems ON items.biblioitemnumber = biblioitems.biblioitemnumber JOIN
  biblio_metadata ON biblio_metadata.biblionumber = items.biblionumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      items.ccode JOIN
  itemtypes ON itemtypes.itemtype = items.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'not_loan') nfl ON nfl.authorised_value =
      items.notforloan LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'damage') damageds ON
      damageds.authorised_value = items.damaged LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'lost') losts ON losts.authorised_value =
      items.itemlost LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'withdrawn') withdrawns ON
      withdrawns.authorised_value = items.withdrawn LEFT JOIN
  (SELECT
      statistics.itemnumber,
      Count(statistics.datetime) AS Count_datetime,
      statistics.type
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      statistics.datetime > CurDate() - INTERVAL 1 YEAR
    GROUP BY
      statistics.itemnumber) statisticss ON statisticss.itemnumber =
      items.itemnumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'loc') locs ON locs.authorised_value =
      items.permanent_location
WHERE
  items.homebranch = 'BASEHOR'
GROUP BY
  items.itemnumber",,,,,,,,
R.003608,"/*
R.003608

----------

Name: LibraryIQ - Patron Data File (full) - BASEHOR
Created by: George H Williams

----------

Group: LibraryIQ
     BASEHOR

Created on: 2021-11-08 10:54:26
Modified on: 2021-11-12 15:52:41
Date last run: 2022-04-17 00:55:03

----------

Public: 0
Expiry: 300

----------

#libraryiq #borrowers #full #basehor #weekly

----------
*/

","SELECT
  borrowers.borrowernumber AS UserID,
  borrowers.dateexpiry AS ExpirationDate,
  borrowers.branchcode AS `Patron Branch`,
  If(borrowers.debarred IS NOT NULL, ""Restricted"", """") AS Status,
  cko_count_ty.COUNT AS YTDYearCount,
  cko_count_py.COUNT AS PreviousYearCount,
  Concat(""NA"") AS LifetimeCount,
  Concat(""NA"") AS LastActivityDate,
  last_checkout.Min_datetime AS LastCheckoutDate,
  borrowers.dateenrolled AS RegistrationDate,
  borrowers.address AS StreetOne,
  borrowers.address2 AS AddressLn2,
  borrowers.city AS AddressCity,
  borrowers.state AS AddressState,
  borrowers.zipcode AS AddressZip,
  CurDate() AS `Report Date`
FROM
  borrowers LEFT JOIN
  (SELECT
     statistics.borrowernumber,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     statistics.datetime > CurDate() - INTERVAL 1 YEAR
   GROUP BY
     statistics.borrowernumber) cko_count_ty ON cko_count_ty.borrowernumber =
      borrowers.borrowernumber LEFT JOIN
  (SELECT
     statistics.borrowernumber,
     count(*) AS COUNT
   FROM
     statistics
   WHERE
     statistics.datetime BETWEEN CurDate() - INTERVAL 2 YEAR AND CurDate() -
     INTERVAL 1 YEAR
   GROUP BY
     statistics.borrowernumber) cko_count_py ON cko_count_py.borrowernumber =
      borrowers.borrowernumber LEFT JOIN
  (SELECT
     statistics.borrowernumber,
     Min(statistics.datetime) AS Min_datetime
   FROM
     statistics
   WHERE
     (statistics.type = 'issue' OR
         statistics.type = 'renew')
   GROUP BY
     statistics.borrowernumber) last_checkout ON last_checkout.borrowernumber =
      borrowers.borrowernumber
WHERE
  borrowers.branchcode = 'BASEHOR'
GROUP BY
  borrowers.borrowernumber",,,,,,,,
R.003609,"/*
R.003609

----------

Name: LibraryIQ - Holds File (full) - BASEHOR
Created by: George H Williams

----------

Group: LibraryIQ
     BASEHOR

Created on: 2021-11-08 10:58:20
Modified on: 2021-11-12 11:49:36
Date last run: 2021-11-16 18:29:15

----------

Public: 0
Expiry: 300

----------

#libraryiq #requests #full #basehor #weekly


----------
*/

","SELECT
  reserves.biblionumber AS BibRecordID,
  reserves.branchcode AS Branch,
  rcounts.Count_reserve_id AS `Number of Requests`,
  CurDate() AS `Report Date`
FROM
  reserves LEFT JOIN
  (SELECT
     reserves.biblionumber,
     Count(reserves.reserve_id) AS Count_reserve_id
   FROM
     reserves
   GROUP BY
     reserves.biblionumber) rcounts ON rcounts.biblionumber =
      reserves.biblionumber
WHERE
  reserves.branchcode = 'BASEHOR'
GROUP BY
  reserves.biblionumber,
  reserves.branchcode,
  rcounts.Count_reserve_id",,,,,,,,
R.003610,"/*
R.003610

----------

Name: LibraryIQ - Circulation File (yesterday) - BASEHOR
Created by: George H Williams

----------

Group: LibraryIQ
     BASEHOR

Created on: 2021-11-08 11:00:02
Modified on: 2021-11-16 18:26:37
Date last run: 2022-04-20 00:15:03

----------

Public: 0
Expiry: 300

----------

#libraryiq #circulation #added #basehor #daily

----------
*/

","SELECT
  issues.itemnumber AS RecordID,
  items.barcode AS Barcode,
  items.biblionumber AS BibRecordID,
  issues.issuedate AS `Checkout Date`,
  issues.branchcode AS `Check Out Branch`,
  issues.borrowernumber AS UserID,
  issues.date_due AS `Due Date`,
  CurDate() AS `Report Date`
FROM
  issues JOIN
  items ON issues.itemnumber = items.itemnumber
WHERE
  issues.branchcode = 'BASEHOR' AND
  Year(issues.issuedate) = Year(Now() - INTERVAL 1 DAY) AND
  Month(issues.issuedate) = Month(Now() - INTERVAL 1 DAY) AND
  Day(issues.issuedate) = Day(Now() - INTERVAL 1 DAY)
GROUP BY
  issues.issue_id
UNION
SELECT
  old_issues.itemnumber AS RecordID,
  Coalesce(items.barcode, deleteditems.barcode) AS Barcode,
  Coalesce(items.biblionumber, deleteditems.biblionumber) AS BibRecordID,
  old_issues.issuedate AS `Checkout Date`,
  old_issues.branchcode AS `Check Out Branch`,
  old_issues.borrowernumber AS UserID,
  old_issues.date_due AS `Due Date`,
  Concat('-') AS `Report Date`
FROM
  old_issues LEFT JOIN
  items ON old_issues.itemnumber = items.itemnumber LEFT JOIN
  deleteditems ON deleteditems.itemnumber = old_issues.itemnumber
WHERE
  old_issues.branchcode = 'BASEHOR' AND
  Year(old_issues.issuedate) = Year(Now() - INTERVAL 1 DAY) AND
  Month(old_issues.issuedate) = Month(Now() - INTERVAL 1 DAY) AND
  Day(old_issues.issuedate) = Day(Now() - INTERVAL 1 DAY)
GROUP BY
  old_issues.issue_id",,,,,,,,
R.003611,"/*
R.003611

----------

Name: LibraryIQ - Bibliographic File (added yesterday) - BASEHOR
Created by: George H Williams

----------

Group: LibraryIQ
     BASEHOR

Created on: 2021-11-08 11:04:49
Modified on: 2021-11-12 11:35:14
Date last run: 2022-04-20 00:05:03

----------

Public: 0
Expiry: 300

----------

#libraryiq #bibliographic #added #basehor #daily

----------
*/

","SELECT
  items.biblionumber AS BibliographicRecordID,
  biblioitems.isbn AS ISBN,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""024""]/subfield[@code=""a""]') AS UPC,
  itemtypes.description AS `Material Type`,
  biblio.title AS Title,
  biblio.author AS Author,
  biblioitems.publicationyear AS `Publish Date`,
  biblioitems.publishercode AS Publisher,
  CurDate() AS `Report Date`
FROM
  items JOIN
  biblio ON items.biblionumber = biblio.biblionumber JOIN
  itemtypes ON itemtypes.itemtype = items.itype JOIN
  biblioitems ON biblioitems.biblioitemnumber = biblio.biblionumber JOIN
  biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
WHERE
  items.homebranch = 'BASEHOR' AND
  Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 DAY) AND
  Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 DAY) AND
  Day(items.dateaccessioned) = Day(Now() - INTERVAL 1 DAY)
GROUP BY
  items.biblionumber",,,,,,,,
R.003612,"/*
R.003612

----------

Name: LibraryIQ - Bibliographic File (deleted yesterday) - BASEHOR
Created by: George H Williams

----------

Group: LibraryIQ
     BASEHOR

Created on: 2021-11-08 11:06:08
Modified on: 2021-11-12 11:39:52
Date last run: 2022-04-20 00:10:02

----------

Public: 0
Expiry: 300

----------

#libraryiq #bibliographic #deleted #basehor #daily 

----------
*/

","SELECT
  deleteditems.biblionumber AS BibliographicRecordID,
  deletedbiblioitems.isbn AS ISBN,
  ExtractValue(deletedbiblio_metadata.metadata, '//datafield[@tag=""024""]/subfield[@code=""a""]') AS UPC,
  itemtypes.description AS `Material Type`,
  deletedbiblio.title AS Title,
  deletedbiblio.author AS Author,
  deletedbiblioitems.publicationyear AS `Publish Date`,
  deletedbiblioitems.publishercode AS Publisher,
  CurDate() AS `Report Date`
FROM
  deleteditems  JOIN
  deletedbiblio ON deletedbiblio.biblionumber = deleteditems.biblionumber
   JOIN
  itemtypes ON itemtypes.itemtype = deleteditems.itype  JOIN
  deletedbiblio_metadata ON deletedbiblio_metadata.biblionumber =
      deletedbiblio.biblionumber  JOIN
  deletedbiblioitems ON deletedbiblioitems.biblionumber =
      deletedbiblio.biblionumber
WHERE
  deleteditems.homebranch = 'BASEHOR' AND
  Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 DAY) AND
  Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 DAY) AND
  Day(deleteditems.timestamp) = Day(Now() - INTERVAL 1 DAY)
GROUP BY
  deleteditems.biblionumber",,,,,,,,
R.003613,"/*
R.003613

----------

Name: LibraryIQ - Item File (added yesterday) - BASEHOR
Created by: George H Williams

----------

Group: LibraryIQ
     BASEHOR

Created on: 2021-11-08 11:10:33
Modified on: 2021-11-12 10:44:39
Date last run: 2022-04-20 00:30:03

----------

Public: 0
Expiry: 300

----------

#libraryiq #item #added #basehor #daily

----------
*/

","SELECT
  items.itemnumber AS RecordID,
  items.barcode AS Barcode,
  items.biblionumber AS BibRecordID,
  biblioitems.isbn AS ISBN,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""024""]/subfield[@code=""a""]') AS UPC,
  Concat_Ws(' | ', 
    items.permanent_location, 
    itemtypes.description,
    ccodes.lib
  ) AS `Collection Code`,
  itemtypes.description AS `Material Type`,
  items.holdingbranch AS `Branch Location`,
  items.homebranch AS `Owning Branch`,
  items.itemcallnumber AS `Call Number`,
  locs.lib AS `Shelf Location`,
  items.dateaccessioned AS ItemCreationDate,
  Concat_Ws("" "", 
    nfl.lib, 
    damageds.lib, 
    losts.lib, 
    withdrawns.lib, 
    if(items.onloan > 0, ""Checked out"", """")
  ) AS `Current Item Status`,
  items.datelastborrowed AS `Last Checkout Date`,
  items.datelastseen AS `Check In Date`,
  items.onloan AS `Due Date`,
  statisticss.Count_datetime AS `YTD Circ Count`,
  (Coalesce(items.issues, 0) + Coalesce(items.renewals, 0)) AS `Lifetime Circ Count`,
  CurDate() AS `Report Date`
FROM
  items JOIN
  biblioitems ON items.biblioitemnumber = biblioitems.biblioitemnumber JOIN
  biblio_metadata ON biblio_metadata.biblionumber = items.biblionumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      items.ccode JOIN
  itemtypes ON itemtypes.itemtype = items.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'not_loan') nfl ON nfl.authorised_value =
      items.notforloan LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'damage') damageds ON
      damageds.authorised_value = items.damaged LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'lost') losts ON losts.authorised_value =
      items.itemlost LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'withdrawn') withdrawns ON
      withdrawns.authorised_value = items.withdrawn LEFT JOIN
  (SELECT
      statistics.itemnumber,
      Count(statistics.datetime) AS Count_datetime,
      statistics.type
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      statistics.datetime > CurDate() - INTERVAL 1 YEAR
    GROUP BY
      statistics.itemnumber) statisticss ON statisticss.itemnumber =
      items.itemnumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'loc') locs ON locs.authorised_value =
      items.permanent_location
WHERE
  items.homebranch = 'BASEHOR' AND
  Year(items.dateaccessioned) = Year(Now() - INTERVAL 1 DAY) AND
  Month(items.dateaccessioned) = Month(Now() - INTERVAL 1 DAY) AND
  Day(items.dateaccessioned) = Day(Now() - INTERVAL 1 DAY)
GROUP BY
  items.itemnumber",,,,,,,,
R.003614,"/*
R.003614

----------

Name: LibraryIQ - Item File (deleted yesterday) - BASEHOR
Created by: George H Williams

----------

Group: LibraryIQ
     BASEHOR

Created on: 2021-11-08 11:14:08
Modified on: 2021-11-12 10:42:30
Date last run: 2022-07-28 14:59:25

----------

Public: 0
Expiry: 300

----------

#libraryiq #item #deleted #basehor #daily

----------
*/

","SELECT
  deleteditems.itemnumber AS RecordID,
  deleteditems.barcode AS Barcode,
  deleteditems.biblionumber AS BibRecordID,
  Coalesce(biblioitems.isbn, deletedbiblioitems.isbn) AS ISBN,
  Coalesce(
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""024""]/subfield[@code=""a""]'), 
    ExtractValue(deletedbiblio_metadata.metadata, '//datafield[@tag=""024""]/subfield[@code=""a""]')
  ) AS UPC,
  Concat_Ws(' | ', 
    deleteditems.permanent_location, 
    itemtypes.description,
    ccodes.lib
  ) AS `Collection Code`,
  itemtypes.description AS `Material Type`,
  deleteditems.holdingbranch AS `Branch Location`,
  deleteditems.homebranch AS `Owning Branch`,
  deleteditems.itemcallnumber AS `Call Number`,
  locs.lib AS `Shelf Location`,
  deleteditems.dateaccessioned AS ItemCreationDate,
  Concat_Ws("" "", 
    nfl.lib, 
    damageds.lib, 
    losts.lib, 
    withdrawns.lib,
    if(deleteditems.onloan > 0, ""Checked out"", """")
  ) AS `Current Item Statusdeleteditems.onloan`,
  deleteditems.datelastseen AS `Check In Date`,
  deleteditems.onloan AS `Due Date`,
  statisticss.Count_datetime AS `YTD Circ Count`,
  (Coalesce(deleteditems.issues, 0) + Coalesce(deleteditems.renewals, 0)) AS `Lifetime Circ Count`,
  CurDate() AS `Report Date`
FROM
  deleteditems LEFT JOIN
  biblioitems ON deleteditems.biblioitemnumber = biblioitems.biblioitemnumber
  LEFT JOIN
  biblio_metadata ON biblio_metadata.biblionumber = deleteditems.biblionumber
  LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      deleteditems.ccode JOIN
  itemtypes ON itemtypes.itemtype = deleteditems.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'not_loan') nfl ON nfl.authorised_value =
      deleteditems.notforloan LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'damage') damageds ON
      damageds.authorised_value = deleteditems.damaged LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'lost') losts ON losts.authorised_value =
      deleteditems.itemlost LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'withdrawn') withdrawns ON
      withdrawns.authorised_value = deleteditems.withdrawn LEFT JOIN
  (SELECT
      statistics.itemnumber,
      Count(statistics.datetime) AS Count_datetime,
      statistics.type
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      statistics.datetime > CurDate() - INTERVAL 1 YEAR
    GROUP BY
      statistics.itemnumber) statisticss ON statisticss.itemnumber =
      deleteditems.itemnumber LEFT JOIN
  deletedbiblioitems ON deletedbiblioitems.biblioitemnumber =
      deleteditems.biblioitemnumber LEFT JOIN
  deletedbiblio_metadata ON deletedbiblio_metadata.biblionumber =
      deleteditems.biblionumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'loc') locs ON locs.authorised_value =
      deleteditems.permanent_location
WHERE
  deleteditems.homebranch = 'BASEHOR' AND
  Year(deleteditems.timestamp) = Year(Now() - INTERVAL 1 DAY) AND
  Month(deleteditems.timestamp) = Month(Now() - INTERVAL 1 DAY) AND
  Day(deleteditems.timestamp) = Day(Now() - INTERVAL 1 DAY)
GROUP BY
  deleteditems.itemnumber",,,,,,,,
R.003615,"/*
R.003615

----------

Name: LibraryIQ - Patron Data File (added yesterday) - BASEHOR
Created by: George H Williams

----------

Group: LibraryIQ
     BASEHOR

Created on: 2021-11-08 11:21:01
Modified on: 2021-11-12 10:44:42
Date last run: 2022-05-18 16:49:13

----------

Public: 0
Expiry: 300

----------

#libraryiq #borrowers #added #basehor #daily

----------
*/

","SELECT
  borrowers.borrowernumber AS UserID,
  borrowers.dateexpiry AS ExpirationDate,
  borrowers.branchcode AS `Patron Branch`,
  If(borrowers.debarred IS NOT NULL, ""Restricted"", """") AS Status,
  cko_count_ty.COUNT AS YTDYearCount,
  cko_count_py.COUNT AS PreviousYearCount,
  Concat(""NA"") AS LifetimeCount,
  Concat(""NA"") AS LastActivityDate,
  last_checkout.Min_datetime AS LastCheckoutDate,
  borrowers.dateenrolled AS RegistrationDate,
  borrowers.address AS StreetOne,
  borrowers.address2 AS AddressLn2,
  borrowers.city AS AddressCity,
  borrowers.state AS AddressState,
  borrowers.zipcode AS AddressZip,
  CurDate() AS `Report Date`
FROM
  borrowers LEFT JOIN
  (SELECT
      statistics.borrowernumber,
      count(*) AS COUNT
    FROM
      statistics
    WHERE
      statistics.datetime > CurDate() - INTERVAL 1 YEAR
    GROUP BY
      statistics.borrowernumber) cko_count_ty ON cko_count_ty.borrowernumber =
      borrowers.borrowernumber LEFT JOIN
  (SELECT
      statistics.borrowernumber,
      count(*) AS COUNT
    FROM
      statistics
    WHERE
      statistics.datetime BETWEEN CurDate() - INTERVAL 2 YEAR AND CurDate() - INTERVAL 1 YEAR
    GROUP BY
      statistics.borrowernumber) cko_count_py ON cko_count_py.borrowernumber =
      borrowers.borrowernumber LEFT JOIN
  (SELECT
      statistics.borrowernumber,
      Min(statistics.datetime) AS Min_datetime
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew')
    GROUP BY
      statistics.borrowernumber) last_checkout ON last_checkout.borrowernumber =
      borrowers.borrowernumber
WHERE
  borrowers.branchcode = 'BASEHOR' AND 
  Year(borrowers.dateenrolled) = Year(Now() - interval 1 day) AND
  Month(borrowers.dateenrolled) = Month(Now() - interval 1 day) AND
  Day(borrowers.dateenrolled) = Day(Now() - interval 1 day)
GROUP BY
  borrowers.borrowernumber",,,,,,,,
R.003616,"/*
R.003616

----------

Name: LibraryIQ - Patron Data File (deleted yesterday) - BASEHOR
Created by: George H Williams

----------

Group: LibraryIQ
     BASEHOR

Created on: 2021-11-08 11:24:37
Modified on: 2021-11-08 11:24:37
Date last run: 2022-04-20 00:45:04

----------

Public: 0
Expiry: 300

----------

#libraryiq #borrowers #deleted #basehor #daily

----------
*/

","SELECT
  deletedborrowers.borrowernumber AS UserID,
  deletedborrowers.dateexpiry AS ExpirationDate,
  deletedborrowers.branchcode AS `Patron Branch`,
  If(deletedborrowers.debarred IS NOT NULL, ""Restricted"", """") AS Status,
  cko_count_ty.COUNT AS YTDYearCount,
  cko_count_py.COUNT AS PreviousYearCount,
  Concat(""NA"") AS LifetimeCount,
  Concat(""NA"") AS LastActivityDate,
  last_checkout.Min_datetime AS LastCheckoutDate,
  deletedborrowers.dateenrolled AS RegistrationDate,
  deletedborrowers.address AS StreetOne,
  deletedborrowers.address2 AS AddressLn2,
  deletedborrowers.city AS AddressCity,
  deletedborrowers.state AS AddressState,
  deletedborrowers.zipcode AS AddressZip,
  CurDate() AS `Report Date`
FROM
  deletedborrowers LEFT JOIN
  (SELECT
      statistics.borrowernumber,
      count(*) AS COUNT
    FROM
      statistics
    WHERE
      statistics.datetime > CurDate() - INTERVAL 1 YEAR
    GROUP BY
      statistics.borrowernumber) cko_count_ty ON cko_count_ty.borrowernumber =
      deletedborrowers.borrowernumber LEFT JOIN
  (SELECT
      statistics.borrowernumber,
      count(*) AS COUNT
    FROM
      statistics
    WHERE
      statistics.datetime BETWEEN CurDate() - INTERVAL 2 YEAR AND CurDate() -
      INTERVAL 1 YEAR
    GROUP BY
      statistics.borrowernumber) cko_count_py ON cko_count_py.borrowernumber =
      deletedborrowers.borrowernumber LEFT JOIN
  (SELECT
      statistics.borrowernumber,
      Min(statistics.datetime) AS Min_datetime
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew')
    GROUP BY
      statistics.borrowernumber) last_checkout ON last_checkout.borrowernumber =
      deletedborrowers.borrowernumber
WHERE
  deletedborrowers.branchcode = 'BASEHOR' AND
  Year(deletedborrowers.updated_on) = Year(Now() - INTERVAL 1 DAY) AND
  Month(deletedborrowers.updated_on) = Month(Now() - INTERVAL 1 DAY) AND
  Day(deletedborrowers.updated_on) = Day(Now() - INTERVAL 1 DAY)
GROUP BY
  deletedborrowers.borrowernumber",,,,,,,,
R.003617,"/*
R.003617

----------

Name: LibraryIQ - Holds File (added yesterday) - BASEHOR
Created by: George H Williams

----------

Group: LibraryIQ
     BASEHOR

Created on: 2021-11-08 11:26:22
Modified on: 2021-11-12 10:44:44
Date last run: 2022-04-20 00:20:02

----------

Public: 0
Expiry: 300

----------

#libraryiq #requests #added #basehor #daily

----------
*/

","SELECT
  reserves.biblionumber AS BibRecordID,
  reserves.branchcode AS Branch,
  rcounts.Count_reserve_id AS `Number of Requests`,
  CurDate() AS `Report Date`
FROM
  reserves LEFT JOIN
  (SELECT
      reserves.biblionumber,
      Count(reserves.reserve_id) AS Count_reserve_id
    FROM
      reserves
    GROUP BY
      reserves.biblionumber) rcounts ON rcounts.biblionumber =
      reserves.biblionumber
WHERE
  reserves.branchcode = 'BASEHOR' AND
  Year(reserves.reservedate) = Year(Now() - INTERVAL 1 DAY) AND
  Month(reserves.reservedate) = Month(Now() - INTERVAL 1 DAY) AND
  Day(reserves.reservedate) = Day(Now() - INTERVAL 1 DAY)
GROUP BY
  reserves.biblionumber,
  reserves.branchcode,
  rcounts.Count_reserve_id",,,,,,,,
R.003618,"/*
R.003618

----------

Name: LibraryIQ - Holds File (cancelled/deleted/filled/expired yesterday) - BASEHOR
Created by: George H Williams

----------

Group: LibraryIQ
     BASEHOR

Created on: 2021-11-08 11:29:00
Modified on: 2021-11-08 11:29:00
Date last run: 2022-04-20 00:25:03

----------

Public: 0
Expiry: 300

----------

#libraryiq #requests #deleted #basehor #daily

----------
*/

","SELECT
  old_reserves.biblionumber AS BibRecordID,
  old_reserves.branchcode AS Branch,
  rcounts.Count_reserve_id AS `Number of Requests`,
  CurDate() AS `Report Date`
FROM
  old_reserves LEFT JOIN
  (SELECT
      old_reserves.biblionumber,
      Count(old_reserves.reserve_id) AS Count_reserve_id
    FROM
      old_reserves
    GROUP BY
      old_reserves.biblionumber) rcounts ON rcounts.biblionumber =
      old_reserves.biblionumber
WHERE
  old_reserves.branchcode = 'BASEHOR' AND
  Year(old_reserves.timestamp) = Year(Now() - INTERVAL 1 DAY) AND
  Month(old_reserves.timestamp) = Month(Now() - INTERVAL 1 DAY) AND
  Day(old_reserves.timestamp) = Day(Now() - INTERVAL 1 DAY)
GROUP BY
  old_reserves.biblionumber,
  old_reserves.branchcode,
  rcounts.Count_reserve_id",,,,,,,,
R.003619,"/*
R.003619

----------

Name: LibraryIQ - Bibliographic file (full) - BASEHOR
Created by: George H Williams

----------

Group: LibraryIQ
     BASEHOR

Created on: 2021-11-08 11:31:52
Modified on: 2021-12-01 12:46:20
Date last run: 2022-04-17 01:00:03

----------

Public: 0
Expiry: 300

----------

#libraryiq #bibliographic #full #basehor #weekly

----------
*/

","SELECT
  biblio.biblionumber AS BibliographicRecordID,
  biblioitems.isbn AS ISBN,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""024""]/subfield[@code=""a""]') AS UPC,
  itemtypess.description AS `Material Type`,
  biblio.title AS Title,
  biblio.author AS Author,
  biblioitems.publicationyear `Publish Date`,
  biblioitems.publishercode Publisher,
  CurDate() AS `Report Date`
FROM
  biblio JOIN
  biblioitems ON biblioitems.biblionumber = biblio.biblionumber JOIN
  biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber JOIN
  items ON items.biblionumber = biblio.biblionumber JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itemtypess ON itemtypess.itemtype = items.itype
WHERE
  items.homebranch = 'BASEHOR'
GROUP BY
  biblio.biblionumber",,,,,,,,
R.003620,"/*
R.003620

----------

Name: GHW - Pending suggestion alerts
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-11-09 00:16:43
Modified on: 2021-11-09 00:42:00
Date last run: 2022-10-03 14:26:49

----------

Public: 0
Expiry: 30

----------



----------
*/

","SELECT
  ""hidden"" AS class
FROM
  suggestions
WHERE
  suggestions.branchcode LIKE <<Enter branchcode>> AND
  suggestions.STATUS = 'asked'
GROUP BY
  suggestions.branchcode",,,,,,,,
R.003621,"/*
R.003621

----------

Name: GHW - Pending borrower updates
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-11-09 00:22:51
Modified on: 2021-11-09 00:32:45
Date last run: 2022-10-03 14:26:49

----------

Public: 0
Expiry: 30

----------



----------
*/

","SELECT
  ""hidden"" AS class
FROM
  borrower_modifications JOIN
  borrowers ON borrowers.borrowernumber = borrower_modifications.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Enter branchcode>>
GROUP BY
  borrowers.branchcode",,,,,,,,
R.003622,"/*
R.003622

----------

Name: GHW - Pending checkout notes
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-11-09 00:57:48
Modified on: 2021-11-09 01:35:49
Date last run: 2022-10-03 14:26:49

----------

Public: 0
Expiry: 30

----------



----------
*/

","SELECT
  ""hidden"" AS class,
  CONCAT(
    '<a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=3623&phase=Run+this+report&param_name=Enter+branchcode&sql_params=',
    issues.branchcode,
    '"" target=""_blank"">Notes for ', 
    issues.branchcode,
    '</a>'
  ) AS link
FROM
  issues
WHERE
  issues.branchcode LIKE <<Enter branchcode>> AND
  issues.note <> '' AND
  issues.noteseen = 0
GROUP BY
  issues.branchcode",,,,,,,,
R.003623,"/*
R.003623

----------

Name: GHW -Unseen report-a-problem notes by borrower branchcode
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-11-09 01:09:14
Modified on: 2021-11-09 01:40:13
Date last run: 2022-10-03 14:26:49

----------

Public: 0
Expiry: 300

----------

/cgi-bin/koha/circ/checkout-notes.pl

----------
*/

","SELECT
  Concat(
      '<a href=\""/cgi-bin/koha/circ/checkout-notes.pl"" target=""_blank"">Link to problem notes table</a>'
    ) AS LINK,
  Concat_Ws(""<br />"", 
    Concat(""Borrower BC: "", borrowers.cardnumber, ""<br />""), 
    Concat(
      '<a href=\""/cgi-bin/koha/circ/circulation.pl?borrowernumber=', 
      allissues.borrowernumber, 
      '\"" target=""_blank"">Link to patron record</a>'
    )
  ) AS PATRON,
  Concat_Ws(""<br />"", 
    Concat(""Item home: "", items.homebranch), Concat(""Location: "", items.location), 
    Concat(""Item type: "", items.itype), Concat(""Collection: "", items.ccode), 
    Concat(""Call number: "", items.itemcallnumber), Concat(""Author: "", biblio.author),
    Concat(""Title: "", biblio.title), 
    Concat(""Item BC: "", allissues.ITEM_BC, ""<br />""), 
    Concat(
      '<a href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', 
      items.biblionumber, 
      '\"" target=""_blank"">Link to title</a>'
    )
  ) AS ITEM_INFO,
  Concat_Ws(""<br />"", 
    Concat(""Checked out at: "", allissues.branchcode, ""<br />""), 
    Concat(""Checked out on: "", allissues.issuedate, ""<br />""), 
    Concat(""Due date: "", allissues.IN_OR_OUT)
  ) AS CHECKOUT_INFO,
  Concat_Ws(""<br />"", 
    Concat(""Note date: "", allissues.notedate, ""<br />""),
    Concat(""<ins>Note text:</ins><br /><br />"", allissues.note)
  ) AS NOTE_INFO
FROM
  (SELECT
     issues.note,
     issues.borrowernumber,
     issues.notedate,
     items.barcode AS ITEM_BC,
     If(issues.itemnumber <> 0, issues.date_due,
     ""<span style='color: red;'><ins>Item has already been returned</ins></span>"") AS IN_OR_OUT,
     issues.branchcode,
     issues.issuedate,
     issues.itemnumber,
     issues.noteseen
   FROM
     issues LEFT JOIN
     items ON issues.itemnumber = items.itemnumber
   WHERE
     issues.note IS NOT NULL AND
     issues.noteseen = 0) AS allissues JOIN
  borrowers ON allissues.borrowernumber = borrowers.borrowernumber LEFT JOIN
  items ON allissues.itemnumber = items.itemnumber JOIN
  biblio ON items.biblionumber = biblio.biblionumber
WHERE
  allissues.branchcode LIKE <<Enter branchcode>>
GROUP BY
  allissues.borrowernumber,
  items.itemnumber,
  allissues.branchcode
ORDER BY
  allissues.notedate DESC",,,,,,,,
R.003624,"/*
R.003624

----------

Name: GHW - Fish Heads
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-11-22 17:50:31
Modified on: 2021-11-29 10:09:50
Date last run: 2021-12-05 19:35:38

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  return_claims.id,
  issues.branchcode AS CHECKOUT_BRANCH,
  items.barcode,
  Concat_Ws('<br />', 
    items.homebranch, 
    locs.lib, 
    itemtypes.description,
    ccodes.lib, 
    Concat_Ws(' ', items.itemcallnumber, items.copynumber),
    biblio.author, 
    Concat_Ws(' ', biblio.title, biblio.medium, biblio.subtitle, biblioitems.number, biblio.part_name)
  ) AS ITEM_INFO,
  items.onloan,
  borrowers.cardnumber AS CLAIMS_RETURNED_BY,
  return_claims.notes,
  Concat_Ws(' ', staff.firstname, staff.surname) AS MARKED_CR_BY,
  return_claims.created_on,
  If(return_claims.borrowernumber <> currentissues.borrowernumber,
  'Item is checked out to a different borrower', '') AS CKO_TO_OTHER,
  If(return_claims.resolved_on IS NULL, 'Unresolved', Concat('Resolved on ',
  return_claims.resolved_on)) AS resolved_on,
  If(return_claims.resolved_on IS NULL, ""No"", ""Yes"")
FROM
  return_claims LEFT JOIN
  items ON return_claims.itemnumber = items.itemnumber INNER JOIN
  biblio ON items.biblionumber = biblio.biblionumber INNER JOIN
  biblioitems ON biblioitems.biblionumber = biblio.biblionumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') locs ON locs.authorised_value =
      items.permanent_location LEFT JOIN
  itemtypes ON itemtypes.itemtype = items.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE') ccodes ON ccodes.authorised_value =
      items.ccode LEFT JOIN
  issues ON return_claims.issue_id = issues.issue_id LEFT JOIN
  borrowers ON return_claims.borrowernumber = borrowers.borrowernumber LEFT JOIN
  borrowers staff ON staff.borrowernumber = return_claims.created_by LEFT JOIN
  issues currentissues ON currentissues.itemnumber = items.itemnumber
GROUP BY
  return_claims.id,
  return_claims.notes,
  return_claims.issue_id,
  return_claims.resolved_on,
  If(return_claims.resolved_on IS NULL, 'Unresolved', 'Resolved')
ORDER BY
  return_claims.id DESC",,,,,,,,
R.003625,"/*
R.003625

----------

Name: Report from Wiki
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-11-30 12:43:25
Modified on: 2021-11-30 12:43:25
Date last run: 2021-11-30 12:43:48

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT  ' ' AS Checkbox, b.title, b.author, i.itemcallnumber, i.barcode
FROM items i
JOIN biblio b USING (biblionumber)
WHERE i.homebranch=<<Branch|branches>> AND 
      b.author LIKE CONCAT(<<Author: Last Name, First Name>>,'%')
ORDER BY b.title",,,,,,,,
R.003626,"/*
R.003626

----------

Name: GHW - All items with a Damaged, Lost, or Withdrawn status at a library
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-12-01 11:00:54
Modified on: 2021-12-01 11:11:53
Date last run: 2021-12-06 20:16:00

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Lists all Damaged, Lost, or Withdrawn items at a library</p>
<ul><li>shows items that have those statuses at the time the report is run</li>
<li>at the library you specify</li>
<li>biblionumber and item number</li>
<li>Library, shelving location, item type, collection code, call number, author, and title.</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Notes go here.</p>
<p></p>
<p>When presented with the options:</p>
<ul>
<li>List only damaged items</li>
<li>List only lost items</li>
<li>List only withdrawn items</li>
</ul>
<p>you should only select 1 and leave the others at their defaults.  If you choose ""List only damaged items: Yes"" and ""List only lost items: Yes"" you will only see items that are both damaged and lost.</p>
</div>

----------
*/

","SELECT
  Concat(
    '<a class=""btn btn-default noprint"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', 
    items.biblionumber, 
    '\"" target=""_blank"">Go to title</a>'
  ) AS LINK_TO_TITLE,
  items.itemnumber,
  Concat(""-"", items.barcode, ""-"") AS BARCODE,
  items.homebranch,
  If(
    items.permanent_location = items.location, 
    permlocs.lib, 
    Concat_Ws("" "", permlocs.lib, "" ("", locs.lib, "")"")
  ) AS LOCATION,
  itemtypess.description AS ITYPE,
  ccodes.lib AS CCODE,
  If(items.copynumber IS NULL, items.itemcallnumber, Concat_Ws("""", items.itemcallnumber, "" (copy: "", items.copynumber, "")"")) AS CALL_NUMBER,
  biblio.author,
  Concat_Ws("" "", biblio.title, biblio.medium, biblio.subtitle, biblioitems.number, biblio.part_name) AS FULL_TITLE,
  nfl.lib AS NOT_FOR_LOAN,
  If(items.damaged_on IS NULL, damageds.lib, Concat_Ws("""", damageds.lib, "" on "", items.damaged_on)) AS DAMAGED,
  If(items.itemlost_on IS NULL, losts.lib, Concat_Ws("""", losts.lib, "" on "", items.itemlost_on)) AS LOST,
  If(items.withdrawn_on IS NULL, withdrawns.lib, Concat_Ws("""", withdrawns.lib, "" on "", items.withdrawn_on)) AS WITHDRAWN,
  items.onloan,
  Concat(
    '<a class=""btn btn-default noprint"" href=\""/cgi-bin/koha/cataloguing/additem.pl?op=edititem&biblionumber=', 
    items.biblionumber, 
    '&itemnumber=', 
    items.itemnumber, 
    '#edititem\"" target=""_blank"">Edit item</a>'
  ) AS EDIT_ITEM
FROM
  items JOIN
  biblio ON items.biblionumber = biblio.biblionumber JOIN
  biblioitems ON biblioitems.biblionumber = items.biblionumber LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.imageurl
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') permlocs ON
      permlocs.authorised_value = items.permanent_location LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.imageurl
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') locs ON locs.authorised_value =
      items.location LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itemtypess ON itemtypess.itemtype = items.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.imageurl
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE') ccodes ON ccodes.authorised_value =
      items.ccode LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.imageurl
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'NOT_LOAN') nfl ON nfl.authorised_value =
      items.notforloan LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.imageurl
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'DAMAGED') damageds ON
      damageds.authorised_value = items.damaged LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.imageurl
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOST') losts ON losts.authorised_value =
      items.itemlost LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.imageurl
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'WITHDRAWN') withdrawns ON
      withdrawns.authorised_value = items.withdrawn
WHERE
  items.homebranch LIKE <<Choose your library|LBRANCH>> AND
  If(items.damaged + 0 = 0, ""No"", ""Yes"") LIKE <<List only damaged items|ZYES_NO>> AND
  If(items.itemlost + 0 = 0, ""No"", ""Yes"") LIKE <<List only lost items|ZYES_NO>> AND
  If(items.withdrawn + 0 = 0, ""No"", ""Yes"") LIKE <<List only withdrawn items|ZYES_NO>> 
GROUP BY
  items.biblionumber,
  items.itemnumber
ORDER BY
  items.homebranch,
  permlocs.lib,
  ITYPE,
  CCODE,
  items.itemcallnumber,
  biblio.author,
  FULL_TITLE",,,,,,,,
R.003627,"/*
R.003627

----------

Name: GHW - Checkouts and renewals by date range at a library
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-12-05 00:58:23
Modified on: 2021-12-05 02:24:33
Date last run: 2021-12-09 13:37:24

----------

Public: 0
Expiry: 300

----------

Work in progress

----------
*/

","SELECT
  branches_dates.branchname,
  branches_dates.dates,
  Coalesce(stats.CKO_RENEW, 0) AS CKO_RENEW
FROM
  (SELECT
     branches.branchcode,
     branches.branchname,
     Date_Format(statistics.datetime, ""%Y.%m.%d"") AS dates
   FROM
     statistics,
     branches
   WHERE
     branches.branchcode LIKE <<Choose a library|ZBRAN>> AND
     statistics.datetime BETWEEN <<Between the beginning of the day on date 1 (no more than 2 years ago)|date>> AND (<<the end of the day on date 2|date>> + interval 1 day)
   GROUP BY
     branches.branchcode,
     branches.branchname,
     Date_Format(statistics.datetime, ""%Y.%m.%d"")
   ORDER BY
     dates) branches_dates LEFT JOIN
  (SELECT
     Coalesce(statistics.branch, ""NEKLS"") AS branch,
     Date_Format(statistics.datetime, ""%Y.%m.%d"") AS dates,
     Count(*) AS CKO_RENEW
   FROM
     statistics LEFT JOIN
     (SELECT
        items.itemnumber,
        If(items.permanent_location LIKE ""%ADULT%"", 
          ""ADULT"",
          If(items.permanent_location LIKE ""%YA%"", 
            ""L_YA"",
            If(items.permanent_location LIKE ""%CHILD%"", 
              ""CHILDRENS"",
              If(items.permanent_location = ""CATALOGING"", 
                ""OTHER"",
                If(items.permanent_location = ""PROC"", 
                  ""OTHER"",
                  If(items.permanent_location IS NULL, 
                    ""OTHER"",
                    If(items.permanent_location = """", 
                      ""OTHER"", 
                      items.permanent_location
                    )
                  )
                )
              )
            )
          )
        ) AS permanent_location,
        items.itype,
        items.ccode
      FROM
        items
      WHERE
        If(items.permanent_location LIKE ""%ADULT%"", 
          ""ADULT"",
          If(items.permanent_location LIKE ""%YA%"", 
            ""L_YA"",
            If(items.permanent_location LIKE ""%CHILD%"", 
              ""CHILDRENS"",
              If(items.permanent_location = ""CATALOGING"", 
                ""OTHER"",
                If(items.permanent_location = ""PROC"", 
                  ""OTHER"",
                  If(items.permanent_location IS NULL, 
                    ""OTHER"",
                    If(items.permanent_location = """", 
                      ""OTHER"", 
                      items.permanent_location
                    )
                  )
                )
              )
            )
          )
        ) LIKE <<Choose a shelving location|LLOC>>
      UNION
      SELECT
        deleteditems.itemnumber,
        If(deleteditems.permanent_location = ""BALDADULT"", 
          ""ADULT"",
          If(deleteditems.permanent_location = ""LVPLADULT"", 
            ""ADULT"",
            If(deleteditems.permanent_location = ""PAOLAADULT"", 
              ""ADULT"",
              If(deleteditems.permanent_location LIKE ""%CHILD%"", 
                ""CHILDRENS"",
                If(deleteditems.permanent_location = ""YOUNGADULT"", 
                  ""L_YA"",
                  If(deleteditems.permanent_location LIKE ""%YA%"", 
                    ""L_YA"",
                    If(deleteditems.permanent_location = ""CATALOGING"", 
                      ""OTHER"",
                      If(deleteditems.permanent_location = ""PROC"", 
                        ""OTHER"",
                        If(deleteditems.permanent_location LIKE ""CART"", 
                          ""OTHER"",
                          If(deleteditems.permanent_location IS NULL, 
                            ""OTHER"",
                            If(deleteditems.permanent_location LIKE """", 
                              ""OTHER"", 
                              deleteditems.permanent_location
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        ) AS permanent_location,
        deleteditems.itype,
        deleteditems.ccode
      FROM
        deleteditems
      WHERE 
        If(deleteditems.permanent_location = ""BALDADULT"", 
          ""ADULT"",
          If(deleteditems.permanent_location = ""LVPLADULT"", 
            ""ADULT"",
            If(deleteditems.permanent_location = ""PAOLAADULT"", 
              ""ADULT"",
              If(deleteditems.permanent_location LIKE ""%CHILD%"", 
                ""CHILDRENS"",
                If(deleteditems.permanent_location = ""YOUNGADULT"", 
                  ""L_YA"",
                  If(deleteditems.permanent_location LIKE ""%YA%"", 
                    ""L_YA"",
                    If(deleteditems.permanent_location = ""CATALOGING"", 
                      ""OTHER"",
                      If(deleteditems.permanent_location = ""PROC"", 
                        ""OTHER"",
                        If(deleteditems.permanent_location LIKE ""CART"", 
                          ""OTHER"",
                          If(deleteditems.permanent_location IS NULL, 
                            ""OTHER"",
                            If(deleteditems.permanent_location LIKE """", 
                              ""OTHER"", 
                              deleteditems.permanent_location
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        ) LIKE <<Choose a shelving location|LLOC>>
      ) itemss ON itemss.itemnumber = statistics.itemnumber
   WHERE
     (statistics.type = 'issue' OR
         statistics.type = 'renew') AND
     If(
       statistics.location = ""CART"", 
       Coalesce(itemss.permanent_location, ""OTHER""), 
       Coalesce(statistics.location, ""OTHER"")
     ) LIKE <<Choose a shelving location|LLOC>> AND
     Coalesce(statistics.itemtype, ""PUNC"") LIKE <<Choose an item type|LITYPES>> AND
     Coalesce(statistics.ccode, ""XXX"") LIKE <<Choose a collection code|LCCODE>> AND
     Coalesce(statistics.branch, ""NEKLS"") LIKE <<Choose a library|ZBRAN>> AND
     statistics.datetime BETWEEN <<Between the beginning of the day on date 1 (no more than 2 years ago)|date>> AND (<<the end of the day on date 2|date>> + interval 1 day)
   GROUP BY
     Coalesce(statistics.branch, ""NEKLS""),
     Date_Format(statistics.datetime, ""%Y.%m.%d"")) stats ON
      stats.dates = branches_dates.dates AND
      stats.branch = branches_dates.branchcode
GROUP BY
  branches_dates.branchname,
  branches_dates.dates
ORDER BY
  branches_dates.branchname,
  branches_dates.dates",,,,,,,,
R.003628,"/*
R.003628

----------

Name: Test replacement
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-12-17 09:54:22
Modified on: 2021-12-17 10:45:45
Date last run: 2021-12-17 10:47:07

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branchess.branchname,
  fees.date AS FEE_CREATED_ON,
  fees.credit_type_code,
  fees.debit_type_code,
  fees.accountlines_id,
  fees.issue_id,
  Format(fees.amountoutstanding, 2) AS AMOUNT_OUTSTANDING,
  fees.note,
  fees.timestamp FEE_UPDATED_ON
FROM
  (SELECT
      branches.branchname,
      branches.branchcode
    FROM
      branches
    UNION
    SELECT
      ' All branches' AS branchname,
      '--' AS branchcode) branchess JOIN
  (SELECT
      accountlines.accountlines_id,
      accountlines.issue_id,
      accountlines.borrowernumber,
      accountlines.date,
      accountlines.credit_type_code,
      accountlines.debit_type_code,
      accountlines.status,
      accountlines.amountoutstanding,
      accountlines.timestamp,
      accountlines.note,
      accountlines.manager_id,
      Coalesce(Coalesce(issues.branchcode, old_issues.branchcode),
      '--') AS branchcode
    FROM
      accountlines LEFT JOIN
      issues ON issues.issue_id = accountlines.issue_id LEFT JOIN
      old_issues ON old_issues.issue_id = accountlines.issue_id
    WHERE
      accountlines.amountoutstanding > 0 AND
      accountlines.borrowernumber IS NOT NULL
    GROUP BY
      accountlines.accountlines_id,
      accountlines.credit_type_code,
      accountlines.note
    UNION
    SELECT
      accountlines.accountlines_id,
      accountlines.issue_id,
      accountlines.borrowernumber,
      accountlines.date,
      accountlines.credit_type_code,
      accountlines.debit_type_code,
      accountlines.status,
      accountlines.amountoutstanding,
      accountlines.timestamp,
      accountlines.note,
      accountlines.manager_id,
      Coalesce(staff.branchcode, '--') AS branchcode
    FROM
      accountlines LEFT JOIN
      issues ON issues.issue_id = accountlines.issue_id LEFT JOIN
      old_issues ON old_issues.issue_id = accountlines.issue_id LEFT JOIN
      borrowers staff ON staff.borrowernumber = accountlines.manager_id
    WHERE
      accountlines.amountoutstanding > 0 AND
      accountlines.manager_id IS NOT NULL AND
      accountlines.borrowernumber IS NOT NULL
    GROUP BY
      accountlines.accountlines_id,
      accountlines.credit_type_code,
      accountlines.note
    UNION
    SELECT
      accountlines.accountlines_id,
      accountlines.issue_id,
      accountlines.borrowernumber,
      accountlines.date,
      accountlines.credit_type_code,
      accountlines.debit_type_code,
      accountlines.status,
      accountlines.amountoutstanding,
      accountlines.timestamp,
      accountlines.note,
      accountlines.manager_id,
      Coalesce(borrowers.branchcode, '--') AS branchcode1
    FROM
      accountlines LEFT JOIN
      issues ON issues.issue_id = accountlines.issue_id LEFT JOIN
      old_issues ON old_issues.issue_id = accountlines.issue_id LEFT JOIN
      borrowers staff ON staff.borrowernumber = accountlines.manager_id
      LEFT JOIN
      borrowers ON borrowers.borrowernumber = accountlines.borrowernumber
    WHERE
      accountlines.amountoutstanding > 0 AND
      Coalesce(issues.branchcode, old_issues.branchcode) IS NULL AND
      staff.branchcode IS NULL AND
      accountlines.borrowernumber IS NOT NULL
    GROUP BY
      accountlines.accountlines_id,
      accountlines.credit_type_code,
      accountlines.note) fees ON fees.branchcode = branchess.branchcode
WHERE
  branchess.branchcode LIKE <<Choose your library|ZBRAN>> AND
  fees.debit_type_code LIKE <<Debit type|LDEBITTYPE>>
GROUP BY
  fees.accountlines_id
ORDER BY
  branchess.branchname",,,,,,,,
R.003629,"/*
R.003629

----------

Name: GHW - BONNERSPGS patrons without Kanopy access
Created by: George H Williams

----------

Group:  BONNERSPGS
     -

Created on: 2021-12-21 20:25:13
Modified on: 2021-12-21 20:25:13
Date last run: 2021-12-23 09:37:30

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows patrons with a BONNERSPGS home library but without a ""Kanopy (BONNERSPGS): Allowed . . ."" borrower attribute.</p>
<ul><li>Shows borrwoers that currently lack this attribute</li>
<li>grouped by categorycode and borrowernumber</li>
<li>sorted by library card number</li>
<li>links to the borrower account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Should be run monthly at BONNERSPGS so the attribute can be added to those accounts</p>
<p><a href=""https://northeast-kansas-library-system.github.io/next/branches/BONNERSPGS/kanopy.html#running-reports-to-manually-update-kanopy-permission"" target=""_blank"">Go to the training information for the Kanopy (BONNERSPGS) extended borrower attribute.</a></p>
<p></p>
<p class= ""notetags"" style=""display: none;"">kanopy; patron-extended-attributes; BONNERSPGS;</p>
</div>

----------
*/

","SELECT
  Concat(
    '<a href=""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=', 
    borrowers.borrowernumber, 
    '&step=4"" target=""_blank"">Go to patron account</a>'
  ) AS LINK,
  borrowers.cardnumber
FROM
  borrowers
  LEFT JOIN (
    SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute
    FROM
      borrower_attributes
    WHERE
      borrower_attributes.code = 'BONKANOPY'
  ) kanopy
    ON kanopy.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode = 'BONNERSPGS' AND
  kanopy.attribute IS NULL AND
  borrowers.categorycode <> 'STAFF' AND
  borrowers.categorycode <> ""ILL"" AND
  borrowers.categorycode <> ""INHOUSE"" AND
  borrowers.categorycode <> ""STATISTIC"" AND
  borrowers.othernames <> 'SIP2 test account'
GROUP BY
  borrowers.categorycode,
  borrowers.borrowernumber
ORDER BY
  borrowers.cardnumber",,,,,,,,
R.003630,"/*
R.003630

----------

Name: GHW - Non-BONNERSPGS patrons with BONNERSPGS Kanopy access 
Created by: George H Williams

----------

Group:  BONNERSPGS
     -

Created on: 2021-12-21 20:25:19
Modified on: 2021-12-21 20:25:19
Date last run: 2022-07-08 19:45:15

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows patrons with a ""Kanopy (BONNERSPGS): Allowed . . ."" patron attribute but without a BONNERSPGS homebranch</p>
<ul><li>Shows borrwoers that currently have this attribute</li>
<li>grouped by categorycode and borrowernumber</li>
<li>sorted by library card number</li>
<li>links to the borrower account</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Should be run monthly at BONNERSPGS so the attribute can be removed from those accounts</p>
<p><a href=""https://northeast-kansas-library-system.github.io/next/branches/BONNERSPGS/kanopy.html#running-reports-to-manually-update-kanopy-permission"" target=""_blank"">Go to the training information for the Kanopy (BONNERSPGS) extended borrower attribute.</a></p>
<p></p>
<p class= ""notetags"" style=""display: none;"">kanopy; patron-extended-attributes; BASEHOR;</p>
</div>

----------
*/

","SELECT
  Concat(
    '<a href=""/cgi-bin/koha/members/memberentry.pl?op=modify&borrowernumber=', 
    borrowers.borrowernumber, 
    '&step=4"" target=""_blank"">Go to patron account</a>'
  ) AS LINK,
  borrowers.cardnumber
FROM
  borrowers
  LEFT JOIN (
    SELECT
      borrower_attributes.borrowernumber,
      borrower_attributes.code,
      borrower_attributes.attribute
    FROM
      borrower_attributes
    WHERE
      borrower_attributes.code = 'BONKANOPY'
  ) kanopy
    ON kanopy.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode <> 'BONNERSPGS' AND
  kanopy.attribute = 'BONNERSPGS' AND
  borrowers.othernames <> 'SIP2 test account'
GROUP BY
  borrowers.categorycode,
  borrowers.borrowernumber
ORDER BY
  borrowers.cardnumber",,,,,,,,
R.003631,"/*
R.003631

----------

Name: GHW - items received from transfer
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-12-22 15:50:13
Modified on: 2021-12-23 08:41:07
Date last run: 2022-06-16 09:47:05

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branchtransfers.tobranch,
  Date_Format(branchtransfers.datearrived, ""%Y-%m-%d--%H:%i"") AS datearrived,
  Count(branchtransfers.branchtransfer_id) AS Count_branchtransfer_id
FROM
  branchtransfers
WHERE
  branchtransfers.tobranch Like <<Choose your library|branches>> AND
  branchtransfers.datearrived BETWEEN <<Between the start of the day on date1|date>> AND (<<the end of the day on date2|date>> + interval 1 day)
GROUP BY
  branchtransfers.tobranch,
  Date_Format(branchtransfers.datearrived, ""%Y-%m-%d--%H:%i"")
WITH ROLLUP",,,,,,,,
R.003632,"/*
R.003632

----------

Name: Count of overdues
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-12-29 18:01:14
Modified on: 2021-12-29 18:01:14
Date last run: -

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  issues.branchcode,
  Date_Format(issues.date_due, ""%Y.%m.%d""),
  issues.issue_id,
  issues.date_due,
  issues.returndate
FROM
  issues
WHERE
  issues.date_due <= Concat(Year(Now() - INTERVAL 1 MONTH), ""-"", Month(Now() -
  INTERVAL 1 MONTH), ""-01"")
GROUP BY
  issues.branchcode,
  issues.issue_id
UNION
SELECT
  old_issues.branchcode,
  Date_Format(old_issues.date_due, ""%Y.%m.%d""),
  old_issues.issue_id,
  old_issues.date_due,
  old_issues.returndate
FROM
  old_issues
WHERE
  old_issues.date_due <= Concat(Year(Now() - INTERVAL 1 MONTH), ""-"",
  Month(Now() - INTERVAL 1 MONTH), ""-01"") AND
  old_issues.returndate > Concat(Year(Now() - INTERVAL 1 MONTH), ""-"",
  Month(Now() - INTERVAL 1 MONTH), ""-01"")
GROUP BY
  old_issues.branchcode,
  old_issues.issue_id
ORDER BY
  branchcode",,,,,,,,
R.003636,"/*
R.003636

----------

Name: GHW - Circ rules test pattern
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-01-04 23:10:19
Modified on: 2022-01-07 21:54:29
Date last run: 2022-01-17 22:04:24

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  circulation_rules.id,
  Coalesce(circulation_rules.branchcode, "" All""),
  Coalesce(circulation_rules.categorycode, "" All""),
  Coalesce(circulation_rules.itemtype, "" All""),
  circulation_rules.rule_name,
  circulation_rules.rule_value
FROM
  circulation_rules
WHERE
  Coalesce(circulation_rules.branchcode, "" All"") LIKE <<branch|branches:all>> AND
  Coalesce(circulation_rules.categorycode, "" All"") LIKE <<borrower category|categorycode:all>> AND
  Coalesce(circulation_rules.itemtype, "" All"") LIKE <<item type|itemtypes:all>> AND
  circulation_rules.rule_name LIKE ""%""
GROUP BY
  circulation_rules.id,
  Coalesce(circulation_rules.branchcode, "" All""),
  Coalesce(circulation_rules.categorycode, "" All""),
  Coalesce(circulation_rules.itemtype, "" All""),
  circulation_rules.rule_name,
  circulation_rules.rule_value
ORDER BY
  Coalesce(circulation_rules.branchcode, "" All""),
  Coalesce(circulation_rules.categorycode, "" All""),
  Coalesce(circulation_rules.itemtype, "" All""),
  circulation_rules.rule_name,
  circulation_rules.rule_value",,,,,,,,
R.003637,"/*
R.003637

----------

Name: 2022-cleanup
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-01-05 00:03:42
Modified on: 2022-01-07 08:41:26
Date last run: 2022-01-14 14:14:39

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  items.itemnumber,
  items.itype
FROM
  items
WHERE
  items.itype = <<Choose item type|itemtypes>>",,,,,,,,
R.003638,"/*
R.003638

----------

Name: 2022 cleanup - biblio type
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-01-05 00:33:22
Modified on: 2022-01-26 21:36:28
Date last run: 2022-01-26 21:36:32

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  biblio_metadata.biblionumber,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""c""]') AS metadata,
  Group_Concat(DISTINCT items.itype) AS Group_Concat_itype,
  Group_Concat(DISTINCT items.ccode) AS Group_Concat_ccode
FROM
  biblio_metadata JOIN
  items ON items.biblionumber = biblio_metadata.biblionumber
WHERE
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""c""]') = 'AUDIOBOOK' OR
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""c""]') = 'AUDIOBOOK'
GROUP BY
  biblio_metadata.biblionumber",,,,,,,,
R.003639,"/*
R.003639

----------

Name: GHW - Items potentially shelved at the wrong library
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-01-05 11:09:50
Modified on: 2022-03-29 12:16:48
Date last run: 2022-03-29 13:30:49

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  items.itemnumber,
  items.barcode,
  items.homebranch,
  items.holdingbranch,
  permanent_location.lib AS PERM_LOCATION,
  current_location.lib AS LOCATION,
  itypes.description AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber,
  items.copynumber,
  biblio.author,
  Concat_Ws("" "", 
    biblio.title, 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')
  ) AS FULL_TITLE,
  ""2"" AS SORTING
FROM
  items JOIN
  biblio ON items.biblionumber = biblio.biblionumber JOIN
  biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
  LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') permanent_location ON
      permanent_location.authorised_value = items.permanent_location LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') current_location ON
      current_location.authorised_value = items.location LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itypes ON itypes.itemtype = items.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE') ccodes ON ccodes.authorised_value =
      items.ccode LEFT JOIN
  (SELECT
      branchtransfers.branchtransfer_id,
      branchtransfers.itemnumber,
      branchtransfers.datesent,
      branchtransfers.frombranch,
      branchtransfers.datearrived,
      branchtransfers.tobranch,
      branchtransfers.comments,
      branchtransfers.reason
    FROM
      branchtransfers
    WHERE
      branchtransfers.datearrived IS NULL) transfers ON transfers.itemnumber =
      items.itemnumber LEFT JOIN
  (SELECT
      reserves.reserve_id,
      reserves.borrowernumber,
      reserves.reservedate,
      reserves.biblionumber,
      reserves.branchcode,
      reserves.notificationdate,
      reserves.reminderdate,
      reserves.cancellationdate,
      reserves.reservenotes,
      reserves.priority,
      reserves.found,
      reserves.timestamp,
      reserves.itemnumber,
      reserves.waitingdate,
      reserves.expirationdate,
      reserves.lowestPriority,
      reserves.suspend,
      reserves.suspend_until,
      reserves.itemtype,
      reserves.item_level_hold
    FROM
      reserves
    WHERE
      reserves.found = 'W') onhold ON onhold.itemnumber = items.itemnumber
WHERE
  items.holdingbranch = <<Choose your library|branches>> AND
  items.homebranch <> items.holdingbranch AND
  items.itemlost < 1 AND
  items.withdrawn < 1 AND
  transfers.branchtransfer_id IS NULL AND
  items.onloan IS NULL AND
  onhold.reserve_id IS NULL
GROUP BY
  items.itemnumber
UNION
SELECT
  items.itemnumber,
  items.barcode,
  items.homebranch,
  items.holdingbranch,
  permanent_location.lib AS PERM_LOCATION,
  current_location.lib AS LOCATION,
  itypes.description AS ITYPE,
  ccodes.lib AS CCODE,
  items.itemcallnumber,
  items.copynumber,
  biblio.author,
  Concat_Ws("" "", 
    biblio.title, 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),  
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),  
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]'), 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]')
  ) AS FULL_TITLE,
  ""4"" AS SORTING
FROM
  items JOIN
  biblio ON items.biblionumber = biblio.biblionumber JOIN
  biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
  LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') permanent_location ON
      permanent_location.authorised_value = items.permanent_location LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') current_location ON
      current_location.authorised_value = items.location LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itypes ON itypes.itemtype = items.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE') ccodes ON ccodes.authorised_value =
      items.ccode LEFT JOIN
  (SELECT
      branchtransfers.branchtransfer_id,
      branchtransfers.itemnumber,
      branchtransfers.datesent,
      branchtransfers.frombranch,
      branchtransfers.datearrived,
      branchtransfers.tobranch,
      branchtransfers.comments,
      branchtransfers.reason
    FROM
      branchtransfers
    WHERE
      branchtransfers.datearrived IS NULL) transfers ON transfers.itemnumber =
      items.itemnumber LEFT JOIN
  (SELECT
      reserves.reserve_id,
      reserves.borrowernumber,
      reserves.reservedate,
      reserves.biblionumber,
      reserves.branchcode,
      reserves.notificationdate,
      reserves.reminderdate,
      reserves.cancellationdate,
      reserves.reservenotes,
      reserves.priority,
      reserves.found,
      reserves.timestamp,
      reserves.itemnumber,
      reserves.waitingdate,
      reserves.expirationdate,
      reserves.lowestPriority,
      reserves.suspend,
      reserves.suspend_until,
      reserves.itemtype,
      reserves.item_level_hold
    FROM
      reserves
    WHERE
      reserves.found = 'W') onhold ON onhold.itemnumber = items.itemnumber
WHERE
  items.homebranch = <<Choose your library|branches>> AND
  items.homebranch <> items.holdingbranch AND
  items.itemlost < 1 AND
  items.withdrawn < 1 AND
  transfers.branchtransfer_id IS NULL AND
  items.onloan IS NULL AND
  onhold.reserve_id IS NULL
GROUP BY
  items.itemnumber
UNION
SELECT
  "" Owned by your library - at another library"" AS Column1,
  ""-"" AS Column2,
  ""-"" AS Column3,
  ""-"" AS Column4,
  ""-"" AS Column5,
  ""-"" AS Column6,
  ""-"" AS Column7,
  ""-"" AS Column8,
  ""-"" AS Column9,
  ""-"" AS Column10,
  ""-"" AS Column11,
  ""-"" AS Column12,
  ""3"" AS SORTING
UNION
SELECT
  "" At your library owned - owned by another library"" AS Column1,
  ""-"" AS Column2,
  ""-"" AS Column3,
  ""-"" AS Column4,
  ""-"" AS Column5,
  ""-"" AS Column6,
  ""-"" AS Column7,
  ""-"" AS Column8,
  ""-"" AS Column9,
  ""-"" AS Column10,
  ""-"" AS Column11,
  ""-"" AS Column12,
  ""1"" AS SORTING
ORDER BY
  SORTING,
  holdingbranch,
  PERM_LOCATION,
  ITYPE,
  CCODE,
  itemcallnumber,
  copynumber,
  author,
  FULL_TITLE",,,,,,,,
R.003640,"/*
R.003640

----------

Name: COPY - GHW - Overdue count at a library - during the previous calendar month - LEAVENWRTH
Created by: Bywater bwssupport

----------

Group: -
     -

Created on: 2022-01-05 13:46:54
Modified on: 2022-01-05 13:47:26
Date last run: 2022-01-05 13:47:34

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo>
<p>Counts the number of overdue items that were returned during the previous calendar month grouped by the number of days the item was overdue.</p>
<ul><li>Shows overdue items returned in the previous calendar month.</li>
<li>shows overdue items checked out at LEAVENWRTH.</li>
<li>grouped and sorted by the check-out library and the number of days the item was late when it was checked in</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Starting in January of 2017, all NExpress items that were overdue more than 45 days began to be moved from being checked-out to being checked in with a ""Lost (overdue more than 45 days)"" status unless the items were checked out to patrons in certain categories (i.e. student/teacher/inhouse, etc).  Please take this into consideration when looking at the number of overdue items that are checked in when they are 46 days overdue.  These items will almost always be items that were automatically changed from overdue to ""Lost.""</p>
<p></p>
<p><a href=""/cgi-bin/koha/reports/guided_reports.pl?reports=2950&phase=Run%20this%20report""  target=""_blank"">Click here to run in a new window</a></p>
</div>

----------
*/

","SELECT
  old_issues.branchcode,
  LPad(DateDiff(old_issues.returndate, old_issues.date_due), 3, 0) AS DAYS_LATE,
  Count(DISTINCT old_issues.issue_id) AS COUNT
FROM
  old_issues
WHERE
  old_issues.branchcode LIKE ""LEAVENWRTH"" AND
  Month(old_issues.returndate) = Month(<<Date|date>>) - INTERVAL 1 MONTH) AND
  Year(old_issues.returndate) = Year(<<Date|date>>) - INTERVAL 1 MONTH) AND
  old_issues.date_due < old_issues.returndate
GROUP BY
  old_issues.branchcode,
  DateDiff(old_issues.returndate, old_issues.date_due)
UNION
SELECT
  "" Month"" AS Column1,
  Concat(Year(<<Date|date>>) - INTERVAL 1 MONTH), "" - "", Month(<<Date|date>>) - INTERVAL 1 MONTH)) AS Column2,
  NULL AS Column3
ORDER BY
  branchcode,
  DAYS_LATE,
  COUNT",,,,,,,,
R.003641,"/*
R.003641

----------

Name: GHW - Basic counts for cleanup
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-01-10 16:26:23
Modified on: 2022-01-10 16:26:23
Date last run: 2022-02-15 21:57:28

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  items.itype,
  items.ccode,
  Count(DISTINCT items.itemnumber) AS Count_itemnumber
FROM
  items
GROUP BY
  items.itype,
  items.ccode",,,,,,,,
R.003642,"/*
R.003642

----------

Name: GHW - ADMINREPORT - GMD Cleanup
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-01-19 17:03:30
Modified on: 2022-01-19 20:24:59
Date last run: 2022-01-23 01:51:56

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Trim(Replace(Replace(Replace(Replace(Replace(biblio.medium, '/', ''), ':', ''), ';', ''), '.', ''), '=', '')) AS MEDIUM,
  Count(Distinct biblio.biblionumber) AS COUNT,
  CONCAT(
  '<a class=""btn btn-default"" href=\""/cgi-bin/koha/reports/guided_reports.pl?reports=3643&phase=Run+this+report&param_name=Enter+search+term&sql_params=', 
  Replace(Replace(Replace(Replace(Replace(Replace(Replace(Replace(Trim(Replace(Replace(Replace(Replace(Replace(biblio.medium, '/', ''), ':', ''), ';', ''), '.', ''), '=', '')), ' ', '%20'), '[', '%5B'), ']', '%5D'), '{', '%7B'), '}', '7D'), '#', '%23'), '(', '%28'), ')', '%29'),
  '"" target=""_blank"">Run report 3643</a>') AS LINK
FROM
  biblio
GROUP BY
  Trim(Replace(Replace(Replace(Replace(Replace(biblio.medium, '/', ''), ':', ''), ';', ''), '.', ''), '=', ''))",,,,,,,,
R.003643,"/*
R.003643

----------

Name: GHW - ADMINREPORT - GMD search
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-01-19 17:05:04
Modified on: 2022-01-20 08:51:38
Date last run: 2022-01-23 02:08:35

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  biblio.biblionumber,
  biblio.author,
  biblio.title,
  biblio.medium,
  Concat(
    '<a class=""btn btn-default"" href=\""/cgi-bin/koha/cataloguing/addbiblio.pl?biblionumber=',
    biblio.biblionumber,
    '"" target=""_blank"">Link</a>'
  ) AS LINK
FROM
  biblio
WHERE
  biblio.medium LIKE concat('%', <<Enter search term>>, '%')
ORDER BY
  biblio.medium",,,,,,,,
R.003644,"/*
R.003644

----------

Name: ADMINREPORT - Can a variable be used in a SELECT statement
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-01-26 14:50:32
Modified on: 2022-01-26 14:50:32
Date last run: 2022-01-26 14:50:41

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  <<Enter barcode number>> AS BARCODE,
  items.itemnumber,
  items.barcode
FROM
  items
WHERE
  items.barcode = <<Enter barcode number>>",,,,,,,,
R.003645,"/*
R.003645

----------

Name: GHW - Zipcodes with fewer than 10 borrowers
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-02-01 09:46:22
Modified on: 2022-04-04 21:30:35
Date last run: 2022-04-04 21:30:38

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Left(Trim(borrowers.zipcode), 5) AS ZIP,
  Count(DISTINCT borrowers.borrowernumber) AS Count_borrowernumber,
  Group_concat(distinct borrowers.borrowernumber) AS BORROWERNUMBERS
FROM
  borrowers
GROUP BY
  Left(Trim(borrowers.zipcode), 5)
HAVING
  Count(DISTINCT borrowers.borrowernumber) < 10",,,,,,,,
R.003646,"/*
R.003646

----------

Name: GHW - Circulation and renewal count by library, location, item type, and collection code.
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-02-06 01:06:29
Modified on: 2022-03-09 16:06:04
Date last run: 2022-10-03 13:55:46

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Circulation and renewal count by library, location, item type, and collection code.</p>
<ul><li>Shows circulation in the month you specify (limited to the previous 25 months)</li>
<li>at the library you specify</li>
<li>grouped by circulating library, location, item type, and collection code</li>
<li>sorted by circulating library, item type, and collection code</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Replaces reports:</p>
<ul>
<li>1930</li>
<li>3165</li>
</ul>
<p></p>
<p class= ""notetags"" style=""display: none;"">#circ_count_by_library #circ_count_by_itype #circ_count_by_ccode #circ_count_by_location</p>
</div>

----------
*/

","SELECT
  branches.branchname,
  itemtypes.description AS ITYPE,
  ccodes.lib AS CCODE,
  Coalesce(Sum(DISTINCT all_counts.count), 0) AS ALL_CKO_RENEW,
  Coalesce(Sum(DISTINCT adult.count), 0) AS ADULT,
  Coalesce(Sum(DISTINCT children.count), 0) AS CHILDRENS,
  Coalesce(Sum(DISTINCT young_adult.count), 0) AS YA,
  Coalesce(Sum(DISTINCT all_counts.count), 0) - 
    (Coalesce(Sum(DISTINCT adult.count), 0) +
    Coalesce(Sum(DISTINCT children.count), 0) +
    Coalesce(Sum(DISTINCT young_adult.count), 0)
  ) AS OTHER
FROM
  branches JOIN
  (SELECT
     statistics.branch,
     statistics.itemtype,
     statistics.ccode,
     Count(*) AS count
   FROM
     statistics
   WHERE
     statistics.branch LIKE <<branch|ZBRAN>> AND
     statistics.type IN ('issue', 'renew') AND
     Year(statistics.datetime) = <<Choose year|Year>> AND
     Month(statistics.datetime)= <<Choose month|Month>> 
   GROUP BY
     statistics.branch,
     statistics.itemtype,
     statistics.ccode) all_counts ON all_counts.branch = branches.branchcode
  LEFT JOIN
  (SELECT
     statistics.branch,
     If(statistics.location = ""CART"", 
       Coalesce(items.permanent_location, deleteditems.permanent_location), 
       statistics.location
     ) AS LOC,
     statistics.itemtype,
     statistics.ccode,
     Count(*) AS count
   FROM
     statistics LEFT JOIN
     items ON items.itemnumber = statistics.itemnumber LEFT JOIN
     deleteditems ON deleteditems.itemnumber = statistics.itemnumber
   WHERE
     statistics.branch LIKE <<branch|ZBRAN>> AND
     statistics.type IN ('issue', 'renew') AND
     Month(statistics.datetime)= <<Choose month|Month>> AND
     Year(statistics.datetime) = <<Choose year|Year>> AND
     If(statistics.location = ""CART"", 
       Coalesce(items.permanent_location, deleteditems.permanent_location), 
       statistics.location
     ) LIKE ""%ADULT%""
   GROUP BY
     statistics.branch,
     If(statistics.location = ""CART"", 
       Coalesce(items.permanent_location, deleteditems.permanent_location), 
       statistics.location
     ),
     statistics.itemtype,
     statistics.ccode) adult ON adult.branch = all_counts.branch AND
      adult.ccode = all_counts.ccode AND
      adult.itemtype = all_counts.itemtype LEFT JOIN
  (SELECT
     statistics.branch,
     If(statistics.location = ""CART"", 
       Coalesce(items.permanent_location, deleteditems.permanent_location), 
       statistics.location
     ) AS LOC,
     statistics.itemtype,
     statistics.ccode,
     Count(*) AS count
   FROM
     statistics LEFT JOIN
     items ON items.itemnumber = statistics.itemnumber LEFT JOIN
     deleteditems ON deleteditems.itemnumber = statistics.itemnumber
   WHERE
     statistics.branch LIKE <<branch|ZBRAN>> AND
     statistics.type IN ('issue', 'renew') AND
     Month(statistics.datetime)= <<Choose month|Month>> AND
     Year(statistics.datetime) = <<Choose year|Year>> AND
     If(statistics.location = ""CART"", 
       Coalesce(items.permanent_location, deleteditems.permanent_location), 
       statistics.location
     ) LIKE ""%CHILD%""
   GROUP BY
     statistics.branch,
     If(statistics.location = ""CART"", 
       Coalesce(items.permanent_location, deleteditems.permanent_location), 
       statistics.location
     ),
     statistics.itemtype,
     statistics.ccode) children ON children.branch = all_counts.branch AND
      children.itemtype = all_counts.itemtype AND
      children.ccode = all_counts.ccode LEFT JOIN
  (SELECT
     statistics.branch,
     If(statistics.location = ""CART"", 
       Coalesce(items.permanent_location, deleteditems.permanent_location), 
       statistics.location
     ) AS LOC,
     statistics.itemtype,
     statistics.ccode,
     Count(*) AS count
   FROM
     statistics LEFT JOIN
     items ON items.itemnumber = statistics.itemnumber LEFT JOIN
     deleteditems ON deleteditems.itemnumber = statistics.itemnumber
   WHERE
     statistics.branch LIKE <<branch|ZBRAN>> AND
     statistics.type IN ('issue', 'renew') AND
     Month(statistics.datetime)= <<Choose month|Month>> AND
     Year(statistics.datetime) = <<Choose year|Year>> AND
     If(statistics.location = ""CART"", 
       Coalesce(items.permanent_location, deleteditems.permanent_location), 
       statistics.location
     ) LIKE ""%YA%""
   GROUP BY
     statistics.branch,
     If(statistics.location = ""CART"", 
       Coalesce(items.permanent_location, deleteditems.permanent_location), 
       statistics.location
     ),
     statistics.itemtype,
     statistics.ccode) young_adult ON young_adult.branch = all_counts.branch AND
      young_adult.itemtype = all_counts.itemtype AND
      young_adult.ccode = all_counts.ccode LEFT JOIN
  itemtypes ON itemtypes.itemtype = all_counts.itemtype LEFT JOIN
  (SELECT
     authorised_values.category,
     authorised_values.authorised_value,
     authorised_values.lib,
     authorised_values.lib_opac
   FROM
     authorised_values
   WHERE
     authorised_values.category = 'CCODE') ccodes 
     ON ccodes.authorised_value = all_counts.ccode
GROUP BY
  branches.branchname,
  itemtypes.description,
  ccodes.lib
ORDER BY
  branches.branchname,
  ITYPE,
  CCODE",,,,,,,,
R.003647,"/*
R.003647

----------

Name: Test
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-02-07 08:57:23
Modified on: 2022-02-07 08:57:23
Date last run: 2022-02-07 08:58:28

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowernumber
FROM
  statistics
WHERE
  YEAR(statistics.datetime) = 2022 AND
  MONTH(statistics.datetime) = 1 AND
  DAY(statistics.datetime) = 5
GROUP BY
  borrowernumber",,,,,,,,
R.003648,"/*
R.003648

----------

Name: Call numbers with unneeded spaces
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-02-07 09:12:49
Modified on: 2022-06-07 11:35:47
Date last run: 2022-08-09 09:25:20

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  items.itemnumber,
  Replace(items.itemcallnumber, ' ', '|') AS CALL_NUMBER_W_BREAKS,
  items.barcode AS ITEM_BARCODE,
  home_branches.branchname AS HOME_BRANCH,
  holding_branches.branchname AS HOLDING_BRANCH,
  If(
    perm_loc.lib = loc.lib, 
    perm_loc.lib, 
    Concat(perm_loc.lib, ' (', loc.lib, ')')
  ) AS LOCATION,
  itypes.description AS ITEM_TYPE,
  ccode.lib AS CCODE,
  If(
    items.copynumber IS NULL, 
    items.itemcallnumber,
    Concat(items.itemcallnumber, ' // Copy number: ', items.copynumber)
  ) AS CALL_NUMBER,
  biblio.author,
  biblio.title,
  cnlines.length AS SPINE_LABEL_LINES
FROM
  items LEFT JOIN
  biblio ON biblio.biblionumber = items.biblionumber LEFT JOIN
  biblioitems ON biblioitems.biblioitemnumber = items.biblionumber LEFT JOIN
  (
    SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches
    ) home_branches 
    ON home_branches.branchcode = items.homebranch
    LEFT JOIN
  (
    SELECT
      branches.branchcode,
      branches.branchname
    FROM
      branches) holding_branches 
      ON holding_branches.branchcode = items.holdingbranch 
      LEFT JOIN
  (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC'
    ) perm_loc 
    ON perm_loc.authorised_value = items.permanent_location 
    LEFT JOIN
  (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC'
    ) loc ON loc.authorised_value = items.location 
    LEFT JOIN
  (
    SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes
    ) itypes ON itypes.itemtype = items.itype 
    LEFT JOIN
  (
    SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE'
    ) ccode 
    ON ccode.authorised_value = items.ccode JOIN
  (
    SELECT
      items.itemnumber,
      items.barcode,
      (Length(items.itemcallnumber) - Length(Replace(items.itemcallnumber, ' ',
      '')) + 1) AS length,
      items.homebranch
    FROM
      items
    WHERE
      items.homebranch Like <<Choose your library|branches:all>> AND
      (Length(Replace(items.itemcallnumber, ' ', '-')) - Length(Replace(items.itemcallnumber, ' ', '')) + 1) > <<Greater than X lines on the spine label|YNUMBER>>
    ) cnlines 
    ON cnlines.itemnumber = items.itemnumber AND
      cnlines.homebranch = items.homebranch
WHERE
  items.homebranch Like <<Choose your library|branches:all>>
GROUP BY
  items.itemnumber,
  cnlines.length,
  items.itemcallnumber
ORDER BY
  HOME_BRANCH,
  LOCATION,
  ITEM_TYPE,
  CCODE,
  CALL_NUMBER,
  biblio.author,
  biblio.title,
  items.itemnumber",,,,,,,,
R.003650,"/*
R.003650

----------

Name: GHW - Holds policy report
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-02-23 17:51:00
Modified on: 2022-02-23 17:51:00
Date last run: 2022-02-24 11:45:59

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branchess.branchcode,
  holdallowed.itemtype,
  holdallowed.rule_value,
  hold_fulfillment_policy.rule_value AS rule_value1,
  returnbranch.rule_value AS rule_value2
FROM
  (SELECT
      branches.branchcode
    FROM
      branches
    UNION
    SELECT
      ""All branches"" AS branchcode) branchess LEFT JOIN
  (SELECT
      Coalesce(circulation_rules.branchcode, ""All branches"") AS branchcode,
      circulation_rules.categorycode,
      circulation_rules.itemtype,
      circulation_rules.rule_name,
      circulation_rules.rule_value
    FROM
      circulation_rules
    WHERE
      circulation_rules.rule_name = 'holdallowed' AND
      circulation_rules.itemtype LIKE <<Enter item type code>>
    GROUP BY
      Coalesce(circulation_rules.branchcode, ""All branches""),
      circulation_rules.categorycode,
      circulation_rules.itemtype,
      circulation_rules.rule_name,
      circulation_rules.rule_value) holdallowed ON holdallowed.branchcode =
      branchess.branchcode LEFT JOIN
  (SELECT
      Coalesce(circulation_rules.branchcode, ""All branches"") AS branchcode,
      circulation_rules.categorycode,
      circulation_rules.itemtype,
      circulation_rules.rule_name,
      circulation_rules.rule_value
    FROM
      circulation_rules
    WHERE
      circulation_rules.rule_name = 'hold_fulfillment_policy' AND
      circulation_rules.itemtype LIKE <<Enter item type code>>
    GROUP BY
      Coalesce(circulation_rules.branchcode, ""All branches""),
      circulation_rules.categorycode,
      circulation_rules.itemtype,
      circulation_rules.rule_name,
      circulation_rules.rule_value) hold_fulfillment_policy ON
      hold_fulfillment_policy.branchcode = branchess.branchcode LEFT JOIN
  (SELECT
      Coalesce(circulation_rules.branchcode, ""All branches"") AS branchcode,
      circulation_rules.categorycode,
      circulation_rules.itemtype,
      circulation_rules.rule_name,
      circulation_rules.rule_value
    FROM
      circulation_rules
    WHERE
      circulation_rules.rule_name = 'returnbranch' AND
      circulation_rules.itemtype LIKE <<Enter item type code>>
    GROUP BY
      Coalesce(circulation_rules.branchcode, ""All branches""),
      circulation_rules.categorycode,
      circulation_rules.itemtype,
      circulation_rules.rule_name,
      circulation_rules.rule_value) returnbranch ON returnbranch.branchcode =
      branchess.branchcode
GROUP BY
  branchess.branchcode,
  holdallowed.itemtype,
  holdallowed.rule_value,
  hold_fulfillment_policy.rule_value,
  returnbranch.rule_value
ORDER BY
  branchess.branchcode,
  holdallowed.itemtype",,,,,,,,
R.003651,"/*
R.003651

----------

Name: GHW - Links to edit circulation rules en masse
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-02-23 18:02:07
Modified on: 2022-02-23 18:02:41
Date last run: 2022-07-14 15:29:56

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat(
    'https://staff.nextkansas.org/cgi-bin/koha/admin/smart-rules.pl?branch=', 
    branches.branchcode
  ) AS RULES_LINK
FROM
  branches
UNION
(SELECT
  Concat(
    'https://staff.nextkansas.org/cgi-bin/koha/admin/smart-rules.pl?branch=', 
    '*'
  ) AS RULES_LINK
FROM
  branches)
ORDER BY
  If(
    RULES_LINK LIKE ""%DONI%"", 
    Concat(""Y"", RULES_LINK), 
    If(
      RULES_LINK LIKE ""%PH%"", 
      Concat(""Z"", RULES_LINK), 
      RULES_LINK
    )
  ) DESC
LIMIT 100",,,,,,,,
R.003652,"/*
R.003652

----------

Name: GHW - Suppressed bibliographic records 
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-02-28 17:45:23
Modified on: 2022-02-28 17:45:45
Date last run: 2022-09-27 10:36:13

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat(
    '<a class=""btn btn-default"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', 
    items.biblionumber, 
    '\"" target=""_blank"">Go to title</a>'
  ) AS LINK_TO_TITLE,
  biblio.biblionumber,
  homebranch.branchname AS HOME,
  holdingbranch.branchname AS HOLDING,
  perm_locs.lib AS PERM_LOCATION,
  locs.lib AS LOCATION,
  itemtypes.description AS ITYPE,
  ccodes.lib AS CCODE,
  Concat_Ws('', 
    items.itemcallnumber, 
    Concat(' / Copy #: ', items.copynumber)
  ) AS CALL_NUMBER,
  biblio.author,
  Concat_Ws(' ', 
    biblio.title, 
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
    ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]')
  ) AS TITLE,
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""n""]') AS SUPPRESSED
FROM
  biblio JOIN
  biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
  JOIN
  items ON items.biblionumber = biblio.biblionumber INNER JOIN
  branches homebranch ON homebranch.branchcode = items.homebranch INNER JOIN
  branches holdingbranch ON holdingbranch.branchcode = items.holdingbranch
  LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'loc') perm_locs ON
      perm_locs.authorised_value = items.permanent_location LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'loc') locs ON locs.authorised_value =
      items.location LEFT JOIN
  itemtypes ON itemtypes.itemtype = items.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      items.ccode
WHERE
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""n""]') = 1 AND
  items.homebranch LIKE <<Choose your library|ZBRAN>>
GROUP BY
  biblio.biblionumber,
  items.itemnumber
ORDER BY
  HOME,
  PERM_LOCATION,
  ITYPE,
  CCODE,
  CALL_NUMBER,
  biblio.author,
  TITLE",,,,,,,,
R.003653,"/*
R.003653

----------

Name: GHW - Single page
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-02-28 17:51:25
Modified on: 2022-02-28 18:19:33
Date last run: 2022-02-28 18:17:27

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  Concat_WS('<br />',
    Concat('Home library: ', homebranch.branchname, IF(holdingbranch.branchname = homebranch.branchname, '',  Concat('<br /><span style=""background-color: #FFFF00"">Current library: ', holdingbranch.branchname, '</span>'))),
    Concat('Permanent location: ', IF(perm_locs.lib = locs.lib, perm_locs.lib, CONCAT(perm_locs.lib, '<br /><span style=""background-color: #FFFF00"">Current location: ', locs.lib, '</span>'))),
    Concat('Item type: ', itemtypes.description),
    Concat('Collection code: ', ccodes.lib),
    Concat('Call number: ', Concat_Ws('', items.itemcallnumber, Concat(' / Copy #: ', items.copynumber)))
    ) AS INFO,
    Concat_WS('<br />',
      biblio.author,
    Concat_Ws('<br />', 
      biblio.title, 
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""h""]'),
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""b""]'),
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""n""]'),
      ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""245""]/subfield[@code=""p""]')
    ),
    Concat(
      '<a class=""btn btn-default noprint"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', 
      items.biblionumber, 
      '\"" target=""_blank"">Go to title</a><br />'
    )
  ) AS AUTHOR_TITLE
FROM
  biblio JOIN
  biblio_metadata ON biblio_metadata.biblionumber = biblio.biblionumber
  JOIN
  items ON items.biblionumber = biblio.biblionumber INNER JOIN
  branches homebranch ON homebranch.branchcode = items.homebranch INNER JOIN
  branches holdingbranch ON holdingbranch.branchcode = items.holdingbranch
  LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'loc') perm_locs ON
      perm_locs.authorised_value = items.permanent_location LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'loc') locs ON locs.authorised_value =
      items.location LEFT JOIN
  itemtypes ON itemtypes.itemtype = items.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'ccode') ccodes ON ccodes.authorised_value =
      items.ccode
WHERE
  ExtractValue(biblio_metadata.metadata, '//datafield[@tag=""942""]/subfield[@code=""n""]') = 1 AND
  items.homebranch LIKE <<Choose your library|ZBRAN>>
GROUP BY
  biblio.biblionumber,
  items.itemnumber
ORDER BY
  homebranch.branchname,
  perm_locs.lib,
  itemtypes.description,
  ccodes.lib,
  Concat_Ws('', items.itemcallnumber, Concat(' / Copy #: ', items.copynumber)),
  biblio.author,
  TITLE",,,,,,,,
R.003656,"/*
R.003656

----------

Name: GHW - Internet permission killer
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-03-08 16:16:13
Modified on: 2022-03-08 16:16:13
Date last run: 2022-03-08 16:19:45

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  borrowers.cardnumber,
  borrower_attributes.borrowernumber,
  borrowers.branchcode,
  authorised_values.lib
FROM
  borrower_attributes JOIN
  authorised_values ON borrower_attributes.attribute =
      authorised_values.authorised_value INNER JOIN
  borrowers ON borrower_attributes.borrowernumber = borrowers.borrowernumber
WHERE
  borrower_attributes.code = 'INTERNET' AND
  authorised_values.category = 'InternetPolicy' AND
  borrowers.branchcode Like <<Choose your library|ZBRAN>>
GROUP BY
  borrower_attributes.borrowernumber,
  borrowers.branchcode,
  authorised_values.lib",,,,,,,,
R.003657,"/*
R.003657

----------

Name: GHW - Shelving Locations
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-03-23 17:01:09
Modified on: 2022-03-23 17:02:05
Date last run: 2022-09-02 21:36:14

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  authorised_values.authorised_value AS CODE,
  authorised_values.lib AS STAFF_DISPLAY,
  authorised_values.lib_opac OPAC_DISPLAY,
  If(
    GROUP_CONCAT(DISTINCT authorised_values_branches.branchcode ORDER BY authorised_values_branches.branchcode) = """", 
    ""All libraries"",
    GROUP_CONCAT(DISTINCT authorised_values_branches.branchcode ORDER BY authorised_values_branches.branchcode)
  ) AS LIBRARY_AVAILABILITY
FROM
  authorised_values LEFT JOIN
  authorised_values_branches ON authorised_values_branches.av_id =
      authorised_values.id
WHERE
  authorised_values.category = 'LOC'
GROUP BY
  authorised_values.authorised_value,
  authorised_values.lib,
  authorised_values.lib_opac
ORDER BY
  authorised_values.lib,
  authorised_values.lib_opac",,,,,,,,
R.003658,"/*
R.003658

----------

Name: GHW - Missing in transit items
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-03-25 18:26:18
Modified on: 2022-03-29 12:06:48
Date last run: 2022-09-29 10:14:19

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Generates a list of items missing in transit for more than 7 days</p>
<ul><li>Shows items that are currently in transit</li>
<li>either owned by, in transit from, or in transit to the library you specify</li>
<li>grouped by biblio number and item number</li>
<li>There are two sort options:
  <ul>
    <li>Option 1 sorts by home library and then the standard sort order</li>
    <li>Option 2 sorts omits the home library from the sorting parameters</li>
  </ul>
</li>
<li>includes links to the item's bibliographic record and a ""mailto"" link to make it easy for staff to send an e-mail to all libraries involved in the transfer</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>Replaces the following reports:</p>
<ul>
  <li>2519 - Overdue items on Transfers to receive report</li>
  <li>2774 - GHW - Missing In Transit last 6 months list</li>
  <li>2894 - GHW - Missing In Transit more than 7 days - List</li>
  <li>2945 - GHW - Missing In Transit last 6 months e-mail</li>
  <li>3073 - GHW - Missing In Transit e-mail</li>
</ul>
<p class= ""notetags"" style=""display: none;"">#Missing in transit #MIT</p>
<!-- html notes rendered on guided_reports.pl by jquery at https://wiki.koha-community.org/wiki/JQuery_Library#Render_patron_messages_as_HTML_and_in_Report_notes -->
</div> 

----------
*/

","SELECT 
  Concat( 
    '<a class=""btn btn-default noprint"" href=\""/cgi-bin/koha/catalogue/detail.pl?biblionumber=', 
    item_info.biblionumber, 
    '\"" target=""_blank"">BIBLIO</a>' 
  ) AS 'LINK', 
  item_info.HOME_LIBRARY, 
  item_info.branchname AS CURRENTLY_AT, 
  item_info.LOCATION, 
  item_info.ITYPE, 
  item_info.CCODE, 
  item_info.CALL_NUMBER, 
  item_info.author, 
  UPPER(item_info.TITLE) AS TITLE, 
  item_info.datelastseen, 
  item_info.barcode1, 
  item_info.homebranch AS OWNED_BY, 
  frombranches.branchname AS SENT_FROM, 
  branchtransfers.datesent AS SENT_DATE, 
  tobranches.branchname AS SENT_TO, 
  branchtransfers.reason AS TRANSFER_REASON, 
  Concat_WS('', 
    '<a class=""btn btn-default noprint"" href=""mailto:', 
    item_info.branchemail, 
    '?subject=Missing&nbsp;in&nbsp;transit&nbsp;', 
    branchtransfers.branchtransfer_id, 
    '&amp;cc=', 
    frombranches.branchemail, 
    ';', 
    tobranches.branchemail, 
    '&body=An%20item%20owned%20by%20&#42;&#42;', 
    item_info.HOME_LIBRARY, 
    '&#42;&#42;%20was%20shipped%20from%20&#42;&#42;', 
    frombranches.branchname, 
    '&#42;&#42;%20to%20&#42;&#42;', 
    tobranches.branchname, 
    '&#42;&#42;%20on%20', 
    branchtransfers.datesent, 
    '%20and%20the%20item%20has%20not%20yet%20arrived.', 
    '%0D%0A%0D%0A', 
    'The%20details%20are%20as%20follow%3A', 
    '%0D%0A%0D%0A', 
    'Branch%20transfer%20ID%3A%20', 
    branchtransfers.branchtransfer_id, 
    '%0D%0A%0D%0A', 
    'Home%20library%3A%20', 
    item_info.HOME_LIBRARY, 
    '%0D%0ALocation%3A%20', 
    item_info.LOCATION, 
    '%0D%0AItem%20type%3A%20', 
    item_info.ITYPE, 
    '%0D%0ACollection%20code%3A%20', 
    item_info.CCODE, 
    '%0D%0ACall%20number%3A%20', 
    item_info.CALL_NUMBER, 
    '%0D%0AAuthor%3A%20', 
    item_info.author, 
    '%0D%0ATitle%3A%20', 
    UPPER(item_info.TITLE), 
    '%0D%0ABarcode%20number%3A%20', 
    item_info.barcode, 
    '%0D%0A%0D%0A', 
    'Sent%20from%3A%20', 
    frombranches.branchname, 
    '%0D%0ASent%20to%3A%20', 
    tobranches.branchname, 
    '%0D%0ASent%20on%3A%20', 
    branchtransfers.datesent, 
    '%0D%0A%0D%0A', 
    'Transfer%20reason%3A%20', 
    branchtransfers.reason, 
    '%20%0D%0A%0D%0A', 
    'Could%20you%20please%20check%20the%20shelves%20at%20your%20library%20', 
    '&#40;including%20the%20hold%20shelf&#41;%20', 
    'and%20check%20this%20item%20in%20if%20you%20find%20it&#63;', 
    '%0D%0A%0D%0A', 
    'Thank you,', 
    '%20%0D%0A%0D%0A', 
    '"">Send e-mail</a>' 
  ) AS MAILTO_LINK, 
  @SortOrder := <<Sort by|XS_BRANCH>> AS SORTING 
FROM 
  branchtransfers JOIN 
  branches frombranches ON branchtransfers.frombranch = frombranches.branchcode JOIN 
  branches tobranches ON branchtransfers.tobranch = tobranches.branchcode JOIN 
  (SELECT 
    items.biblionumber, 
    items.itemnumber, 
    items.barcode, 
    home.branchname AS HOME_LIBRARY, 
    holding.branchname, 
    perm_locs.lib AS PERM_LOCATION, 
    Concat_Ws('', 
      perm_locs.lib, 
      If(locs.lib = 'Recently returned', ' (Recently returned)', '') 
    ) AS LOCATION, 
    itemtypes.description AS ITYPE, 
    ccodes.lib AS CCODE, 
    items.itemcallnumber, 
    Concat_Ws('', 
      items.itemcallnumber, 
      If(items.copynumber IS NULL, '', Concat(' (Copy number: ', items.copynumber, ')')) 
    ) AS CALL_NUMBER, 
    biblio.author, 
    Concat_Ws(' ', biblio.title, biblio.medium, biblio.subtitle, 
    biblioitems.number, biblio.part_name) AS TITLE, 
    items.datelastseen, 
    items.copynumber, 
    Concat('-', items.barcode, '-') AS barcode1, 
    items.homebranch, 
    home.branchemail 
  FROM 
    items JOIN 
    biblio ON items.biblionumber = biblio.biblionumber JOIN 
    biblioitems ON biblioitems.biblionumber = biblio.biblionumber LEFT JOIN 
    (SELECT 
      authorised_values.category, 
      authorised_values.authorised_value, 
      authorised_values.lib, 
      authorised_values.lib_opac 
    FROM 
      authorised_values 
    WHERE 
      authorised_values.category = 'LOC' 
    ) 
    perm_locs ON perm_locs.authorised_value = items.permanent_location LEFT JOIN 
    (SELECT 
      authorised_values.category, 
      authorised_values.authorised_value, 
      authorised_values.lib, 
      authorised_values.lib_opac 
    FROM 
      authorised_values 
    WHERE 
      authorised_values.category = 'LOC' 
    ) locs ON locs.authorised_value = items.location LEFT JOIN 
    itemtypes ON itemtypes.itemtype = items.itype LEFT JOIN 
    (SELECT 
      authorised_values.category, 
      authorised_values.authorised_value, 
      authorised_values.lib, 
      authorised_values.lib_opac 
    FROM 
      authorised_values 
    WHERE 
      authorised_values.category = 'CCODE' 
    ) 
    ccodes ON 
    ccodes.authorised_value = items.ccode LEFT JOIN 
    branches home ON home.branchcode = items.homebranch LEFT JOIN 
    branches holding ON holding.branchcode = items.holdingbranch 
  GROUP BY 
    items.biblionumber, 
    items.itemnumber 
  ) 
  item_info ON item_info.itemnumber = branchtransfers.itemnumber 
WHERE 
  branchtransfers.datearrived IS NULL AND 
  branchtransfers.datecancelled IS NULL AND 
  Concat_Ws(' | ', 
    item_info.homebranch, 
    branchtransfers.frombranch, 
    branchtransfers.tobranch 
  ) LIKE Concat('%', <<Choose your library|branches>>, '%') AND 
  branchtransfers.datesent < CurDate() - INTERVAL 7 DAY 
GROUP BY 
  item_info.biblionumber, 
  item_info.itemnumber 
ORDER BY 
  CASE WHEN SORTING = '1' THEN item_info.HOME_LIBRARY END ASC, 
  CASE WHEN SORTING = '2' THEN item_info.PERM_LOCATION END ASC, 
  item_info.PERM_LOCATION, 
  item_info.ITYPE, 
  item_info.CCODE, 
  item_info.itemcallnumber, 
  item_info.author, 
  item_info.TITLE, 
  item_info.copynumber ",,,,,,,,
R.003659,"/*
R.003659

----------

Name: GHW - Borrowers by last borrowed date
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-03-31 16:55:23
Modified on: 2022-03-31 17:39:43
Date last run: 2022-04-01 09:33:52

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Shows borrowers sorted by their ""Last borrowed"" date but only if the last borrowed date was less than 25 months in the past.</p>
<ul><li>With the home library you specify</li>
<li>grouped by borrowernumber</li>
<li>sorted by LAST_BORROWED date</li>
<li>links to the borrower record</li>
</ul><br />
<p><ins>Notes:</ins></p>
<p></p>
<p>This report gets the ""LAST_BORROWED"" dates from the statistics table in Koha.  As a matter of data security, Next Search Catalog only keeps data in the statistics table for the previous 25 months, therefore, the ""LAST_BORROWED"" date will never be more than 25 months in the past.</p>
<p></p>
<p class= ""notetags"" style=""display: none;"">#last borrowed</p>
<!-- html notes rendered on guided_reports.pl by jquery at https://wiki.koha-community.org/wiki/JQuery_Library#Render_patron_messages_as_HTML_and_in_Report_notes -->
</div> 

----------
*/

","SELECT
  Concat_Ws('',
    '<a class=""btn btn-default noprint"" href=\""/cgi-bin/koha/members/moremember.pl?borrowernumber=', 
    borrowers.borrowernumber, 
    '"" target=""_blank"">Borrower</a>'
  ) AS LINK,
  Concat_Ws('<br />', 
    Concat_Ws(' ', 
      borrowers.firstname, 
      borrowers.surname,
      If(
        borrowers.othernames = '', 
        '', 
        Concat('(', borrowers.othernames, ')')
      )
    ), 
    borrowers.cardnumber
  ) AS BORROWER,
  Concat_Ws('<br />', 
    Concat(borrowers.address, 
      If(
        borrowers.address2 = '', 
        '', 
        Concat('<br />', borrowers.address2))
      ), 
      Concat(borrowers.city, ', ', borrowers.state, ' ', borrowers.zipcode)
  ) AS ADDRESS,
  borrowers.email,
  borrowers.phone,
  borrowers.branchcode,
  borrowers.categorycode,
  statisticss.Max_datetime AS LAST_BORROWED,
  Format(accountliness.Sum_amountoutstanding, 2) AS UNPAID_FEES
FROM
  borrowers LEFT JOIN
  (SELECT
      statistics.borrowernumber,
      Max(statistics.datetime) AS Max_datetime,
      Count(DISTINCT statistics.itemnumber) AS Count_itemnumber
    FROM
      statistics
    WHERE
      (statistics.type = 'issue' OR
        statistics.type = 'renew') AND
      statistics.branch = <<Choose your library|ZBRAN>>
    GROUP BY
      statistics.borrowernumber
    ORDER BY
      statistics.borrowernumber,
      Max_datetime DESC) statisticss ON statisticss.borrowernumber =
      borrowers.borrowernumber LEFT JOIN
  (SELECT
      accountlines.borrowernumber,
      Sum(accountlines.amountoutstanding) AS Sum_amountoutstanding
    FROM
      accountlines
    GROUP BY
      accountlines.borrowernumber
    HAVING
      Sum(accountlines.amountoutstanding) > 0) accountliness ON
      accountliness.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Choose your library|ZBRAN>> AND
  borrowers.categorycode LIKE <<Choose a borrower category|categorycode>> AND
  statisticss.Max_datetime < <<Last checkout before|date>>
ORDER BY
  LAST_BORROWED DESC",,,,,,,,
R.003660,"/*
R.003660

----------

Name: GHW - Unique borrowers in each of the previous 12 months
Created by: George H Williams

----------

Group: Statistics
     2022 beginning of month statistics

Created on: 2022-04-18 22:01:38
Modified on: 2022-04-18 22:20:08
Date last run: 2022-10-01 01:20:02

----------

Public: 0
Expiry: 300

----------



----------
*/

","SELECT
  branchess.branchname,
  m_01.count AS M_01,
  m_02.count AS M_02,
  m_03.count AS M_03,
  m_04.count AS M_04,
  m_05.count AS M_05,
  m_06.count AS M_06,
  m_07.count AS M_07,
  m_08.count AS M_08,
  m_09.count AS M_09,
  m_10.count AS M_10,
  m_11.count AS M_11,
  m_12.count AS M_12,
  m_year.count AS LAST_12
FROM
    (SELECT
      branches.branchname,
      branches.branchcode
    FROM
      branches
    UNION
    SELECT
      '- Date range -' AS branchname,
      '-' AS branchcode) branchess LEFT JOIN
    (SELECT
      Concat('-') AS branch,
      Concat(
        Year(Now() - INTERVAL 1 MONTH),
        '-',
        LPad(Month(Now() - INTERVAL 1 MONTH), 2, 0),
        ' (',
        Date_Format(Now() - INTERVAL 1 MONTH, '%M'), 
        ')'
      ) AS count
    UNION
    SELECT
      statistics.branch,
      Coalesce(Count(DISTINCT statistics.borrowernumber), 0) AS count
    FROM
      statistics
    WHERE
      Year(statistics.datetime) = Year(Now() - INTERVAL 1 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 1 MONTH) AND
      (statistics.type = 'issue' OR
      statistics.type = 'renew')
    GROUP BY
      statistics.branch) m_01 ON m_01.branch = branchess.branchcode LEFT JOIN
    (SELECT
      Concat('-') AS branch,
      Concat(
        Year(Now() - INTERVAL 2 MONTH),
        '-',
        LPad(Month(Now() - INTERVAL 2 MONTH), 2, 0),
        ' (',
        Date_Format(Now() - INTERVAL 2 MONTH, '%M'), 
        ')'
      ) AS count
    UNION
    SELECT
      statistics.branch,
      Coalesce(Count(DISTINCT statistics.borrowernumber), 0) AS count
    FROM
      statistics
    WHERE
      Year(statistics.datetime) = Year(Now() - INTERVAL 2 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 2 MONTH) AND
      (statistics.type = 'issue' OR
      statistics.type = 'renew')
    GROUP BY
      statistics.branch) m_02 ON m_02.branch = branchess.branchcode LEFT JOIN
    (SELECT
      Concat('-') AS branch,
      Concat(
        Year(Now() - INTERVAL 3 MONTH),
        '-',
        LPad(Month(Now() - INTERVAL 3 MONTH), 2, 0),
        ' (',
        Date_Format(Now() - INTERVAL 3 MONTH, '%M'), 
        ')'
      ) AS count
    UNION
    SELECT
      statistics.branch,
      Coalesce(Count(DISTINCT statistics.borrowernumber), 0) AS count
    FROM
      statistics
    WHERE
      Year(statistics.datetime) = Year(Now() - INTERVAL 3 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 3 MONTH) AND
      (statistics.type = 'issue' OR
      statistics.type = 'renew')
    GROUP BY
      statistics.branch) m_03 ON m_03.branch = branchess.branchcode LEFT JOIN
    (SELECT
      Concat('-') AS branch,
      Concat(
        Year(Now() - INTERVAL 4 MONTH),
        '-',
        LPad(Month(Now() - INTERVAL 4 MONTH), 2, 0),
        ' (',
        Date_Format(Now() - INTERVAL 4 MONTH, '%M'), 
        ')'
      ) AS count
    UNION
    SELECT
      statistics.branch,
      Coalesce(Count(DISTINCT statistics.borrowernumber), 0) AS count
    FROM
      statistics
    WHERE
      Year(statistics.datetime) = Year(Now() - INTERVAL 4 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 4 MONTH) AND
      (statistics.type = 'issue' OR
      statistics.type = 'renew')
    GROUP BY
      statistics.branch) m_04 ON m_04.branch = branchess.branchcode LEFT JOIN
    (SELECT
      Concat('-') AS branch,
      Concat(
        Year(Now() - INTERVAL 5 MONTH),
        '-',
        LPad(Month(Now() - INTERVAL 5 MONTH), 2, 0),
        ' (',
        Date_Format(Now() - INTERVAL 5 MONTH, '%M'), 
        ')'
      ) AS count
    UNION
    SELECT
      statistics.branch,
      Coalesce(Count(DISTINCT statistics.borrowernumber), 0) AS count
    FROM
      statistics
    WHERE
      Year(statistics.datetime) = Year(Now() - INTERVAL 5 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 5 MONTH) AND
      (statistics.type = 'issue' OR
      statistics.type = 'renew')
    GROUP BY
      statistics.branch) m_05 ON m_05.branch = branchess.branchcode LEFT JOIN
    (SELECT
      Concat('-') AS branch,
      Concat(
        Year(Now() - INTERVAL 6 MONTH),
        '-',
        LPad(Month(Now() - INTERVAL 6 MONTH), 2, 0),
        ' (',
        Date_Format(Now() - INTERVAL 6 MONTH, '%M'), 
        ')'
      ) AS count
    UNION
    SELECT
      statistics.branch,
      Coalesce(Count(DISTINCT statistics.borrowernumber), 0) AS count
    FROM
      statistics
    WHERE
      Year(statistics.datetime) = Year(Now() - INTERVAL 6 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 6 MONTH) AND
      (statistics.type = 'issue' OR
      statistics.type = 'renew')
    GROUP BY
      statistics.branch) m_06 ON m_06.branch = branchess.branchcode LEFT JOIN
    (SELECT
      Concat('-') AS branch,
      Concat(
        Year(Now() - INTERVAL 7 MONTH),
        '-',
        LPad(Month(Now() - INTERVAL 7 MONTH), 2, 0),
        ' (',
        Date_Format(Now() - INTERVAL 7 MONTH, '%M'), 
        ')'
      ) AS count
    UNION
    SELECT
      statistics.branch,
      Coalesce(Count(DISTINCT statistics.borrowernumber), 0) AS count
    FROM
      statistics
    WHERE
      Year(statistics.datetime) = Year(Now() - INTERVAL 7 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 7 MONTH) AND
      (statistics.type = 'issue' OR
      statistics.type = 'renew')
    GROUP BY
      statistics.branch) m_07 ON m_07.branch = branchess.branchcode LEFT JOIN
    (SELECT
      Concat('-') AS branch,
      Concat(
        Year(Now() - INTERVAL 8 MONTH),
        '-',
        LPad(Month(Now() - INTERVAL 8 MONTH), 2, 0),
        ' (',
        Date_Format(Now() - INTERVAL 8 MONTH, '%M'), 
        ')'
      ) AS count
    UNION
    SELECT
      statistics.branch,
      Coalesce(Count(DISTINCT statistics.borrowernumber), 0) AS count
    FROM
      statistics
    WHERE
      Year(statistics.datetime) = Year(Now() - INTERVAL 8 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 8 MONTH) AND
      (statistics.type = 'issue' OR
      statistics.type = 'renew')
    GROUP BY
      statistics.branch) m_08 ON m_08.branch = branchess.branchcode LEFT JOIN
    (SELECT
      Concat('-') AS branch,
      Concat(
        Year(Now() - INTERVAL 9 MONTH),
        '-',
        LPad(Month(Now() - INTERVAL 9 MONTH), 2, 0),
        ' (',
        Date_Format(Now() - INTERVAL 9 MONTH, '%M'), 
        ')'
      ) AS count
    UNION
    SELECT
      statistics.branch,
      Coalesce(Count(DISTINCT statistics.borrowernumber), 0) AS count
    FROM
      statistics
    WHERE
      Year(statistics.datetime) = Year(Now() - INTERVAL 9 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 9 MONTH) AND
      (statistics.type = 'issue' OR
      statistics.type = 'renew')
    GROUP BY
      statistics.branch) m_09 ON m_09.branch = branchess.branchcode LEFT JOIN
    (SELECT
      Concat('-') AS branch,
      Concat(
        Year(Now() - INTERVAL 10 MONTH),
        '-',
        LPad(Month(Now() - INTERVAL 10 MONTH), 2, 0),
        ' (',
        Date_Format(Now() - INTERVAL 10 MONTH, '%M'), 
        ')'
      ) AS count
    UNION
    SELECT
      statistics.branch,
      Coalesce(Count(DISTINCT statistics.borrowernumber), 0) AS count
    FROM
      statistics
    WHERE
      Year(statistics.datetime) = Year(Now() - INTERVAL 10 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 10 MONTH) AND
      (statistics.type = 'issue' OR
      statistics.type = 'renew')
    GROUP BY
      statistics.branch) m_10 ON m_10.branch = branchess.branchcode LEFT JOIN
    (SELECT
      Concat('-') AS branch,
      Concat(
        Year(Now() - INTERVAL 11 MONTH),
        '-', 
       
        LPad(Month(Now() - INTERVAL 11 MONTH), 2, 0), 
       
        ' (', 
        Date_Format(Now() - INTERVAL 11 MONTH, '%M'), 
        
        ')'
      ) AS count
    UNION
    SELECT
      statistics.branch,
      Coalesce(Count(DISTINCT statistics.borrowernumber), 0) AS count
    FROM
      statistics
    WHERE
      Year(statistics.datetime) = Year(Now() - INTERVAL 11 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 11 MONTH) AND
      (statistics.type = 'issue' OR
      statistics.type = 'renew')
    GROUP BY
      statistics.branch) m_11 ON m_11.branch = branchess.branchcode LEFT JOIN
    (SELECT
      Concat('-') AS branch,
      Concat(
        Year(Now() - INTERVAL 12 MONTH),
        '-',
        LPad(Month(Now() - INTERVAL 12 MONTH), 2, 0),
        ' (',
        Date_Format(Now() - INTERVAL 12 MONTH, '%M'), 
        ')'
      ) AS count
    UNION
    SELECT
      statistics.branch,
      Coalesce(Count(DISTINCT statistics.borrowernumber), 0) AS count
    FROM
      statistics
    WHERE
      Year(statistics.datetime) = Year(Now() - INTERVAL 12 MONTH) AND
      Month(statistics.datetime) = Month(Now() - INTERVAL 12 MONTH) AND
      (statistics.type = 'issue' OR
      statistics.type = 'renew')
    GROUP BY
      statistics.branch) m_12 ON m_12.branch = branchess.branchcode LEFT JOIN
    (SELECT
      Concat('-') AS branch,
      Concat('Previous 12 calendar months') AS count
    UNION
    SELECT
      statistics.branch,
      Coalesce(Count(DISTINCT statistics.borrowernumber), 0) AS count
    FROM
      statistics
    WHERE
      statistics.datetime 
        BETWEEN
          AddDate(Last_Day(SubDate(Now(), INTERVAL 14 MONTH)), 1) AND 
          AddDate(Last_Day(SubDate(Now(), INTERVAL 1 MONTH)), 1)
        AND
      (statistics.type = 'issue' OR
      statistics.type = 'renew')
    GROUP BY
      statistics.branch) m_year ON m_year.branch = branchess.branchcode
ORDER BY
  branchess.branchname",,,,,,,,
R.003661,"/*
R.003661

----------

Name: Item numbers and barcodes by library/location/itype/ccode
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-05-16 16:05:33
Modified on: 2022-05-16 16:44:18
Date last run: 2022-09-30 14:49:46

----------

Public: 0
Expiry: 300

----------

Replaces report 2664

----------
*/

","SELECT
  items.itemnumber,
  items.barcode,
  branches.branchname AS LIBRARY,
  perm_locs.lib AS LOCATION,
  itypes.description AS ITEM_TYPE,
  ccodes.lib AS CCODE,
  items.dateaccessioned AS ADDED
FROM
  items JOIN
  branches ON items.homebranch = branches.branchcode LEFT JOIN
  (SELECT
      itemtypes.itemtype,
      itemtypes.description
    FROM
      itemtypes) itypes ON itypes.itemtype = items.itype LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'LOC') perm_locs ON
      perm_locs.authorised_value = items.permanent_location LEFT JOIN
  (SELECT
      authorised_values.category,
      authorised_values.authorised_value,
      authorised_values.lib,
      authorised_values.lib_opac
    FROM
      authorised_values
    WHERE
      authorised_values.category = 'CCODE') ccodes ON ccodes.authorised_value =
      items.ccode
WHERE
  items.homebranch LIKE <<Choose a library|LBRANCH>> AND
  items.permanent_location LIKE <<Shelving location|LLOC>> AND
  items.itype LIKE <<Choose an item type|LITYPES>> AND
  items.ccode LIKE <<Choose a collection code|LCCODE>> AND
  items.dateaccessioned BETWEEN <<Added between date1|date>> AND <<date2|date>>
GROUP BY
  items.itemnumber
ORDER BY
  LIBRARY,
  LOCATION,
  ITEM_TYPE,
  CCODE,
  ADDED",,,,,,,,
R.003663,"/*
R.003663

----------

Name: GHW - OPAC digital card report
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-08-09 11:52:55
Modified on: 2022-08-09 14:16:57
Date last run: 2022-09-02 21:34:12

----------

Public: 1
Expiry: 5

----------



----------
*/

","SELECT UPPER(cardnumber)
FROM borrowers
WHERE borrowernumber = <<borrowernumber>>",,,,,,,,
R.003665,"/*
R.003665

----------

Name: koha-US 1001
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-09-18 23:31:16
Modified on: 2022-09-18 23:31:16
Date last run: 2022-09-18 23:42:43

----------

Public: 0
Expiry: 300

----------

Simple report for yesterday's statistics by branchcode.

----------
*/

","Select
    statistics.branch,
    Count(*) As CIRC_RENEW_COUNT
From
    statistics
Where
    (statistics.type = 'issue' Or
    statistics.type = 'renew') And
    Year(statistics.datetime) = Year(CurDate() - Interval 1 Day) And
    Month(statistics.datetime) = Month(CurDate() - Interval 1 Day) And
    Day(statistics.datetime) = Day(CurDate() - Interval 1 Day)
Group By
    statistics.branch",,,,,,,,
R.003666,"/*
R.003666

----------

Name: koha-US 1002
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-09-18 23:34:04
Modified on: 2022-09-18 23:34:04
Date last run: 2022-09-18 23:43:04

----------

Public: 0
Expiry: 300

----------

Simplet list of all branches by branchname

----------
*/

","Select
    branches.branchname
From
    branches",,,,,,,,
R.003667,"/*
R.003667

----------

Name: koha-US 1003
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-09-18 23:39:26
Modified on: 2022-09-18 23:41:59
Date last run: 2022-09-18 23:43:11

----------

Public: 0
Expiry: 300

----------

All results by branchname

----------
*/

","Select
    branches.branchname,
    Count(*) As CIRC_RENEW_COUNT
From
    branches Left Join
    statistics On statistics.branch = branches.branchcode
Where
    (statistics.type = 'issue' Or
        statistics.type = 'renew') And
    Year(statistics.datetime) = Year(CurDate() - Interval 1 Day) And
    Month(statistics.datetime) = Month(CurDate() - Interval 1 Day) And
    Day(statistics.datetime) = Day(CurDate() - Interval 1 Day)
Group By
    branches.branchname",,,,,,,,
R.003668,"/*
R.003668

----------

Name: koha-US 1004
Created by: George H Williams

----------

Group: -
     -

Created on: 2022-09-18 23:40:29
Modified on: 2022-09-18 23:40:29
Date last run: 2022-09-18 23:43:40

----------

Public: 0
Expiry: 300

----------

All branches by branchname plus all circulation yesterday

----------
*/

","Select
    branches.branchname,
    report_one.CIRC_RENEW_COUNT
From
    branches Left Join
    (Select
         statistics.branch,
         Count(*) As CIRC_RENEW_COUNT
     From
         statistics
     Where
         (statistics.type = 'issue' Or
             statistics.type = 'renew') And
         Year(statistics.datetime) = Year(CurDate() - Interval 1 Day) And
         Month(statistics.datetime) = Month(CurDate() - Interval 1 Day) And
         Day(statistics.datetime) = Day(CurDate() - Interval 1 Day)
     Group By
         statistics.branch) report_one On report_one.branch = branches.branchcode",,,,,,,,
X.002905,"/*
R.002905

----------

Name: GHW - Soft Offsets
Created by: George H Williams

----------

Group: -
     -

Created on: 2017-02-14 11:06:06
Modified on: 2020-03-03 10:13:50
Date last run: 2018-06-21 11:24:25

----------

Public: 0
Expiry: 0

----------



----------
*/

","SELECT
  staff.branchcode AS STAFF_AT,
  payments.amount AS COLLECTED,
  patron.cardnumber AS FROM_PATRON,
  Replace(payments.note, ""\r\n"", """") AS PAYMENT_NOTES,
  payments.date AS PAYMENT_DATE,
  Concat_Ws(""-"", payments.accountlines_id, payments.accountno) AS
  PAYMENT_REFERENCE,
  items.barcode AS FOR_ITEM,
  items.homebranch AS OWNED_BY,
  paid.date AS FEE_DATE,
  paid.amount AS FEE_AMOUNT,
  payments.amountoutstanding AS FEE_STILL_OWED,
  paid.description AS FEE_DESCRIPTION,
  Replace(paid.note, ""\r\n"", """") AS FEE_NOTES,
  Concat_Ws(""-"", paid.accountlines_id, paid.accountno) AS FEE_REFERENCE
FROM
  (SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 1), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 2), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 3), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 4), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 5), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 6), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 7), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 8), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 9), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 10), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 11), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 12), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 13), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 14), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 15), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 16), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 17), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 18), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 19), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 20), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 21), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 22), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 23), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 24), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 25), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 26), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 27), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 28), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 29), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 30), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate",||AAAAA||,"() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 31), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 32), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 33), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 34), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 35), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 36), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 37), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 38), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 39), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 40), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 41), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 42), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 43), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 44), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 45), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 46), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 47), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 48), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 49), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 50), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 51), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 52), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 53), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 54), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 55), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 56), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 57), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 58), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 59), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)
  UNION
  SELECT
    SubString_Index(SubString_Index(Replace((Replace((Replace((SubString_Index(SubString_Index(action_logs.info, ""'accountlines_paid' => ["", -1), ""]"", 1)), "" "", """")), '\n', '')), ""'"", """"), "","", 60), "","", -1) AS ACCTLINE,
    action_logs.info,
    accountlines.accountlines_id
  FROM
    action_logs JOIN
    accountlines
      ON action_logs.timestamp = accountlines.timestamp AND action_logs.user =
      accountlines.manager_id AND
      action_logs.object = accountlines.borrowernumber
  WHERE
    accountlines.accountno = SubString_Index(SubString_Index(action_logs.info,
    ""'accountno' => '"", -1), ""'"", 1) AND
    action_logs.module = 'FINES' AND
    action_logs.action Like '%CREAT%' AND
    action_logs.info LIKE ""%accountlines_paid%"" AND
    action_logs.info NOT LIKE ""%create_writeoff%"" AND
    Month(action_logs.timestamp) = Month(CurDate() - INTERVAL 1 MONTH) AND
    Year(action_logs.timestamp) = Year(CurDate() - INTERVAL 1 MONTH)) offsets
  JOIN
  accountlines payments
    ON payments.accountlines_id = offsets.accountlines_id JOIN
  accountlines paid
    ON offsets.ACCTLINE = paid.accountlines_id JOIN
  borrowers staff
    ON payments.manager_id = staff.borrowernumber JOIN
  borrowers patron
    ON payments.borrowernumber = patron.borrowernumber LEFT JOIN
  items
    ON paid.itemnumber = items.itemnumber
GROUP BY
  staff.b",||AAAAA||,"ranchcode, payments.amount, patron.cardnumber, Replace(payments.note,
  ""\r\n"", """"), payments.date, Concat_Ws(""-"", payments.accountlines_id,
  payments.accountno), items.barcode, items.homebranch, paid.date, paid.amount,
  payments.amountoutstanding, paid.description, Replace(paid.note, ""\r\n"", """"),
  Concat_Ws(""-"", paid.accountlines_id, paid.accountno)",,,,
X.003559,"/*
R.003559

----------

Name: GHW - All Koha date fields with oldest and newest dates
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-09-13 20:55:02
Modified on: 2022-03-29 12:21:25
Date last run: 2022-07-25 15:20:38

----------

Public: 0
Expiry: 300

----------

<div id=reportinfo class=noprint>
<p>Lists every date and timestamp field in every table in Koha and shows the oldest and newest dates.</p>
<p>Some dates are further grouped by other field values.</p>
<p>Used at the koha-US 2021 conference</p>
</div>

----------
*/

","SELECT
  Concat('Borrower fees') AS _GROUP_,
  Concat('====================') AS TABLE_NAME,
  Concat('====================') AS SUBFIELD,
  Concat('====================') AS TYPE,
  Concat('====================') AS OLDEST,
  Concat('====================') AS NEWEST
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('account_offsets') AS TABLE_NAME,
  Concat('created_on') AS SUBFIELD,
  account_offsets.type AS TYPE,
  Date_Format(Min(account_offsets.created_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(account_offsets.created_on), '%Y - %m - %d') AS NEWEST
FROM
  account_offsets
GROUP BY
  account_offsets.type
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('accountlines') AS TABLE_NAME,
  Concat('date') AS SUBFIELD,
  accountlines.credit_type_code AS TYPE,
  Date_Format(Min(accountlines.date), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(accountlines.date), '%Y - %m - %d') AS NEWEST
FROM
  accountlines
GROUP BY
  accountlines.credit_type_code
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('accountlines') AS TABLE_NAME,
  Concat('date') AS SUBFIELD,
  accountlines.debit_type_code AS TYPE,
  Date_Format(Min(accountlines.date), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(accountlines.date), '%Y - %m - %d') AS NEWEST
FROM
  accountlines
GROUP BY
  accountlines.debit_type_code
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('accountlines') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  accountlines.credit_type_code AS TYPE,
  Date_Format(Min(accountlines.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(accountlines.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  accountlines
GROUP BY
  accountlines.credit_type_code
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('accountlines') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  accountlines.debit_type_code AS TYPE,
  Date_Format(Min(accountlines.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(accountlines.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  accountlines
GROUP BY
  accountlines.debit_type_code
UNION
SELECT
  Concat('Action logs') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('action_logs') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  action_logs.module AS TYPE,
  Date_Format(Min(action_logs.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(action_logs.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  action_logs
GROUP BY
  action_logs.module
UNION
SELECT
  Concat('Acquisitions') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('aqbasket') AS TABLE_NAME,
  Concat('closedate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(aqbasket.closedate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(aqbasket.closedate), '%Y - %m - %d') AS NEWEST
FROM
  aqbasket
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('aqbasket') AS TABLE_NAME,
  Concat('creationdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(aqbasket.creationdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(aqbasket.creationdate), '%Y - %m - %d') AS NEWEST
FROM
  aqbasket
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('aqbudgetperiods') AS TABLE_NAME,
  Concat('budget_period_enddate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(aqbudgetperiods.budget_period_enddate), '%Y - %m - %d') AS
  OLDEST,
  Date_Format(Max(aqbudgetperiods.budget_period_enddate), '%Y - %m - %d') AS
  NEWEST
FROM
  aqbudgetperiods
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('aqbudgetperiods') AS TABLE_NAME,
  Concat('budget_period_startdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(aqbudgetperiods.budget_period_startdate), '%Y - %m - %d') AS
  OLDEST,
  Date_Format(Max(aqbudgetperiods.budget_period_startdate), '%Y - %m - %d') AS
  NEWEST
FROM
  aqbudgetperiods
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('aqbudgets') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(aqbudgets.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(aqbudgets.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  aqbudgets
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('aqcontract') AS TABLE_NAME,
  Concat('contractenddate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(aqcontract.contractenddate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(aqcontract.contractenddate), '%Y - %m - %d') AS NEWEST
FROM
  aqcontract
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('aqcontract') AS TABLE_NAME,
  Concat('contractstartdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(aqcontract.contractstartdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(aqcontract.contractstartdate), '%Y - %m - %d') AS NEWEST
FROM
  aqcontract
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('aqinvoice_adjustments') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(aqinvoice_adjustments.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(aqinvoice_adjustments.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  aqinvoice_adjustments
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('aqinvoices') AS TABLE_NAME,
  Concat('billingdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(aqinvoices.billingdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(aqinvoices.billingdate), '%Y - %m - %d') AS NEWEST
FROM
  aqinvoices
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('aqinvoices') AS TABLE_NAME,
  Concat('closedate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(aqinvoices.closedate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(aqinvoices.closedate), '%Y - %m - %d') AS NEWEST
FROM
  aqinvoices
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('aqinvoices') AS TABLE_NAME,
  Concat('shipmentdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(aqinvoices.shipmentdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(aqinvoices.shipmentdate), '%Y - %m - %d') AS NEWEST
FROM
  aqinvoices
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('aqorders') AS TABLE_NAME,
  Concat('budgetdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(aqorders.budgetdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(aqorders.budgetdate), '%Y - %m - %d') AS NEWEST
FROM
  aqorders
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('aqorders') AS TABLE_NAME,
  Concat('datecancellationprinted') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(aqorders.datecancellationprinted), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(aqorders.datecancellationprinted), '%Y - %m - %d') AS NEWEST
FROM
  aqorders
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('aqorders') AS TABLE_NAME,
  Concat('datereceived') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(aqorders.datereceived), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(aqorders.datereceived), '%Y - %m - %d') AS NEWEST
FROM
  aqorders
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('aqorders') AS TABLE_NAME,
  Concat('entrydate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(aqorders.entrydate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(aqorders.entrydate), '%Y - %m - %d') AS NEWEST
FROM
  aqorders
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('aqorders') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(aqorders.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(aqorders.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  aqorders
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('aqorders_claims') AS TABLE_NAME,
  Concat('claimed_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(aqorders_claims.claimed_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(aqorders_claims.claimed_on), '%Y - %m - %d') AS NEWEST
FROM
  aqorders_claims
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('aqorders_items') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(aqorders_items.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(aqorders_items.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  aqorders_items
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('aqorders_transfers') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(aqorders_transfers.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(aqorders_transfers.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  aqorders_transfers
UNION
SELECT
  Concat('Article requests') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('article_requests') AS TABLE_NAME,
  Concat('created_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(article_requests.created_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(article_requests.created_on), '%Y - %m - %d') AS NEWEST
FROM
  article_requests
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('article_requests') AS TABLE_NAME,
  Concat('updated_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(article_requests.updated_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(article_requests.updated_on), '%Y - %m - %d') AS NEWEST
FROM
  article_requests
UNION
SELECT
  Concat('Authorities') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('auth_header') AS TABLE_NAME,
  Concat('datecreated') AS SUBFIELD,
  auth_header.authtypecode AS TYPE,
  Date_Format(Min(auth_header.datecreated), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(auth_header.datecreated), '%Y - %m - %d') AS NEWEST
FROM
  auth_header
GROUP BY
  auth_header.authtypecode
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('auth_header') AS TABLE_NAME,
  Concat('modification_time') AS SUBFIELD,
  auth_header.authtypecode AS TYPE,
  Date_Format(Min(auth_header.modification_time), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(auth_header.modification_time), '%Y - %m - %d') AS NEWEST
FROM
  auth_header
GROUP BY
  auth_header.authtypecode
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('need_merge_authorities') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(need_merge_authorities.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(need_merge_authorities.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  need_merge_authorities
UNION
SELECT
  Concat('Biblios') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('biblio') AS TABLE_NAME,
  Concat('datecreated') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(biblio.datecreated), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(biblio.datecreated), '%Y - %m - %d') AS NEWEST
FROM
  biblio
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('biblio') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(biblio.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(biblio.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  biblio
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('biblio_metadata') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(biblio_metadata.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(biblio_metadata.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  biblio_metadata
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('biblioitems') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(biblioitems.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(biblioitems.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  biblioitems
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('biblioitems') AS TABLE_NAME,
  Concat('volumedate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(biblioitems.volumedate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(biblioitems.volumedate), '%Y - %m - %d') AS NEWEST
FROM
  biblioitems
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deletedbiblio') AS TABLE_NAME,
  Concat('datecreated') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deletedbiblio.datecreated), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deletedbiblio.datecreated), '%Y - %m - %d') AS NEWEST
FROM
  deletedbiblio
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deletedbiblio') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deletedbiblio.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deletedbiblio.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  deletedbiblio
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deletedbiblio_metadata') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deletedbiblio_metadata.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deletedbiblio_metadata.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  deletedbiblio_metadata
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deletedbiblioitems') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deletedbiblioitems.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deletedbiblioitems.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  deletedbiblioitems
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deletedbiblioitems') AS TABLE_NAME,
  Concat('volumedate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deletedbiblioitems.volumedate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deletedbiblioitems.volumedate), '%Y - %m - %d') AS NEWEST
FROM
  deletedbiblioitems
UNION
SELECT
  Concat('Borrowers') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('borrower_debarments') AS TABLE_NAME,
  Concat('created') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(borrower_debarments.created), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(borrower_debarments.created), '%Y - %m - %d') AS NEWEST
FROM
  borrower_debarments
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('borrower_debarments') AS TABLE_NAME,
  Concat('expiration') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(borrower_debarments.expiration), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(borrower_debarments.expiration), '%Y - %m - %d') AS NEWEST
FROM
  borrower_debarments
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('borrower_debarments') AS TABLE_NAME,
  Concat('updated') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(borrower_debarments.updated), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(borrower_debarments.updated), '%Y - %m - %d') AS NEWEST
FROM
  borrower_debarments
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('borrower_files') AS TABLE_NAME,
  Concat('date_uploaded') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(borrower_files.date_uploaded), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(borrower_files.date_uploaded), '%Y - %m - %d') AS NEWEST
FROM
  borrower_files
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('borrower_modifications') AS TABLE_NAME,
  Concat('date_renewed') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(borrower_modifications.date_renewed), '%Y - %m - %d') AS
  OLDEST,
  Date_Format(Max(borrower_modifications.date_renewed), '%Y - %m - %d') AS
  NEWEST
FROM
  borrower_modifications
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('borrower_modifications') AS TABLE_NAME,
  Concat('dateenrolled') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(borrower_modifications.dateenrolled), '%Y - %m - %d') AS
  OLDEST,
  Date_Format(Max(borrower_modifications.dateenrolled), '%Y - %m - %d') AS
  NEWEST
FROM
  borrower_modifications
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('borrower_modifications') AS TABLE_NAME,
  Concat('dateexpiry') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(borrower_modifications.dateexpiry), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(borrower_modifications.dateexpiry), '%Y - %m - %d') AS NEWEST
FROM
  borrower_modifications
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('borrower_modifications') AS TABLE_NAME,
  Concat('dateofbirth') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(borrower_modifications.dateofbirth), '%Y - %m - %d')
  AS OLDEST,
  Date_Format(Max(borrower_modifications.dateofbirth), '%Y - %m - %d') AS NEWEST
FROM
  borrower_modifications
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('borrower_modifications') AS TABLE_NAME,
  Concat('debarred') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(borrower_modifications.debarred), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(borrower_modifications.debarred), '%Y - %m - %d') AS NEWEST
FROM
  borrower_modifications
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('borrower_modifications') AS TABLE_NAME,
  Concat('gdpr_proc_consent') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(borrower_modifications.gdpr_proc_consent), '%Y - %m - %d') AS
  OLDEST,
  Date_Format(Max(borrower_modifications.gdpr_proc_consent), '%Y - %m - %d') AS
  NEWEST
FROM
  borrower_modifications
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('borrower_modifications') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(borrower_modifications.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(borrower_modifications.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  borrower_modifications
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('borrower_password_recovery') AS TABLE_NAME,
  Concat('valid_until') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(borrower_password_recovery.valid_until), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(borrower_password_recovery.valid_until), '%Y - %m - %d') AS NEWEST
FROM
  borrower_password_recovery
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('borrowers') AS TABLE_NAME,
  Concat('date_renewed') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(borrowers.date_renewed), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(borrowers.date_renewed), '%Y - %m - %d') AS NEWEST
FROM
  borrowers
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('borrowers') AS TABLE_NAME,
  Concat('dateenrolled') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(borrowers.dateenrolled), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(borrowers.dateenrolled), '%Y - %m - %d') AS NEWEST
FROM
  borrowers
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('borrowers') AS TABLE_NAME,
  Concat('dateexpiry') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(borrowers.dateexpiry), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(borrowers.dateexpiry), '%Y - %m - %d') AS NEWEST
FROM
  borrowers
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('borrowers') AS TABLE_NAME,
  Concat('dateofbirth') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(borrowers.dateofbirth), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(borrowers.dateofbirth), '%Y - %m - %d') AS NEWEST
FROM
  borrowers
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('borrowers') AS TABLE_NAME,
  Concat('debarred') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(borrowers.debarred), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(borrowers.debarred), '%Y - %m - %d') AS NEWEST
FROM
  borrowers
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('borrowers') AS TABLE_NAME,
  Concat('lastseen') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(borrowers.lastseen), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(borrowers.lastseen), '%Y - %m - %d') AS NEWEST
FROM
  borrowers
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('borrowers') AS TABLE_NAME,
  Concat('updated_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(borrowers.updated_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(borrowers.updated_on), '%Y - %m - %d') AS NEWEST
FROM
  borrowers
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deletedborrowers') AS TABLE_NAME,
  Concat('date_renewed') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deletedborrowers.date_renewed), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deletedborrowers.date_renewed), '%Y - %m - %d') AS NEWEST
FROM
  deletedborrowers
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deletedborrowers') AS TABLE_NAME,
  Concat('dateenrolled') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deletedborrowers.dateenrolled), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deletedborrowers.dateenrolled), '%Y - %m - %d') AS NEWEST
FROM
  deletedborrowers
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deletedborrowers') AS TABLE_NAME,
  Concat('dateexpiry') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deletedborrowers.dateexpiry), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deletedborrowers.dateexpiry), '%Y - %m - %d') AS NEWEST
FROM
  deletedborrowers
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deletedborrowers') AS TABLE_NAME,
  Concat('dateofbirth') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deletedborrowers.dateofbirth), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deletedborrowers.dateofbirth), '%Y - %m - %d') AS NEWEST
FROM
  deletedborrowers
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deletedborrowers') AS TABLE_NAME,
  Concat('debarred') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deletedborrowers.debarred), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deletedborrowers.debarred), '%Y - %m - %d') AS NEWEST
FROM
  deletedborrowers
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deletedborrowers') AS TABLE_NAME,
  Concat('lastseen') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deletedborrowers.lastseen), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deletedborrowers.lastseen), '%Y - %m - %d') AS NEWEST
FROM
  deletedborrowers
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deletedborrowers') AS TABLE_NAME,
  Concat('updated_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deletedborrowers.updated_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deletedborrowers.updated_on), '%Y - %m - %d') AS NEWEST
FROM
  deletedborrowers
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('messages') AS TABLE_NAME,
  Concat('message_date') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(messages.message_date), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(messages.message_date), '%Y - %m - %d') AS NEWEST
FROM
  messages
UNION
SELECT
  Concat('Transfers') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('branchtransfers') AS TABLE_NAME,
  Concat('datearrived') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(branchtransfers.datearrived), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(branchtransfers.datearrived), '%Y - %m - %d') AS NEWEST
FROM
  branchtransfers
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('branchtransfers') AS TABLE_NAME,
  Concat('datesent') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(branchtransfers.datesent), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(branchtransfers.datesent), '%Y - %m - %d') AS NEWEST
FROM
  branchtransfers
UNION
SELECT
  Concat('Cash register') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('cash_register_actions') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(cash_register_actions.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(cash_register_actions.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  cash_register_actions
UNION
SELECT
  Concat('Borrower categories') AS _GROUP_,
  Concat(''),
  Concat(''),
  Concat(''),
  Concat(''),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('categories') AS TABLE_NAME,
  Concat('enrolmentperioddate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(categories.enrolmentperioddate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(categories.enrolmentperioddate), '%Y - %m - %d') AS NEWEST
FROM
  categories
UNION
SELECT
  Concat('Clubs') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('club_enrollments') AS TABLE_NAME,
  Concat('date_canceled') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(club_enrollments.date_canceled), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(club_enrollments.date_canceled), '%Y - %m - %d') AS NEWEST
FROM
  club_enrollments
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('club_enrollments') AS TABLE_NAME,
  Concat('date_created') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(club_enrollments.date_created), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(club_enrollments.date_created), '%Y - %m - %d') AS NEWEST
FROM
  club_enrollments
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('club_enrollments') AS TABLE_NAME,
  Concat('date_enrolled') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(club_enrollments.date_enrolled), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(club_enrollments.date_enrolled), '%Y - %m - %d') AS NEWEST
FROM
  club_enrollments
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('club_enrollments') AS TABLE_NAME,
  Concat('date_updated') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(club_enrollments.date_updated), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(club_enrollments.date_updated), '%Y - %m - %d') AS NEWEST
FROM
  club_enrollments
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('club_holds') AS TABLE_NAME,
  Concat('date_created') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(club_holds.date_created), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(club_holds.date_created), '%Y - %m - %d') AS NEWEST
FROM
  club_holds
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('club_templates') AS TABLE_NAME,
  Concat('date_created') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(club_templates.date_created), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(club_templates.date_created), '%Y - %m - %d') AS NEWEST
FROM
  club_templates
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('club_templates') AS TABLE_NAME,
  Concat('date_updated') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(club_templates.date_updated), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(club_templates.date_updated), '%Y - %m - %d') AS NEWEST
FROM
  club_templates
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('clubs') AS TABLE_NAME,
  Concat('date_created') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(clubs.date_created), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(clubs.date_created), '%Y - %m - %d') AS NEWEST
FROM
  clubs
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('clubs') AS TABLE_NAME,
  Concat('date_end') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(clubs.date_end), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(clubs.date_end), '%Y - %m - %d') AS NEWEST
FROM
  clubs
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('clubs') AS TABLE_NAME,
  Concat('date_start') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(clubs.date_start), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(clubs.date_start), '%Y - %m - %d') AS NEWEST
FROM
  clubs
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('clubs') AS TABLE_NAME,
  Concat('date_updated') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(clubs.date_updated), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(clubs.date_updated), '%Y - %m - %d') AS NEWEST
FROM
  clubs
UNION
SELECT
  Concat('Course reserves') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('course_items') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(course_items.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(course_items.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  course_items
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('course_reserves') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(course_reserves.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(course_reserves.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  course_reserves
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('courses') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(courses.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(courses.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  courses
UNION
SELECT
  Concat('Label and car",||AAAAA||,"d creator') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('creator_batches') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(creator_batches.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(creator_batches.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  creator_batches
UNION
SELECT
  Concat('Currency') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('currency') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(currency.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(currency.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  currency
UNION
SELECT
  Concat('Items') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('items') AS TABLE_NAME,
  Concat('damaged_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(items.damaged_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(items.damaged_on), '%Y - %m - %d') AS NEWEST
FROM
  items
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('items') AS TABLE_NAME,
  Concat('dateaccessioned') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(items.dateaccessioned), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(items.dateaccessioned), '%Y - %m - %d') AS NEWEST
FROM
  items
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('items') AS TABLE_NAME,
  Concat('datelastborrowed') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(items.datelastborrowed), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(items.datelastborrowed), '%Y - %m - %d') AS NEWEST
FROM
  items
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('items') AS TABLE_NAME,
  Concat('datelastseen') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(items.datelastseen), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(items.datelastseen), '%Y - %m - %d') AS NEWEST
FROM
  items
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('items') AS TABLE_NAME,
  Concat('itemlost_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(items.itemlost_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(items.itemlost_on), '%Y - %m - %d') AS NEWEST
FROM
  items
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('items') AS TABLE_NAME,
  Concat('onloan') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(items.onloan), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(items.onloan), '%Y - %m - %d') AS NEWEST
FROM
  items
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('items') AS TABLE_NAME,
  Concat('replacementpricedate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(items.replacementpricedate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(items.replacementpricedate), '%Y - %m - %d') AS NEWEST
FROM
  items
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('items') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(items.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(items.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  items
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('items') AS TABLE_NAME,
  Concat('withdrawn_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(items.withdrawn_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(items.withdrawn_on), '%Y - %m - %d') AS NEWEST
FROM
  items
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deleteditems') AS TABLE_NAME,
  Concat('damaged_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deleteditems.damaged_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deleteditems.damaged_on), '%Y - %m - %d') AS NEWEST
FROM
  deleteditems
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deleteditems') AS TABLE_NAME,
  Concat('dateaccessioned') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deleteditems.dateaccessioned), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deleteditems.dateaccessioned), '%Y - %m - %d') AS NEWEST
FROM
  deleteditems
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deleteditems') AS TABLE_NAME,
  Concat('datelastborrowed') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deleteditems.datelastborrowed), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deleteditems.datelastborrowed), '%Y - %m - %d') AS NEWEST
FROM
  deleteditems
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deleteditems') AS TABLE_NAME,
  Concat('datelastseen') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deleteditems.datelastseen), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deleteditems.datelastseen), '%Y - %m - %d') AS NEWEST
FROM
  deleteditems
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deleteditems') AS TABLE_NAME,
  Concat('itemlost_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deleteditems.itemlost_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deleteditems.itemlost_on), '%Y - %m - %d') AS NEWEST
FROM
  deleteditems
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deleteditems') AS TABLE_NAME,
  Concat('onloan') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deleteditems.onloan), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deleteditems.onloan), '%Y - %m - %d') AS NEWEST
FROM
  deleteditems
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deleteditems') AS TABLE_NAME,
  Concat('replacementpricedate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deleteditems.replacementpricedate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deleteditems.replacementpricedate), '%Y - %m - %d') AS NEWEST
FROM
  deleteditems
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deleteditems') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deleteditems.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deleteditems.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  deleteditems
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('deleteditems') AS TABLE_NAME,
  Concat('withdrawn_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(deleteditems.withdrawn_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(deleteditems.withdrawn_on), '%Y - %m - %d') AS NEWEST
FROM
  deleteditems
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('items_last_borrower') AS TABLE_NAME,
  Concat('created_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(items_last_borrower.created_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(items_last_borrower.created_on), '%Y - %m - %d') AS NEWEST
FROM
  items_last_borrower
UNION
SELECT
  Concat('Discharges') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('discharges') AS TABLE_NAME,
  Concat('needed') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(discharges.needed), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(discharges.needed), '%Y - %m - %d') AS NEWEST
FROM
  discharges
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('discharges') AS TABLE_NAME,
  Concat('validated') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(discharges.validated), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(discharges.validated), '%Y - %m - %d') AS NEWEST
FROM
  discharges
UNION
SELECT
  Concat('EDI messages') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('edifact_messages') AS TABLE_NAME,
  Concat('transfer_date') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(edifact_messages.transfer_date), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(edifact_messages.transfer_date), '%Y - %m - %d') AS NEWEST
FROM
  edifact_messages
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('vendor_edi_accounts') AS TABLE_NAME,
  Concat('last_activity') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(vendor_edi_accounts.last_activity), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(vendor_edi_accounts.last_activity), '%Y - %m - %d') AS NEWEST
FROM
  vendor_edi_accounts
UNION
SELECT
  Concat('Housebound module') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('housebound_visit') AS TABLE_NAME,
  Concat('appointment_date') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(housebound_visit.appointment_date), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(housebound_visit.appointment_date), '%Y - %m - %d') AS NEWEST
FROM
  housebound_visit
UNION
SELECT
  Concat('ILL module') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('illcomments') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(illcomments.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(illcomments.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  illcomments
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('illrequests') AS TABLE_NAME,
  Concat('completed') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(illrequests.completed), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(illrequests.completed), '%Y - %m - %d') AS NEWEST
FROM
  illrequests
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('illrequests') AS TABLE_NAME,
  Concat('placed') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(illrequests.placed), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(illrequests.placed), '%Y - %m - %d') AS NEWEST
FROM
  illrequests
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('illrequests') AS TABLE_NAME,
  Concat('replied') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(illrequests.replied), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(illrequests.replied), '%Y - %m - %d') AS NEWEST
FROM
  illrequests
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('illrequests') AS TABLE_NAME,
  Concat('updated') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(illrequests.updated), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(illrequests.updated), '%Y - %m - %d') AS NEWEST
FROM
  illrequests
UNION
SELECT
  Concat('Cataloging') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('import_batches') AS TABLE_NAME,
  Concat('upload_timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(import_batches.upload_timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(import_batches.upload_timestamp), '%Y - %m - %d') AS NEWEST
FROM
  import_batches
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('import_records') AS TABLE_NAME,
  Concat('import_date') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(import_records.import_date), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(import_records.import_date), '%Y - %m - %d') AS NEWEST
FROM
  import_records
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('import_records') AS TABLE_NAME,
  Concat('upload_timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(import_records.upload_timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(import_records.upload_timestamp), '%Y - %m - %d') AS NEWEST
FROM
  import_records
UNION
SELECT
  Concat('Circulation') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('statistics') AS TABLE_NAME,
  Concat('datetime') AS SUBFIELD,
  statistics.type AS TYPE,
  Date_Format(Min(statistics.datetime), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(statistics.datetime), '%Y - %m - %d') AS NEWEST
FROM
  statistics
GROUP BY
  statistics.type
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('issues') AS TABLE_NAME,
  Concat('date_due') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(issues.date_due), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(issues.date_due), '%Y - %m - %d') AS NEWEST
FROM
  issues
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('issues') AS TABLE_NAME,
  Concat('issuedate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(issues.issuedate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(issues.issuedate), '%Y - %m - %d') AS NEWEST
FROM
  issues
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('issues') AS TABLE_NAME,
  Concat('lastreneweddate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(issues.lastreneweddate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(issues.lastreneweddate), '%Y - %m - %d') AS NEWEST
FROM
  issues
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('issues') AS TABLE_NAME,
  Concat('notedate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(issues.notedate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(issues.notedate), '%Y - %m - %d') AS NEWEST
FROM
  issues
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('issues') AS TABLE_NAME,
  Concat('returndate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(issues.returndate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(issues.returndate), '%Y - %m - %d') AS NEWEST
FROM
  issues
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('issues') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(issues.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(issues.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  issues
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('old_issues') AS TABLE_NAME,
  Concat('date_due') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(old_issues.date_due), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(old_issues.date_due), '%Y - %m - %d') AS NEWEST
FROM
  old_issues
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('old_issues') AS TABLE_NAME,
  Concat('issuedate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(old_issues.issuedate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(old_issues.issuedate), '%Y - %m - %d') AS NEWEST
FROM
  old_issues
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('old_issues') AS TABLE_NAME,
  Concat('lastreneweddate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(old_issues.lastreneweddate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(old_issues.lastreneweddate), '%Y - %m - %d') AS NEWEST
FROM
  old_issues
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('old_issues') AS TABLE_NAME,
  Concat('notedate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(old_issues.notedate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(old_issues.notedate), '%Y - %m - %d') AS NEWEST
FROM
  old_issues
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('old_issues') AS TABLE_NAME,
  Concat('returndate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(old_issues.returndate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(old_issues.returndate), '%Y - %m - %d') AS NEWEST
FROM
  old_issues
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('old_issues') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(old_issues.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(old_issues.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  old_issues
UNION
SELECT
  Concat('Language') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('language_subtag_registry') AS TABLE_NAME,
  Concat('added') AS SUBFIELD,
  language_subtag_registry.type AS TYPE,
  Date_Format(Min(language_subtag_registry.added), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(language_subtag_registry.added), '%Y - %m - %d') AS NEWEST
FROM
  language_subtag_registry
GROUP BY
  language_subtag_registry.type
UNION
SELECT
  Concat('Library groups') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('library_groups') AS TABLE_NAME,
  Concat('created_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(library_groups.created_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(library_groups.created_on), '%Y - %m - %d') AS NEWEST
FROM
  library_groups
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('library_groups') AS TABLE_NAME,
  Concat('updated_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(library_groups.updated_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(library_groups.updated_on), '%Y - %m - %d') AS NEWEST
FROM
  library_groups
UNION
SELECT
  Concat('Link tracker') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('linktracker') AS TABLE_NAME,
  Concat('timeclicked') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(linktracker.timeclicked), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(linktracker.timeclicked), '%Y - %m - %d') AS NEWEST
FROM
  linktracker
UNION
SELECT
  Concat('Letters and e-mail') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('message_queue') AS TABLE_NAME,
  Concat('time_queued') AS SUBFIELD,
  message_queue.letter_code AS TYPE,
  Date_Format(Min(message_queue.time_queued), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(message_queue.time_queued), '%Y - %m - %d') AS NEWEST
FROM
  message_queue
GROUP BY
  message_queue.letter_code
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('message_queue') AS TABLE_NAME,
  Concat('updated_on') AS SUBFIELD,
  message_queue.letter_code AS TYPE,
  Date_Format(Min(message_queue.updated_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(message_queue.updated_on), '%Y - %m - %d') AS NEWEST
FROM
  message_queue
GROUP BY
  message_queue.letter_code
UNION
SELECT
  Concat('Files') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('misc_files') AS TABLE_NAME,
  Concat('date_uploaded') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(misc_files.date_uploaded), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(misc_files.date_uploaded), '%Y - %m - %d') AS NEWEST
FROM
  misc_files
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('uploaded_files') AS TABLE_NAME,
  Concat('dtcreated') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(uploaded_files.dtcreated), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(uploaded_files.dtcreated), '%Y - %m - %d') AS NEWEST
FROM
  uploaded_files
UNION
SELECT
  Concat('Requests') AS _GROUP_,
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('===================='),
  Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('tmp_holdsqueue') AS TABLE_NAME,
  Concat('reservedate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(tmp_holdsqueue.reservedate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(tmp_holdsqueue.reservedate), '%Y - %m - %d') AS NEWEST
FROM
  tmp_holdsqueue
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('reserves') AS TABLE_NAME,
  Concat('cancellationdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(reserves.cancellationdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(reserves.cancellationdate), '%Y - %m - %d') AS NEWEST
FROM
  reserves
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('reserves') AS TABLE_NAME,
  Concat('expirationdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(reserves.expirationdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(reserves.expirationdate), '%Y - %m - %d') AS NEWEST
FROM
  reserves
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('reserves') AS TABLE_NAME,
  Concat('notificationdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(reserves.notificationdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(reserves.notificationdate), '%Y - %m - %d') AS NEWEST
FROM
  reserves
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('reserves') AS TABLE_NAME,
  Concat('reminderdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(reserves.reminderdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(reserves.reminderdate), '%Y - %m - %d') AS NEWEST
FROM
  reserves
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('reserves') AS TABLE_NAME,
  Concat('reservedate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(reserves.reservedate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(reserves.reservedate), '%Y - %m - %d') AS NEWEST
FROM
  reserves
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('reserves') AS TABLE_NAME,
  Concat('suspend_until') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(reserves.suspend_until), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(reserves.suspend_until), '%Y - %m - %d') AS NEWEST
FROM
  reserves
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('reserves') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(reserves.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(reserves.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  reserves
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('reserves') AS TABLE_NAME,
  Concat('waitingdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(reserves.waitingdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(reserves.waitingdate), '%Y - %m - %d') AS NEWEST
FROM
  reserves
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('old_reserves') AS TABLE_NAME,
  Concat('cancellationdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(old_reserves.cancellationdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(old_reserves.cancellationdate), '%Y - %m - %d') AS NEWEST
FROM
  old_reserves
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('old_reserves') AS TABLE_NAME,
  Concat('expirationdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(old_reserves.expirationdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(old_reserves.expirationdate), '%Y - %m - %d') AS NEWEST
FROM
  old_reserves
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('old_reserves') AS TABLE_NAME,
  Concat('notificationdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(old_reserves.notificationdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(old_reserves.notificationdate), '%Y - %m - %d') AS NEWEST
FROM
  old_reserves
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('old_reserves') AS TABLE_NAME,
  Concat('reminderdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(old_reserves.reminderdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(old_reserves.reminderdate), '%Y - %m - %d') AS NEWEST
FROM
  old_reserves
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('old_reserves') AS TABLE_NAME,
  Concat('reservedate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(old_reserves.reservedate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(old_reserves.reservedate), '%Y - %m - %d') AS NEWEST
FROM
  old_reserves
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('old_reserves') AS TABLE_NAME,
  Concat('suspend_until') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(old_reserves.suspend_until), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(old_reserves.suspend_until), '%Y - %m - %d') AS NEWEST
FROM
  old_reserves
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('old_reserves') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(old_reserves.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(old_reserves.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  old_reserves
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('old_reserves') AS TABLE_NAME,
  Concat('waitingdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(old_reserves.waitingdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(old_reserves.waitingdate), '%Y - %m - %d') AS NEWEST
FROM
  old_reserves
UNION
  SELECT
    Concat('Opac news') AS _GROUP_,
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('opac_news') AS TABLE_NAME,
  Concat('expirationdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(opac_news.expirationdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(opac_news.expirationdate), '%Y - %m - %d') AS NEWEST
FROM
  opac_news
UNION
  SELECT
    Concat('Privacy') AS _GROUP_,
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('patron_consent') AS TABLE_NAME,
  Concat('given_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(patron_consent.given_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(patron_consent.given_on), '%Y - %m - %d') AS NEWEST
FROM
  patron_consent
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('patron_consent') AS TABLE_NAME,
  Concat('refused_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(patron_consent.refused_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(patron_consent.refused_on), '%Y - %m - %d') AS NEWEST
FROM
  patron_consent
UNION
  SELECT
    Concat('Offline transactions') AS _GROUP_,
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('pending_offline_operations') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  pending_offline_operations.action AS TYPE,
  Date_Format(Min(pending_offline_operations.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(pending_offline_operations.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  pending_offline_operations
GROUP BY
  pending_offline_operations.action
UNION
  SELECT
    Concat('Problem reports') AS _GROUP_,
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('problem_reports') AS TABLE_NAME,
  Concat('created_on') AS SUBFIELD,
  problem_reports.status AS TYPE,
  Date_Format(Min(problem_reports.created_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(problem_reports.created_on), '%Y - %m - %d') AS NEWEST
FROM
  problem_reports
GROUP BY
  problem_reports.status
UNION
  SELECT
    Concat('Quote of the day') AS _GROUP_,
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('quotes') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(quotes.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(quotes.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  quotes
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('quotes') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(quotes.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(quotes.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  quotes
UNION
  SELECT
    Concat('OPAC Ratings, reviews, and tags') AS _GROUP_,
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('ratings') AS TABLE_NAME,
  Concat('timestamp') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(ratings.timestamp), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(ratings.timestamp), '%Y - %m - %d') AS NEWEST
FROM
  ratings
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('reviews') AS TABLE_NAME,
  Concat('datereviewed') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(reviews.datereviewed), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(reviews.datereviewed), '%Y - %m - %d') AS NEWEST
FROM
  reviews
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('tags_all') AS TABLE_NAME,
  Concat('date_created') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(tags_all",||AAAAA||,".date_created), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(tags_all.date_created), '%Y - %m - %d') AS NEWEST
FROM
  tags_all
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('tags_approval') AS TABLE_NAME,
  Concat('date_approved') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(tags_approval.date_approved), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(tags_approval.date_approved), '%Y - %m - %d') AS NEWEST
FROM
  tags_approval
UNION
  SELECT
    Concat('Reports') AS _GROUP_,
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('reports_dictionary') AS TABLE_NAME,
  Concat('date_created') AS SUBFIELD,
  reports_dictionary.report_area AS TYPE,
  Date_Format(Min(reports_dictionary.date_created), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(reports_dictionary.date_created), '%Y - %m - %d') AS NEWEST
FROM
  reports_dictionary
GROUP BY
  reports_dictionary.report_area
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('reports_dictionary') AS TABLE_NAME,
  Concat('date_modified') AS SUBFIELD,
  reports_dictionary.report_area AS TYPE,
  Date_Format(Min(reports_dictionary.date_modified), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(reports_dictionary.date_modified), '%Y - %m - %d') AS NEWEST
FROM
  reports_dictionary
GROUP BY
  reports_dictionary.report_area
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('saved_reports') AS TABLE_NAME,
  Concat('date_run') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(saved_reports.date_run), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(saved_reports.date_run), '%Y - %m - %d') AS NEWEST
FROM
  saved_reports
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('saved_sql') AS TABLE_NAME,
  Concat('date_created') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(saved_sql.date_created), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(saved_sql.date_created), '%Y - %m - %d') AS NEWEST
FROM
  saved_sql
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('saved_sql') AS TABLE_NAME,
  Concat('last_modified') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(saved_sql.last_modified), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(saved_sql.last_modified), '%Y - %m - %d') AS NEWEST
FROM
  saved_sql
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('saved_sql') AS TABLE_NAME,
  Concat('last_run') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(saved_sql.last_run), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(saved_sql.last_run), '%Y - %m - %d') AS NEWEST
FROM
  saved_sql
UNION
  SELECT
    Concat('Claims returned') AS _GROUP_,
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('return_claims') AS TABLE_NAME,
  Concat('created_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(return_claims.created_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(return_claims.created_on), '%Y - %m - %d') AS NEWEST
FROM
  return_claims
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('return_claims') AS TABLE_NAME,
  Concat('resolved_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(return_claims.resolved_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(return_claims.resolved_on), '%Y - %m - %d') AS NEWEST
FROM
  return_claims
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('return_claims') AS TABLE_NAME,
  Concat('updated_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(return_claims.updated_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(return_claims.updated_on), '%Y - %m - %d') AS NEWEST
FROM
  return_claims
UNION
  SELECT
    Concat('OPAC search history') AS _GROUP_,
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('search_history') AS TABLE_NAME,
  Concat('time') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(search_history.time), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(search_history.time), '%Y - %m - %d') AS NEWEST
FROM
  search_history
UNION
  SELECT
    Concat('Serials') AS _GROUP_,
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('serial') AS TABLE_NAME,
  Concat('claimdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(serial.claimdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(serial.claimdate), '%Y - %m - %d') AS NEWEST
FROM
  serial
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('serial') AS TABLE_NAME,
  Concat('planneddate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(serial.planneddate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(serial.planneddate), '%Y - %m - %d') AS NEWEST
FROM
  serial
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('serial') AS TABLE_NAME,
  Concat('publisheddate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(serial.publisheddate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(serial.publisheddate), '%Y - %m - %d') AS NEWEST
FROM
  serial
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('subscription') AS TABLE_NAME,
  Concat('enddate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(subscription.enddate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(subscription.enddate), '%Y - %m - %d') AS NEWEST
FROM
  subscription
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('subscription') AS TABLE_NAME,
  Concat('firstacquidate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(subscription.firstacquidate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(subscription.firstacquidate), '%Y - %m - %d') AS NEWEST
FROM
  subscription
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('subscription') AS TABLE_NAME,
  Concat('reneweddate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(subscription.reneweddate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(subscription.reneweddate), '%Y - %m - %d') AS NEWEST
FROM
  subscription
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('subscription') AS TABLE_NAME,
  Concat('startdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(subscription.startdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(subscription.startdate), '%Y - %m - %d') AS NEWEST
FROM
  subscription
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('subscriptionhistory') AS TABLE_NAME,
  Concat('histenddate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(subscriptionhistory.histenddate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(subscriptionhistory.histenddate), '%Y - %m - %d') AS NEWEST
FROM
  subscriptionhistory
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('subscriptionhistory') AS TABLE_NAME,
  Concat('histstartdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(subscriptionhistory.histstartdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(subscriptionhistory.histstartdate), '%Y - %m - %d') AS NEWEST
FROM
  subscriptionhistory
UNION
  SELECT
    Concat('Purchase suggestions') AS _GROUP_,
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('suggestions') AS TABLE_NAME,
  Concat('accepteddate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(suggestions.accepteddate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(suggestions.accepteddate), '%Y - %m - %d') AS NEWEST
FROM
  suggestions
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('suggestions') AS TABLE_NAME,
  Concat('date') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(suggestions.date), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(suggestions.date), '%Y - %m - %d') AS NEWEST
FROM
  suggestions
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('suggestions') AS TABLE_NAME,
  Concat('lastmodificationdate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(suggestions.lastmodificationdate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(suggestions.lastmodificationdate), '%Y - %m - %d') AS NEWEST
FROM
  suggestions
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('suggestions') AS TABLE_NAME,
  Concat('manageddate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(suggestions.manageddate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(suggestions.manageddate), '%Y - %m - %d') AS NEWEST
FROM
  suggestions
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('suggestions') AS TABLE_NAME,
  Concat('rejecteddate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(suggestions.rejecteddate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(suggestions.rejecteddate), '%Y - %m - %d') AS NEWEST
FROM
  suggestions
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('suggestions') AS TABLE_NAME,
  Concat('suggesteddate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(suggestions.suggesteddate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(suggestions.suggesteddate), '%Y - %m - %d') AS NEWEST
FROM
  suggestions
UNION
  SELECT
    Concat('Lists') AS _GROUP_,
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('===================='),
    Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('virtualshelfcontents') AS TABLE_NAME,
  Concat('dateadded') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(virtualshelfcontents.dateadded), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(virtualshelfcontents.dateadded), '%Y - %m - %d') AS NEWEST
FROM
  virtualshelfcontents
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('virtualshelfshares') AS TABLE_NAME,
  Concat('sharedate') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(virtualshelfshares.sharedate), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(virtualshelfshares.sharedate), '%Y - %m - %d') AS NEWEST
FROM
  virtualshelfshares
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('virtualshelves') AS TABLE_NAME,
  Concat('created_on') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(virtualshelves.created_on), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(virtualshelves.created_on), '%Y - %m - %d') AS NEWEST
FROM
  virtualshelves
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('virtualshelves') AS TABLE_NAME,
  Concat('lastmodified') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(virtualshelves.lastmodified), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(virtualshelves.lastmodified), '%Y - %m - %d') AS NEWEST
FROM
  virtualshelves
  UNION
    SELECT
      Concat('Zebra') AS _GROUP_,
      Concat('===================='),
      Concat('===================='),
      Concat('===================='),
      Concat('===================='),
      Concat('====================')
UNION
SELECT
  Concat('') AS _GROUP_,
  Concat('zebraqueue') AS TABLE_NAME,
  Concat('time') AS SUBFIELD,
  Concat('') AS TYPE,
  Date_Format(Min(zebraqueue.time), '%Y - %m - %d') AS OLDEST,
  Date_Format(Max(zebraqueue.time), '%Y - %m - %d') AS NEWEST
FROM
  zebraqueue",,,,
X.003633,"/*
R.003633

----------

Name: GHW - Statistics - Daily overdue count for prevous calendar month
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-12-29 18:20:10
Modified on: 2021-12-30 15:19:37
Date last run: 2021-12-30 14:20:38

----------

Public: 0
Expiry: 300

----------

Counts the number of items that were overdue at the beginning of each day of the previous calendar month

----------
*/

","SELECT
  branches.branchname,
  aa.Sum_Count_issue_id AS `01`,
  ab.Sum_Count_issue_id AS `02`,
  ac.Sum_Count_issue_id AS `03`,
  ad.Sum_Count_issue_id AS `04`,
  ae.Sum_Count_issue_id AS `05`,
  af.Sum_Count_issue_id AS `06`,
  ag.Sum_Count_issue_id AS `07`,
  ah.Sum_Count_issue_id AS `08`,
  ai.Sum_Count_issue_id AS `09`,
  aj.Sum_Count_issue_id AS `10`,
  ba.Sum_Count_issue_id AS `11`,
  bb.Sum_Count_issue_id AS `12`,
  bc.Sum_Count_issue_id AS `13`,
  bd.Sum_Count_issue_id AS `14`,
  be.Sum_Count_issue_id AS `15`,
  bf.Sum_Count_issue_id AS `16`,
  bg.Sum_Count_issue_id AS `17`,
  bh.Sum_Count_issue_id AS `18`,
  bi.Sum_Count_issue_id AS `19`,
  bj.Sum_Count_issue_id AS `20`,
  ca.Sum_Count_issue_id AS `21`,
  cb.Sum_Count_issue_id AS `22`,
  cc.Sum_Count_issue_id AS `23`,
  cd.Sum_Count_issue_id AS `24`,
  ce.Sum_Count_issue_id AS `25`,
  cf.Sum_Count_issue_id AS `26`,
  cg.Sum_Count_issue_id AS `27`,
  ch.Sum_Count_issue_id AS `28`,
  ci.Sum_Count_issue_id AS `29`,
  cj.Sum_Count_issue_id AS `30`,
  da.Sum_Count_issue_id AS `31`
FROM
  branches LEFT JOIN
  (SELECT
      aacounts.branchcode,
      Sum(DISTINCT aacounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1)
        GROUP BY
          old_issues.branchcode) aacounts
    GROUP BY
      aacounts.branchcode) aa ON aa.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      abcounts.branchcode,
      Sum(DISTINCT abcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 1 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 1 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 1 DAY
        GROUP BY
          old_issues.branchcode) abcounts
    GROUP BY
      abcounts.branchcode) ab ON ab.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      accounts.branchcode,
      Sum(DISTINCT accounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 2 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 2 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 2 DAY
        GROUP BY
          old_issues.branchcode) accounts
    GROUP BY
      accounts.branchcode) ac ON ac.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      adcounts.branchcode,
      Sum(DISTINCT adcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 3 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 3 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 3 DAY
        GROUP BY
          old_issues.branchcode) adcounts
    GROUP BY
      adcounts.branchcode) ad ON ad.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      aecounts.branchcode,
      Sum(DISTINCT aecounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 4 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 4 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 4 DAY
        GROUP BY
          old_issues.branchcode) aecounts
    GROUP BY
      aecounts.branchcode) ae ON ae.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      afcounts.branchcode,
      Sum(DISTINCT afcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 5 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 5 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 5 DAY
        GROUP BY
          old_issues.branchcode) afcounts
    GROUP BY
      afcounts.branchcode) af ON af.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      agcounts.branchcode,
      Sum(DISTINCT agcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 6 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 6 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 6 DAY
        GROUP BY
          old_issues.branchcode) agcounts
    GROUP BY
      agcounts.branchcode) ag ON ag.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      ahcounts.branchcode,
      Sum(DISTINCT ahcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 7 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 7 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 7 DAY
        GROUP BY
          old_issues.branchcode) ahcounts
    GROUP BY
      ahcounts.branchcode) ah ON ah.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      aicounts.branchcode,
      Sum(DISTINCT aicounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 8 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 8 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 8 DAY
        GROUP BY
          old_issues.branchcode) aicounts
    GROUP BY
      aicounts.branchcode) ai ON ai.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      ajcounts.branchcode,
      Sum(DISTINCT ajcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 9 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 9 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 9 DAY
        GROUP BY
          old_issues.branchcode) ajcounts
    GROUP BY
      ajcounts.branchcode) aj ON aj.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      bacounts.branchcode,
      Sum(DISTINCT bacounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 10 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 10 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 10 DAY
        GROUP BY
          old_issues.branchcode) bacounts
    GROUP BY
      bacounts.branchcode) ba ON ba.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      bbcounts.branchcode,
      Sum(DISTINCT bbcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 11 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 11 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 11 DAY
        GROUP BY
          old_issues.branchcode) bbcounts
    GROUP BY
      bbcounts.branchcode) bb ON bb.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      bccounts.branchcode,
      Sum(DISTINCT bccounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 12 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 12 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 12 DAY
        GROUP BY
          old_issues.branchcode) bccounts
    GROUP BY
      bccounts.branchcode) bc ON bc.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      bdcounts.branchcode,
      Sum(DISTINCT bdcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 13 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 13 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 13 DAY
        GROUP BY
          old_issues.branchcode) bdcounts
    GROUP BY
      bdcounts.branchcode) bd ON bd.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      becounts.branchcode,
      Sum(DISTINCT becounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 14 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 14 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 14 DAY
        GROUP BY
          old_issues.branchcode) becounts
    GROUP BY
      becounts.branchcode) be ON be.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      bfcounts.branchcode,
      Sum(DISTINCT bfcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 15 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 15 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 15 DAY
        GROUP BY
          old_issues.branchcode) bfcounts
    GROUP BY
      bfcounts.branchcode) bf ON bf.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      bgcounts.branchcode,
      Sum(DISTINCT bgcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 16 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 16 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 16 DAY
        GROUP BY
          old_issues.branchcode) bgcounts
    GROUP BY
      bgcounts.branchcode) bg ON bg.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      bhcounts.branchcode,
      Sum(DISTINCT bhcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 17 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 17 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 17 DAY
        GROUP BY
          old_issues.branchcode) bhcounts
    GROUP BY
      bhcounts.branchcode) bh ON bh.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      bicounts.branchcode,
      Sum(DISTINCT bicounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 18 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 18 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 18 DAY
        GROUP BY
          old_issues.branchcode) bicounts
    GROUP BY
      bicounts.branchcode) bi ON bi.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      bjcounts.branchcode,
      Sum(DISTINCT bjcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 19 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 19 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 19 DAY
        GROUP BY
          old_issues.branchcode) bjcounts
    GROUP BY
      bjcounts.branchcode) bj ON bj.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      cacounts.branchcode,
      Sum(DISTINCT cacounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 20 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 20 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 20 DAY
        GROUP BY
          old_issues.branchcode) cacounts
    GROUP BY
      cacounts.branchcode) ca ON ca.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      cbcounts.branchcode,
      Sum(DISTINCT cbcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 21 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 21 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 21 DAY
        GROUP BY
          old_issues.branchcode) cbcounts
    GROUP BY
      cbcounts.branchcode) cb ON cb.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      cccounts.branchcode,
      Sum(DISTINCT cccounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 22 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 22 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 22 DAY
        GROUP BY
          old_issues.branchcode) cccounts
    GROUP BY
      cccounts.branchcode) cc ON cc.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      cdcounts.branchcode,
      Sum(DISTINCT cdcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 23 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 23 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 23 DAY
        GROUP BY
          old_issues.branchcode) cdcounts
    GROUP BY
      cdcounts.branchcode) cd ON cd.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      cecounts.branchcode,
      Sum(DISTINCT cecounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 24 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 24 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 24 DAY
        GROUP BY
          old_issues.branchcode) cecounts
    GROUP BY
      cecounts.branchcode) ce ON ce.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      cfcounts.branchcode,
      Sum(DISTINCT cfcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 25 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 25 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 25 DAY
        GROUP BY
          old_issues.branchcode) cfcounts
    GROUP BY
      cfcounts.branchcode) cf ON cf.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      cgcounts.branchcode,
      Sum(DISTINCT cgcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 26 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 26 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 26 DAY
        GROUP BY
          old_issues.branchcode) cgcounts
    GROUP BY
      cgcounts.branchcode) cg ON cg.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      chcounts.branchcode,
      Sum(DISTINCT chcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 27 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 27 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 27 DAY
        GROUP BY
          old_issues.branchcode) chcounts
    GROUP BY
      chcounts.branchcode) ch ON ch.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      cicounts.branchcode,
      IF(
        Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 28 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)), 
        Sum(DISTINCT cicounts.Count_issue_id), 
        '-'
      ) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 28 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 28 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 28 DAY
        GROUP BY
          old_issues.branchcode) cicounts
    GROUP BY
      cicounts.branchcode) ci ON ci.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      cjcounts.branchcode,
      If(
        Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 29 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)), 
        Sum(DISTINCT cjcounts.Count_issue_id), 
        '-'
      ) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL",||AAAAA||," 2 MONTH)), 1) + INTERVAL 29 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 29 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 29 DAY
        GROUP BY
          old_issues.branchcode) cjcounts
    GROUP BY
      cjcounts.branchcode) cj ON cj.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      dacounts.branchcode,
      If(
        Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 30 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)), 
        Sum(DISTINCT dacounts.Count_issue_id), 
        '-'
      ) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 30 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.date_due <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 30 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 30 DAY
        GROUP BY
          old_issues.branchcode) dacounts
    GROUP BY
      dacounts.branchcode) da ON da.branchcode = branches.branchcode
GROUP BY
  branches.branchname
UNION  
  SELECT  
    Concat("" DATE"") AS branchname,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) AS `01`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 1 DAY AS `02`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 2 DAY AS `03`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 3 DAY AS `04`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 4 DAY AS `05`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 5 DAY AS `06`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 6 DAY AS `07`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 7 DAY AS `08`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 8 DAY AS `09`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 9 DAY AS `10`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 10 DAY AS `11`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 11 DAY AS `12`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 12 DAY AS `13`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 13 DAY AS `14`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 14 DAY AS `15`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 15 DAY AS `16`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 16 DAY AS `17`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 17 DAY AS `18`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 18 DAY AS `19`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 19 DAY AS `20`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 20 DAY AS `21`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 21 DAY AS `22`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 22 DAY AS `23`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 23 DAY AS `24`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 24 DAY AS `25`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 25 DAY AS `26`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 26 DAY AS `27`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 27 DAY AS `28`,  
    If(  
      Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 28 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)),  
      AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 28 DAY,  
      ""NA""  
    ) AS `29`,  
    If(  
      Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 29 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)),  
      AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 29 DAY,  
      ""NA""  
    ) AS `30`,  
    If(  
      Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 30 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)),  
      AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 30 DAY,  
      ""NA""  
    ) AS `31` 
UNION  
  SELECT  
    Concat("" DAY"") AS branchname,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1), ""%W"") AS `01`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 1 DAY, ""%W"") AS `02`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 2 DAY, ""%W"") AS `03`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 3 DAY, ""%W"") AS `04`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 4 DAY, ""%W"") AS `05`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 5 DAY, ""%W"") AS `06`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 6 DAY, ""%W"") AS `07`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 7 DAY, ""%W"") AS `08`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 8 DAY, ""%W"") AS `09`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 9 DAY, ""%W"") AS `10`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 10 DAY, ""%W"") AS `11`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 11 DAY, ""%W"") AS `12`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 12 DAY, ""%W"") AS `13`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 13 DAY, ""%W"") AS `14`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 14 DAY, ""%W"") AS `15`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 15 DAY, ""%W"") AS `16`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 16 DAY, ""%W"") AS `17`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 17 DAY, ""%W"") AS `18`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 18 DAY, ""%W"") AS `19`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 19 DAY, ""%W"") AS `20`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 20 DAY, ""%W"") AS `21`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 21 DAY, ""%W"") AS `22`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 22 DAY, ""%W"") AS `23`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 23 DAY, ""%W"") AS `24`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 24 DAY, ""%W"") AS `25`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 25 DAY, ""%W"") AS `26`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 26 DAY, ""%W"") AS `27`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 27 DAY, ""%W"") AS `28`,  
    If(  
      Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 28 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)),  
      Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 28 DAY, ""%W""),  
      ""NA""  
    ) AS `29`,  
    If(  
      Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 29 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)),  
      Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 29 DAY, ""%W""),  
      ""NA""  
    ) AS `30`,  
    If(  
      Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 30 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)),  
      Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 30 DAY, ""%W""),  
      ""NA""  
    ) AS `31`  
ORDER BY  
  branchname",,,,,,
X.003634,"/*
R.003634

----------

Name: GHW - Current checkout count by day
Created by: George H Williams

----------

Group: -
     -

Created on: 2021-12-30 15:24:53
Modified on: 2021-12-30 15:24:53
Date last run: 2022-07-06 16:07:58

----------

Public: 0
Expiry: 300

----------

Shows the total number of items checked out at a library at the beginning of the day for each day of the previous calendar month

----------
*/

","SELECT
  branches.branchname,
  aa.Sum_Count_issue_id AS `01`,
  ab.Sum_Count_issue_id AS `02`,
  ac.Sum_Count_issue_id AS `03`,
  ad.Sum_Count_issue_id AS `04`,
  ae.Sum_Count_issue_id AS `05`,
  af.Sum_Count_issue_id AS `06`,
  ag.Sum_Count_issue_id AS `07`,
  ah.Sum_Count_issue_id AS `08`,
  ai.Sum_Count_issue_id AS `09`,
  aj.Sum_Count_issue_id AS `10`,
  ba.Sum_Count_issue_id AS `11`,
  bb.Sum_Count_issue_id AS `12`,
  bc.Sum_Count_issue_id AS `13`,
  bd.Sum_Count_issue_id AS `14`,
  be.Sum_Count_issue_id AS `15`,
  bf.Sum_Count_issue_id AS `16`,
  bg.Sum_Count_issue_id AS `17`,
  bh.Sum_Count_issue_id AS `18`,
  bi.Sum_Count_issue_id AS `19`,
  bj.Sum_Count_issue_id AS `20`,
  ca.Sum_Count_issue_id AS `21`,
  cb.Sum_Count_issue_id AS `22`,
  cc.Sum_Count_issue_id AS `23`,
  cd.Sum_Count_issue_id AS `24`,
  ce.Sum_Count_issue_id AS `25`,
  cf.Sum_Count_issue_id AS `26`,
  cg.Sum_Count_issue_id AS `27`,
  ch.Sum_Count_issue_id AS `28`,
  ci.Sum_Count_issue_id AS `29`,
  cj.Sum_Count_issue_id AS `30`,
  da.Sum_Count_issue_id AS `31`
FROM
  branches LEFT JOIN
  (SELECT
      aacounts.branchcode,
      Sum(DISTINCT aacounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1)
        GROUP BY
          old_issues.branchcode) aacounts
    GROUP BY
      aacounts.branchcode) aa ON aa.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      abcounts.branchcode,
      Sum(DISTINCT abcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 1 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 1 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 1 DAY
        GROUP BY
          old_issues.branchcode) abcounts
    GROUP BY
      abcounts.branchcode) ab ON ab.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      accounts.branchcode,
      Sum(DISTINCT accounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 2 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 2 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 2 DAY
        GROUP BY
          old_issues.branchcode) accounts
    GROUP BY
      accounts.branchcode) ac ON ac.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      adcounts.branchcode,
      Sum(DISTINCT adcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 3 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 3 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 3 DAY
        GROUP BY
          old_issues.branchcode) adcounts
    GROUP BY
      adcounts.branchcode) ad ON ad.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      aecounts.branchcode,
      Sum(DISTINCT aecounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 4 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 4 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 4 DAY
        GROUP BY
          old_issues.branchcode) aecounts
    GROUP BY
      aecounts.branchcode) ae ON ae.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      afcounts.branchcode,
      Sum(DISTINCT afcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 5 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 5 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 5 DAY
        GROUP BY
          old_issues.branchcode) afcounts
    GROUP BY
      afcounts.branchcode) af ON af.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      agcounts.branchcode,
      Sum(DISTINCT agcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 6 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 6 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 6 DAY
        GROUP BY
          old_issues.branchcode) agcounts
    GROUP BY
      agcounts.branchcode) ag ON ag.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      ahcounts.branchcode,
      Sum(DISTINCT ahcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 7 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 7 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 7 DAY
        GROUP BY
          old_issues.branchcode) ahcounts
    GROUP BY
      ahcounts.branchcode) ah ON ah.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      aicounts.branchcode,
      Sum(DISTINCT aicounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 8 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 8 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 8 DAY
        GROUP BY
          old_issues.branchcode) aicounts
    GROUP BY
      aicounts.branchcode) ai ON ai.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      ajcounts.branchcode,
      Sum(DISTINCT ajcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 9 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 9 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 9 DAY
        GROUP BY
          old_issues.branchcode) ajcounts
    GROUP BY
      ajcounts.branchcode) aj ON aj.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      bacounts.branchcode,
      Sum(DISTINCT bacounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 10 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 10 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 10 DAY
        GROUP BY
          old_issues.branchcode) bacounts
    GROUP BY
      bacounts.branchcode) ba ON ba.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      bbcounts.branchcode,
      Sum(DISTINCT bbcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 11 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 11 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 11 DAY
        GROUP BY
          old_issues.branchcode) bbcounts
    GROUP BY
      bbcounts.branchcode) bb ON bb.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      bccounts.branchcode,
      Sum(DISTINCT bccounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 12 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 12 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 12 DAY
        GROUP BY
          old_issues.branchcode) bccounts
    GROUP BY
      bccounts.branchcode) bc ON bc.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      bdcounts.branchcode,
      Sum(DISTINCT bdcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 13 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 13 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 13 DAY
        GROUP BY
          old_issues.branchcode) bdcounts
    GROUP BY
      bdcounts.branchcode) bd ON bd.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      becounts.branchcode,
      Sum(DISTINCT becounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 14 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 14 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 14 DAY
        GROUP BY
          old_issues.branchcode) becounts
    GROUP BY
      becounts.branchcode) be ON be.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      bfcounts.branchcode,
      Sum(DISTINCT bfcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 15 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 15 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 15 DAY
        GROUP BY
          old_issues.branchcode) bfcounts
    GROUP BY
      bfcounts.branchcode) bf ON bf.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      bgcounts.branchcode,
      Sum(DISTINCT bgcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 16 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 16 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 16 DAY
        GROUP BY
          old_issues.branchcode) bgcounts
    GROUP BY
      bgcounts.branchcode) bg ON bg.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      bhcounts.branchcode,
      Sum(DISTINCT bhcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 17 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 17 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 17 DAY
        GROUP BY
          old_issues.branchcode) bhcounts
    GROUP BY
      bhcounts.branchcode) bh ON bh.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      bicounts.branchcode,
      Sum(DISTINCT bicounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 18 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 18 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 18 DAY
        GROUP BY
          old_issues.branchcode) bicounts
    GROUP BY
      bicounts.branchcode) bi ON bi.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      bjcounts.branchcode,
      Sum(DISTINCT bjcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 19 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 19 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 19 DAY
        GROUP BY
          old_issues.branchcode) bjcounts
    GROUP BY
      bjcounts.branchcode) bj ON bj.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      cacounts.branchcode,
      Sum(DISTINCT cacounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 20 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 20 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 20 DAY
        GROUP BY
          old_issues.branchcode) cacounts
    GROUP BY
      cacounts.branchcode) ca ON ca.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      cbcounts.branchcode,
      Sum(DISTINCT cbcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 21 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 21 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 21 DAY
        GROUP BY
          old_issues.branchcode) cbcounts
    GROUP BY
      cbcounts.branchcode) cb ON cb.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      cccounts.branchcode,
      Sum(DISTINCT cccounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 22 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 22 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 22 DAY
        GROUP BY
          old_issues.branchcode) cccounts
    GROUP BY
      cccounts.branchcode) cc ON cc.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      cdcounts.branchcode,
      Sum(DISTINCT cdcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 23 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 23 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 23 DAY
        GROUP BY
          old_issues.branchcode) cdcounts
    GROUP BY
      cdcounts.branchcode) cd ON cd.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      cecounts.branchcode,
      Sum(DISTINCT cecounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 24 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 24 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 24 DAY
        GROUP BY
          old_issues.branchcode) cecounts
    GROUP BY
      cecounts.branchcode) ce ON ce.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      cfcounts.branchcode,
      Sum(DISTINCT cfcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 25 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 25 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 25 DAY
        GROUP BY
          old_issues.branchcode) cfcounts
    GROUP BY
      cfcounts.branchcode) cf ON cf.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      cgcounts.branchcode,
      Sum(DISTINCT cgcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 26 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 26 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 26 DAY
        GROUP BY
          old_issues.branchcode) cgcounts
    GROUP BY
      cgcounts.branchcode) cg ON cg.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      chcounts.branchcode,
      Sum(DISTINCT chcounts.Count_issue_id) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 27 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 27 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 27 DAY
        GROUP BY
          old_issues.branchcode) chcounts
    GROUP BY
      chcounts.branchcode) ch ON ch.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      cicounts.branchcode,
      IF(
        Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 28 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)), 
        Sum(DISTINCT cicounts.Count_issue_id), 
        '-'
      ) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 28 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 28 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 28 DAY
        GROUP BY
          old_issues.branchcode) cicounts
    GROUP BY
      cicounts.branchcode) ci ON ci.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      cjcounts.branchcode,
      If(
        Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 29 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)), 
        Sum(DISTINCT cjcounts.Count_issue_id), 
        '-'
      ) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          i",||AAAAA||,"ssues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 29 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 29 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 29 DAY
        GROUP BY
          old_issues.branchcode) cjcounts
    GROUP BY
      cjcounts.branchcode) cj ON cj.branchcode = branches.branchcode LEFT JOIN
  (SELECT
      dacounts.branchcode,
      If(
        Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 30 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)), 
        Sum(DISTINCT dacounts.Count_issue_id), 
        '-'
      ) AS Sum_Count_issue_id
    FROM
      (SELECT
          issues.branchcode,
          Count(DISTINCT issues.issue_id) AS Count_issue_id
        FROM
          issues
        WHERE
          issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 30 DAY
        GROUP BY
          issues.branchcode
        UNION
        SELECT
          old_issues.branchcode,
          Count(DISTINCT old_issues.issue_id) AS Count_issue_id
        FROM
          old_issues
        WHERE
          old_issues.issuedate <= AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 30 DAY AND
          old_issues.returndate > AddDate(Last_Day(SubDate(Now(), INTERVAL 2 Month)), 1) + INTERVAL 30 DAY
        GROUP BY
          old_issues.branchcode) dacounts
    GROUP BY
      dacounts.branchcode) da ON da.branchcode = branches.branchcode
GROUP BY
  branches.branchname
UNION  
  SELECT  
    Concat("" DATE"") AS branchname,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) AS `01`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 1 DAY AS `02`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 2 DAY AS `03`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 3 DAY AS `04`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 4 DAY AS `05`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 5 DAY AS `06`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 6 DAY AS `07`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 7 DAY AS `08`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 8 DAY AS `09`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 9 DAY AS `10`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 10 DAY AS `11`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 11 DAY AS `12`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 12 DAY AS `13`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 13 DAY AS `14`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 14 DAY AS `15`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 15 DAY AS `16`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 16 DAY AS `17`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 17 DAY AS `18`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 18 DAY AS `19`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 19 DAY AS `20`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 20 DAY AS `21`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 21 DAY AS `22`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 22 DAY AS `23`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 23 DAY AS `24`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 24 DAY AS `25`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 25 DAY AS `26`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 26 DAY AS `27`,  
    AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 27 DAY AS `28`,  
    If(  
      Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 28 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)),  
      AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 28 DAY,  
      ""NA""  
    ) AS `29`,  
    If(  
      Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 29 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)),  
      AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 29 DAY,  
      ""NA""  
    ) AS `30`,  
    If(  
      Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 30 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)),  
      AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 30 DAY,  
      ""NA""  
    ) AS `31` 
UNION  
  SELECT  
    Concat("" DAY"") AS branchname,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1), ""%W"") AS `01`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 1 DAY, ""%W"") AS `02`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 2 DAY, ""%W"") AS `03`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 3 DAY, ""%W"") AS `04`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 4 DAY, ""%W"") AS `05`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 5 DAY, ""%W"") AS `06`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 6 DAY, ""%W"") AS `07`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 7 DAY, ""%W"") AS `08`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 8 DAY, ""%W"") AS `09`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 9 DAY, ""%W"") AS `10`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 10 DAY, ""%W"") AS `11`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 11 DAY, ""%W"") AS `12`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 12 DAY, ""%W"") AS `13`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 13 DAY, ""%W"") AS `14`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 14 DAY, ""%W"") AS `15`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 15 DAY, ""%W"") AS `16`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 16 DAY, ""%W"") AS `17`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 17 DAY, ""%W"") AS `18`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 18 DAY, ""%W"") AS `19`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 19 DAY, ""%W"") AS `20`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 20 DAY, ""%W"") AS `21`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 21 DAY, ""%W"") AS `22`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 22 DAY, ""%W"") AS `23`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 23 DAY, ""%W"") AS `24`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 24 DAY, ""%W"") AS `25`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 25 DAY, ""%W"") AS `26`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 26 DAY, ""%W"") AS `27`,  
    Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 27 DAY, ""%W"") AS `28`,  
    If(  
      Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 28 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)),  
      Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 28 DAY, ""%W""),  
      ""NA""  
    ) AS `29`,  
    If(  
      Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 29 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)),  
      Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 29 DAY, ""%W""),  
      ""NA""  
    ) AS `30`,  
    If(  
      Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 30 DAY) = Month(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1)),  
      Date_Format(AddDate(Last_Day(SubDate(Now(), INTERVAL 2 MONTH)), 1) + INTERVAL 30 DAY, ""%W""),  
      ""NA""  
    ) AS `31`  
ORDER BY  
  branchname",,,,,,
