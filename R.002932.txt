R.002932

----------

Name: GHW - Flexible Patron Purge
Created by: George H Williams

----------

Group: Administrative Reports
     Testing

Created on: 2017-04-28 15:29:54
Modified on: 2017-04-28 16:42:36
Date last run: 2019-05-06 09:47:35

----------

Public: 0
Expiry: 0

----------



----------

SELECT
  borrowers.borrowernumber,
  borrowers.cardnumber,
  borrowers.branchcode,
  borrowers.categorycode,
  borrowers.dateenrolled,
  borrowers.dateexpiry,
  Count(issues.issue_id) AS CURRENT_CKO_COUNT,
  Count(reserves.reserve_id) AS CURRENT_REQUEST_COUNT,
  Coalesce(guarantor.Count_borrowernumber, 0) AS GUARANTEE_COUNT,
  Format(Coalesce(totalfees.Sum_amountoutstanding, 0), 2) AS TOTAL_FEES,
  Format(Coalesce(latefees.Sum_amountoutstanding, 0), 2) AS LATE_FEES,
  Format(Coalesce(lostfees.Sum_amountoutstanding, 0), 2) AS LOST_FEES,
  Format(Coalesce(otherfees.Sum_amountoutstanding, 0), 2) AS OTHER_FEES
FROM
  borrowers
  LEFT JOIN issues ON issues.borrowernumber = borrowers.borrowernumber
  LEFT JOIN (SELECT
      borrowers.guarantorid,
      Count(borrowers.borrowernumber) AS Count_borrowernumber
    FROM
      borrowers
    GROUP BY
      borrowers.guarantorid) guarantor ON borrowers.borrowernumber = guarantor.guarantorid
  LEFT JOIN (SELECT
      accountlines.borrowernumber,
      Sum(accountlines.amountoutstanding) AS Sum_amountoutstanding
    FROM
      accountlines
    WHERE
      accountlines.accounttype LIKE "L%"
    GROUP BY
      accountlines.borrowernumber) lostfees ON borrowers.borrowernumber = lostfees.borrowernumber
  LEFT JOIN (SELECT
      accountlines.borrowernumber,
      Sum(accountlines.amountoutstanding) AS Sum_amountoutstanding
    FROM
      accountlines
    WHERE
      accountlines.accounttype <> "L" AND
      accountlines.accounttype <> "LOSTI" AND
      accountlines.accounttype <> "LR" AND
      accountlines.accounttype <> 'F' AND
      accountlines.accounttype <> 'FU' AND
      accountlines.accounttype <> 'FINE'
    GROUP BY
      accountlines.borrowernumber) otherfees ON borrowers.borrowernumber = otherfees.borrowernumber
  LEFT JOIN (SELECT
      accountlines.borrowernumber,
      Sum(accountlines.amountoutstanding) AS Sum_amountoutstanding
    FROM
      accountlines
    GROUP BY
      accountlines.borrowernumber) totalfees ON borrowers.borrowernumber = totalfees.borrowernumber
  LEFT JOIN (SELECT
      accountlines.borrowernumber,
      Sum(accountlines.amountoutstanding) AS Sum_amountoutstanding
    FROM
      accountlines
    WHERE
      (accountlines.accounttype = 'F') OR
      (accountlines.accounttype = 'Fine') OR
      (accountlines.accounttype = 'FU')
    GROUP BY
      accountlines.borrowernumber) latefees ON borrowers.borrowernumber = latefees.borrowernumber
  LEFT JOIN reserves ON reserves.borrowernumber = borrowers.borrowernumber
WHERE
  borrowers.branchcode LIKE <<Choose patron home branch|LBRANCH>> AND
  borrowers.dateexpiry < <<Purge patrons whose accounts expired before|date>> AND
  Coalesce(totalfees.Sum_amountoutstanding, 0) <= <<Patron has X or fewer dollars in total fees due on their account|ZNUMBERS>> AND
  Coalesce(latefees.Sum_amountoutstanding, 0) <= <<Patron has X or fewer dollars in late fees due on their account|ZNUMBERS>>  AND
  Coalesce(lostfees.Sum_amountoutstanding, 0) <= <<Patron has X or fewer dollars in lost item due on their account|ZNUMBERS>>  AND
  Coalesce(otherfees.Sum_amountoutstanding, 0) <= <<Patron has X or fewer dollars in 'other' fees due on their account|ZNUMBERS>> AND
  (borrowers.categorycode <> "HOOPLA" AND borrowers.categorycode <> "ILL" AND borrowers.categorycode <> "INHOUSE" AND borrowers.categorycode <> "NEKLSTEST" AND borrowers.categorycode <> "STAFF" AND borrowers.categorycode <> "STATISTIC")
GROUP BY
  borrowers.borrowernumber
HAVING
  CURRENT_CKO_COUNT <= <<Patron has X or fewer items currently checked out|ZNUMBERS>> AND
  CURRENT_REQUEST_COUNT <= <<Patron has X or fewer active requests|ZNUMBERS>> AND
  GUARANTEE_COUNT <= <<Patron has X or fewer guarantees|ZNUMBERS>>
ORDER BY
  borrowers.cardnumber



